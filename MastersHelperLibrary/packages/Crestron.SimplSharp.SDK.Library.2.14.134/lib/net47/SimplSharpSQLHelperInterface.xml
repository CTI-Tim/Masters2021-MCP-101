<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimplSharpSQLHelperInterface</name>
    </assembly>
    <members>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteConnection">
            <summary>
            SQLite implementation of DbConnection.
            </summary>
            <remarks>
            The <see cref="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ConnectionString"/> property can contain the following parameter(s), delimited with a semi-colon:
            <list type="table">
            <listheader>
            <term>Parameter</term>
            <term>Values</term>
            <term>Required</term>
            <term>Default</term>
            </listheader>
            <item>
            <description>Data Source</description>
            <description>
            This may be a file name, the string ":memory:", or any supported URI (starting with SQLite 3.7.7).
            Starting with release 1.0.86.0, in order to use more than one consecutive backslash (e.g. for a
            UNC path), each of the adjoining backslash characters must be doubled (e.g. "\\Network\Share\test.db"
            would become "\\\\Network\Share\test.db").
            </description>
            <description>Y</description>
            <description></description>
            </item>
            <item>
            <description>Version</description>
            <description>3</description>
            <description>N</description>
            <description>3</description>
            </item>
            <item>
            <description>UseUTF16Encoding</description>
            <description><b>True</b><br/><b>False</b></description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>DateTimeFormat</description>
            <description>
            <b>Ticks</b> - Use the value of DateTime.Ticks.<br/>
            <b>ISO8601</b> - Use the ISO-8601 format.  Uses the "yyyy-MM-dd HH:mm:ss.FFFFFFFK" format for UTC
            DateTime values and "yyyy-MM-dd HH:mm:ss.FFFFFFF" format for local DateTime values).<br/>
            <b>JulianDay</b> - The interval of time in days and fractions of a day since January 1, 4713 BC.<br/>
            <b>UnixEpoch</b> - The whole number of seconds since the Unix epoch (January 1, 1970).<br/>
            <b>InvariantCulture</b> - Any culture-independent string value that the .NET Framework can interpret as a valid DateTime.<br/>
            <b>CurrentCulture</b> - Any string value that the .NET Framework can interpret as a valid DateTime using the current culture.</description>
            <description>N</description>
            <description>ISO8601</description>
            </item>
            <item>
            <description>DateTimeKind</description>
            <description><b>Unspecified</b> - Not specified as either UTC or local time.<br/><b>Utc</b> - The time represented is UTC.<br/><b>Local</b> - The time represented is local time.</description>
            <description>N</description>
            <description>Unspecified</description>
            </item>
            <item>
            <description>DateTimeFormatString</description>
            <description>The exact DateTime format string to use for all formatting and parsing of all DateTime
            values for this connection.</description>
            <description>N</description>
            <description>null</description>
            </item>
            <item>
            <description>BaseSchemaName</description>
            <description>Some base data classes in the framework (e.g. those that build SQL queries dynamically)
            assume that an ADO.NET provider cannot support an alternate catalog (i.e. database) without supporting
            alternate schemas as well; however, SQLite does not fit into this model.  Therefore, this value is used
            as a placeholder and removed prior to preparing any SQL statements that may contain it.</description>
            <description>N</description>
            <description>sqlite_default_schema</description>
            </item>
            <item>
            <description>BinaryGUID</description>
            <description><b>True</b> - Store GUID columns in binary form<br/><b>False</b> - Store GUID columns as text</description>
            <description>N</description>
            <description>True</description>
            </item>
            <item>
            <description>Cache Size</description>
            <description>{size in bytes}</description>
            <description>N</description>
            <description>2000</description>
            </item>
            <item>
            <description>Synchronous</description>
            <description><b>Normal</b> - Normal file flushing behavior<br/><b>Full</b> - Full flushing after all writes<br/><b>Off</b> - Underlying OS flushes I/O's</description>
            <description>N</description>
            <description>Full</description>
            </item>
            <item>
            <description>Page Size</description>
            <description>{size in bytes}</description>
            <description>N</description>
            <description>1024</description>
            </item>
            <item>
            <description>Password</description>
            <description>{password} - Using this parameter requires that the CryptoAPI based codec be enabled at compile-time for both the native interop assembly and the core managed assemblies; otherwise, using this parameter may result in an exception being thrown when attempting to open the connection.</description>
            <description>N</description>
            <description></description>
            </item>
            <item>
            <description>HexPassword</description>
            <description>{hexPassword} - Must contain a sequence of zero or more hexadecimal encoded byte values without a leading "0x" prefix.  Using this parameter requires that the CryptoAPI based codec be enabled at compile-time for both the native interop assembly and the core managed assemblies; otherwise, using this parameter may result in an exception being thrown when attempting to open the connection.</description>
            <description>N</description>
            <description></description>
            </item>
            <item>
            <description>Enlist</description>
            <description><b>Y</b> - Automatically enlist in distributed transactions<br/><b>N</b> - No automatic enlistment</description>
            <description>N</description>
            <description>Y</description>
            </item>
            <item>
            <description>Pooling</description>
            <description>
            <b>True</b> - Use connection pooling.<br/>
            <b>False</b> - Do not use connection pooling.<br/><br/>
            <b>WARNING:</b> When using the default connection pool implementation,
            setting this property to True should be avoided by applications that make
            use of COM (either directly or indirectly) due to possible deadlocks that
            can occur during the finalization of some COM objects.
            </description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>FailIfMissing</description>
            <description><b>True</b> - Don't create the database if it does not exist, throw an error instead<br/><b>False</b> - Automatically create the database if it does not exist</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Max Page Count</description>
            <description>{size in pages} - Limits the maximum number of pages (limits the size) of the database</description>
            <description>N</description>
            <description>0</description>
            </item>
            <item>
            <description>Legacy Format</description>
            <description><b>True</b> - Use the more compatible legacy 3.x database format<br/><b>False</b> - Use the newer 3.3x database format which compresses numbers more effectively</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Default Timeout</description>
            <description>{time in seconds}<br/>The default command timeout</description>
            <description>N</description>
            <description>30</description>
            </item>
            <item>
            <description>Journal Mode</description>
            <description><b>Delete</b> - Delete the journal file after a commit<br/><b>Persist</b> - Zero out and leave the journal file on disk after a commit<br/><b>Off</b> - Disable the rollback journal entirely</description>
            <description>N</description>
            <description>Delete</description>
            </item>
            <item>
            <description>Read Only</description>
            <description><b>True</b> - Open the database for read only access<br/><b>False</b> - Open the database for normal read/write access</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Max Pool Size</description>
            <description>The maximum number of connections for the given connection string that can be in the connection pool</description>
            <description>N</description>
            <description>100</description>
            </item>
            <item>
            <description>Default IsolationLevel</description>
            <description>The default transaction isolation level</description>
            <description>N</description>
            <description>Serializable</description>
            </item>
            <item>
            <description>Foreign Keys</description>
            <description>Enable foreign key constraints</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Flags</description>
            <description>Extra behavioral flags for the connection.  See the <see cref="T:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags"/> enumeration for possible values.</description>
            <description>N</description>
            <description>Default</description>
            </item>
            <item>
            <description>SetDefaults</description>
            <description>
            <b>True</b> - Apply the default connection settings to the opened database.<br/>
            <b>False</b> - Skip applying the default connection settings to the opened database.
            </description>
            <description>N</description>
            <description>True</description>
            </item>
            <item>
            <description>ToFullPath</description>
            <description>
            <b>True</b> - Attempt to expand the data source file name to a fully qualified path before opening.<br/>
            <b>False</b> - Skip attempting to expand the data source file name to a fully qualified path before opening.
            </description>
            <description>N</description>
            <description>True</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbConnection">
            <summary>
                 Represents a connection to a database.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDbConnection">
            <summary>
                 Represents an open connection to a data source, and is implemented by .NET
                 Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnection.BeginTransaction">
            <summary>
                 Begins a database transaction.
            </summary>
            <returns>
                 An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnection.BeginTransaction(Crestron.SimplSharp.CrestronData.IsolationLevel)">
            <summary>
                 Begins a database transaction with the specified IsolationLevel
                 value.
            </summary>
            <param name="il">
                 One of the IsolationLevel values.
            </param>
            <returns>
                 An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnection.ChangeDatabase(System.String)">
            <summary>
                 Changes the current database for an open Connection object.
            </summary>
            <param name="databaseName">
                 The name of the database to use in place of the current database.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnection.Close">
            <summary>
                 Closes the connection to the database.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnection.CreateCommand">
            <summary>
                 Creates and returns a Command object associated with the connection.
            </summary>
            <returns>
                 A Command object associated with the connection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnection.Open">
            <summary>
                 Opens a database connection with the settings specified by the ConnectionString
                 property of the provider-specific Connection object.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnection.InnerObject">
            <summary>
                 Internal object. Do not use!
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnection.ConnectionString">
            <summary>
                 Gets or sets the string used to open a database.
            </summary>
            <returns>
                 A string containing connection settings.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnection.ConnectionTimeout">
            <summary>
                 Gets the time to wait while trying to establish a connection before terminating
                 the attempt and generating an error.
            </summary>
            <returns>
                 The time (in seconds) to wait for a connection to open. The default value
                 is 15 seconds.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnection.Database">
            <summary>
                 Gets the name of the current database or the database to be used after a
                 connection is opened.
            </summary>
            <returns>
                 The name of the current database or the name of the database to be used once
                 a connection is open. The default value is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnection.State">
            <summary>
                 Gets the current state of the connection.
            </summary>
            <returns>
                 One of the ConnectionState values.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.#ctor">
            <summary>
                 Initializes a new instance of the DbConnection class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.BeginDbTransaction(Crestron.SimplSharp.CrestronData.IsolationLevel)">
            <summary>
                 Starts a database transaction.
            </summary>
            <param name="isolationLevel">
                 Specifies the isolation level for the transaction.
            </param>
            <returns>
                 An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.BeginTransaction">
            <summary>
                 Starts a database transaction.
            </summary>
            <returns>
                 An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.BeginTransaction(Crestron.SimplSharp.CrestronData.IsolationLevel)">
            <summary>
                 Starts a database transaction with the specified isolation level.
            </summary>
            <param name="isolationLevel">
                 Specifies the isolation level for the transaction.
            </param>
            <returns>
                 An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.ChangeDatabase(System.String)">
            <summary>
                 Changes the current database for an open connection.
            </summary>
            <param name="databaseName">
                 Specifies the name of the database for the connection to use.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.Close">
            <summary>
                 Closes the connection to the database. This is the preferred method of closing
                 any open connection.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DbException">
                 The connection-level error that occurred while opening the connection.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.CreateCommand">
            <summary>
                 Creates and returns a DbCommand object associated with
                 the current connection.
            </summary>
            <returns>
                 A DbCommand object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.CreateDbCommand">
            <summary>
                 Creates and returns a DbCommand object associated with
                 the current connection.
            </summary>
            <returns>
                 A DbCommand object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.GetSchema">
            <summary>
                 Returns schema information for the data source of this DbConnection.
            </summary>
            <returns>
                 A DataTable that contains schema information.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.GetSchema(System.String)">
            <summary>
                 Returns schema information for the data source of this DbConnection
                 using the specified string for the schema name.
            </summary>
            <param name="collectionName">
                 Specifies the name of the schema to return.
            </param>
            <returns>
                 A DataTable that contains schema information.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.GetSchema(System.String,System.String[])">
            <summary>
                 Returns schema information for the data source of this DbConnection
                 using the specified string for the schema name and the specified string array
                 for the restriction values.
            </summary>
            <param name="collectionName">
                 Specifies the name of the schema to return.
            </param>
            <param name="restrictionValues">
                 Specifies a set of restriction values for the requested schema.
            </param>
            <returns>
                 A DataTable that contains schema information.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.OnStateChange(Crestron.SimplSharp.CrestronData.StateChangeEventArgs)">
            <summary>
                 Raises the DbConnection.StateChange event.
            </summary>
            <param name="stateChange">
                 A StateChangeEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbConnection.Open">
            <summary>
                 Opens a database connection with the settings specified by the DbConnection.ConnectionString.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbConnection.ConnectionString">
            <summary>
                 Gets or sets the string used to open the connection.
            </summary>
            <returns>
                 The connection string used to establish the initial connection. The exact
                 contents of the connection string depend on the specific data source for
                 this connection. The default value is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbConnection.ConnectionTimeout">
            <summary>
                 Gets the time to wait while establishing a connection before terminating
                 the attempt and generating an error.
            </summary>
            <returns>
                 The time (in seconds) to wait for a connection to open. The default value
                 is determined by the specific type of connection that you are using.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbConnection.Database">
            <summary>
                 Gets the name of the current database after a connection is opened, or the
                 database name specified in the connection string before the connection is
                 opened.
            </summary>
            <returns>
                 The name of the current database or the name of the database to be used after
                 a connection is opened. The default value is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbConnection.DataSource">
            <summary>
                 Gets the name of the database server to which to connect.
            </summary>
            <returns>
                 The name of the database server to which to connect. The default value is
                 an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbConnection.ServerVersion">
            <summary>
                 Gets a string that represents the version of the server to which the object
                 is connected.
            </summary>
            <returns>
                 The version of the database. The format of the string returned depends on
                 the specific type of connection you are using.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbConnection.State">
            <summary>
                 Gets a string that describes the state of the connection.
            </summary>
            <returns>
                 The state of the connection. The format of the string returned depends on
                 the specific type of connection you are using.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.Common.DbConnection.StateChange">
            <summary>
                 Occurs when the state of the event changes.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.#ctor">
            <overloads>
             Constructs a new SQLiteConnection object
             </overloads>
             <summary>
             Default constructor
             </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.#ctor(System.String)">
            <summary>
            Initializes the connection with the specified connection string.
            </summary>
            <param name="connectionString">The connection string to use.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes the connection with the specified connection string.
            </summary>
            <param name="connectionString">
            The connection string to use.
            </param>
            <param name="parseViaFramework">
            Non-zero to parse the connection string using the built-in (i.e.
            framework provided) parser when opening the connection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.#ctor(Crestron.SimplSharp.SQLite.SQLiteConnection)">
            <summary>
            Clones the settings and connection string from an existing connection.  If the existing connection is already open, this
            function will open its own connection, enumerate any attached databases of the original connection, and automatically
            attach to them.
            </summary>
            <param name="connection">The connection to copy the settings from.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.BackupDatabase(Crestron.SimplSharp.SQLite.SQLiteConnection,System.String,System.String,System.Int32,Crestron.SimplSharp.SQLite.SQLiteBackupCallback,System.Int32)">
            <summary>
            Backs up the database, using the specified database connection as the
            destination.
            </summary>
            <param name="destination">The destination database connection.</param>
            <param name="destinationName">The destination database name.</param>
            <param name="sourceName">The source database name.</param>
            <param name="pages">
            The number of pages to copy or negative to copy all remaining pages.
            </param>
            <param name="callback">
            The method to invoke between each step of the backup process.  This
            parameter may be null (i.e. no callbacks will be performed).
            </param>
            <param name="retryMilliseconds">
            The number of milliseconds to sleep after encountering a locking error
            during the backup process.  A value less than zero means that no sleep
            should be performed.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ClearTypeMappings">
            <summary>
            Clears the per-connection type mappings.
            </summary>
            <returns>
            The total number of per-connection type mappings cleared.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.GetTypeMappings">
            <summary>
            Returns the per-connection type mappings.
            </summary>
            <returns>
            The per-connection type mappings -OR- null if they are unavailable.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.AddTypeMapping(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Boolean)">
            <summary>
            Adds a per-connection type mapping, possibly replacing one or more
            that already exist.
            </summary>
            <param name="typeName">
            The case-insensitive database type name (e.g. "MYDATE").  The value
            of this parameter cannot be null.  Using an empty string value (or
            a string value consisting entirely of whitespace) for this parameter
            is not recommended.
            </param>
            <param name="dataType">
            The <see cref="T:Crestron.SimplSharp.CrestronData.DbType"/> value that should be associated with the
            specified type name.
            </param>
            <param name="primary">
            Non-zero if this mapping should be considered to be the primary one
            for the specified <see cref="T:Crestron.SimplSharp.CrestronData.DbType"/>.
            </param>
            <returns>
            A negative value if nothing was done.  Zero if no per-connection type
            mappings were replaced (i.e. it was a pure add operation).  More than
            zero if some per-connection type mappings were replaced.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.Dispose(System.Boolean)">
            <summary>
             Releases the unmanaged resources used by the class and optionally releases the managed resources.
            </summary>
            <param name="disposing"> true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.Clone">
            <summary>
            Creates a clone of the connection.  All attached databases and user-defined functions are cloned.  If the existing connection is open, the cloned connection
            will also be opened.
            </summary>
            <returns>The clone</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.CreateFile(System.String)">
            <summary>
            Creates or overwrites a database file in the specified path. This just creates a zero-byte file which SQLite
            will turn into a database when the file is opened properly. Note that an existing file will be overwritten.
            </summary>
            <param name="databaseFileName">The file to create</param>
            <remarks> To protect the internal file system, Crestron’s best practices are to store databases on removable media (\RM or \RM2).
            If you have to store a database on the internal file system, please use great caution, to minimize writes.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.BeginTransaction(Crestron.SimplSharp.CrestronData.IsolationLevel)">
            <summary>
            Creates a new <see cref="T:Crestron.SimplSharp.SQLite.SQLiteTransaction"/> if one isn't already active on the connection.
            </summary>
            <param name="isolationLevel">Supported isolation levels are Serializable, ReadCommitted and Unspecified.</param>
            <remarks>
            Unspecified will use the default isolation level specified in the connection string.  If no isolation level is specified in the
            connection string, Serializable is used.
            Serializable transactions are the default.  In this mode, the engine gets an immediate lock on the database, and no other threads
            may begin a transaction.  Other threads may read from the database, but not write.
            With a ReadCommitted isolation level, locks are deferred and elevated as needed.  It is possible for multiple threads to start
            a transaction in ReadCommitted mode, but if a thread attempts to commit a transaction while another thread
            has a ReadCommitted lock, it may timeout or cause a deadlock on both threads until both threads' CommandTimeout's are reached.
            </remarks>
            <returns>Returns a SQLiteTransaction object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.BeginTransaction">
            <summary>
            Creates a new <see cref="T:Crestron.SimplSharp.SQLite.SQLiteTransaction"/> if one isn't already
            active on the connection.
            </summary>
            <returns>Returns the new transaction object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ChangeDatabase(System.String)">
            <summary>
            This method is not implemented; however, the <see cref="E:Crestron.SimplSharp.SQLite.SQLiteConnection.Changed"/>
            event will still be raised.
            </summary>
            <param name="databaseName">The name</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.Close">
            <summary>
            When the database connection is closed, all commands linked to this connection are automatically reset.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.CreateCommand">
            <summary>
            Create a new <see cref="T:Crestron.SimplSharp.SQLite.SQLiteCommand"/> and associate it with this connection.
            </summary>
            <returns>Returns a new command object already assigned to this connection.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.EnableExtensions(System.Boolean)">
            <summary>
            Enables or disabled extension loading.
            </summary>
            <param name="enable">
            True to enable loading of extensions, false to disable.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.LoadExtension(System.String)">
            <summary>
            Loads a SQLite extension library from the named dynamic link library file.
            </summary>
            <param name="fileName">
            The name of the dynamic link library file containing the extension.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.LoadExtension(System.String,System.String)">
            <summary>
            Loads a SQLite extension library from the named dynamic link library file.
            </summary>
            <param name="fileName">
            The name of the dynamic link library file containing the extension.
            </param>
            <param name="procName">
            The name of the exported function used to initialize the extension.
            If null, the default "sqlite3_extension_init" will be used.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.Open">
            <summary>
            Opens the connection using the parameters found in the <see cref="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ConnectionString"/>.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.OpenAndReturn">
            <summary>
            Opens the connection using the parameters found in the <see cref="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ConnectionString"/> and then returns it.
            </summary>
            <returns>The current connection object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.Cancel">
            <summary>
            This method causes any pending database operation to abort and return at
            its earliest opportunity.  This routine is typically called in response
            to a user action such as pressing "Cancel" or Ctrl-C where the user wants
            a long query operation to halt immediately.  It is safe to call this
            routine from any thread.  However, it is not safe to call this routine
            with a database connection that is closed or might close before this method
            returns.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.GetMemoryStatistics(System.Collections.Generic.IDictionary{System.String,System.Int64}@)">
            <summary>
            Returns various global memory statistics for the SQLite core library via
            a dictionary of key/value pairs.  Currently, only the "MemoryUsed" and
            "MemoryHighwater" keys are returned and they have values that correspond
            to the values that could be obtained via the <see cref="P:Crestron.SimplSharp.SQLite.SQLiteConnection.MemoryUsed"/>
            and <see cref="P:Crestron.SimplSharp.SQLite.SQLiteConnection.MemoryHighwater"/> connection properties.
            </summary>
            <param name="statistics">
            This dictionary will be populated with the global memory statistics.  It
            will be created if necessary.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ReleaseMemory">
            <summary>
            Attempts to free as much heap memory as possible for this database connection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ReleaseMemory(System.Int32,System.Boolean,System.Boolean,System.Int32@,System.Boolean@,System.UInt32@)">
            <summary>
            Attempts to free N bytes of heap memory by deallocating non-essential memory
            allocations held by the database library. Memory used to cache database pages
            to improve performance is an example of non-essential memory.  This is a no-op
            returning zero if the SQLite core library was not compiled with the compile-time
            option SQLITE_ENABLE_MEMORY_MANAGEMENT.  Optionally, attempts to reset and/or
            compact the Win32 native heap, if applicable.
            </summary>
            <param name="nBytes">
            The requested number of bytes to free.
            </param>
            <param name="reset">
            Non-zero to attempt a heap reset.
            </param>
            <param name="compact">
            Non-zero to attempt heap compaction.
            </param>
            <param name="nFree">
            The number of bytes actually freed.  This value may be zero.
            </param>
            <param name="resetOk">
            This value will be non-zero if the heap reset was successful.
            </param>
            <param name="nLargest">
            The size of the largest committed free block in the heap, in bytes.
            This value will be zero unless heap compaction is enabled.
            </param>
            <returns>
            A standard SQLite return code (i.e. zero for success and non-zero
            for failure).
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.SetMemoryStatus(System.Boolean)">
            <summary>
            Sets the status of the memory usage tracking subsystem in the SQLite core library.  By default, this is enabled.
            If this is disabled, memory usage tracking will not be performed.  This is not really a per-connection value, it is
            global to the process.
            </summary>
            <param name="value">Non-zero to enable memory usage tracking, zero otherwise.</param>
            <returns>A standard SQLite return code (i.e. zero for success and non-zero for failure).</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.Shutdown">
            <summary>
            Passes a shutdown request to the SQLite core library.  Does not throw
            an exception if the shutdown request fails.
            </summary>
            <returns>
            A standard SQLite return code (i.e. zero for success and non-zero for
            failure).
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.Shutdown(System.Boolean,System.Boolean)">
            <summary>
            Passes a shutdown request to the SQLite core library.  Throws an
            exception if the shutdown request fails and the no-throw parameter
            is non-zero.
            </summary>
            <param name="directories">
            Non-zero to reset the database and temporary directories to their
            default values, which should be null for both.
            </param>
            <param name="noThrow">
            When non-zero, throw an exception if the shutdown request fails.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.SetExtendedResultCodes(System.Boolean)">
            <summary>Enables or disabled extended result codes returned by SQLite</summary>
            <param name="bOnOff">Enable (true) or disable (false)</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ResultCode">
            <summary>
            Returns the SQLite Result Code
            </summary>
            <returns>The SQLite Error Code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ExtendedResultCode">
            <summary>
            Returns the Extended SQLite Result Code
            </summary>
            <returns>The SQLite Error Code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.LogMessage(Crestron.SimplSharp.SQLite.SQLiteErrorCode,System.String)">
            <summary>
            Add a log message via the SQLite sqlite3_log interface
            </summary>
            <param name="iErrCode">SQLite Error Code</param>
            <param name="zMessage">Message string</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.LogMessage(System.Int32,System.String)">
            <summary>
            Add a log message via the SQLite sqlite3_log interface
            </summary>
            <param name="iErrCode">Error Code</param>
            <param name="zMessage">Message string</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ChangePassword(System.String)">
            <summary>
            Change the password (or assign a password) to an open database.
            </summary>
            <remarks>
            No readers or writers may be active for this process.  The database must already be open
            and if it already was password protected, the existing password must already have been supplied.
            </remarks>
            <param name="newPassword">The new password to assign to the database</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ChangePassword(System.Byte[])">
            <summary>
            Change the password (or assign a password) to an open database.
            </summary>
            <remarks>
            No readers or writers may be active for this process.  The database must already be open
            and if it already was password protected, the existing password must already have been supplied.
            </remarks>
            <param name="newPassword">The new password to assign to the database</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.SetPassword(System.String)">
            <summary>
            Sets the password for a password-protected database.  A password-protected database is
            unusable for any operation until the password has been set.
            </summary>
            <param name="databasePassword">The password for the database</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.SetPassword(System.Byte[])">
            <summary>
            Sets the password for a password-protected database.  A password-protected database is
            unusable for any operation until the password has been set.
            </summary>
            <param name="databasePassword">The password for the database</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.SetAvRetry(System.Int32@,System.Int32@)">
            <summary>
            Queries or modifies the number of retries or the retry interval (in milliseconds) for
            certain I/O operations that may fail due to anti-virus software.
            </summary>
            <param name="count">The number of times to retry the I/O operation.  A negative value
            will cause the current count to be queried and replace that negative value.</param>
            <param name="interval">The number of milliseconds to wait before retrying the I/O
            operation.  This number is multiplied by the number of retry attempts so far to come
            up with the final number of milliseconds to wait.  A negative value will cause the
            current interval to be queried and replace that negative value.</param>
            <returns>Zero for success, non-zero for error.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.GetSchema">
            <overloads>
             The following commands are used to extract schema information out of the database.  Valid schema types are:
             <list type="bullet">
             <item>
             <description>MetaDataCollections</description>
             </item>
             <item>
             <description>DataSourceInformation</description>
             </item>
             <item>
             <description>Catalogs</description>
             </item>
             <item>
             <description>Columns</description>
             </item>
             <item>
             <description>ForeignKeys</description>
             </item>
             <item>
             <description>Indexes</description>
             </item>
             <item>
             <description>IndexColumns</description>
             </item>
             <item>
             <description>Tables</description>
             </item>
             <item>
             <description>Views</description>
             </item>
             <item>
             <description>ViewColumns</description>
             </item>
             </list>
             </overloads>
             <summary>
             Returns the MetaDataCollections schema
             </summary>
             <returns>A DataTable of the MetaDataCollections schema</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.GetSchema(System.String)">
            <summary>
            Returns schema information of the specified collection
            </summary>
            <param name="collectionName">The schema collection to retrieve</param>
            <returns>A DataTable of the specified collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.GetSchema(System.String,System.String[])">
            <summary>
            Retrieves schema information using the specified constraint(s) for the specified collection
            </summary>
            <param name="collectionName">The collection to retrieve</param>
            <param name="restrictionValues">The restrictions to impose</param>
            <returns>A DataTable of the specified collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.BeginDbTransaction(Crestron.SimplSharp.CrestronData.IsolationLevel)">
            <summary>
            Forwards to the local <see cref="M:Crestron.SimplSharp.SQLite.SQLiteConnection.BeginTransaction(Crestron.SimplSharp.CrestronData.IsolationLevel)"/> function
            </summary>
            <param name="isolationLevel">Supported isolation levels are Unspecified, Serializable, and ReadCommitted</param>
            <returns>DbTransaction</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.CreateDbCommand">
            <summary>
            Forwards to the local <see cref="M:Crestron.SimplSharp.SQLite.SQLiteConnection.CreateCommand"/> function.
            </summary>
            <returns>DbCommand</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteConnection.OnStateChange(Crestron.SimplSharp.CrestronData.StateChangeEventArgs)">
            <summary>
                 Raises the DbConnection.StateChange event.
            </summary>
            <param name="stateChange">
                 A StateChangeEventArgs that contains the event data.
            </param>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteConnection.Changed">
            <summary>
            This event is raised when events related to the lifecycle of a
            SQLiteConnection object occur.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ConnectionTimeout">
            <summary>
            Obsolete
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ConnectionString">
            <summary>
            Gets or sets the string used to open a SQL Server database.
            The connection string that includes the source database name, and other parameters needed to establish the initial connection. The default value
            is an empty string.
            </summary>
            <remarks> To protect the internal file system, Crestron’s best practices are to store databases on removable media (\RM or \RM2).
            If you have to store a database on the internal file system, please use great caution, to minimize writes.
            <remarks>
            <list type="table">
            <listheader>
            <term>Parameter</term>
            <term>Values</term>
            <term>Required</term>
            <term>Default</term>
            </listheader>
            <item>
            <description>Data Source</description>
            <description>
            This may be a file name, the string ":memory:", or any supported URI (starting with SQLite 3.7.7).
            Starting with release 1.0.86.0, in order to use more than one consecutive backslash (e.g. for a
            UNC path), each of the adjoining backslash characters must be doubled (e.g. "\\Network\Share\test.db"
            would become "\\\\Network\Share\test.db").
            </description>
            <description>Y</description>
            <description></description>
            </item>
            <item>
            <description>Version</description>
            <description>3</description>
            <description>N</description>
            <description>3</description>
            </item>
            <item>
            <description>UseUTF16Encoding</description>
            <description><b>True</b><br/><b>False</b></description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>DateTimeFormat</description>
            <description>
            <b>Ticks</b> - Use the value of DateTime.Ticks.<br/>
            <b>ISO8601</b> - Use the ISO-8601 format.  Uses the "yyyy-MM-dd HH:mm:ss.FFFFFFFK" format for UTC
            DateTime values and "yyyy-MM-dd HH:mm:ss.FFFFFFF" format for local DateTime values).<br/>
            <b>JulianDay</b> - The interval of time in days and fractions of a day since January 1, 4713 BC.<br/>
            <b>UnixEpoch</b> - The whole number of seconds since the Unix epoch (January 1, 1970).<br/>
            <b>InvariantCulture</b> - Any culture-independent string value that the .NET Framework can interpret as a valid DateTime.<br/>
            <b>CurrentCulture</b> - Any string value that the .NET Framework can interpret as a valid DateTime using the current culture.</description>
            <description>N</description>
            <description>ISO8601</description>
            </item>
            <item>
            <description>DateTimeKind</description>
            <description><b>Unspecified</b> - Not specified as either UTC or local time.<br/><b>Utc</b> - The time represented is UTC.<br/><b>Local</b> - The time represented is local time.</description>
            <description>N</description>
            <description>Unspecified</description>
            </item>
            <item>
            <description>DateTimeFormatString</description>
            <description>The exact DateTime format string to use for all formatting and parsing of all DateTime
            values for this connection.</description>
            <description>N</description>
            <description>null</description>
            </item>
            <item>
            <description>BaseSchemaName</description>
            <description>Some base data classes in the framework (e.g. those that build SQL queries dynamically)
            assume that an ADO.NET provider cannot support an alternate catalog (i.e. database) without supporting
            alternate schemas as well; however, SQLite does not fit into this model.  Therefore, this value is used
            as a placeholder and removed prior to preparing any SQL statements that may contain it.</description>
            <description>N</description>
            <description>sqlite_default_schema</description>
            </item>
            <item>
            <description>BinaryGUID</description>
            <description><b>True</b> - Store GUID columns in binary form<br/><b>False</b> - Store GUID columns as text</description>
            <description>N</description>
            <description>True</description>
            </item>
            <item>
            <description>Cache Size</description>
            <description>{size in bytes}</description>
            <description>N</description>
            <description>2000</description>
            </item>
            <item>
            <description>Synchronous</description>
            <description><b>Normal</b> - Normal file flushing behavior<br/><b>Full</b> - Full flushing after all writes<br/><b>Off</b> - Underlying OS flushes I/O's</description>
            <description>N</description>
            <description>Full</description>
            </item>
            <item>
            <description>Page Size</description>
            <description>{size in bytes}</description>
            <description>N</description>
            <description>1024</description>
            </item>
            <item>
            <description>Password</description>
            <description>{password} - Using this parameter requires that the CryptoAPI based codec be enabled at compile-time for both the native interop assembly and the core managed assemblies; otherwise, using this parameter may result in an exception being thrown when attempting to open the connection.</description>
            <description>N</description>
            <description></description>
            </item>
            <item>
            <description>HexPassword</description>
            <description>{hexPassword} - Must contain a sequence of zero or more hexadecimal encoded byte values without a leading "0x" prefix.  Using this parameter requires that the CryptoAPI based codec be enabled at compile-time for both the native interop assembly and the core managed assemblies; otherwise, using this parameter may result in an exception being thrown when attempting to open the connection.</description>
            <description>N</description>
            <description></description>
            </item>
            <item>
            <description>Enlist</description>
            <description><b>Y</b> - Automatically enlist in distributed transactions<br/><b>N</b> - No automatic enlistment</description>
            <description>N</description>
            <description>Y</description>
            </item>
            <item>
            <description>Pooling</description>
            <description>
            <b>True</b> - Use connection pooling.<br/>
            <b>False</b> - Do not use connection pooling.<br/><br/>
            <b>WARNING:</b> When using the default connection pool implementation,
            setting this property to True should be avoided by applications that
            make use of COM (either directly or indirectly) due to possible
            deadlocks that can occur during the finalization of some COM objects.
            </description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>FailIfMissing</description>
            <description><b>True</b> - Don't create the database if it does not exist, throw an error instead<br/><b>False</b> - Automatically create the database if it does not exist</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Max Page Count</description>
            <description>{size in pages} - Limits the maximum number of pages (limits the size) of the database</description>
            <description>N</description>
            <description>0</description>
            </item>
            <item>
            <description>Legacy Format</description>
            <description><b>True</b> - Use the more compatible legacy 3.x database format<br/><b>False</b> - Use the newer 3.3x database format which compresses numbers more effectively</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Default Timeout</description>
            <description>{time in seconds}<br/>The default command timeout</description>
            <description>N</description>
            <description>30</description>
            </item>
            <item>
            <description>Journal Mode</description>
            <description><b>Delete</b> - Delete the journal file after a commit<br/><b>Persist</b> - Zero out and leave the journal file on disk after a commit<br/><b>Off</b> - Disable the rollback journal entirely</description>
            <description>N</description>
            <description>Delete</description>
            </item>
            <item>
            <description>Read Only</description>
            <description><b>True</b> - Open the database for read only access<br/><b>False</b> - Open the database for normal read/write access</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Max Pool Size</description>
            <description>The maximum number of connections for the given connection string that can be in the connection pool</description>
            <description>N</description>
            <description>100</description>
            </item>
            <item>
            <description>Default IsolationLevel</description>
            <description>The default transaction isolation level</description>
            <description>N</description>
            <description>Serializable</description>
            </item>
            <item>
            <description>Foreign Keys</description>
            <description>Enable foreign key constraints</description>
            <description>N</description>
            <description>False</description>
            </item>
            <item>
            <description>Flags</description>
            <description>Extra behavioral flags for the connection.  See the <see cref="T:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags"/> enumeration for possible values.</description>
            <description>N</description>
            <description>Default</description>
            </item>
            <item>
            <description>SetDefaults</description>
            <description>
            <b>True</b> - Apply the default connection settings to the opened database.<br/>
            <b>False</b> - Skip applying the default connection settings to the opened database.
            </description>
            <description>N</description>
            <description>True</description>
            </item>
            <item>
            <description>ToFullPath</description>
            <description>
            <b>True</b> - Attempt to expand the data source file name to a fully qualified path before opening.<br/>
            <b>False</b> - Skip attempting to expand the data source file name to a fully qualified path before opening.
            </description>
            <description>N</description>
            <description>True</description>
            </item>
            </list>
            </remarks> 
            </remarks>
            <exception cref="T:System.ArgumentNullException"> Specified Argument is NULL</exception>
            <exception cref="T:System.InvalidOperationException"> Database is not in the closed state</exception>
            <exception cref="T:System.ObjectDisposedException"> Object is already disposed</exception>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.DataSource">
            <summary>
            Returns the data source file name without extension or path.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.Database">
            <summary>
            Returns the string "main".
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.DefaultTimeout">
            <summary>
            Gets/sets the default command timeout for newly-created commands.  This is especially useful for
            commands used internally such as inside a SQLiteTransaction, where setting the timeout is not possible.
            This can also be set in the ConnectionString with "Default Timeout"
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ParseViaFramework">
            <summary>
            Non-zero if the built-in (i.e. framework provided) connection string
            parser should be used when opening the connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.Flags">
            <summary>
            Gets/sets the extra behavioral flags for this connection.  See the
            <see cref="T:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags"/> enumeration for a list of
            possible values.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.OwnHandle">
            <summary>
            Returns non-zero if the underlying native connection handle is
            owned by this instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ServerVersion">
            <summary>
            Returns the version of the underlying SQLite database engine
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.LastInsertRowId">
            <summary>
            Returns the rowid of the most recent successful INSERT into the database from this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.Changes">
            <summary>
            Returns the number of rows changed by the last INSERT, UPDATE, or DELETE statement executed on
            this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.AutoCommit">
            <summary>
            Returns non-zero if the given database connection is in autocommit mode.
            Autocommit mode is on by default.  Autocommit mode is disabled by a BEGIN
            statement.  Autocommit mode is re-enabled by a COMMIT or ROLLBACK.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.MemoryUsed">
            <summary>
            Returns the amount of memory (in bytes) currently in use by the SQLite core library.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.MemoryHighwater">
            <summary>
            Returns the maximum amount of memory (in bytes) used by the SQLite core library since the high-water mark was last reset.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.DefineConstants">
            <summary>
            Returns a string containing the define constants (i.e. compile-time
            options) used to compile the core managed assembly, delimited with
            spaces.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.SQLiteVersion">
            <summary>
            Returns the version of the underlying SQLite core library.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.SQLiteSourceId">
            <summary>
            This method returns the string whose value is the same as the
            SQLITE_SOURCE_ID C preprocessor macro used when compiling the
            SQLite core library.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.SQLiteCompileOptions">
            <summary>
            Returns a string containing the compile-time options used to
            compile the SQLite core native library, delimited with spaces.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.InteropVersion">
            <summary>
            This method returns the version of the interop SQLite assembly
            used.  If the SQLite interop assembly is not in use or the
            necessary information cannot be obtained for any reason, a null
            value may be returned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.InteropSourceId">
            <summary>
            This method returns the string whose value contains the unique
            identifier for the source checkout used to build the interop
            assembly.  If the SQLite interop assembly is not in use or the
            necessary information cannot be obtained for any reason, a null
            value may be returned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.InteropCompileOptions">
            <summary>
            Returns a string containing the compile-time options used to
            compile the SQLite interop assembly, delimited with spaces.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ProviderVersion">
            <summary>
            This method returns the version of the managed components used
            to interact with the SQLite core library.  If the necessary
            information cannot be obtained for any reason, a null value may
            be returned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.ProviderSourceId">
            <summary>
            This method returns the string whose value contains the unique
            identifier for the source checkout used to build the managed
            components currently executing.  If the necessary information
            cannot be obtained for any reason, a null value may be returned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteConnection.State">
            <summary>
            Returns the state of the connection.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteConnection.Authorize">
            <summary>
            This event is raised whenever SQLite encounters an action covered by the
            authorizer during query preparation.  Changing the value of the
            <see cref="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.ReturnCode"/> property will determine if
            the specific action will be allowed, ignored, or denied.  For the entire
            duration of the event, the associated connection and statement objects
            must not be modified, either directly or indirectly, by the called code.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteConnection.Update">
            <summary>
            This event is raised whenever SQLite makes an update/delete/insert into the database on
            this connection.  It only applies to the given connection.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteConnection.Commit">
            <summary>
            This event is raised whenever SQLite is committing a transaction.
            Return non-zero to trigger a rollback.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteConnection.Trace">
            <summary>
            This event is raised whenever SQLite statement first begins executing on
            this connection.  It only applies to the given connection.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteConnection.RollBack">
            <summary>
            This event is raised whenever SQLite is rolling back a transaction.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteConnection.StateChange">
            <summary>
            This event is raised whenever the database is opened or closed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteCommand">
            <summary>
            SQLite implementation of DbCommand.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbCommand">
            <summary>
                 Represents an SQL statement or stored procedure to execute against a data
                 source. Provides a base class for database-specific classes that represent
                 commands.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDbCommand">
            <summary>
                 Represents an SQL statement that is executed while connected to a data source,
                 and is implemented by .NET Framework data providers that access relational
                 databases.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommand.Cancel">
            <summary>
                 Attempts to cancels the execution of an IDbCommand.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommand.CreateParameter">
            <summary>
                 Creates a new instance of an IDbDataParameter object.
            </summary>
            <returns>
                 An IDbDataParameter object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommand.ExecuteNonQuery">
            <summary>
                 Executes an SQL statement against the Connection object of a .NET Framework
                 data provider, and returns the number of rows affected.
            </summary>
            <returns>
                 The number of rows affected.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The connection does not exist.-or- The connection is not open.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommand.ExecuteReader">
            <summary>
                 Executes the IDbCommand.CommandText against the IDbCommand.Connection
                 and builds an IDataReader.
            </summary>
            <returns>
                 An IDataReader object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommand.ExecuteReader(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Executes the IDbCommand.CommandText against the IDbCommand.Connection,
                 and builds an IDataReader using one of the CommandBehavior
                 values.
            </summary>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 An IDataReader object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommand.ExecuteScalar">
            <summary>
                 Executes the query, and returns the first column of the first row in the
                 resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            <returns>
                 The first column of the first row in the resultset.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommand.Prepare">
            <summary>
                 Creates a prepared (or compiled) version of the command on the data source.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The OleDb.OleDbCommand.Connection is not set.-or- The OleDb.OleDbCommand.Connection
                 is not OleDb.OleDbConnection.Open().
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.InnerObject">
            <summary>
                 Internal object. Do not use!
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.CommandText">
            <summary>
                 Gets or sets the text command to run against the data source.
            </summary>
            <returns>
                 The text command to execute. The default value is an empty string ("").
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.CommandTimeout">
            <summary>
                 Gets or sets the wait time before terminating the attempt to execute a command
                 and generating an error.
            </summary>
            <returns>
                 The time (in seconds) to wait for the command to execute. The default value
                 is 30 seconds.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property value assigned is less than 0.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.CommandType">
            <summary>
                 Indicates or specifies how the IDbCommand.CommandText property
                 is interpreted.
            </summary>
            <returns>
                 One of the CommandType values. The default is Text.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.Connection">
            <summary>
                 Gets or sets the IDbConnection used by this instance of the IDbCommand.
            </summary>
            <returns>
                 The connection to the data source.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.Parameters">
            <summary>
                 Gets the IDataParameterCollection.
            </summary>
            <returns>
                 The parameters of the SQL statement or stored procedure.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.Transaction">
            <summary>
                 Gets or sets the transaction within which the Command object of a .NET Framework
                 data provider executes.
            </summary>
            <returns>
                 the Command object of a .NET Framework data provider executes. The default
                 value is null.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommand.UpdatedRowSource">
            <summary>
                 Gets or sets how command results are applied to the DataRow when
                 used by the IDataAdapter.Update(DataSet) method of
                 a DbDataAdapter.
            </summary>
            <returns>
                 One of the UpdateRowSource values. The default is Both unless
                 the command is automatically generated. Then the default is None.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value entered was not one of the UpdateRowSource values.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.#ctor">
            <summary>
                 Constructs an instance of the DbCommand object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.Cancel">
            <summary>
                 Attempts to cancels the execution of a DbCommand.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.CreateDbParameter">
            <summary>
                 Creates a new instance of a DbParameter object.
            </summary>
            <returns>
                 A DbParameter object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.ExecuteDbDataReader(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Executes the command text against the connection.
            </summary>
            <param name="behavior">
                 An instance of CommandBehavior.
            </param>
            <returns>
                 A DbDataReader.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.ExecuteNonQuery">
            <summary>
                 Executes a SQL statement against a connection object.
            </summary>
            <returns>
                 The number of rows affected.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.ExecuteScalar">
            <summary>
                 Executes the query and returns the first column of the first row in the result
                 set returned by the query. All other columns and rows are ignored.
            </summary>
            <returns>
                 The first column of the first row in the result set.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.Prepare">
            <summary>
                 Creates a prepared (or compiled) version of the command on the data source.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.CreateParameter">
            <summary>
                 Creates a new instance of a DbParameter object.
            </summary>
            <returns>
                 A DbParameter object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.ExecuteReader">
            <summary>
                 Executes the DbCommand.CommandText against the DbCommand.Connection,
                 and returns an DbDataReader.
            </summary>
            <returns>
                 A DbDataReader object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommand.ExecuteReader(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Executes the DbCommand.CommandText against the DbCommand.Connection,
                 and returns an DbDataReader using one of the CommandBehavior
                 values.
            </summary>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 An DbDataReader object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.CommandText">
            <summary>
                 Gets or sets the text command to run against the data source.
            </summary>
            <returns>
                 The text command to execute. The default value is an empty string ("").
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.CommandTimeout">
            <summary>
                 Gets or sets the wait time before terminating the attempt to execute a command
                 and generating an error.
            </summary>
            <returns>
                 The time in seconds to wait for the command to execute.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.CommandType">
            <summary>
                 Indicates or specifies how the DbCommand.CommandText property
                 is interpreted.
            </summary>
            <returns>
                 One of the CommandType values. The default is Text.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.DbConnection">
            <summary>
                 Gets or sets the DbConnection used by this DbCommand.
            </summary>
            <returns>
                 The connection to the data source.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.DbParameterCollection">
            <summary>
                 Gets the collection of DbParameter objects.
            </summary>
            <returns>
                 The parameters of the SQL statement or stored procedure.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.DbTransaction">
            <summary>
                 Gets or sets the DbCommand.DbTransaction within which
                 this DbCommand object executes.
            </summary>
            <returns>
                 The transaction within which a Command object of a .NET Framework data provider
                 executes. The default value is a null reference (Nothing in Visual Basic).
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.DesignTimeVisible">
            <summary>
                 Gets or sets a value indicating whether the command object should be visible
                 in a customized interface control.
            </summary>
            <returns>
                 true, if the command object should be visible in a control; otherwise false.
                 The default is true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.UpdatedRowSource">
            <summary>
                 Gets or sets how command results are applied to the DataRow when
                 used by the Update method of a DbDataAdapter.
            </summary>
            <returns>
                 One of the UpdateRowSource values. The default is Both unless
                 the command is automatically generated. Then the default is None.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.Parameters">
            <summary>
                 Gets the collection of DbParameter objects.
            </summary>
            <returns>
                 The parameters of the SQL statement or stored procedure.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommand.Transaction">
            <summary>
                 Gets or sets the DbTransaction within which this DbCommand
                 object executes.
            </summary>
            <returns>
                 The transaction within which a Command object of a .NET Framework data provider
                 executes. The default value is a null reference (Nothing in Visual Basic).
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.#ctor">
            <overloads>
             Constructs a new SQLiteCommand
             </overloads>
             <summary>
             Default constructor
             </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.#ctor(System.String)">
            <summary>
            Initializes the command with the given command text
            </summary>
            <param name="commandText">The SQL command text</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.#ctor(System.String,Crestron.SimplSharp.SQLite.SQLiteConnection)">
            <summary>
            Initializes the command with the given SQL command text and attach the command to the specified
            connection.
            </summary>
            <param name="commandText">The SQL command text</param>
            <param name="connection">The connection to associate with the command</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.#ctor(Crestron.SimplSharp.SQLite.SQLiteConnection)">
            <summary>
            Initializes the command and associates it with the specified connection.
            </summary>
            <param name="connection">The connection to associate with the command</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.#ctor(System.String,Crestron.SimplSharp.SQLite.SQLiteConnection,Crestron.SimplSharp.SQLite.SQLiteTransaction)">
            <summary>
            Initializes a command with the given SQL, connection and transaction
            </summary>
            <param name="commandText">The SQL command text</param>
            <param name="connection">The connection to associate with the command</param>
            <param name="transaction">The transaction the command should be associated with</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.Dispose(System.Boolean)">
            <summary>
            Disposes of the command and clears all member variables
            </summary>
            <param name="disposing">Whether or not the class is being explicitly or implicitly disposed</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.Cancel">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.CreateParameter">
            <summary>
            Create a new parameter
            </summary>
            <returns>SQLite Parameter</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.Execute(System.String,Crestron.SimplSharp.SQLite.SQLiteExecuteType,System.String,System.Object[])">
            <summary>
            This method creates a new connection, executes the query using the given
            execution type, closes the connection, and returns the results.  If the
            connection string is null, a temporary in-memory database connection will
            be used.
            </summary>
            <param name="commandText">
            The text of the command to be executed.
            </param>
            <param name="executeType">
            The execution type for the command.  This is used to determine which method
            of the command object to call, which then determines the type of results
            returned, if any.
            </param>
            <param name="connectionString">
            The connection string to the database to be opened, used, and closed.  If
            this parameter is null, a temporary in-memory database will be used.
            </param>
            <param name="args">
            The SQL parameter values to be used when building the command object to be
            executed, if any.
            </param>
            <returns>
            The results of the query -OR- null if no results were produced from the
            given execution type.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.Execute(System.String,Crestron.SimplSharp.SQLite.SQLiteExecuteType,Crestron.SimplSharp.CrestronData.CommandBehavior,System.String,System.Object[])">
            <summary>
            This method creates a new connection, executes the query using the given
            execution type and command behavior, closes the connection, and returns
            the results.  If the connection string is null, a temporary in-memory
            database connection will be used.
            </summary>
            <param name="commandText">
            The text of the command to be executed.
            </param>
            <param name="executeType">
            The execution type for the command.  This is used to determine which method
            of the command object to call, which then determines the type of results
            returned, if any.
            </param>
            <param name="commandBehavior">
            The command behavior flags for the command.
            </param>
            <param name="connectionString">
            The connection string to the database to be opened, used, and closed.  If
            this parameter is null, a temporary in-memory database will be used.
            </param>
            <param name="args">
            The SQL parameter values to be used when building the command object to be
            executed, if any.
            </param>
            <returns>
            The results of the query -OR- null if no results were produced from the
            given execution type.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteReader(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
            Overrides the default behavior to return a SQLiteDataReader specialization class
            </summary>
            <param name="behavior">The flags to be associated with the reader.</param>
            <returns>A SQLiteDataReader</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteReader">
            <summary>
            Overrides the default behavior of DbDataReader to return a specialized SQLiteDataReader class
            </summary>
            <returns>A SQLiteDataReader</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteNonQuery">
            <summary>
            Execute the command and return the number of rows inserted/updated affected by it.
            </summary>
            <returns>The number of rows inserted/updated affected by it.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteNonQuery(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
            Execute the command and return the number of rows inserted/updated affected by it.
            </summary>
            <param name="behavior">The flags to be associated with the reader.</param>
            <returns>The number of rows inserted/updated affected by it.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteScalar">
            <summary>
            Execute the command and return the first column of the first row of the resultset
            (if present), or null if no resultset was returned.
            </summary>
            <returns>The first column of the first row of the first resultset from the query.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteScalar(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
            Execute the command and return the first column of the first row of the resultset
            (if present), or null if no resultset was returned.
            </summary>
            <param name="behavior">The flags to be associated with the reader.</param>
            <returns>The first column of the first row of the first resultset from the query.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.Prepare">
            <summary>
            Does nothing.  Commands are prepared as they are executed the first time, and kept in prepared state afterwards.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.Clone">
            <summary>
            Clones a command, including all its parameters
            </summary>
            <returns>A new SQLiteCommand with the same commandtext, connection and parameters</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.CreateDbParameter">
            <summary>
            Creates a new parameter
            </summary>
            <returns>DbParameter</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteDbDataReader(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
            Overrides the default behavior to return a SQLiteDataReader specialization class
            </summary>
            <param name="behavior">The flags to be associated with the reader.</param>
            <returns>A SQLiteDataReader</returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.CommandText">
            <summary>
            The SQL command text associated with the command
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.CommandTimeout">
            <summary>
            The amount of time to wait for the connection to become available before erroring out
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.CommandType">
            <summary>
            The type of the command.  SQLite only supports CommandType.Text
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.Connection">
            <summary>
            The connection associated with this command
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.Parameters">
            <summary>
            Returns the SQLiteParameterCollection for the given command
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.Transaction">
            <summary>
            The transaction associated with this command.  SQLite only supports one transaction per connection, so this property forwards to the
            command's underlying connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.UpdatedRowSource">
            <summary>
            Sets the method the SQLiteCommandBuilder uses to determine how to update inserted or updated rows in a DataTable.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.DesignTimeVisible">
            <summary>
            Determines if the command is visible at design time.  Defaults to True.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.DbConnection">
            <summary>
                 Specifies the DbConnection object associated with the
                 transaction.
            </summary>
            <returns>
                 The DbConnection object associated with the transaction.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.DbParameterCollection">
            <summary>
                 Gets the collection of DbParameter objects.
            </summary>
            <returns>
                 The parameters of the SQL statement or stored procedure.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommand.DbTransaction">
            <summary>
                 Gets or sets the DbCommand.DbTransaction within which
                 this DbCommand object executes.
            </summary>
            <returns>
                 The transaction within which a Command object of a .NET Framework data provider
                 executes. The default value is a null reference (Nothing in Visual Basic).
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteDataReader">
            <summary>
            SQLite implementation of DbDataReader.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbDataReader">
            <summary>
                 Reads a forward-only stream of rows from a data source.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDataReader">
            <summary>
                 Provides a means of reading one or more forward-only streams of result sets
                 obtained by executing a command at a data source, and is implemented by .NET
                 Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDataRecord">
            <summary>
                 Provides access to the column values within each row for a DataReader, and
                 is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetBoolean(System.Int32)">
            <summary>
                 Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetByte(System.Int32)">
            <summary>
                 Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The 8-bit unsigned integer value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of bytes from the specified column offset into the buffer
                 as an array, starting at the given buffer offset.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <param name="fieldOffset">
                 The index within the field from which to start the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to read the stream of bytes.
            </param>
            <param name="bufferoffset">
                 The index for buffer to start the read operation.
            </param>
            <param name="length">
                 The number of bytes to read.
            </param>
            <returns>
                 The actual number of bytes read.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetChar(System.Int32)">
            <summary>
                 Gets the character value of the specified column.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The character value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of characters from the specified column offset into the buffer
                 as an array, starting at the given buffer offset.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <param name="fieldoffset">
                 The index within the row from which to start the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to read the stream of bytes.
            </param>
            <param name="bufferoffset">
                 The index for buffer to start the read operation.
            </param>
            <param name="length">
                 The number of bytes to read.
            </param>
            <returns>
                 The actual number of characters read.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetData(System.Int32)">
            <summary>
                 Returns an IDataReader for the specified column ordinal.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 An IDataReader.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetDataTypeName(System.Int32)">
            <summary>
                 Gets the data type information for the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The data type information for the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetDateTime(System.Int32)">
            <summary>
                 Gets the date and time data value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The date and time data value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetDecimal(System.Int32)">
            <summary>
                 Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The fixed-position numeric value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetDouble(System.Int32)">
            <summary>
                 Gets the double-precision floating point number of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The double-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetFieldType(System.Int32)">
            <summary>
                 Gets the System.Type information corresponding to the type of System.Object
                 that would be returned from IDataRecord.GetValue(System.Int32).
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The System.Type information corresponding to the type of System.Object that
                 would be returned from IDataRecord.GetValue(System.Int32).
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetFloat(System.Int32)">
            <summary>
                 Gets the single-precision floating point number of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The single-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetGuid(System.Int32)">
            <summary>
                 Returns the GUID value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The GUID value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetInt16(System.Int32)">
            <summary>
                 Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The 16-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetInt32(System.Int32)">
            <summary>
                 Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The 32-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetInt64(System.Int32)">
            <summary>
                 Gets the 64-bit signed integer value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The 64-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetName(System.Int32)">
            <summary>
                 Gets the name for the field to find.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The name of the field or the empty string (""), if there is no value to return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetOrdinal(System.String)">
            <summary>
                 Return the index of the named field.
            </summary>
            <param name="name">
                 The name of the field to find.
            </param>
            <returns>
                 The index of the named field.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetString(System.Int32)">
            <summary>
                 Gets the string value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The string value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetValue(System.Int32)">
            <summary>
                 Return the value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The System.Object which will contain the field value upon return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.GetValues(System.Object[])">
            <summary>
                 Gets all the attribute fields in the collection for the current record.
            </summary>
            <param name="values">
                 An array of System.Object to copy the attribute fields into.
            </param>
            <returns>
                 The number of instances of System.Object in the array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataRecord.IsDBNull(System.Int32)">
            <summary>
                 Return whether the specified field is set to null.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 true if the specified field is set to null; otherwise, false.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataRecord.FieldCount">
            <summary>
                 Gets the number of columns in the current row.
            </summary>
            <returns>
                 When not positioned in a valid recordset, 0; otherwise, the number of columns
                 in the current record. The default is -1.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataRecord.Item(System.Int32)">
            <summary>
                 Gets the column located at the specified index.
            </summary>
            <param name="i">
                 The zero-based index of the column to get.
            </param>
            <returns>
                 The column located at the specified index as an System.Object.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataRecord.Item(System.String)">
            <summary>
                 Gets the column with the specified name.
            </summary>
            <param name="name">
                 The name of the column to find.
            </param>
            <returns>
                 The column with the specified name as an System.Object.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 No column with the specified name was found.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReader.Close">
            <summary>
                 Closes the IDataReader Object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReader.GetSchemaTable">
            <summary>
                 Returns a DataTable that describes the column metadata of the
                 IDataReader.
            </summary>
            <returns>
                 A DataTable that describes the column metadata.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The IDataReader is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReader.NextResult">
            <summary>
                 Advances the data reader to the next result, when reading the results of
                 batch SQL statements.
            </summary>
            <returns>
                 true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReader.Read">
            <summary>
                 Advances the IDataReader to the next record.
            </summary>
            <returns>
                 true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReader.InnerObject">
            <summary>
                 Internal object. Do not use!
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReader.Depth">
            <summary>
                 Gets a value indicating the depth of nesting for the current row.
            </summary>
            <returns>
                 The level of nesting.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReader.IsClosed">
            <summary>
                 Gets a value indicating whether the data reader is closed.
            </summary>
            <returns>
                 true if the data reader is closed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReader.RecordsAffected">
            <summary>
                 Gets the number of rows changed, inserted, or deleted by execution of the
                 SQL statement.
            </summary>
            <returns>
                 The number of rows changed, inserted, or deleted; 0 if no rows were affected
                 or the statement failed; and -1 for SELECT statements.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.#ctor">
            <summary>
                 Initializes a new instance of the DbDataReader class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.Close">
            <summary>
                 Closes the DbDataReader object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.Dispose(System.Boolean)">
            <summary>
                 Releases the managed resources used by the DbDataReader
                 and optionally releases the unmanaged resources.
            </summary>
            <param name="disposing">
                 true to release managed and unmanaged resources; false to release only unmanaged
                 resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.Dispose">
            <summary>
                 Performs application-defined tasks associated with freeing, releasing, or
                 resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetBoolean(System.Int32)">
            <summary>
                 Gets the value of the specified column as a Boolean.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetByte(System.Int32)">
            <summary>
                 Gets the value of the specified column as a byte.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of bytes from the specified column, starting at location indicated
                 by dataOffset, into the buffer, starting at the location indicated by bufferOffset.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <param name="dataOffset">
                 The index within the row from which to begin the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to copy the data.
            </param>
            <param name="bufferOffset">
                 The index with the buffer to which the data will be copied.
            </param>
            <param name="length">
                 The maximum number of characters to read.
            </param>
            <returns>
                 The actual number of bytes read.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetChar(System.Int32)">
            <summary>
                 Gets the value of the specified column as a single character.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of characters from the specified column, starting at location
                 indicated by dataIndex, into the buffer, starting at the location indicated
                 by bufferIndex.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <param name="dataOffset">
                 The index within the row from which to begin the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to copy the data.
            </param>
            <param name="bufferOffset">
                 The index with the buffer to which the data will be copied.
            </param>
            <param name="length">
                 The maximum number of characters to read.
            </param>
            <returns>
                 The actual number of characters read.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetData(System.Int32)">
            <summary>
                 Returns a DbDataReader object for the requested column
                 ordinal.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A DbDataReader object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetDataTypeName(System.Int32)">
            <summary>
                 Gets name of the data type of the specified column.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A string representing the name of the data type.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetDateTime(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.DateTime object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetDbDataReader(System.Int32)">
            <summary>
                 Returns a DbDataReader object for the requested column
                 ordinal that can be overridden with a provider-specific implementation.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A DbDataReader object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetDecimal(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.Decimal object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetDouble(System.Int32)">
            <summary>
                 Gets the value of the specified column as a double-precision floating point
                 number.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetEnumerator">
            <summary>
                 Returns an System.Collections.IEnumerator that can be used to iterate through
                 the rows in the data reader.
            </summary>
            <returns>
                 An System.Collections.IEnumerator that can be used to iterate through the
                 rows in the data reader.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetFieldType(System.Int32)">
            <summary>
                 Gets the data type of the specified column.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The data type of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetFloat(System.Int32)">
            <summary>
                 Gets the value of the specified column as a single-precision floating point
                 number.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetGuid(System.Int32)">
            <summary>
                 Gets the value of the specified column as a globally-unique identifier (GUID).
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetInt16(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 16-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetInt32(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 32-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetInt64(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 64-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetName(System.Int32)">
            <summary>
                 Gets the name of the column, given the zero-based column ordinal.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The name of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetOrdinal(System.String)">
            <summary>
                 Gets the column ordinal given the name of the column.
            </summary>
            <param name="name">
                 The name of the column.
            </param>
            <returns>
                 The zero-based column ordinal.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The name specified is not a valid column name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
            <summary>
                 Returns the provider-specific field type of the specified column.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The System.Type object that describes the data type of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
            <summary>
                 Gets all provider-specific attribute columns in the collection for the current
                 row.
            </summary>
            <param name="values">
                 An array of System.Object into which to copy the attribute columns.
            </param>
            <returns>
                 The number of instances of System.Object in the array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetSchemaTable">
            <summary>
                 Returns a DataTable that describes the column metadata of the
                 DbDataReader.
            </summary>
            <returns>
                 A DataTable that describes the column metadata.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetString(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.String.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetValue(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.GetValues(System.Object[])">
            <summary>
                 Gets all attribute columns in the collection for the current row.
            </summary>
            <param name="values">
                 An array of System.Object into which to copy the attribute columns.
            </param>
            <returns>
                 The number of instances of System.Object in the array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.IsDBNull(System.Int32)">
            <summary>
                 Gets a value that indicates whether the column contains nonexistent or missing
                 values.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 true if the specified column is equivalent to System.DBNull; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.NextResult">
            <summary>
                 Advances the reader to the next result when reading the results of a batch
                 of statements.
            </summary>
            <returns>
                 true if there are more result sets; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReader.Read">
            <summary>
                 Advances the reader to the next record in a result set.
            </summary>
            <returns>
                 true if there are more rows; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.Depth">
            <summary>
                 Gets a value indicating the depth of nesting for the current row.
            </summary>
            <returns>
                 The depth of nesting for the current row.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.FieldCount">
            <summary>
                 Gets the number of columns in the current row.
            </summary>
            <returns>
                 The number of columns in the current row.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.HasRows">
            <summary>
                 Gets a value that indicates whether this DbDataReader
                 contains one or more rows.
            </summary>
            <returns>
                 true if the DbDataReader contains one or more rows; otherwise
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.IsClosed">
            <summary>
                 Gets a value indicating whether the DbDataReader is closed.
            </summary>
            <returns>
                 true if the DbDataReader is closed; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.RecordsAffected">
            <summary>
                 Gets the number of rows changed, inserted, or deleted by execution of the
                 SQL statement.
            </summary>
            <returns>
                 The number of rows changed, inserted, or deleted. -1 for SELECT statements;
                 0 if no rows were affected or the statement failed.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.VisibleFieldCount">
            <summary>
                 Gets the number of fields in the DbDataReader that are
                 not hidden.
            </summary>
            <returns>
                 The number of fields that are not hidden.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.Item(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReader.Item(System.String)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="name">
                 The name of the column.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.Dispose(System.Boolean)">
             <summary>
             Dispose of all resources used by this datareader.
             </summary>
            <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.Close">
            <summary>
            Closes the datareader, potentially closing the connection as well if CommandBehavior.CloseConnection was specified.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetEnumerator">
            <summary>
            Enumerator support
            </summary>
            <returns>Returns a DbEnumerator object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetBoolean(System.Int32)">
            <summary>
            Retrieves the column as a boolean value
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>bool</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetByte(System.Int32)">
            <summary>
            Retrieves the column as a single byte value
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>byte</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Retrieves a column as an array of bytes (blob)
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <param name="fieldOffset">The zero-based index of where to begin reading the data</param>
            <param name="buffer">The buffer to write the bytes into</param>
            <param name="bufferoffset">The zero-based index of where to begin writing into the array</param>
            <param name="length">The number of bytes to retrieve</param>
            <returns>The actual number of bytes written into the array</returns>
            <remarks>
            To determine the number of bytes in the column, pass a null value for the buffer.  The total length will be returned.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetChar(System.Int32)">
            <summary>
            Returns the column as a single character
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>char</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Retrieves a column as an array of chars (blob)
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <param name="fieldoffset">The zero-based index of where to begin reading the data</param>
            <param name="buffer">The buffer to write the characters into</param>
            <param name="bufferoffset">The zero-based index of where to begin writing into the array</param>
            <param name="length">The number of bytes to retrieve</param>
            <returns>The actual number of characters written into the array</returns>
            <remarks>
            To determine the number of characters in the column, pass a null value for the buffer.  The total length will be returned.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Retrieves the name of the back-end datatype of the column
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetDateTime(System.Int32)">
            <summary>
            Retrieve the column as a date/time value
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetDecimal(System.Int32)">
            <summary>
            Retrieve the column as a decimal value
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>decimal</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetDouble(System.Int32)">
            <summary>
            Returns the column as a double
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>double</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetFieldType(System.Int32)">
            <summary>
            Returns the .NET type of a given column
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>Type</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetFloat(System.Int32)">
            <summary>
            Returns a column as a float value
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>float</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetGuid(System.Int32)">
            <summary>
            Returns the column as a Guid
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>Guid</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetInt16(System.Int32)">
            <summary>
            Returns the column as a short
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>Int16</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetInt32(System.Int32)">
            <summary>
            Retrieves the column as an int
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>Int32</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetInt64(System.Int32)">
            <summary>
            Retrieves the column as a long
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>Int64</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetName(System.Int32)">
            <summary>
            Retrieves the name of the column
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetOrdinal(System.String)">
            <summary>
            Retrieves the i of a column, given its name
            </summary>
            <param name="name">The name of the column to retrieve</param>
            <returns>The int i of the column</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetSchemaTable">
            <summary>
            Schema information in SQLite is difficult to map into .NET conventions, so a lot of work must be done
            to gather the necessary information so it can be represented in an ADO.NET manner.
            </summary>
            <returns>Returns a DataTable containing the schema information for the active SELECT statement being processed.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetString(System.Int32)">
            <summary>
            Retrieves the column as a string
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetValue(System.Int32)">
            <summary>
            Retrieves the column as an object corresponding to the underlying datatype of the column
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>object</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetValues(System.Object[])">
            <summary>
            Retrieves the values of multiple columns, up to the size of the supplied array
            </summary>
            <param name="values">The array to fill with values from the columns in the current resultset</param>
            <returns>The number of columns retrieved</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetValues">
            <summary>
            Returns a collection containing all the column names and values for the
            current row of data in the current resultset, if any.  If there is no
            current row or no current resultset, an exception may be thrown.
            </summary>
            <returns>
            The collection containing the column name and value information for the
            current row of data in the current resultset or null if this information
            cannot be obtained.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.IsDBNull(System.Int32)">
            <summary>
            Returns True if the specified column is null
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.NextResult">
            <summary>
            Moves to the next resultset in multiple row-returning SQL command.
            </summary>
            <returns>True if the command was successful and a new resultset is available, False otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.Read">
            <summary>
            Reads the next row from the resultset
            </summary>
            <returns>True if a new row was successfully loaded and is ready for processing</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataReader.GetDbDataReader(System.Int32)">
            <summary>
                 Returns a DbDataReader object for the requested column
                 ordinal that can be overridden with a provider-specific implementation.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A DbDataReader object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.Depth">
            <summary>
            Not implemented.  Returns 0
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.FieldCount">
            <summary>
            Returns the number of columns in the current resultset
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.StepCount">
            <summary>
            Returns the number of rows seen so far in the current result set.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.VisibleFieldCount">
            <summary>
            Returns the number of visible fields in the current resultset
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.HasRows">
            <summary>
            Returns True if the resultset has rows that can be fetched
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.IsClosed">
            <summary>
            Returns True if the data reader is closed
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.RecordsAffected">
            <summary>
            Retrieve the count of records affected by an update/insert command.  Only valid once the data reader is closed!
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.Item(System.String)">
            <summary>
            Indexer to retrieve data from a column given its name
            </summary>
            <param name="name">The name of the column to retrieve data for</param>
            <returns>The value contained in the column</returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.Item(System.Int32)">
            <summary>
            Indexer to retrieve data from a column given its i
            </summary>
            <param name="i">The index of the column to retrieve</param>
            <returns>The value contained in the column</returns>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteDataAdapter">
            <summary>
            SQLite implementation of DbDataAdapter.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter">
            <summary>
                 Aids implementation of the IDbDataAdapter interface. Inheritors
                 of DbDataAdapter implement a set of functions to provide
                 strong typing, but inherit most of the functionality needed to fully implement
                 a DataAdapter.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DataAdapter">
            <summary>
                 Represents a set of SQL commands and a database connection that are used
                 to fill the DataSet and update the data source.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDataAdapter">
            <summary>
                 Allows an object to implement a DataAdapter, and represents a set of methods
                 and mapping action-related properties used to fill and refresh a DataSet
                 and update a data source.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Adds or refreshes rows in the DataSet to match those in the data
                 source using the DataSet name, and creates a DataTable
                 named "Table".
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType)">
            <summary>
                 Adds a DataTable named "Table" to the specified DataSet
                 and configures the schema to match that in the data source based on the specified
                 SchemaType.
            </summary>
            <param name="dataSet">
                 The DataSet to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <returns>
                 An array of DataTable objects that contain schema information
                 returned from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataAdapter.GetFillParameters">
            <summary>
                 Gets the parameters set by the user when executing an SQL SELECT statement.
            </summary>
            <returns>
                 An array of IDataParameter objects that contains the parameters
                 set by the user.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified DataSet from a DataTable
                 named "Table".
            </summary>
            <param name="dataSet">
                 The DataSet used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataAdapter.MissingMappingAction">
            <summary>
                 Indicates or specifies whether unmapped source tables or columns are passed
                 with their source names in order to be filtered or to raise an error.
            </summary>
            <returns>
                 One of the MissingMappingAction values. The default is Passthrough.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value set is not one of the MissingMappingAction values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataAdapter.MissingSchemaAction">
            <summary>
                 Indicates or specifies whether missing source tables, columns, and their
                 relationships are added to the data set schema, ignored, or cause an error
                 to be raised.
            </summary>
            <returns>
                 One of the MissingSchemaAction values. The default is Add.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value set is not one of the MissingSchemaAction values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataAdapter.TableMappings">
            <summary>
                 Indicates how a source table is mapped to a data set table.
            </summary>
            <returns>
                 A collection that provides the master mapping between the returned records
                 and the DataSet. The default value is an empty collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.CreateTableMappings">
            <summary>
                 Creates a new DataTableMappingCollection.
            </summary>
            <returns>
                 A new DataTableMappingCollection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Adds or refreshes rows in the DataSet to match those in the data
                 source.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
                 Adds or refreshes rows in the DataTable to match those in the
                 data source using the DataTable name and the specified IDataReader.
            </summary>
            <param name="dataTable">
                 A DataTable to fill with records.
            </param>
            <param name="dataReader">
                 An instance of IDataReader.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable[],Crestron.SimplSharp.CrestronData.IDataReader,System.Int32,System.Int32)">
            <summary>
                 Adds or refreshes rows in a specified range in the collection of DataTable
                 objects to match those in the data source.
            </summary>
            <param name="dataTables">
                 A collection of DataTable objects to fill with records.
            </param>
            <param name="dataReader">
                 An instance of IDataReader.
            </param>
            <param name="startRecord">
                 An integer indicating the location of the starting record.
            </param>
            <param name="maxRecords">
                 An integer indicating the maximum number of records.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.String,Crestron.SimplSharp.CrestronData.IDataReader,System.Int32,System.Int32)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and DataTable
                 names.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records.
            </param>
            <param name="srcTable">
                 A string indicating the name of the source table.
            </param>
            <param name="dataReader">
                 An instance of IDataReader.
            </param>
            <param name="startRecord">
                 An integer indicating the location of the starting record.
            </param>
            <param name="maxRecords">
                 An integer indicating the maximum number of records.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType)">
            <summary>
                 Adds a DataTable to the specified DataSet and configures
                 the schema to match that in the data source based on the specified SchemaType.
            </summary>
            <param name="dataSet">
                 The DataSet to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <returns>
                 A DataTable object that contains schema information returned
                 from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.SchemaType,Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
                 Adds a DataTable to the specified DataSet.
            </summary>
            <param name="dataTable">
                 The DataTable to be filled from the IDataReader.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="dataReader">
                 The IDataReader to be used as the data source when filling the
                 DataTable.
            </param>
            <returns>
                 A DataTable object that contains schema information returned
                 from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType,System.String,Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
                 Adds a DataTable to the specified DataSet.
            </summary>
            <param name="dataSet">
                 The DataTable to be filled from the IDataReader.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <param name="dataReader">
                 The IDataReader to be used as the data source when filling the
                 DataTable.
            </param>
            <returns>
                 A reference to a collection of DataTable objects that were added
                 to the DataSet.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.GetFillParameters">
            <summary>
                 Gets the parameters set by the user when executing an SQL SELECT statement.
            </summary>
            <returns>
                 An array of IDataParameter objects that contains the parameters
                 set by the user.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.HasTableMappings">
            <summary>
                 Indicates whether a DataTableMappingCollection has been
                 created.
            </summary>
            <returns>
                 true if a DataTableMappingCollection has been created;
                 otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.OnFillError(Crestron.SimplSharp.CrestronData.FillErrorEventArgs)">
            <summary>
                 Invoked when an error occurs during a Fill.
            </summary>
            <param name="value">
                 A FillErrorEventArgs object.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.ResetFillLoadOption">
            <summary>
                 Resets DataAdapter.FillLoadOption to its default state
                 and causes DataAdapter.Fill(DataSet) to honor
                 DataAdapter.AcceptChangesDuringFill.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
            <summary>
                 Determines whether the DataAdapter.AcceptChangesDuringFill
                 property should be persisted.
            </summary>
            <returns>
                 true if the DataAdapter.AcceptChangesDuringFill property
                 is persisted; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.ShouldSerializeFillLoadOption">
            <summary>
                 Determines whether the DataAdapter.FillLoadOption property
                 should be persisted.
            </summary>
            <returns>
                 true if the DataAdapter.FillLoadOption property is persisted;
                 otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.ShouldSerializeTableMappings">
            <summary>
                 Determines whether one or more DataTableMapping objects
                 exist and they should be persisted.
            </summary>
            <returns>
                 true if one or more DataTableMapping objects exist; otherwise
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataAdapter.Update(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified DataSet from a DataTable
                 named "Table."
            </summary>
            <param name="dataSet">
                 The DataSet used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.AcceptChangesDuringFill">
            <summary>
                 Gets or sets a value indicating whether DataRow.AcceptChanges()
                 is called on a DataRow after it is added to the DataTable
                 during any of the Fill operations.
            </summary>
            <returns>
                 true if DataRow.AcceptChanges() is called on the DataRow;
                 otherwise false. The default is true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.AcceptChangesDuringUpdate">
            <summary>
                 Gets or sets whether DataRow.AcceptChanges() is called during
                 a DataAdapter.Update(DataSet).
            </summary>
            <returns>
                 true if DataRow.AcceptChanges() is called during an DataAdapter.Update(DataSet);
                 otherwise false. The default is true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.ContinueUpdateOnError">
            <summary>
                 Gets or sets a value that specifies whether to generate an exception when
                 an error is encountered during a row update.
            </summary>
            <returns>
                 true to continue the update without generating an exception; otherwise false.
                 The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.FillLoadOption">
            <summary>
                 Gets or sets the LoadOption that determines how the adapter fills
                 the DataTable from the DbDataReader.
            </summary>
            <returns>
                 A LoadOption value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.MissingMappingAction">
            <summary>
                 Determines the action to take when incoming data does not have a matching
                 table or column.
            </summary>
            <returns>
                 One of the MissingMappingAction values. The default is Passthrough.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value set is not one of the MissingMappingAction values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.MissingSchemaAction">
            <summary>
                 Determines the action to take when existing DataSet schema does
                 not match incoming data.
            </summary>
            <returns>
                 One of the MissingSchemaAction values. The default is Add.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value set is not one of the MissingSchemaAction values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.ReturnProviderSpecificTypes">
            <summary>
                 Gets or sets whether the Fill method should return provider-specific values
                 or common CLS-compliant values.
            </summary>
            <returns>
                 true if the Fill method should return provider-specific values; otherwise
                 false to return common CLS-compliant values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataAdapter.TableMappings">
            <summary>
                 Gets a collection that provides the master mapping between a source table
                 and a DataTable.
            </summary>
            <returns>
                 A collection that provides the master mapping between the returned records
                 and the DataSet. The default value is an empty collection.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.Common.DataAdapter.FillError">
            <summary>
                 Returned when an error occurs during a fill operation.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDbDataAdapter">
            <summary>
                 Represents a set of command-related properties that are used to fill the
                 DataSet and update a data source, and is implemented by .NET
                 Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataAdapter.DeleteCommand">
            <summary>
                 Gets or sets an SQL statement for deleting records from the data set.
            </summary>
            <returns>
                 An IDbCommand used during DbDataAdapter.Update(DataSet)
                 to delete records in the data source for deleted rows in the data set.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataAdapter.InsertCommand">
            <summary>
                 Gets or sets an SQL statement used to insert new records into the data source.
            </summary>
            <returns>
                 An IDbCommand used during DbDataAdapter.Update(DataSet)
                 to insert records in the data source for new rows in the data set.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataAdapter.SelectCommand">
            <summary>
                 Gets or sets an SQL statement used to select records in the data source.
            </summary>
            <returns>
                 An IDbCommand that is used during DbDataAdapter.Update(DataSet)
                 to select records from data source for placement in the data set.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataAdapter.UpdateCommand">
            <summary>
                 Gets or sets an SQL statement used to update records in the data source.
            </summary>
            <returns>
                 An IDbCommand used during DbDataAdapter.Update(DataSet)
                 to update records in the data source for modified rows in the data set.
            </returns>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.DefaultSourceTableName">
            <summary>
                 The default name used by the DataAdapter object for table
                 mappings.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.#ctor">
            <summary>
                 Initializes a new instance of a DataAdapter class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.AddToBatch(Crestron.SimplSharp.CrestronData.IDbCommand)">
            <summary>
                 Adds a IDbCommand to the current batch.
            </summary>
            <param name="command">
                 The IDbCommand to add to the batch.
            </param>
            <returns>
                 The number of commands in the batch before adding the IDbCommand.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.ClearBatch">
            <summary>
                 Removes all IDbCommand objects from the batch.
            </summary>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.CreateRowUpdatedEvent(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.StatementType,Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Initializes a new instance of the RowUpdatedEventArgs
                 class.
            </summary>
            <param name="dataRow">
                 The DataRow used to update the data source.
            </param>
            <param name="command">
                 The IDbCommand executed during the IDataAdapter.Update(DataSet).
            </param>
            <param name="statementType">
                 Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.
            </param>
            <param name="tableMapping">
                 A DataTableMapping object.
            </param>
            <returns>
                 A new instance of the RowUpdatedEventArgs class.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.CreateRowUpdatingEvent(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.StatementType,Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Initializes a new instance of the RowUpdatingEventArgs
                 class.
            </summary>
            <param name="dataRow">
                 The DataRow that updates the data source.
            </param>
            <param name="command">
                 The IDbCommand to execute during the IDataAdapter.Update(DataSet).
            </param>
            <param name="statementType">
                 Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.
            </param>
            <param name="tableMapping">
                 A DataTableMapping object.
            </param>
            <returns>
                 A new instance of the RowUpdatingEventArgs class.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.ExecuteBatch">
            <summary>
                 Executes the current batch.
            </summary>
            <returns>
                 The return value from the last command in the batch.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Adds or refreshes rows in the DataSet.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataTable name.
            </summary>
            <param name="dataTable">
                 The name of the DataTable to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.String)">
            <summary>
                 Adds or refreshes rows in the DataSet to match those in the data
                 source using the DataSet and DataTable names.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.SystemException">
                 The source table is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds or refreshes rows in a DataTable to match those in the data
                 source using the specified DataTable, IDbCommand
                 and CommandBehavior.
            </summary>
            <param name="dataTable">
                 A DataTable to fill with records and, if necessary, schema.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(System.Int32,System.Int32,Crestron.SimplSharp.CrestronData.DataTable[])">
            <summary>
                 Adds or refreshes rows in a DataTable to match those in the data
                 source starting at the specified record and retrieving up to the specified
                 maximum number of records.
            </summary>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="dataTables">
                 The DataTable objects to fill from the data source.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This value does not include rows affected by statements that do not return
                 rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.Int32,System.Int32,System.String)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and DataTable
                 names.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.SystemException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.-or- The connection is invalid.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The connection could not be found.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The startRecord parameter is less than 0.-or- The maxRecords parameter is
                 less than 0.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and DataTable
                 names.
            </summary>
            <param name="dataTables">
                 The DataTable objects to fill from the data source.
            </param>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="command">
                 The IDbCommand executed to fill the DataTable objects.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 The number of rows added to or refreshed in the data tables.
            </returns>
            <exception cref="T:System.SystemException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.-or- The connection is invalid.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The connection could not be found.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The startRecord parameter is less than 0.-or- The maxRecords parameter is
                 less than 0.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.Int32,System.Int32,System.String,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and source table
                 names, command string, and command behavior.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The startRecord parameter is less than 0.-or- The maxRecords parameter is
                 less than 0.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType)">
            <summary>
                 Adds a DataTable named "Table" to the specified DataSet
                 and configures the schema to match that in the data source based on the specified
                 SchemaType.
            </summary>
            <param name="dataSet">
                 A DataSet to insert the schema in.
            </param>
            <param name="schemaType">
                 One of the SchemaType values that specify how to insert the schema.
            </param>
            <returns>
                 A reference to a collection of DataTable objects that were added
                 to the DataSet.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.SchemaType)">
            <summary>
                 Configures the schema of the specified DataTable based on the
                 specified SchemaType.
            </summary>
            <param name="dataTable">
                 The DataTable to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <returns>
                 A DataTable that contains schema information returned from the
                 data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType,System.String)">
            <summary>
                 Adds a DataTable to the specified DataSet and configures
                 the schema to match that in the data source based upon the specified SchemaType
                 and DataTable.
            </summary>
            <param name="dataSet">
                 A DataSet to insert the schema in.
            </param>
            <param name="schemaType">
                 One of the SchemaType values that specify how to insert the schema.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 A reference to a collection of DataTable objects that were added
                 to the DataSet.
            </returns>
            <exception cref="T:System.ArgumentException">
                 A source table from which to get the schema could not be found.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.SchemaType,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Configures the schema of the specified DataTable based on the
                 specified SchemaType, command string, and CommandBehavior
                 values.
            </summary>
            <param name="dataTable">
                 The DataTable to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 A of DataTable object that contains schema information returned
                 from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType,Crestron.SimplSharp.CrestronData.IDbCommand,System.String,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds a DataTable to the specified DataSet and configures
                 the schema to match that in the data source based on the specified SchemaType.
            </summary>
            <param name="dataSet">
                 The DataSet to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 An array of DataTable objects that contain schema information
                 returned from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
            <summary>
                 Returns a IDataParameter from one of the commands in the current
                 batch.
            </summary>
            <param name="commandIdentifier">
                 The index of the command to retrieve the parameter from.
            </param>
            <param name="parameterIndex">
                 The index of the parameter within the command.
            </param>
            <returns>
                 The IDataParameter specified.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
            <summary>
                 Returns information about an individual update attempt within a larger batched
                 update.
            </summary>
            <param name="commandIdentifier">
                 The zero-based column ordinal of the individual command within the batch.
            </param>
            <param name="recordsAffected">
                 The number of rows affected in the data store by the specified command within
                 the batch.
            </param>
            <param name="error">
                 An System.Exception thrown during execution of the specified command. Returns
                 null (Nothing in Visual Basic) if no exception is thrown.
            </param>
            <returns>True is successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.GetFillParameters">
            <summary>
                 Gets the parameters set by the user when executing an SQL SELECT statement.
            </summary>
            <returns>
                 An array of IDataParameter objects that contains the parameters
                 set by the user.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.InitializeBatching">
            <summary>
                 Initializes batching for the DbDataAdapter.
            </summary>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.OnRowUpdated(Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs)">
            <summary>
                 Raises the RowUpdated event of a .NET Framework data provider.
            </summary>
            <param name="value">
                 A RowUpdatedEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.OnRowUpdating(Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs)">
            <summary>
                 Raises the RowUpdating event of a .NET Framework data provider.
            </summary>
            <param name="value">
                 An RowUpdatingEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.TerminateBatching">
            <summary>
                 Ends batching for the DbDataAdapter.
            </summary>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataRow[])">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified array of DataRow objects.
            </summary>
            <param name="dataRows">
                 An array of DataRow objects used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.SystemException">
                 No DataRow exists to update.-or- No DataTable exists
                 to update.-or- No DataSet exists to use as a source.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified DataSet.
            </summary>
            <param name="dataSet">
                 The DataSet used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified DataTable.
            </summary>
            <param name="dataTable">
                 The DataTable used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataTable.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.SystemException">
                 No DataRow exists to update.-or- No DataTable exists
                 to update.-or- No DataSet exists to use as a source.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataRow[],Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified array of DataRow objects.
            </summary>
            <param name="dataRows">
                 An array of DataRow objects used to update the data source.
            </param>
            <param name="tableMapping">
                 The IDataAdapter.TableMappings collection to use.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.SystemException">
                 No DataRow exists to update.-or- No DataTable exists
                 to update.-or- No DataSet exists to use as a source.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataSet,System.String)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the DataSet with the specified DataTable
                 name.
            </summary>
            <param name="dataSet">
                 The DataSet to use to update the data source.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.DeleteCommand">
            <summary>
                 Gets or sets a command for deleting records from the data set.
            </summary>
            <returns>
                 An IDbCommand used during IDataAdapter.Update(DataSet)
                 to delete records in the data source for deleted rows in the data set.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.FillCommandBehavior">
            <summary>
                 Gets or sets the behavior of the command used to fill the data adapter.
            </summary>
            <returns>
                 The CommandBehavior of the command used to fill the data adapter.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.InsertCommand">
            <summary>
                 Gets or sets a command used to insert new records into the data source.
            </summary>
            <returns>
                 A IDbCommand used during IDataAdapter.Update(DataSet)
                 to insert records in the data source for new rows in the data set.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.SelectCommand">
            <summary>
                 Gets or sets a command used to select records in the data source.
            </summary>
            <returns>
                 A IDbCommand that is used during IDataAdapter.Update(DataSet)
                 to select records from data source for placement in the data set.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.UpdateBatchSize">
            <summary>
                 Gets or sets a value that enables or disables batch processing support, and
                 specifies the number of commands that can be executed in a batch.
            </summary>
            <returns>
                 The number of rows to process per batch. Value isEffect0There is no limit
                 on the batch size.1Disables batch updating.> 1Changes are sent using batches
                 of DbDataAdapter.UpdateBatchSize operations at a time.When
                 setting this to a value other than 1 ,all the commands associated with the
                 DbDataAdapter must have their IDbCommand.UpdatedRowSource
                 property set to None or OutputParameters. An exception will be thrown otherwise.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataAdapter.UpdateCommand">
            <summary>
                 Gets or sets a command used to update records in the data source.
            </summary>
            <returns>
                 A IDbCommand used during IDataAdapter.Update(DataSet)
                 to update records in the data source for modified rows in the data set.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.#ctor">
            <overloads>
            This class is just a shell around the DbDataAdapter.  Nothing from
            DbDataAdapter is overridden here, just a few constructors are defined.
            </overloads>
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.#ctor(Crestron.SimplSharp.SQLite.SQLiteCommand)">
            <summary>
            Constructs a data adapter using the specified select command.
            </summary>
            <param name="cmd">
            The select command to associate with the adapter.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.#ctor(System.String,Crestron.SimplSharp.SQLite.SQLiteConnection)">
            <summary>
            Constructs a data adapter with the supplied select command text and
            associated with the specified connection.
            </summary>
            <param name="commandText">
            The select command text to associate with the data adapter.
            </param>
            <param name="connection">
            The connection to associate with the select command.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.#ctor(System.String,System.String)">
            <summary>
            Constructs a data adapter with the specified select command text,
            and using the specified database connection string.
            </summary>
            <param name="commandText">
            The select command text to use to construct a select command.
            </param>
            <param name="connectionString">
            A connection string suitable for passing to a new SQLiteConnection,
            which is associated with the select command.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs a data adapter with the specified select command text,
            and using the specified database connection string.
            </summary>
            <param name="commandText">
            The select command text to use to construct a select command.
            </param>
            <param name="connectionString">
            A connection string suitable for passing to a new SQLiteConnection,
            which is associated with the select command.
            </param>
            <param name="parseViaFramework">
            Non-zero to parse the connection string using the built-in (i.e.
            framework provided) parser when opening the connection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Dispose(System.Boolean)">
            <summary>
             Releases the unmanaged resources used by the class and optionally releases the managed resources.
            </summary>
            <param name="disposing"> true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType)">
            <summary>
                 Adds a DataTable to the specified DataSet and configures
                 the schema to match that in the data source based on the specified SchemaType.
            </summary>
            <param name="dataSet">
                 The DataSet to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <returns>
                 A DataTable object that contains schema information returned
                 from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ResetFillLoadOption">
            <summary>
                 Resets Common.DataAdapter.FillLoadOption to its default state
                 and causes Common.DataAdapter.Fill(DataSet) to honor
                 Common.DataAdapter.AcceptChangesDuringFill.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ShouldSerializeAcceptChangesDuringFill">
            <summary>
                 Determines whether the Common.DataAdapter.AcceptChangesDuringFill
                 property should be persisted.
            </summary>
            <returns>
                 true if the Common.DataAdapter.AcceptChangesDuringFill property
                 is persisted; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ShouldSerializeFillLoadOption">
            <summary>
                 Determines whether the Common.DataAdapter.FillLoadOption property
                 should be persisted.
            </summary>
            <returns>
                 true if the Common.DataAdapter.FillLoadOption property is persisted;
                 otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Adds or refreshes rows in the DataSet to match those in the data
                 source.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataTable name.
            </summary>
            <param name="dataTable">
                 The name of the DataTable to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.String)">
            <summary>
                 Adds or refreshes rows in the DataSet to match those in the data
                 source using the DataSet and DataTable names.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.SystemException">
                 The source table is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(System.Int32,System.Int32,Crestron.SimplSharp.CrestronData.DataTable[])">
            <summary>
                 Adds or refreshes rows in a DataTable to match those in the data
                 source starting at the specified record and retrieving up to the specified
                 maximum number of records.
            </summary>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="dataTables">
                 The DataTable objects to fill from the data source.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This value does not include rows affected by statements that do not return
                 rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.Int32,System.Int32,System.String)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and DataTable
                 names.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.SystemException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.-or- The connection is invalid.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The connection could not be found.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The startRecord parameter is less than 0.-or- The maxRecords parameter is
                 less than 0.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.SchemaType)">
            <summary>
                 Configures the schema of the specified DataTable based on the
                 specified SchemaType.
            </summary>
            <param name="dataTable">
                 The DataTable to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <returns>
                 A DataTable that contains schema information returned from the
                 data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType,System.String)">
            <summary>
                 Adds a DataTable to the specified DataSet and configures
                 the schema to match that in the data source based upon the specified SchemaType
                 and DataTable.
            </summary>
            <param name="dataSet">
                 A DataSet to insert the schema in.
            </param>
            <param name="schemaType">
                 One of the SchemaType values that specify how to insert the schema.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 A reference to a collection of DataTable objects that were added
                 to the DataSet.
            </returns>
            <exception cref="T:System.ArgumentException">
                 A source table from which to get the schema could not be found.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.GetFillParameters">
            <summary>
                 Gets the parameters set by the user when executing an SQL SELECT statement.
            </summary>
            <returns>
                 An array of IDataParameter objects that contains the parameters
                 set by the user.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataRow[])">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified array of DataRow objects.
            </summary>
            <param name="dataRows">
                 An array of DataRow objects used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.SystemException">
                 No DataRow exists to update.-or- No DataTable exists
                 to update.-or- No DataSet exists to use as a source.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified DataSet.
            </summary>
            <param name="dataSet">
                 The DataSet used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified DataTable.
            </summary>
            <param name="dataTable">
                 The DataTable used to update the data source.
            </param>
            <returns>
                 The number of rows successfully updated from the DataTable.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.SystemException">
                 No DataRow exists to update.-or- No DataTable exists
                 to update.-or- No DataSet exists to use as a source.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataSet,System.String)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the DataSet with the specified DataTable
                 name.
            </summary>
            <param name="dataSet">
                 The DataSet to use to update the data source.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.CreateTableMappings">
            <summary>
                 Creates a new DataTableMappingCollection.
            </summary>
            <returns>
                 A new DataTableMappingCollection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.String,Crestron.SimplSharp.CrestronData.IDataReader,System.Int32,System.Int32)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and DataTable
                 names.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records.
            </param>
            <param name="srcTable">
                 A string indicating the name of the source table.
            </param>
            <param name="dataReader">
                 An instance of IDataReader.
            </param>
            <param name="startRecord">
                 An integer indicating the location of the starting record.
            </param>
            <param name="maxRecords">
                 An integer indicating the maximum number of records.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
                 Adds or refreshes rows in the DataTable to match those in the
                 data source using the DataTable name and the specified IDataReader.
            </summary>
            <param name="dataTable">
                 A DataTable to fill with records.
            </param>
            <param name="dataReader">
                 An instance of IDataReader.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable[],Crestron.SimplSharp.CrestronData.IDataReader,System.Int32,System.Int32)">
            <summary>
                 Adds or refreshes rows in a specified range in the collection of DataTable
                 objects to match those in the data source.
            </summary>
            <param name="dataTables">
                 A collection of DataTable objects to fill with records.
            </param>
            <param name="dataReader">
                 An instance of IDataReader.
            </param>
            <param name="startRecord">
                 An integer indicating the location of the starting record.
            </param>
            <param name="maxRecords">
                 An integer indicating the maximum number of records.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.SchemaType,Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
                 Adds a DataTable to the specified DataSet.
            </summary>
            <param name="dataTable">
                 The DataTable to be filled from the IDataReader.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="dataReader">
                 The IDataReader to be used as the data source when filling the
                 DataTable.
            </param>
            <returns>
                 A DataTable object that contains schema information returned
                 from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType,System.String,Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
                 Adds a DataTable to the specified DataSet.
            </summary>
            <param name="dataSet">
                 The DataTable to be filled from the IDataReader.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <param name="dataReader">
                 The IDataReader to be used as the data source when filling the
                 DataTable.
            </param>
            <returns>
                 A reference to a collection of DataTable objects that were added
                 to the DataSet.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.OnFillError(Crestron.SimplSharp.CrestronData.FillErrorEventArgs)">
            <summary>
                 Invoked when an error occurs during a Fill.
            </summary>
            <param name="value">
                 A FillErrorEventArgs object.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ShouldSerializeTableMappings">
            <summary>
                 Determines whether one or more DataTableMapping objects
                 exist and they should be persisted.
            </summary>
            <returns>
                 true if one or more DataTableMapping objects exist; otherwise
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.AddToBatch(Crestron.SimplSharp.CrestronData.IDbCommand)">
            <summary>
                 Adds a IDbCommand to the current batch.
            </summary>
            <param name="command">
                 The IDbCommand to add to the batch.
            </param>
            <returns>
                 The number of commands in the batch before adding the IDbCommand.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ClearBatch">
            <summary>
                 Removes all IDbCommand objects from the batch.
            </summary>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.CreateRowUpdatedEvent(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.StatementType,Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Initializes a new instance of the RowUpdatedEventArgs
                 class.
            </summary>
            <param name="dataRow">
                 The DataRow used to update the data source.
            </param>
            <param name="command">
                 The IDbCommand executed during the IDataAdapter.Update(DataSet).
            </param>
            <param name="statementType">
                 Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.
            </param>
            <param name="tableMapping">
                 A DataTableMapping object.
            </param>
            <returns>
                 A new instance of the RowUpdatedEventArgs class.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.CreateRowUpdatingEvent(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.StatementType,Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Initializes a new instance of the RowUpdatingEventArgs
                 class.
            </summary>
            <param name="dataRow">
                 The DataRow that updates the data source.
            </param>
            <param name="command">
                 The IDbCommand to execute during the IDataAdapter.Update(DataSet).
            </param>
            <param name="statementType">
                 Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.
            </param>
            <param name="tableMapping">
                 A DataTableMapping object.
            </param>
            <returns>
                 A new instance of the RowUpdatingEventArgs class.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ExecuteBatch">
            <summary>
                 Executes the current batch.
            </summary>
            <returns>
                 The return value from the last command in the batch.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataSet,System.Int32,System.Int32,System.String,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and source table
                 names, command string, and command behavior.
            </summary>
            <param name="dataSet">
                 A DataSet to fill with records and, if necessary, schema.
            </param>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataSet.
                 This does not include rows affected by statements that do not return rows.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The startRecord parameter is less than 0.-or- The maxRecords parameter is
                 less than 0.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds or refreshes rows in a specified range in the DataSet to
                 match those in the data source using the DataSet and DataTable
                 names.
            </summary>
            <param name="dataTables">
                 The DataTable objects to fill from the data source.
            </param>
            <param name="startRecord">
                 The zero-based record number to start with.
            </param>
            <param name="maxRecords">
                 The maximum number of records to retrieve.
            </param>
            <param name="command">
                 The IDbCommand executed to fill the DataTable objects.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 The number of rows added to or refreshed in the data tables.
            </returns>
            <exception cref="T:System.SystemException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.-or- The connection is invalid.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The connection could not be found.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The startRecord parameter is less than 0.-or- The maxRecords parameter is
                 less than 0.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Fill(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds or refreshes rows in a DataTable to match those in the data
                 source using the specified DataTable, IDbCommand
                 and CommandBehavior.
            </summary>
            <param name="dataTable">
                 A DataTable to fill with records and, if necessary, schema.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 The number of rows successfully added to or refreshed in the DataTable.
                 This does not include rows affected by statements that do not return rows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.HasTableMappings">
            <summary>
                 Indicates whether a DataTableMappingCollection has been
                 created.
            </summary>
            <returns>
                 true if a DataTableMappingCollection has been created;
                 otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.SchemaType,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Configures the schema of the specified DataTable based on the
                 specified SchemaType, command string, and CommandBehavior
                 values.
            </summary>
            <param name="dataTable">
                 The DataTable to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 A of DataTable object that contains schema information returned
                 from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillSchema(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.SchemaType,Crestron.SimplSharp.CrestronData.IDbCommand,System.String,Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Adds a DataTable to the specified DataSet and configures
                 the schema to match that in the data source based on the specified SchemaType.
            </summary>
            <param name="dataSet">
                 The DataSet to be filled with the schema from the data source.
            </param>
            <param name="schemaType">
                 One of the SchemaType values.
            </param>
            <param name="command">
                 The SQL SELECT statement used to retrieve rows from the data source.
            </param>
            <param name="srcTable">
                 The name of the source table to use for table mapping.
            </param>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 An array of DataTable objects that contain schema information
                 returned from the data source.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
            <summary>
                 Returns a IDataParameter from one of the commands in the current
                 batch.
            </summary>
            <param name="commandIdentifier">
                 The index of the command to retrieve the parameter from.
            </param>
            <param name="parameterIndex">
                 The index of the parameter within the command.
            </param>
            <returns>
                 The IDataParameter specified.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
            <summary>
                 Returns information about an individual update attempt within a larger batched
                 update.
            </summary>
            <param name="commandIdentifier">
                 The zero-based column ordinal of the individual command within the batch.
            </param>
            <param name="recordsAffected">
                 The number of rows affected in the data store by the specified command within
                 the batch.
            </param>
            <param name="error">
                 An System.Exception thrown during execution of the specified command. Returns
                 null (Nothing in Visual Basic) if no exception is thrown.
            </param>
            <returns>True is successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.InitializeBatching">
            <summary>
                 Initializes batching for the DbDataAdapter.
            </summary>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.OnRowUpdated(Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs)">
            <summary>
                 Raises the RowUpdated event of a .NET Framework data provider.
            </summary>
            <param name="value">
                 A RowUpdatedEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.OnRowUpdating(Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs)">
            <summary>
                 Raises the RowUpdating event of a .NET Framework data provider.
            </summary>
            <param name="value">
                 An RowUpdatingEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.TerminateBatching">
            <summary>
                 Ends batching for the DbDataAdapter.
            </summary>
            <exception cref="T:System.NotSupportedException">
                 The adapter does not support batches.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.Update(Crestron.SimplSharp.CrestronData.DataRow[],Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Calls the respective INSERT, UPDATE, or DELETE statements for each inserted,
                 updated, or deleted row in the specified array of DataRow objects.
            </summary>
            <param name="dataRows">
                 An array of DataRow objects used to update the data source.
            </param>
            <param name="tableMapping">
                 The IDataAdapter.TableMappings collection to use.
            </param>
            <returns>
                 The number of rows successfully updated from the DataSet.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The DataSet is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The source table is invalid.
            </exception>
            <exception cref="T:System.SystemException">
                 No DataRow exists to update.-or- No DataTable exists
                 to update.-or- No DataSet exists to use as a source.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
                 An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in
                 zero records affected.
            </exception>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.RowUpdating">
            <summary>
            Row updating event handler
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.RowUpdated">
            <summary>
            Row updated event handler
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.SelectCommand">
            <summary>
            Gets/sets the select command for this DataAdapter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.InsertCommand">
            <summary>
            Gets/sets the insert command for this DataAdapter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.UpdateCommand">
            <summary>
            Gets/sets the update command for this DataAdapter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.DeleteCommand">
            <summary>
            Gets/sets the delete command for this DataAdapter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.AcceptChangesDuringFill">
            <summary>
                 Gets or sets a value indicating whether DataRow.AcceptChanges()
                 is called on a DataRow after it is added to the DataTable
                 during any of the Fill operations.
            </summary>
            <returns>
                 true if DataRow.AcceptChanges() is called on the DataRow;
                 otherwise false. The default is true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.AcceptChangesDuringUpdate">
            <summary>
                 Gets or sets whether DataRow.AcceptChanges() is called during
                 a Common.DataAdapter.Update(DataSet).
            </summary>
            <returns>
                 true if DataRow.AcceptChanges() is called during an Common.DataAdapter.Update(DataSet);
                 otherwise false. The default is true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ContinueUpdateOnError">
            <summary>
                 Gets or sets a value that specifies whether to generate an exception when
                 an error is encountered during a row update.
            </summary>
            <returns>
                 true to continue the update without generating an exception; otherwise false.
                 The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillLoadOption">
            <summary>
                 Gets or sets the LoadOption that determines how the adapter fills
                 the DataTable from the Common.DbDataReader.
            </summary>
            <returns>
                 A LoadOption value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.MissingMappingAction">
            <summary>
                 Determines the action to take when incoming data does not have a matching
                 table or column.
            </summary>
            <returns>
                 One of the MissingMappingAction values. The default is Passthrough.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value set is not one of the MissingMappingAction values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.MissingSchemaAction">
            <summary>
                 Determines the action to take when existing DataSet schema does
                 not match incoming data.
            </summary>
            <returns>
                 One of the MissingSchemaAction values. The default is Add.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value set is not one of the MissingSchemaAction values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.ReturnProviderSpecificTypes">
            <summary>
                 Gets or sets whether the Fill method should return provider-specific values
                 or common CLS-compliant values.
            </summary>
            <returns>
                 true if the Fill method should return provider-specific values; otherwise
                 false to return common CLS-compliant values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.TableMappings">
            <summary>
                 Gets a collection that provides the master mapping between a source table
                 and a DataTable.
            </summary>
            <returns>
                 A collection that provides the master mapping between the returned records
                 and the DataSet. The default value is an empty collection.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.SQLite.SQLiteDataAdapter.FillError">
            <summary>
                 Returned when an error occurs during a fill operation.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteTransaction">
            <summary>
            SQLite implementation of DbTransaction.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbTransaction">
            <summary>
                 The base class for a transaction.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDbTransaction">
            <summary>
                 Represents a transaction to be performed at a data source, and is implemented
                 by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbTransaction.Commit">
            <summary>
                 Commits the database transaction.
            </summary>
            <exception cref="T:System.Exception">
                 An error occurred while trying to commit the transaction.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The transaction has already been committed or rolled back.-or- The connection
                 is broken.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbTransaction.Rollback">
            <summary>
                 Rolls back a transaction from a pending state.
            </summary>
            <exception cref="T:System.Exception">
                 An error occurred while trying to commit the transaction.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The transaction has already been committed or rolled back.-or- The connection
                 is broken.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbTransaction.InnerObject">
            <summary>
                 Internal object. Do not use!
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbTransaction.Connection">
            <summary>
                 Specifies the Connection object to associate with the transaction.
            </summary>
            <returns>
                 The Connection object to associate with the transaction.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbTransaction.IsolationLevel">
            <summary>
                 Specifies the IsolationLevel for this transaction.
            </summary>
            <returns>
                 The IsolationLevel for this transaction. The default is ReadCommitted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbTransaction.#ctor">
            <summary>
                 Initializes a new DbTransaction object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbTransaction.Commit">
            <summary>
                 Commits the database transaction.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbTransaction.Dispose">
            <summary>
                 Performs application-defined tasks associated with freeing, releasing, or
                 resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbTransaction.Dispose(System.Boolean)">
            <summary>
                 Releases the unmanaged resources used by the DbTransaction
                 and optionally releases the managed resources.
            </summary>
            <param name="disposing">
                 If true, this method releases all resources held by any managed objects that
                 this DbTransaction references.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbTransaction.Rollback">
            <summary>
                 Rolls back a transaction from a pending state.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbTransaction.Connection">
            <summary>
                 Specifies the DbConnection object associated with the
                 transaction.
            </summary>
            <returns>
                 The DbConnection object associated with the transaction.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbTransaction.DbConnection">
            <summary>
                 Specifies the DbConnection object associated with the
                 transaction.
            </summary>
            <returns>
                 The DbConnection object associated with the transaction.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbTransaction.IsolationLevel">
            <summary>
                 Specifies the IsolationLevel for this transaction.
            </summary>
            <returns>
                 The IsolationLevel for this transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteTransaction.Dispose(System.Boolean)">
            <summary>
            Disposes the transaction.  If it is currently active, any changes are rolled back.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteTransaction.Commit">
            <summary>
            Commits the current transaction.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteTransaction.Rollback">
            <summary>
            Rolls back the active transaction.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteTransaction.Connection">
            <summary>
            Returns the underlying connection to which this transaction applies.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteTransaction.IsolationLevel">
            <summary>
            Gets the isolation level of the transaction.  SQLite only supports Serializable transactions.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteTransaction.DbConnection">
            <summary>
                 Specifies the DbConnection object associated with the
                 transaction.
            </summary>
            <returns>
                 The DbConnection object associated with the transaction.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteParameter">
            <summary>
            SQLite implementation of DbParameter.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbParameter">
            <summary>
                 Represents a parameter to a DbCommand and optionally,
                 its mapping to a DataSet column.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDbDataParameter">
            <summary>
                 Used by the Visual Basic .NET Data Designers to represent a parameter to
                 a Command object, and optionally, its mapping to DataSet columns.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDataParameter">
            <summary>
                 Represents a parameter to a Command object, and optionally, its mapping to
                 DataSet columns; and is implemented by .NET Framework data providers
                 that access data sources.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameter.DbType">
            <summary>
                 Gets or sets the DbType of the parameter.
            </summary>
            <returns>
                 One of the DbType values. The default is DbType.String.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The property was not set to a valid DbType.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameter.Direction">
            <summary>
                 Gets or sets a value indicating whether the parameter is input-only, output-only,
                 bidirectional, or a stored procedure return value parameter.
            </summary>
            <returns>
                 One of the ParameterDirection values. The default is Input.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property was not set to one of the valid ParameterDirection
                 values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameter.IsNullable">
            <summary>
                 Gets a value indicating whether the parameter accepts null values.
            </summary>
            <returns>
                 true if null values are accepted; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameter.ParameterName">
            <summary>
                 Gets or sets the name of the IDataParameter.
            </summary>
            <returns>
                 The name of the IDataParameter. The default is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameter.SourceColumn">
            <summary>
                 Gets or sets the name of the source column that is mapped to the DataSet
                 and used for loading or returning the IDataParameter.Value.
            </summary>
            <returns>
                 The name of the source column that is mapped to the DataSet.
                 The default is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameter.SourceVersion">
            <summary>
                 Gets or sets the DataRowVersion to use when loading IDataParameter.Value.
            </summary>
            <returns>
                 One of the DataRowVersion values. The default is Current.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property was not set one of the DataRowVersion values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameter.Value">
            <summary>
                 Gets or sets the value of the parameter.
            </summary>
            <returns>
                 An System.Object that is the value of the parameter. The default value is
                 null.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameter.InnerObject">
            <summary>
                 Internal object. Do not use!
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameter.Precision">
            <summary>
                 Indicates the precision of numeric parameters.
            </summary>
            <returns>
                 The maximum number of digits used to represent the Value property of a data
                 provider Parameter object. The default value is 0, which indicates that a
                 data provider sets the precision for Value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameter.Scale">
            <summary>
                 Indicates the scale of numeric parameters.
            </summary>
            <returns>
                 The number of decimal places to which OleDb.OleDbParameter.Value
                 is resolved. The default is 0.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameter.Size">
            <summary>
                 The size of the parameter.
            </summary>
            <returns>
                 The maximum size, in bytes, of the data within the column. The default value
                 is inferred from the the parameter value.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameter.#ctor">
            <summary>
                 Initializes a new instance of the DbParameter class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameter.ResetDbType">
            <summary>
                 Resets the DbType property to its original settings.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.DbType">
            <summary>
                 Gets or sets the DbType of the parameter.
            </summary>
            <returns>
                 One of the DbType values. The default is DbType.String.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property is not set to a valid DbType.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.Direction">
            <summary>
                 Gets or sets a value that indicates whether the parameter is input-only,
                 output-only, bidirectional, or a stored procedure return value parameter.
            </summary>
            <returns>
                 One of the ParameterDirection values. The default is Input.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property is not set to one of the valid ParameterDirection
                 values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.IsNullable">
            <summary>
                 Gets or sets a value that indicates whether the parameter accepts null values.
            </summary>
            <returns>
                 true if null values are accepted; otherwise false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.ParameterName">
            <summary>
                 Gets or sets the name of the DbParameter.
            </summary>
            <returns>
                 The name of the DbParameter. The default is an empty string
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.Size">
            <summary>
                 Gets or sets the maximum size, in bytes, of the data within the column.
            </summary>
            <returns>
                 The maximum size, in bytes, of the data within the column. The default value
                 is inferred from the parameter value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.SourceColumn">
            <summary>
                 Gets or sets the name of the source column mapped to the DataSet
                 and used for loading or returning the DbParameter.Value.
            </summary>
            <returns>
                 The name of the source column mapped to the DataSet. The default
                 is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.SourceColumnNullMapping">
            <summary>
                 Sets or gets a value which indicates whether the source column is nullable.
                 This allows DbCommandBuilder to correctly generate Update
                 statements for nullable columns.
            </summary>
            <returns>
                 true if the source column is nullable; false if it is not.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.SourceVersion">
            <summary>
                 Gets or sets the DataRowVersion to use when you load DbParameter.Value.
            </summary>
            <returns>
                 One of the DataRowVersion values. The default is Current.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property is not set to one of the DataRowVersion values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameter.Value">
            <summary>
                 Gets or sets the value of the parameter.
            </summary>
            <returns>
                 An System.Object that is the value of the parameter. The default value is
                 null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String)">
            <summary>
            Constructs a named parameter given the specified parameter name
            </summary>
            <param name="parameterName">The parameter name</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,System.Object)">
            <summary>
            Constructs a named parameter given the specified parameter name and initial value
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="value">The initial value of the parameter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType)">
            <summary>
            Constructs a named parameter of the specified type
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="dbType">The datatype of the parameter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType,System.String)">
            <summary>
            Constructs a named parameter of the specified type and source column reference
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="dbType">The data type</param>
            <param name="sourceColumn">The source column</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType,System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
            Constructs a named parameter of the specified type, source column and row version
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="dbType">The data type</param>
            <param name="sourceColumn">The source column</param>
            <param name="rowVersion">The row version information</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(Crestron.SimplSharp.CrestronData.DbType)">
            <summary>
            Constructs an unnamed parameter of the specified data type
            </summary>
            <param name="dbType">The datatype of the parameter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(Crestron.SimplSharp.CrestronData.DbType,System.Object)">
            <summary>
            Constructs an unnamed parameter of the specified data type and sets the initial value
            </summary>
            <param name="dbType">The datatype of the parameter</param>
            <param name="value">The initial value of the parameter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(Crestron.SimplSharp.CrestronData.DbType,System.String)">
            <summary>
            Constructs an unnamed parameter of the specified data type and source column
            </summary>
            <param name="dbType">The datatype of the parameter</param>
            <param name="sourceColumn">The source column</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(Crestron.SimplSharp.CrestronData.DbType,System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
            Constructs an unnamed parameter of the specified data type, source column and row version
            </summary>
            <param name="dbType">The data type</param>
            <param name="sourceColumn">The source column</param>
            <param name="rowVersion">The row version information</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Int32)">
            <summary>
            Constructs a named parameter of the specified type and size
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Int32,System.String)">
            <summary>
            Constructs a named parameter of the specified type, size and source column
            </summary>
            <param name="parameterName">The name of the parameter</param>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
            <param name="sourceColumn">The source column</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Int32,System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
            Constructs a named parameter of the specified type, size, source column and row version
            </summary>
            <param name="parameterName">The name of the parameter</param>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
            <param name="sourceColumn">The source column</param>
            <param name="rowVersion">The row version information</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Int32,Crestron.SimplSharp.CrestronData.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,Crestron.SimplSharp.CrestronData.DataRowVersion,System.Object)">
            <summary>
            Constructs a named parameter of the specified type, size, source column and row version
            </summary>
            <param name="parameterName">The name of the parameter</param>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
            <param name="direction">Only input parameters are supported in SQLite</param>
            <param name="isNullable">Ignored</param>
            <param name="precision">Ignored</param>
            <param name="scale">Ignored</param>
            <param name="sourceColumn">The source column</param>
            <param name="rowVersion">The row version information</param>
            <param name="value">The initial value to assign the parameter</param>   
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Int32,Crestron.SimplSharp.CrestronData.ParameterDirection,System.Byte,System.Byte,System.String,Crestron.SimplSharp.CrestronData.DataRowVersion,System.Boolean,System.Object)">
            <summary>
            Constructs a named parameter, yet another flavor
            </summary>
            <param name="parameterName">The name of the parameter</param>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
            <param name="direction">Only input parameters are supported in SQLite</param>
            <param name="precision">Ignored</param>
            <param name="scale">Ignored</param>
            <param name="sourceColumn">The source column</param>
            <param name="rowVersion">The row version information</param>
            <param name="sourceColumnNullMapping">Whether or not this parameter is for comparing NULL's</param>
            <param name="value">The initial value to assign the parameter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(Crestron.SimplSharp.CrestronData.DbType,System.Int32)">
            <summary>
            Constructs an unnamed parameter of the specified type and size
            </summary>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(Crestron.SimplSharp.CrestronData.DbType,System.Int32,System.String)">
            <summary>
            Constructs an unnamed parameter of the specified type, size, and source column
            </summary>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
            <param name="sourceColumn">The source column</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.#ctor(Crestron.SimplSharp.CrestronData.DbType,System.Int32,System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
            Constructs an unnamed parameter of the specified type, size, source column and row version
            </summary>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the parameter</param>
            <param name="sourceColumn">The source column</param>
            <param name="rowVersion">The row version information</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.ResetDbType">
            <summary>
            Resets the DbType of the parameter so it can be inferred from the value
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameter.Clone">
            <summary>
            Clones a parameter
            </summary>
            <returns>A new, unassociated SQLiteParameter</returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.IsNullable">
            <summary>
            Whether or not the parameter can contain a null value
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.DbType">
            <summary>
            Returns the datatype of the parameter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.Direction">
            <summary>
            Supports only input parameters
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.ParameterName">
            <summary>
            Returns the parameter name
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.Size">
            <summary>
            Returns the size of the parameter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.SourceColumn">
            <summary>
            Gets/sets the source column
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.SourceColumnNullMapping">
            <summary>
            Used by DbCommandBuilder to determine the mapping for nullable fields
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.SourceVersion">
            <summary>
            Gets and sets the row version
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameter.Value">
            <summary>
            Gets and sets the parameter value.  If no datatype was specified, the datatype will assume the type from the value given.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteParameterCollection">
            <summary>
            SQLite implementation of DbParameterCollection.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection">
            <summary>
                 The base class for a collection of parameters relevant to a DbCommand.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IDataParameterCollection">
            <summary>
                 Collects all parameters relevant to a Command object and their mappings to
                 DataSet columns, and is implemented by .NET Framework data providers
                 that access data sources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollection.Contains(System.String)">
            <summary>
                 Gets a value indicating whether a parameter in the collection has the specified
                 name.
            </summary>
            <param name="parameterName">
                 The name of the parameter.
            </param>
            <returns>
                 true if the collection contains the parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollection.IndexOf(System.String)">
            <summary>
                 Gets the location of the IDataParameter within the collection.
            </summary>
            <param name="parameterName">
                 The name of the parameter.
            </param>
            <returns>
                 The zero-based location of the IDataParameter within the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollection.RemoveAt(System.String)">
            <summary>
                 Removes the IDataParameter from the collection.
            </summary>
            <param name="parameterName">
                 The name of the parameter.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollection.InnerObject">
            <summary>
                 Internal object. Do not use!
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollection.Item(System.String)">
            <summary>
                 Gets or sets the parameter at the specified index.
            </summary>
            <param name="parameterName">
                 The name of the parameter to retrieve.
            </param>
            <returns>
                 An System.Object at the specified index.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.#ctor">
            <summary>
                 Initializes a new instance of the DbParameterCollection
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Add(System.Object)">
            <summary>
                 Adds a DbParameter item with the specified value to the
                 DbParameterCollection.
            </summary>
            <param name="value">
                 The DbParameter.Value of the DbParameter
                 to add to the collection.
            </param>
            <returns>
                 The index of the DbParameter object in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.AddRange(System.Array)">
            <summary>
                 Adds an array of items with the specified values to the DbParameterCollection.
            </summary>
            <param name="values">
                 An array of values of type DbParameter to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Clear">
            <summary>
                 Removes all DbParameter values from the DbParameterCollection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Contains(System.Object)">
            <summary>
                 Indicates whether a DbParameter with the specified DbParameter.Value
                 is contained in the collection.
            </summary>
            <param name="value">
                 The DbParameter.Value of the DbParameter
                 to look for in the collection.
            </param>
            <returns>
                 true if the DbParameter is in the collection; otherwise
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Contains(System.String)">
            <summary>
                 Indicates whether a DbParameter with the specified name
                 exists in the collection.
            </summary>
            <param name="value">
                 The name of the DbParameter to look for in the collection.
            </param>
            <returns>
                 true if the DbParameter is in the collection; otherwise
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies an array of items to the collection starting at the specified index.
            </summary>
            <param name="array">
                 The array of items to copy to the collection.
            </param>
            <param name="index">
                 The index in the collection to copy the items.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.GetEnumerator">
            <summary>
                 Exposes the System.Collections.IEnumerable.GetEnumerator() method, which
                 supports a simple iteration over a collection by a .NET Framework data provider.
            </summary>
            <returns>
                 An System.Collections.IEnumerator that can be used to iterate through the
                 collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.GetParameter(System.Int32)">
            <summary>
                 Returns the DbParameter object at the specified index
                 in the collection.
            </summary>
            <param name="index">
                 The index of the DbParameter in the collection.
            </param>
            <returns>
                 The DbParameter object at the specified index in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.GetParameter(System.String)">
            <summary>
                 Returns DbParameter the object with the specified name.
            </summary>
            <param name="parameterName">
                 The name of the DbParameter in the collection.
            </param>
            <returns>
                 The DbParameter the object with the specified name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.IndexOf(System.Object)">
            <summary>
                 Returns the index of the specified DbParameter object.
            </summary>
            <param name="value">
                 The DbParameter object in the collection.
            </param>
            <returns>
                 The index of the specified DbParameter object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.IndexOf(System.String)">
            <summary>
                 Returns the index of the DbParameter object with the specified
                 name.
            </summary>
            <param name="parameterName">
                 The name of the DbParameter object in the collection.
            </param>
            <returns>
                 The index of the DbParameter object with the specified
                 name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
                 Inserts the specified index of the DbParameter object
                 with the specified name into the collection at the specified index.
            </summary>
            <param name="index">
                 The index at which to insert the DbParameter object.
            </param>
            <param name="value">
                 The DbParameter object to insert into the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Remove(System.Object)">
            <summary>
                 Removes the specified DbParameter object from the collection.
            </summary>
            <param name="value">
                 The DbParameter object to remove.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the DbParameter object at the specified from the
                 collection.
            </summary>
            <param name="index">
                 The index where the DbParameter object is located.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.RemoveAt(System.String)">
            <summary>
                 Removes the DbParameter object with the specified name
                 from the collection.
            </summary>
            <param name="parameterName">
                 The name of the DbParameter object to remove.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.SetParameter(System.Int32,Crestron.SimplSharp.CrestronData.Common.DbParameter)">
            <summary>
                 Sets the DbParameter object at the specified index to
                 a new value.
            </summary>
            <param name="index">
                 The index where the DbParameter object is located.
            </param>
            <param name="value">
                 The new DbParameter value.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.SetParameter(System.String,Crestron.SimplSharp.CrestronData.Common.DbParameter)">
            <summary>
                 Sets the DbParameter object with the specified name to
                 a new value.
            </summary>
            <param name="parameterName">
                 The name of the DbParameter object in the collection.
            </param>
            <param name="value">
                 The new DbParameter value.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Count">
            <summary>
                 Specifies the number of items in the collection.
            </summary>
            <returns>
                 The number of items in the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.IsFixedSize">
            <summary>
                 Specifies whether the collection is a fixed size.
            </summary>
            <returns>
                 true if the collection is a fixed size; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.IsReadOnly">
            <summary>
                 Specifies whether the collection is read-only.
            </summary>
            <returns>
                 true if the collection is read-only; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.IsSynchronized">
            <summary>
                 Specifies whether the collection is synchronized.
            </summary>
            <returns>
                 true if the collection is synchronized; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.SyncRoot">
            <summary>
                 Specifies the System.Object to be used to synchronize access to the collection.
            </summary>
            <returns>
                 A System.Object to be used to synchronize access to the DbParameterCollection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Item(System.Int32)">
            <summary>
                 Gets and sets the DbParameter at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the parameter.
            </param>
            <returns>
                 The DbParameter at the specified index.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The specified index does not exist.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbParameterCollection.Item(System.String)">
            <summary>
                 Gets and sets the DbParameter with the specified name.
            </summary>
            <param name="parameterName">
                 The name of the parameter.
            </param>
            <returns>
                 The DbParameter with the specified name.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The specified index does not exist.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.GetEnumerator">
            <summary>
            Retrieves an enumerator for the collection
            </summary>
            <returns>An enumerator for the underlying array</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Int32,System.String)">
            <summary>
            Adds a parameter to the collection
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the value</param>
            <param name="sourceColumn">The source column</param>
            <returns>A SQLiteParameter object</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Int32)">
            <summary>
            Adds a parameter to the collection
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="parameterType">The data type</param>
            <param name="parameterSize">The size of the value</param>
            <returns>A SQLiteParameter object</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DbType)">
            <summary>
            Adds a parameter to the collection
            </summary>
            <param name="parameterName">The parameter name</param>
            <param name="parameterType">The data type</param>
            <returns>A SQLiteParameter object</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Add(Crestron.SimplSharp.SQLite.SQLiteParameter)">
            <summary>
            Adds a parameter to the collection
            </summary>
            <param name="parameter">The parameter to add</param>
            <returns>A zero-based index of where the parameter is located in the array</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Add(System.Object)">
            <summary>
            Adds a parameter to the collection
            </summary>
            <param name="value">The parameter to add</param>
            <returns>A zero-based index of where the parameter is located in the array</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.AddWithValue(System.String,System.Object)">
            <summary>
            Adds a named/unnamed parameter and its value to the parameter collection.
            </summary>
            <param name="parameterName">Name of the parameter, or null to indicate an unnamed parameter</param>
            <param name="value">The initial value of the parameter</param>
            <returns>Returns the SQLiteParameter object created during the call.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.AddRange(Crestron.SimplSharp.SQLite.SQLiteParameter[])">
            <summary>
            Adds an array of parameters to the collection
            </summary>
            <param name="values">The array of parameters to add</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.AddRange(System.Array)">
            <summary>
            Adds an array of parameters to the collection
            </summary>
            <param name="values">The array of parameters to add</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Clear">
            <summary>
            Clears the array and resets the collection
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Contains(System.String)">
            <summary>
            Determines if the named parameter exists in the collection
            </summary>
            <param name="parameterName">The name of the parameter to check</param>
            <returns>True if the parameter is in the collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Contains(System.Object)">
            <summary>
            Determines if the parameter exists in the collection
            </summary>
            <param name="value">The SQLiteParameter to check</param>
            <returns>True if the parameter is in the collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.CopyTo(System.Array,System.Int32)">
             <summary>
             Not implemented
             </summary>
            <param name="array">
                 array to copy into.
            </param>
            <param name="index">
                 The starting index of the array.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.IndexOf(System.String)">
            <summary>
            Returns the index of a parameter given its name
            </summary>
            <param name="parameterName">The name of the parameter to find</param>
            <returns>-1 if not found, otherwise a zero-based index of the parameter</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.IndexOf(System.Object)">
            <summary>
            Returns the index of a parameter
            </summary>
            <param name="value">The parameter to find</param>
            <returns>-1 if not found, otherwise a zero-based index of the parameter</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a parameter into the array at the specified location
            </summary>
            <param name="index">The zero-based index to insert the parameter at</param>
            <param name="value">The parameter to insert</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Remove(System.Object)">
            <summary>
            Removes a parameter from the collection
            </summary>
            <param name="value">The parameter to remove</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.RemoveAt(System.String)">
            <summary>
            Removes a parameter from the collection given its name
            </summary>
            <param name="parameterName">The name of the parameter to remove</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a parameter from the collection given its index
            </summary>
            <param name="index">The zero-based parameter index to remove</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.GetParameter(System.Int32)">
            <summary>
                 Returns the DbParameter object at the specified index
                 in the collection.
            </summary>
            <param name="index">
                 The index of the DbParameter in the collection.
            </param>
            <returns>
                 The DbParameter object at the specified index in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.GetParameter(System.String)">
            <summary>
                 Returns DbParameter the object with the specified name.
            </summary>
            <param name="parameterName">
                 The name of the DbParameter in the collection.
            </param>
            <returns>
                 The DbParameter the object with the specified name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.SetParameter(System.Int32,Crestron.SimplSharp.CrestronData.Common.DbParameter)">
            <summary>
                 Sets the DbParameter object at the specified index to
                 a new value.
            </summary>
            <param name="index">
                 The index where the DbParameter object is located.
            </param>
            <param name="value">
                 The new DbParameter value.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.SetParameter(System.String,Crestron.SimplSharp.CrestronData.Common.DbParameter)">
            <summary>
                 Sets the DbParameter object with the specified name to
                 a new value.
            </summary>
            <param name="parameterName">
                 The name of the DbParameter object in the collection.
            </param>
            <param name="value">
                 The new DbParameter value.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.IsSynchronized">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.IsFixedSize">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.IsReadOnly">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.SyncRoot">
            <summary>
            Returns null
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Count">
            <summary>
            Returns a count of parameters in the collection
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Item(System.String)">
            <summary>
            Overloaded to specialize the return value of the default indexer
            </summary>
            <param name="parameterName">Name of the parameter to get/set</param>
            <returns>The specified named SQLite parameter</returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteParameterCollection.Item(System.Int32)">
            <summary>
            Overloaded to specialize the return value of the default indexer
            </summary>
            <param name="index">The index of the parameter to get/set</param>
            <returns>The specified SQLite parameter</returns>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder">
            <summary>
            SQLite implementation of DbCommandBuilder.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder">
            <summary>
                 Automatically generates single-table commands used to reconcile changes made
                 to a DataSet with the associated database. This is an abstract
                 class that can only be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.#ctor">
            <summary>
                 Initializes a new instance of a class that inherits from the DbCommandBuilder
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.ApplyParameterInfo(Crestron.SimplSharp.CrestronData.Common.DbParameter,Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.StatementType,System.Boolean)">
            <summary>
                 Allows the provider implementation of the DbCommandBuilder
                 class to handle additional parameter properties.
            </summary>
            <param name="parameter">
                 A DbParameter to which the additional modifications are
                 applied.
            </param>
            <param name="row">
                 The DataRow from the schema table provided by DbDataReader.GetSchemaTable().
            </param>
            <param name="statementType">
                 The type of command being generated; INSERT, UPDATE or DELETE.
            </param>
            <param name="whereClause">
                 true if the parameter is part of the update or delete WHERE clause, false
                 if it is part of the insert or update values.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetDeleteCommand">
            <summary>
                 Gets the automatically generated DbCommand object required
                 to perform deletions at the data source.
            </summary>
            <returns>
                 The automatically generated DbCommand object required
                 to perform deletions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
            <summary>
                 Gets the automatically generated DbCommand object required
                 to perform deletions at the data source, optionally using columns for parameter
                 names.
            </summary>
            <param name="useColumnsForParameterNames">
                 If true, generate parameter names matching column names, if possible. If
                 false, generate @p1, @p2, and so on.
            </param>
            <returns>
                 The automatically generated DbCommand object required
                 to perform deletions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetInsertCommand">
            <summary>
                 Gets the automatically generated DbCommand object required
                 to perform insertions at the data source.
            </summary>
            <returns>
                 The automatically generated DbCommand object required
                 to perform insertions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
            <summary>
                 Gets the automatically generated DbCommand object required
                 to perform insertions at the data source, optionally using columns for parameter
                 names.
            </summary>
            <param name="useColumnsForParameterNames">
                 If true, generate parameter names matching column names, if possible. If
                 false, generate @p1, @p2, and so on.
            </param>
            <returns>
                 The automatically generated DbCommand object required
                 to perform insertions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetParameterName(System.Int32)">
            <summary>
                 Returns the name of the specified parameter in the format of @p#. Use when
                 building a custom command builder.
            </summary>
            <param name="parameterOrdinal">
                 The number to be included as part of the parameter's name..
            </param>
            <returns>
                 The name of the parameter with the specified number appended as part of the
                 parameter name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetParameterName(System.String)">
            <summary>
                 Returns the full parameter name, given the partial parameter name.
            </summary>
            <param name="parameterName">
                 The partial name of the parameter.
            </param>
            <returns>
                 The full parameter name corresponding to the partial parameter name requested.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
            <summary>
                 Returns the placeholder for the parameter in the associated SQL statement.
            </summary>
            <param name="parameterOrdinal">
                 The number to be included as part of the parameter's name.
            </param>
            <returns>
                 The name of the parameter with the specified number appended.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetSchemaTable(Crestron.SimplSharp.CrestronData.Common.DbCommand)">
            <summary>
                 Returns the schema table for the DbCommandBuilder.
            </summary>
            <param name="sourceCommand">
                 The DbCommand for which to retrieve the corresponding
                 schema table.
            </param>
            <returns>
                 A DataTable that represents the schema for the specific DbCommand.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetUpdateCommand">
            <summary>
                 Gets the automatically generated DbCommand object required
                 to perform updates at the data source.
            </summary>
            <returns>
                 The automatically generated DbCommand object required
                 to perform updates.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
            <summary>
                 Gets the automatically generated DbCommand object required
                 to perform updates at the data source, optionally using columns for parameter
                 names.
            </summary>
            <param name="useColumnsForParameterNames">
                 If true, generate parameter names matching column names, if possible. If
                 false, generate @p1, @p2, and so on.
            </param>
            <returns>
                 The automatically generated DbCommand object required
                 to perform updates.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.InitializeCommand(Crestron.SimplSharp.CrestronData.Common.DbCommand)">
            <summary>
                 Resets the DbCommand.CommandTimeout, DbCommand.Transaction,
                 DbCommand.CommandType, and UpdateRowSource
                 properties on the DbCommand.
            </summary>
            <param name="command">
                 The DbCommand to be used by the command builder for the
                 corresponding insert, update, or delete command.
            </param>
            <returns>
                 A DbCommand instance to use for each insert, update, or
                 delete operation. Passing a null value allows the DbCommandBuilder.InitializeCommand(Common.DbCommand)
                 method to create a DbCommand object based on the Select
                 command associated with the DbCommandBuilder.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
            <summary>
                 Given an unquoted identifier in the correct catalog case, returns the correct
                 quoted form of that identifier, including properly escaping any embedded
                 quotes in the identifier.
            </summary>
            <param name="unquotedIdentifier">
                 The original unquoted identifier.
            </param>
            <returns>
                 The quoted version of the identifier. Embedded quotes within the identifier
                 are properly escaped.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.RefreshSchema">
            <summary>
                 Clears the commands associated with this DbCommandBuilder.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.RowUpdatingHandler(Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs)">
            <summary>
                 Adds an event handler for the OleDb.OleDbDataAdapter.RowUpdating
                 event.
            </summary>
            <param name="rowUpdatingEvent">
                 A RowUpdatingEventArgs instance containing information
                 about the event.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.SetRowUpdatingHandler(Crestron.SimplSharp.CrestronData.Common.DbDataAdapter)">
            <summary>
                 Registers the DbCommandBuilder to handle the OleDb.OleDbDataAdapter.RowUpdating
                 event for a DbDataAdapter.
            </summary>
            <param name="adapter">
                 The DbDataAdapter to be used for the update.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
            <summary>
                 Given a quoted identifier, returns the correct unquoted form of that identifier,
                 including properly un-escaping any embedded quotes in the identifier.
            </summary>
            <param name="quotedIdentifier">
                 The identifier that will have its embedded quotes removed.
            </param>
            <returns>
                 The unquoted identifier, with embedded quotes properly un-escaped.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.CatalogLocation">
            <summary>
                 Sets or gets the CatalogLocation for an instance of the
                 DbCommandBuilder class.
            </summary>
            <returns>
                 A CatalogLocation object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.CatalogSeparator">
            <summary>
                 Sets or gets a string used as the catalog separator for an instance of the
                 DbCommandBuilder class.
            </summary>
            <returns>
                 A string indicating the catalog separator for use with an instance of the
                 DbCommandBuilder class.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.ConflictOption">
            <summary>
                 Specifies which ConflictOption is to be used by the DbCommandBuilder.
            </summary>
            <returns>
                 Returns one of the ConflictOption values describing the behavior
                 of this DbCommandBuilder.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.DataAdapter">
            <summary>
                 Gets or sets a DbDataAdapter object for which Transact-SQL
                 statements are automatically generated.
            </summary>
            <returns>
                 A DbDataAdapter object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.QuotePrefix">
            <summary>
                 Gets or sets the beginning character or characters to use when specifying
                 database objects (for example, tables or columns) whose names contain characters
                 such as spaces or reserved tokens.
            </summary>
            <returns>
                 The beginning character or characters to use. The default is an empty string.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 This property cannot be changed after an insert, update, or delete command
                 has been generated.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.QuoteSuffix">
            <summary>
                 Gets or sets the beginning character or characters to use when specifying
                 database objects (for example, tables or columns) whose names contain characters
                 such as spaces or reserved tokens.
            </summary>
            <returns>
                 The ending character or characters to use. The default is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.SchemaSeparator">
            <summary>
                 Gets or sets the character to be used for the separator between the schema
                 identifier and any other identifiers.
            </summary>
            <returns>
                 The character to be used as the schema separator.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbCommandBuilder.SetAllValues">
            <summary>
                 Specifies whether all column values in an update statement are included or
                 only changed ones.
            </summary>
            <returns>
                 true if the UPDATE statement generated by the DbCommandBuilder
                 includes all columns; false if it includes only changed columns.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.#ctor(Crestron.SimplSharp.SQLite.SQLiteDataAdapter)">
            <summary>
            Initializes the command builder and associates it with the specified data adapter.
            </summary>
            <param name="adp">SQLite Data Adapter</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.Dispose(System.Boolean)">
            <summary>
             Releases the unmanaged resources used by the class and optionally releases the managed resources.
            </summary>
            <param name="disposing"> true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetDeleteCommand">
             <summary>
             Returns the automatically-generated SQLite command to delete rows from the database
             </summary>
            <returns>
                 The automatically generated DbCommand object required
                 to perform deletions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetDeleteCommand(System.Boolean)">
             <summary>
             Returns the automatically-generated SQLite command to delete rows from the database
             </summary>
            <param name="useColumnsForParameterNames">
                 If true, generate parameter names matching column names, if possible. If
                 false, generate @p1, @p2, and so on.
            </param>
            <returns>
                 The automatically generated DbCommand object required
                 to perform deletions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetUpdateCommand">
             <summary>
             Returns the automatically-generated SQLite command to update rows in the database
             </summary>
            <returns>
                 The automatically generated DbCommand object required
                 to perform updates.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetUpdateCommand(System.Boolean)">
             <summary>
             Returns the automatically-generated SQLite command to update rows in the database
             </summary>
            <param name="useColumnsForParameterNames">
                 If true, generate parameter names matching column names, if possible. If
                 false, generate @p1, @p2, and so on.
            </param>
            <returns>
                 The automatically generated DbCommand object required
                 to perform updates.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetInsertCommand">
             <summary>
             Returns the automatically-generated SQLite command to insert rows into the database
             </summary>
            <returns>
                 The automatically generated DbCommand object required
                 to perform insertions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetInsertCommand(System.Boolean)">
             <summary>
             Returns the automatically-generated SQLite command to insert rows into the database
             </summary>
            <param name="useColumnsForParameterNames">
                 If true, generate parameter names matching column names, if possible. If
                 false, generate @p1, @p2, and so on.
            </param>
            <returns>
                 The automatically generated DbCommand object required
                 to perform insertions.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.QuoteIdentifier(System.String)">
            <summary>
            Places brackets around an identifier
            </summary>
            <param name="unquotedIdentifier">The identifier to quote</param>
            <returns>The bracketed identifier</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.UnquoteIdentifier(System.String)">
            <summary>
            Removes brackets around an identifier
            </summary>
            <param name="quotedIdentifier">The quoted (bracketed) identifier</param>
            <returns>The undecorated identifier</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.RefreshSchema">
            <summary>
                 Clears the commands associated with this DbCommandBuilder.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.ApplyParameterInfo(Crestron.SimplSharp.CrestronData.Common.DbParameter,Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.StatementType,System.Boolean)">
            <summary>
            Minimal amount of parameter processing.  Primarily sets the DbType for the parameter equal to the provider type in the schema
            </summary>
            <param name="parameter">The parameter to use in applying custom behaviors to a row</param>
            <param name="row">The row to apply the parameter to</param>
            <param name="statementType">The type of statement</param>
            <param name="whereClause">Whether the application of the parameter is part of a WHERE clause</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetParameterName(System.Int32)">
            <summary>
            Returns a named parameter for the given ordinal
            </summary>
            <param name="parameterOrdinal">The i of the parameter</param>
            <returns>Error</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetParameterName(System.String)">
            <summary>
            Returns a valid named parameter
            </summary>
            <param name="parameterName">The name of the parameter</param>
            <returns>Error</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetParameterPlaceholder(System.Int32)">
            <summary>
            Returns a placeholder character for the specified parameter i.
            </summary>
            <param name="parameterOrdinal">The index of the parameter to provide a placeholder for</param>
            <returns>Returns a named parameter</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.GetSchemaTable(Crestron.SimplSharp.CrestronData.Common.DbCommand)">
            <summary>
            Override helper, which can help the base command builder choose the right keys for the given query
            </summary>
            <param name="sourceCommand">DbCommand</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.InitializeCommand(Crestron.SimplSharp.CrestronData.Common.DbCommand)">
            <summary>
                 Resets the DbCommand.CommandTimeout, DbCommand.Transaction,
                 DbCommand.CommandType, and UpdateRowSource
                 properties on the DbCommand.
            </summary>
            <param name="command">
                 The DbCommand to be used by the command builder for the
                 corresponding insert, update, or delete command.
            </param>
            <returns>
                 A DbCommand instance to use for each insert, update, or
                 delete operation. Passing a null value allows the DbCommandBuilder.InitializeCommand(Common.DbCommand)
                 method to create a DbCommand object based on the Select
                 command associated with the DbCommandBuilder.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.RowUpdatingHandler(Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs)">
            <summary>
                 Adds an event handler for the OleDb.OleDbDataAdapter.RowUpdating
                 event.
            </summary>
            <param name="rowUpdatingEvent">
                 A RowUpdatingEventArgs instance containing information
                 about the event.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.SetRowUpdatingHandler(Crestron.SimplSharp.CrestronData.Common.DbDataAdapter)">
            <summary>
            Sets the handler for receiving row updating events.  Used by the DbCommandBuilder to autogenerate SQL
            statements that may not have previously been generated.
            </summary>
            <param name="adapter">A data adapter to receive events on.</param>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.DataAdapter">
            <summary>
            Gets/sets the DataAdapter for this CommandBuilder
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.CatalogLocation">
            <summary>
            Overridden to hide its property from the designer
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.CatalogSeparator">
            <summary>
            Overridden to hide its property from the designer
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.QuotePrefix">
            <summary>
            Overridden to hide its property from the designer
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.QuoteSuffix">
            <summary>
            Overridden to hide its property from the designer
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.SchemaSeparator">
            <summary>
            Overridden to hide its property from the designer
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.ConflictOption">
            <summary>
                 Specifies which ConflictOption is to be used by the DbCommandBuilder.
            </summary>
            <returns>
                 Returns one of the ConflictOption values describing the behavior
                 of this DbCommandBuilder.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteCommandBuilder.SetAllValues">
            <summary>
                 Specifies whether all column values in an update statement are included or
                 only changed ones.
            </summary>
            <returns>
                 true if the UPDATE statement generated by the DbCommandBuilder
                 includes all columns; false if it includes only changed columns.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteException">
            <summary>
            SQLite exception class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteException.#ctor(Crestron.SimplSharp.SQLite.SQLiteErrorCode,System.String)">
            <summary>
            Public constructor for generating a SQLite exception given the error
            code and message.
            </summary>
            <param name="errorCode">
            The SQLite return code to report.
            </param>
            <param name="message">
            Message text to go along with the return code message text.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteException.#ctor(System.String)">
            <summary>
            Public constructor that uses the base class constructor for the error
            message.
            </summary>
            <param name="message">Error message text.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteException.#ctor">
            <summary>
            Public constructor that uses the default base class constructor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SQLite.SQLiteException.#ctor(System.String,System.Exception)">
            <summary>
            Public constructor that uses the base class constructor for the error
            message and inner exception.
            </summary>
            <param name="message">Error message text.</param>
            <param name="innerException">The original (inner) exception.</param>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteException.ResultCode">
            <summary>
            Gets the associated SQLite result code for this exception as a
            <see cref="T:Crestron.SimplSharp.SQLite.SQLiteErrorCode"/>.  This property returns the same
            underlying value as the <see cref="P:Crestron.SimplSharp.SQLite.SQLiteException.ErrorCode"/> property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.SQLiteException.ErrorCode">
            <summary>
            Gets the associated SQLite return code for this exception as an
            <see cref="T:System.Int32"/>.  For desktop versions of the .NET Framework,
            this property overrides the property of the same name within the
            <see cref="T:System.Runtime.InteropServices.ExternalException"/>
            class.  This property returns the same underlying value as the
            <see cref="P:Crestron.SimplSharp.SQLite.SQLiteException.ResultCode"/> property.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags">
            <summary>
            The extra behavioral flags that can be applied to a connection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.None">
            <summary>
            No extra flags.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogPrepare">
            <summary>
            Enable logging of all SQL statements to be prepared.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogPreBind">
            <summary>
            Enable logging of all bound parameter types and raw values.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogBind">
            <summary>
            Enable logging of all bound parameter strongly typed values.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogCallbackException">
            <summary>
            Enable logging of all exceptions caught from user-provided
            managed code called from native code via delegates.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogBackup">
            <summary>
            Enable logging of backup API errors.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoExtensionFunctions">
            <summary>
            Skip adding the extension functions provided by the native
            interop assembly.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.BindUInt32AsInt64">
            <summary>
            When binding parameter values with the <see cref="T:System.UInt32"/>
            type, use the interop method that accepts an <see cref="T:System.Int64"/>
            value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.BindAllAsText">
            <summary>
            When binding parameter values, always bind them as though they were
            plain text (i.e. no numeric, date/time, or other conversions should
            be attempted).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.GetAllAsText">
            <summary>
            When returning column values, always return them as though they were
            plain text (i.e. no numeric, date/time, or other conversions should
            be attempted).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoLoadExtension">
            <summary>
            Prevent this <see cref="T:Crestron.SimplSharp.SQLite.SQLiteConnection"/> object instance from
            loading extensions.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoCreateModule">
            <summary>
            Prevent this <see cref="T:Crestron.SimplSharp.SQLite.SQLiteConnection"/> object instance from
            creating virtual table modules.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoBindFunctions">
            <summary>
            Skip binding any functions provided by other managed assemblies when
            opening the connection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoLogModule">
            <summary>
            Skip setting the logging related properties.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogModuleError">
            <summary>
            Enable logging of all virtual table module errors.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogModuleException">
            <summary>
            Enable logging of certain virtual table module exceptions that cannot
            be easily discovered via other means.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.TraceWarning">
            <summary>
            Enable tracing of potentially important [non-fatal] error conditions
            that cannot be easily reported through other means.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.ConvertInvariantText">
            <summary>
            When binding parameter values, always use the invariant culture when
            converting their values from strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.BindInvariantText">
            <summary>
            When binding parameter values, always use the invariant culture when
            converting their values to strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoConnectionPool">
            <summary>
            Disable using the connection pool by default.  If the "Pooling"
            connection string property is specified, its value will override
            this flag.  The precise outcome of combining this flag with the
            <see cref="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.UseConnectionPool"/> flag is unspecified; however,
            one of the flags will be in effect.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.UseConnectionPool">
            <summary>
            Enable using the connection pool by default.  If the "Pooling"
            connection string property is specified, its value will override
            this flag.  The precise outcome of combining this flag with the
            <see cref="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoConnectionPool"/> flag is unspecified; however,
            one of the flags will be in effect.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.UseConnectionTypes">
            <summary>
            Enable using per-connection mappings between type names and
            <see cref="T:System.Data.DbType"/> values.  Also see the
            <see cref="M:Crestron.SimplSharp.SQLite.SQLiteConnection.ClearTypeMappings"/>,
            <see cref="M:Crestron.SimplSharp.SQLite.SQLiteConnection.GetTypeMappings"/>, and
            <see cref="M:Crestron.SimplSharp.SQLite.SQLiteConnection.AddTypeMapping(System.String,Crestron.SimplSharp.CrestronData.DbType,System.Boolean)"/> methods.  These
            per-connection mappings, when present, override the corresponding
            global mappings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.NoGlobalTypes">
            <summary>
            Disable using global mappings between type names and
            <see cref="T:System.Data.DbType"/> values.  This may be useful in some very narrow
            cases; however, if there are no per-connection type mappings, the
            fallback defaults will be used for both type names and their
            associated <see cref="T:System.Data.DbType"/> values.  Therefore, use of this flag
            is not recommended.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.StickyHasRows">
            <summary>
            When the <see cref="P:Crestron.SimplSharp.SQLite.SQLiteDataReader.HasRows"/> property is used, it
            should return non-zero if there were ever any rows in the associated
            result sets.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.BindAndGetAllAsText">
            <summary>
            When binding parameter values or returning column values, always
            treat them as though they were plain text (i.e. no numeric,
            date/time, or other conversions should be attempted).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.ConvertAndBindInvariantText">
            <summary>
            When binding parameter values, always use the invariant culture when
            converting their values to strings or from strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.BindAndGetAllAsInvariantText">
            <summary>
            When binding parameter values or returning column values, always
            treat them as though they were plain text (i.e. no numeric,
            date/time, or other conversions should be attempted) and always
            use the invariant culture when converting their values to strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.ConvertAndBindAndGetAllAsInvariantText">
            <summary>
            When binding parameter values or returning column values, always
            treat them as though they were plain text (i.e. no numeric,
            date/time, or other conversions should be attempted) and always
            use the invariant culture when converting their values to strings
            or from strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.LogAll">
            <summary>
            Enable all logging.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionFlags.Default">
            <summary>
            The default extra flags for new connections.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteErrorCode">
            <summary>
            SQLite error codes.  Actually, this enumeration represents a return code,
            which may also indicate success in one of several ways (e.g. SQLITE_OK,
            SQLITE_ROW, and SQLITE_DONE).  Therefore, the name of this enumeration is
            something of a misnomer.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Unknown">
            <summary>
            The error code is unknown.  This error code
            is only used by the managed wrapper itself.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Ok">
            <summary>
            Successful result
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Error">
            <summary>
            SQL error or missing database
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Internal">
            <summary>
            Internal logic error in SQLite
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Perm">
            <summary>
            Access permission denied
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Abort">
            <summary>
            Callback routine requested an abort
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Busy">
            <summary>
            The database file is locked
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Locked">
            <summary>
            A table in the database is locked
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.NoMem">
            <summary>
            A malloc() failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.ReadOnly">
            <summary>
            Attempt to write a readonly database
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Interrupt">
            <summary>
            Operation terminated by sqlite3_interrupt()
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.IoErr">
            <summary>
            Some kind of disk I/O error occurred
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Corrupt">
            <summary>
            The database disk image is malformed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.NotFound">
            <summary>
            Unknown opcode in sqlite3_file_control()
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Full">
            <summary>
            Insertion failed because database is full
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.CantOpen">
            <summary>
            Unable to open the database file
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Protocol">
            <summary>
            Database lock protocol error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Empty">
            <summary>
            Database is empty
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Schema">
            <summary>
            The database schema changed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.TooBig">
            <summary>
            String or BLOB exceeds size limit
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Constraint">
            <summary>
            Abort due to constraint violation
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Mismatch">
            <summary>
            Data type mismatch
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Misuse">
            <summary>
            Library used incorrectly
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.NoLfs">
            <summary>
            Uses OS features not supported on host
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Auth">
            <summary>
            Authorization denied
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Format">
            <summary>
            Auxiliary database format error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Range">
            <summary>
            2nd parameter to sqlite3_bind out of range
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.NotADb">
            <summary>
            File opened that is not a database file
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Notice">
            <summary>
            Notifications from sqlite3_log()
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Warning">
            <summary>
            Warnings from sqlite3_log()
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Row">
            <summary>
            sqlite3_step() has another row ready
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.Done">
            <summary>
            sqlite3_step() has finished executing
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteErrorCode.NonExtendedMask">
            <summary>
            Used to mask off extended result codes
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteExecuteType">
            <summary>
            The requested command execution type.  This controls which method of the
            <see cref="T:Crestron.SimplSharp.SQLite.SQLiteCommand"/> object will be called.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteExecuteType.None">
            <summary>
            Do nothing.  No method will be called.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteExecuteType.NonQuery">
            <summary>
            The command is not expected to return a result -OR- the result is not
            needed.  The <see cref="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteNonQuery"/> or
            <see cref="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteNonQuery(Crestron.SimplSharp.CrestronData.CommandBehavior)"/>  method
            will be called.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteExecuteType.Scalar">
            <summary>
            The command is expected to return a scalar result -OR- the result should
            be limited to a scalar result.  The <see cref="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteScalar"/>
            or <see cref="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteScalar(Crestron.SimplSharp.CrestronData.CommandBehavior)"/> method will
            be called.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteExecuteType.Reader">
            <summary>
            The command is expected to return <see cref="T:Crestron.SimplSharp.SQLite.SQLiteDataReader"/> result.
            The <see cref="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteReader"/> or
            <see cref="M:Crestron.SimplSharp.SQLite.SQLiteCommand.ExecuteReader(Crestron.SimplSharp.CrestronData.CommandBehavior)"/> method will
            be called.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteExecuteType.Default">
            <summary>
            Use the default command execution type.  Using this value is the same
            as using the <see cref="F:Crestron.SimplSharp.SQLite.SQLiteExecuteType.NonQuery"/> value.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.UpdateEventType">
            <summary>
            Whenever an update event is triggered on a connection, this enum will indicate
            exactly what type of operation is being performed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.UpdateEventType.Delete">
            <summary>
            A row is being deleted from the given database and table
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.UpdateEventType.Insert">
            <summary>
            A row is being inserted into the table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.UpdateEventType.Update">
            <summary>
            A row is being updated in the table.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteConnectionEventHandler">
            <summary>
            Raised when an event pertaining to a connection occurs.
            </summary>
            <param name="sender">The connection involved.</param>
            <param name="e">Extra information about the event.</param>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteAuthorizerEventHandler">
            <summary>
            Raised when authorization is required to perform an action contained
            within a SQL query.
            </summary>
            <param name="sender">The connection performing the action.</param>
            <param name="e">A <see cref="T:Crestron.SimplSharp.SQLite.AuthorizerEventArgs"/> that contains the
            event data.</param>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteUpdateEventHandler">
            <summary>
            Raised when data is inserted, updated and deleted on a given connection
            </summary>
            <param name="sender">The connection committing the transaction</param>
            <param name="e">The event parameters which triggered the event</param>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteCommitHandler">
            <summary>
            Raised when a transaction is about to be committed.  To roll back a transaction, set the
            rollbackTrans boolean value to true.
            </summary>
            <param name="sender">The connection committing the transaction</param>
            <param name="e">Event arguments on the transaction</param>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteTraceEventHandler">
            <summary>
            Raised when a statement first begins executing on a given connection
            </summary>
            <param name="sender">The connection executing the statement</param>
            <param name="e">Event arguments of the trace</param>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteBackupCallback">
            <summary>
            Raised between each backup step.
            </summary>
            <param name="source">
            The source database connection.
            </param>
            <param name="sourceName">
            The source database name.
            </param>
            <param name="destination">
            The destination database connection.
            </param>
            <param name="destinationName">
            The destination database name.
            </param>
            <param name="pages">
            The number of pages copied with each step.
            </param>
            <param name="remainingPages">
            The number of pages remaining to be copied.
            </param>
            <param name="totalPages">
            The total number of pages in the source database.
            </param>
            <param name="retry">
            Set to true if the operation needs to be retried due to database
            locking issues; otherwise, set to false.
            </param>
            <returns>
            True to continue with the backup process or false to halt the backup
            process, rolling back any changes that have been made so far.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.AuthorizerEventArgs">
            <summary>
            The data associated with a call into the authorizer.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.UserData">
            <summary>
            The user-defined native data associated with this event.  Currently,
            this will always contain the value of <see cref="F:System.IntPtr.Zero"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.ActionCode">
            <summary>
            The action code responsible for the current call into the authorizer.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.Argument1">
            <summary>
            The first string argument for the current call into the authorizer.
            The exact value will vary based on the action code, see the
            <see cref="T:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode"/> enumeration for possible
            values.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.Argument2">
            <summary>
            The second string argument for the current call into the authorizer.
            The exact value will vary based on the action code, see the
            <see cref="T:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode"/> enumeration for possible
            values.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.Database">
            <summary>
            The database name for the current call into the authorizer, if
            applicable.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.Context">
            <summary>
            The name of the inner-most trigger or view that is responsible for
            the access attempt or a null value if this access attempt is directly
            from top-level SQL code.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.AuthorizerEventArgs.ReturnCode">
            <summary>
            The return code for the current call into the authorizer.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.ConnectionEventArgs">
            <summary>
            Event data for connection event handlers.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.EventType">
            <summary>
            The type of event being raised.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.EventArgs">
            <summary>
            The <see cref="T:Crestron.SimplSharp.CrestronData.StateChangeEventArgs"/> associated with this event, if any.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.Transaction">
            <summary>
            The transaction associated with this event, if any.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.Command">
            <summary>
            The command associated with this event, if any.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.DataReader">
            <summary>
            The data reader associated with this event, if any.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.CriticalHandle">
            <summary>
            The critical handle associated with this event, if any.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.Text">
            <summary>
            Command or message text associated with this event, if any.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.ConnectionEventArgs.Data">
            <summary>
            Extra data associated with this event, if any.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.UpdateEventArgs">
            <summary>
            Passed during an Update callback, these event arguments detail the type of update operation being performed
            on the given connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.UpdateEventArgs.Database">
            <summary>
            The name of the database being updated (usually "main" but can be any attached or temporary database)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.UpdateEventArgs.Table">
            <summary>
            The name of the table being updated
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.UpdateEventArgs.Event">
            <summary>
            The type of update being performed (insert/update/delete)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.UpdateEventArgs.RowId">
            <summary>
            The RowId affected by this update.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.CommitEventArgs">
            <summary>
            Event arguments raised when a transaction is being committed
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.CommitEventArgs.AbortTransaction">
            <summary>
            Set to true to abort the transaction and trigger a rollback
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.TraceEventArgs">
            <summary>
            Passed during an Trace callback, these event arguments contain the UTF-8 rendering of the SQL statement text
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SQLite.TraceEventArgs.Statement">
            <summary>
            SQL statement text as the statement first begins executing
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.TypeAffinity">
            <summary>
            SQLite has very limited types, and is inherently text-based.  The first 5 types below represent the sum of all types SQLite
            understands.  The DateTime extension to the spec is for internal use only.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.Uninitialized">
            <summary>
            Not used
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.Int64">
            <summary>
            All integers in SQLite default to Int64
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.Double">
            <summary>
            All floating point numbers in SQLite default to double
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.Text">
            <summary>
            The default data type of SQLite is text
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.Blob">
            <summary>
            Typically blob types are only seen when returned from a function
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.Null">
            <summary>
            Null types can be returned from functions
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.DateTime">
            <summary>
            Used internally by this provider
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.TypeAffinity.None">
            <summary>
            Used internally by this provider
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType">
            <summary>
            These are the event types associated with the
            <see cref="T:Crestron.SimplSharp.SQLite.SQLiteConnectionEventHandler"/>
            delegate (and its corresponding event) and the
            <see cref="T:Crestron.SimplSharp.SQLite.ConnectionEventArgs"/> class.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.Invalid">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.Unknown">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.Opening">
            <summary>
            The connection is being opened.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.ConnectionString">
            <summary>
            The connection string has been parsed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.Opened">
            <summary>
            The connection was opened.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.ChangeDatabase">
            <summary>
            The <see cref="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.ChangeDatabase"/> method was called on the
            connection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.NewTransaction">
            <summary>
            A transaction was created using the connection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.EnlistTransaction">
            <summary>
            The connection was enlisted into a transaction.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.NewCommand">
            <summary>
            A command was created using the connection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.NewDataReader">
            <summary>
            A data reader was created using the connection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.NewCriticalHandle">
            <summary>
            An instance of a CriticalHandle derived class has
            been created to wrap a native resource.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.Closing">
            <summary>
            The connection is being closed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.Closed">
            <summary>
            The connection was closed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.DisposingCommand">
            <summary>
            A command is being disposed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.DisposingDataReader">
            <summary>
            A data reader is being disposed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteConnectionEventType.ClosingDataReader">
            <summary>
            A data reader is being closed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteDateFormats">
             <summary>
             This implementation of SQLite for ADO.NET can process date/time fields in
             databases in one of six formats.
             </summary>
             <remarks>
             ISO8601 format is more compatible, readable, fully-processable, but less
             accurate as it does not provide time down to fractions of a second.
             JulianDay is the numeric format the SQLite uses internally and is arguably
             the most compatible with 3rd party tools.  It is not readable as text
             without post-processing.  Ticks less compatible with 3rd party tools that
             query the database, and renders the DateTime field unreadable as text
             without post-processing.  UnixEpoch is more compatible with Unix systems.
             InvariantCulture allows the configured format for the invariant culture
             format to be used and is human readable.  CurrentCulture allows the
             configured format for the current culture to be used and is also human
             readable.
            
             The preferred order of choosing a DateTime format is JulianDay, ISO8601,
             and then Ticks.  Ticks is mainly present for legacy code support.
             </remarks>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteDateFormats.Ticks">
            <summary>
            Use the value of DateTime.Ticks.  This value is not recommended and is not well supported with LINQ.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteDateFormats.ISO8601">
            <summary>
            Use the ISO-8601 format.  Uses the "yyyy-MM-dd HH:mm:ss.FFFFFFFK" format for UTC DateTime values and
            "yyyy-MM-dd HH:mm:ss.FFFFFFF" format for local DateTime values).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteDateFormats.JulianDay">
            <summary>
            The interval of time in days and fractions of a day since January 1, 4713 BC.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteDateFormats.UnixEpoch">
            <summary>
            The whole number of seconds since the Unix epoch (January 1, 1970).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteDateFormats.InvariantCulture">
            <summary>
            Any culture-independent string value that the .NET Framework can interpret as a valid DateTime.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteDateFormats.CurrentCulture">
            <summary>
            Any string value that the .NET Framework can interpret as a valid DateTime using the current culture.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteDateFormats.Default">
            <summary>
            The default format for this provider.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum">
             <summary>
             This enum determines how SQLite treats its journal file.
             </summary>
             <remarks>
             By default SQLite will create and delete the journal file when needed during a transaction.
             However, for some computers running certain filesystem monitoring tools, the rapid
             creation and deletion of the journal file can cause those programs to fail, or to interfere with SQLite.
            
             If a program or virus scanner is interfering with SQLite's journal file, you may receive errors like "unable to open database file"
             when starting a transaction.  If this is happening, you may want to change the default journal mode to Persist.
             </remarks>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum.Default">
            <summary>
            The default mode, this causes SQLite to use the existing journaling mode for the database.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum.Delete">
            <summary>
            SQLite will create and destroy the journal file as-needed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum.Persist">
            <summary>
            When this is set, SQLite will keep the journal file even after a transaction has completed.  It's contents will be erased,
            and the journal re-used as often as needed.  If it is deleted, it will be recreated the next time it is needed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum.Off">
            <summary>
            This option disables the rollback journal entirely.  Interrupted transactions or a program crash can cause database
            corruption in this mode!
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum.Truncate">
            <summary>
            SQLite will truncate the journal file to zero-length instead of deleting it.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum.Memory">
            <summary>
            SQLite will store the journal in volatile RAM.  This saves disk I/O but at the expense of database safety and integrity.
            If the application using SQLite crashes in the middle of a transaction when the MEMORY journaling mode is set, then the
            database file will very likely go corrupt.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteJournalModeEnum.Wal">
            <summary>
            SQLite uses a write-ahead log instead of a rollback journal to implement transactions.  The WAL journaling mode is persistent;
            after being set it stays in effect across multiple database connections and after closing and reopening the database. A database
            in WAL journaling mode can only be accessed by SQLite version 3.7.0 or later.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteSynchronousEnum">
            <summary>
            Possible values for the "synchronous" database setting.  This setting determines
            how often the database engine calls the xSync method of the VFS.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteSynchronousEnum.Default">
            <summary>
            Use the default "synchronous" database setting.  Currently, this should be
            the same as using the FULL mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteSynchronousEnum.Off">
            <summary>
            The database engine continues without syncing as soon as it has handed
            data off to the operating system.  If the application running SQLite
            crashes, the data will be safe, but the database might become corrupted
            if the operating system crashes or the computer loses power before that
            data has been written to the disk surface.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteSynchronousEnum.Normal">
            <summary>
            The database engine will still sync at the most critical moments, but
            less often than in FULL mode.  There is a very small (though non-zero)
            chance that a power failure at just the wrong time could corrupt the
            database in NORMAL mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteSynchronousEnum.Full">
            <summary>
            The database engine will use the xSync method of the VFS to ensure that
            all content is safely written to the disk surface prior to continuing.
            This ensures that an operating system crash or power failure will not
            corrupt the database.  FULL synchronous is very safe, but it is also
            slower.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode">
            <summary>
            The action code responsible for the current call into the authorizer.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.None">
            <summary>
            No action is being performed.  This value should not be used from
            external code.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Copy">
            <summary>
            No longer used.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateIndex">
             <summary>
             An index will be created.  The action-specific arguments are the
             index name and the table name.
            
             </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateTable">
            <summary>
            A table will be created.  The action-specific arguments are the
            table name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateTempIndex">
            <summary>
            A temporary index will be created.  The action-specific arguments
            are the index name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateTempTable">
            <summary>
            A temporary table will be created.  The action-specific arguments
            are the table name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateTempTrigger">
            <summary>
            A temporary trigger will be created.  The action-specific arguments
            are the trigger name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateTempView">
            <summary>
            A temporary view will be created.  The action-specific arguments are
            the view name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateTrigger">
            <summary>
            A trigger will be created.  The action-specific arguments are the
            trigger name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateView">
            <summary>
            A view will be created.  The action-specific arguments are the view
            name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Delete">
            <summary>
            A DELETE statement will be executed.  The action-specific arguments
            are the table name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropIndex">
            <summary>
            An index will be dropped.  The action-specific arguments are the
            index name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropTable">
            <summary>
            A table will be dropped.  The action-specific arguments are the tables
            name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropTempIndex">
            <summary>
            A temporary index will be dropped.  The action-specific arguments are
            the index name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropTempTable">
            <summary>
            A temporary table will be dropped.  The action-specific arguments are
            the table name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropTempTrigger">
            <summary>
            A temporary trigger will be dropped.  The action-specific arguments
            are the trigger name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropTempView">
            <summary>
            A temporary view will be dropped.  The action-specific arguments are
            the view name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropTrigger">
            <summary>
            A trigger will be dropped.  The action-specific arguments are the
            trigger name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropView">
            <summary>
            A view will be dropped.  The action-specific arguments are the view
            name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Insert">
            <summary>
            An INSERT statement will be executed.  The action-specific arguments
            are the table name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Pragma">
            <summary>
            A PRAGMA statement will be executed.  The action-specific arguments
            are the name of the PRAGMA and the new value or a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Read">
            <summary>
            A table column will be read.  The action-specific arguments are the
            table name and the column name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Select">
            <summary>
            A SELECT statement will be executed.  The action-specific arguments
            are both null values.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Transaction">
            <summary>
            A transaction will be started, committed, or rolled back.  The
            action-specific arguments are the name of the operation (BEGIN,
            COMMIT, or ROLLBACK) and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Update">
            <summary>
            An UPDATE statement will be executed.  The action-specific arguments
            are the table name and the column name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Attach">
            <summary>
            A database will be attached to the connection.  The action-specific
            arguments are the database file name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Detach">
            <summary>
            A database will be detached from the connection.  The action-specific
            arguments are the database name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.AlterTable">
            <summary>
            The schema of a table will be altered.  The action-specific arguments
            are the database name and the table name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Reindex">
            <summary>
            An index will be deleted and then recreated.  The action-specific
            arguments are the index name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Analyze">
            <summary>
            A table will be analyzed to gathers statistics about it.  The
            action-specific arguments are the table name and a null value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.CreateVtable">
            <summary>
            A virtual table will be created.  The action-specific arguments are
            the table name and the module name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.DropVtable">
            <summary>
            A virtual table will be dropped.  The action-specific arguments are
            the table name and the module name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Function">
            <summary>
            A SQL function will be called.  The action-specific arguments are a
            null value and the function name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Savepoint">
            <summary>
            A savepoint will be created, released, or rolled back.  The
            action-specific arguments are the name of the operation (BEGIN,
            RELEASE, or ROLLBACK) and the savepoint name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerActionCode.Recursive">
            <summary>
            A recursive query will be executed.  The action-specific arguments
            are two null values.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SQLite.SQLiteAuthorizerReturnCode">
            <summary>
            The return code for the current call into the authorizer.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerReturnCode.Ok">
            <summary>
            The action will be allowed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerReturnCode.Deny">
            <summary>
            The overall action will be disallowed and an error message will be
            returned from the query preparation method.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.SQLite.SQLiteAuthorizerReturnCode.Ignore">
            <summary>
            The specific action will be disallowed; however, the overall action
            will continue.  The exact effects of this return code vary depending
            on the specific action, please refer to the SQLite core library
            documentation for further details.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataTable">
            <summary>
                 Represents one table of in-memory data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.#ctor">
            <summary>
                 Initializes a new instance of the Crestron.SimplSharp.CrestronData.DataTable class with no arguments.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the Crestron.SimplSharp.CrestronData.DataTable class with the specified
                 table name.
            </summary>
            <param name="tableName">
                 The name to give the table. If tableName is null or an empty string, a default
                 name is given when added to the Crestron.SimplSharp.CrestronData.DataTableCollection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.#ctor(System.String,System.String)">
            <summary>
                 Initializes a new instance of the Crestron.SimplSharp.CrestronData.DataTable class using the specified
                 table name and namespace.
            </summary>
            <param name="tableName">
                 The name to give the table. If tableName is null or an empty string, a default
                 name is given when added to the Crestron.SimplSharp.CrestronData.DataTableCollection.
            </param>
            <param name="tableNamespace">
                 The namespace for the XML representation of the data stored in the DataTable.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.GetChanges">
            <summary>
                 Gets a copy of the DataTable that contains all changes made to
                 it since it was loaded or DataTable.AcceptChanges() was last
                 called.
            </summary>
            <returns>
                 A copy of the changes from this DataTable, or null if no changes
                 are found.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.GetChanges(Crestron.SimplSharp.CrestronData.DataRowState)">
            <summary>
                 Gets a copy of the DataTable containing all changes made to it
                 since it was last loaded, or since DataTable.AcceptChanges()
                 was called, filtered by DataRowState.
            </summary>
            <param name="rowStates">
                 One of the DataRowState values.
            </param>
            <returns>
                 A filtered copy of the DataTable that can have actions performed
                 on it, and later be merged back in the DataTable using DataSet.Merge(DataSet).
                 If no rows of the desired DataRowState are found, the method
                 returns null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.AcceptChanges">
            <summary>
                 Commits all the changes made to this table since the last time DataTable.AcceptChanges()
                 was called.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.BeginInit">
            <summary>
                 Begins the initialization of a DataTable that is used on a form
                 or used by another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.BeginLoadData">
            <summary>
                 Turns off notifications, index maintenance, and constraints while loading
                 data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Clear">
            <summary>
                 Clears the DataTable of all data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Clone">
            <summary>
                 Clones the structure of the DataTable, including all DataTable
                 schemas and constraints.
            </summary>
            <returns>
                 A new DataTable with the same schema as the current DataTable.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Compute(System.String,System.String)">
            <summary>
                 Computes the given expression on the current rows that pass the filter criteria.
            </summary>
            <param name="expression">
                 The expression to compute.
            </param>
            <param name="filter">
                 The filter to limit the rows that evaluate in the expression.
            </param>
            <returns>
                 An System.Object, set to the result of the computation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Copy">
            <summary>
                 Copies both the structure and data for this DataTable.
            </summary>
            <returns>
                 A new DataTable with the same structure (table schemas and constraints)
                 and data as this DataTable.If these classes have been derived,
                 the copy will also be of the same derived classes.Both the DataTable.Copy()
                 and the DataTable.Clone() methods create a new DataTable with
                 the same structure as the original DataTable. The new DataTable created by
                 the DataTable.Copy() method has the same set of DataRows as the
                 original table, but the new DataTable created by the DataTable.Clone()
                 method does not contain any DataRows.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.CreateDataReader">
            <summary>
                 Returns a DataTableReader corresponding to the data within this
                 DataTable.
            </summary>
            <returns>
                 A DataTableReader containing one result set, corresponding to
                 the source DataTable instance.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.EndInit">
            <summary>
                 Ends the initialization of a DataTable that is used on a form
                 or used by another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.EndLoadData">
            <summary>
                 Turns on notifications, index maintenance, and constraints after loading
                 data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.GetErrors">
            <summary>
                 Gets an array of DataRow objects that contain errors.
            </summary>
            <returns>
                 An array of DataRow objects that have errors.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.ImportRow(Crestron.SimplSharp.CrestronData.DataRow)">
            <summary>
                 Copies a DataRow into a DataTable, preserving any
                 property settings, as well as original and current values.
            </summary>
            <param name="row">
                 The DataRow to be imported.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Load(Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
                 Fills a DataTable with values from a data source using the supplied
                 IDataReader. If the DataTable already contains rows,
                 the incoming data from the data source is merged with the existing rows.
            </summary>
            <param name="reader">
                 An IDataReader that provides a result set.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Load(Crestron.SimplSharp.CrestronData.IDataReader,Crestron.SimplSharp.CrestronData.LoadOption)">
            <summary>
                 Fills a DataTable with values from a data source using the supplied
                 IDataReader. If the DataTable already contains rows, the incoming
                 data from the data source is merged with the existing rows according to the
                 value of the loadOption parameter.
            </summary>
            <param name="reader">
                 An IDataReader that provides one or more result sets.
            </param>
            <param name="loadOption">
                 A value from the LoadOption enumeration that indicates how rows
                 already in the DataTable are combined with incoming rows that
                 share the same primary key.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Load(Crestron.SimplSharp.CrestronData.IDataReader,Crestron.SimplSharp.CrestronData.LoadOption,Crestron.SimplSharp.CrestronData.FillErrorEventHandler)">
            <summary>
                 Fills a DataTable with values from a data source using the supplied
                 IDataReader using an error-handling delegate.
            </summary>
            <param name="reader">
                 A IDataReader that provides a result set.
            </param>
            <param name="loadOption">
                 A value from the LoadOption enumeration that indicates how rows
                 already in the DataTable are combined with incoming rows that
                 share the same primary key.
            </param>
            <param name="errorHandler">
                 A FillErrorEventHandler delegate to call when an error occurs
                 while loading data.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.LoadDataRow(System.Object[],System.Boolean)">
            <summary>
                 Finds and updates a specific row. If no matching row is found, a new row
                 is created using the given values.
            </summary>
            <param name="values">
                 An array of values used to create the new row.
            </param>
            <param name="acceptChanges">
                 true to accept changes; otherwise false.
            </param>
            <returns>
                 The new DataRow.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The array is larger than the number of columns in the table.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 A value doesn't match its respective column type.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ConstraintException">
                 Adding the row invalidates a constraint.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.NoNullAllowedException">
                 Attempting to put a null in a column where DataColumn.AllowDBNull
                 is false.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.LoadDataRow(System.Object[],Crestron.SimplSharp.CrestronData.LoadOption)">
            <summary>
                 Finds and updates a specific row. If no matching row is found, a new row
                 is created using the given values.
            </summary>
            <param name="values">
                 An array of values used to create the new row.
            </param>
            <param name="loadOption">
                 Used to determine how the array values are applied to the corresponding values
                 in an existing row.
            </param>
            <returns>
                 The new DataRow.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Merge(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Merge the specified DataTable with the current DataTable.
            </summary>
            <param name="table">
                 The DataTable to be merged with the current DataTable.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Merge(Crestron.SimplSharp.CrestronData.DataTable,System.Boolean)">
            <summary>
                 Merge the specified DataTable with the current DataTable, indicating
                 whether to preserve changes in the current DataTable.
            </summary>
            <param name="table">
                 The DataTable to be merged with the current DataTable.
            </param>
            <param name="preserveChanges">
                 true, to preserve changes in the current DataTable; otherwise false.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Merge(Crestron.SimplSharp.CrestronData.DataTable,System.Boolean,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 Merge the specified DataTable with the current DataTable, indicating
                 whether to preserve changes and how to handle missing schema in the current
                 DataTable.
            </summary>
            <param name="table">
                 The DataTable to be merged with the current DataTable.
            </param>
            <param name="preserveChanges">
                 true, to preserve changes in the current DataTable; otherwise
                 false.
            </param>
            <param name="missingSchemaAction">
                 One of the MissingSchemaAction values.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.NewRow">
            <summary>
                 Creates a new DataRow with the same schema as the table.
            </summary>
            <returns>
                 A DataRow with the same schema as the DataTable.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.RejectChanges">
            <summary>
                 Rolls back all changes that have been made to the table since it was loaded,
                 or the last time DataTable.AcceptChanges() was called.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Reset">
            <summary>
                 Resets the DataTable to its original state.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Select">
            <summary>
                 Gets an array of all DataRow objects.
            </summary>
            <returns>
                 An array of DataRow objects.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Select(System.String)">
            <summary>
                 Gets an array of all DataRow objects that match the filter criteria
                 in order of primary key (or lacking one, order of addition.)
            </summary>
            <param name="filterExpression">
                 The criteria to use to filter the rows.
            </param>
            <returns>
                 An array of DataRow objects.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Select(System.String,System.String)">
            <summary>
                 Gets an array of all DataRow objects that match the filter criteria,
                 in the specified sort order.
            </summary>
            <param name="filterExpression">
                 The criteria to use to filter the rows.
            </param>
            <param name="sort">
                 A string specifying the column and sort direction.
            </param>
            <returns>
                 An array of DataRow objects matching the filter expression.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.Select(System.String,System.String,Crestron.SimplSharp.CrestronData.DataViewRowState)">
            <summary>
                 Gets an array of all DataRow objects that match the filter in
                 the order of the sort that match the specified state.
            </summary>
            <param name="filterExpression">
                 The criteria to use to filter the rows.
            </param>
            <param name="sort">
                 A string specifying the column and sort direction.
            </param>
            <param name="recordStates">
                 One of the DataViewRowState values.
            </param>
            <returns>
                 An array of DataRow objects.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTable.ToString">
            <summary>
                 Gets the DataTable.TableName and DataTable.DisplayExpression,
                 if there is one as a concatenated string.
            </summary>
            <returns>
                 A string consisting of the DataTable.TableName and the DataTable.DisplayExpression
                 values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.DataSet">
            <summary>
                 Gets the Crestron.SimplSharp.CrestronData.DataSet to which this table belongs.
            </summary>
            <returns>
                 The Crestron.SimplSharp.CrestronData.DataSet to which this table belongs.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.CaseSensitive">
            <summary>
                 Indicates whether string comparisons within the table are case-sensitive.
            </summary>
            <returns>
                 true if the comparison is case-sensitive; otherwise false. The default is
                 set to the parent Crestron.SimplSharp.CrestronData.DataSet object's Crestron.SimplSharp.CrestronData.DataSet.CaseSensitive
                 property, or false if the Crestron.SimplSharp.CrestronData.DataTable was created independently
                 of a Crestron.SimplSharp.CrestronData.DataSet.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.ChildRelations">
            <summary>
                 Gets the collection of child relations for this Crestron.SimplSharp.CrestronData.DataTable.
            </summary>
            <returns>
                 A Crestron.SimplSharp.CrestronData.DataRelationCollection that contains the child relations for
                 the table. An empty collection is returned if no Crestron.SimplSharp.CrestronData.DataRelation
                 objects exist.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.Columns">
            <summary>
                 Gets the collection of columns that belong to this table.
            </summary>
            <returns>
                 A DataColumnCollection that contains the collection of DataColumn
                 objects for the table. An empty collection is returned if no DataColumn
                 objects exist.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.Constraints">
            <summary>
                 Gets the collection of constraints maintained by this table.
            </summary>
            <returns>
                 A ConstraintCollection that contains the collection of Constraint
                 objects for the table. An empty collection is returned if no Constraint
                 objects exist.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.DefaultView">
            <summary>
                 Gets a customized view of the table that may include a filtered view, or
                 a cursor position.
            </summary>
            <returns>
                 The DataView associated with the DataTable.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.DisplayExpression">
            <summary>
                 Gets or sets the expression that returns a value used to represent this table
                 in the user interface. The DisplayExpression property lets you display the
                 name of this table in a user interface.
            </summary>
            <returns>
                 A display string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.ExtendedProperties">
            <summary>
                 Gets the collection of customized user information.
            </summary>
            <returns>
                 A PropertyCollection that contains custom user information.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.HasErrors">
            <summary>
                 Gets a value indicating whether there are errors in any of the rows in any
                 of the tables of the DataSet to which the table belongs.
            </summary>
            <returns>
                 true if errors exist; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.IsInitialized">
            <summary>
                 Gets a value that indicates whether the DataTable is initialized.
            </summary>
            <returns>
                 true to indicate the component has completed initialization; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.Locale">
            <summary>
                 Gets or sets the locale information used to compare strings within the table.
            </summary>
            <returns>
                 A System.Globalization.CultureInfo that contains data about the user's machine
                 locale. The default is the DataSet object's System.Globalization.CultureInfo
                 belongs; if the table doesn't belong to a DataSet, the default
                 is the current system System.Globalization.CultureInfo.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.MinimumCapacity">
            <summary>
                 Gets or sets the initial starting size for this table.
            </summary>
            <returns>
                 The initial starting size in rows of this table. The default is 50.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.Namespace">
            <summary>
                 Gets or sets the namespace for the XML representation of the data stored
                 in the DataTable.
            </summary>
            <returns>
                 The namespace of the DataTable.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.ParentRelations">
            <summary>
                 Gets the collection of parent relations for this DataTable.
            </summary>
            <returns>
                 A DataRelationCollection that contains the parent relations for
                 the table. An empty collection is returned if no DataRelation
                 objects exist.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.Prefix">
            <summary>
                 Gets or sets the namespace for the XML representation of the data stored
                 in the DataTable.
            </summary>
            <returns>
                 The prefix of the DataTable.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.PrimaryKey">
            <summary>
                 Gets or sets an array of columns that function as primary keys for the data
                 table.
            </summary>
            <returns>
                 An array of DataColumn objects.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DataException">
                 The key is a foreign key.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.Rows">
            <summary>
                 Gets the collection of rows that belong to this table.
            </summary>
            <returns>
                 A DataRowCollection that contains DataRow objects;
                 otherwise a null value if no DataRow objects exist.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.Site">
            <summary>
                 Gets or sets an System.ComponentModel.ISite for the DataTable.
            </summary>
            <returns>
                 An System.ComponentModel.ISite for the DataTable.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTable.TableName">
            <summary>
                 Gets or sets the name of the DataTable.
            </summary>
            <returns>
                 The name of the DataTable.
            </returns>
            <exception cref="T:System.ArgumentException">
                 null or empty string ("") is passed in and this table belongs to a collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The table belongs to a collection that already has a table with the same
                 name. (Comparison is case-sensitive).
            </exception>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.ColumnChanged">
            <summary>
                 Occurs after a value has been changed for the specified DataColumn
                 in a DataRow.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.ColumnChanging">
            <summary>
                 Occurs when a value is being changed for the specified DataColumn
                 in a DataRow.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.Initialized">
            <summary>
                 Occurs after the DataTable is initialized.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.RowChanged">
            <summary>
                 Occurs after a DataRow has been changed successfully.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.RowChanging">
            <summary>
                 Occurs when a DataRow is changing.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.RowDeleted">
            <summary>
                 Occurs after a row in the table has been deleted.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.RowDeleting">
            <summary>
                 Occurs before a row in the table is about to be deleted.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.TableCleared">
            <summary>
                 Occurs after a DataTable is cleared.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.TableClearing">
            <summary>
                 Occurs when a DataTable is cleared.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTable.TableNewRow">
            <summary>
                 Occurs when a new DataRow is inserted.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataTableCollection">
            <summary>
                 Represents the collection of tables for the DataSet.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase">
            <summary>
                 Provides the base functionality for creating collections.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase.#ctor">
            <summary>
                 Initializes a new instance of the InternalDataCollectionBase
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies all the elements of the current InternalDataCollectionBase
                 to a one-dimensional System.Array, starting at the specified InternalDataCollectionBase
                 index.
            </summary>
            <param name="ar">
                 The one-dimensional System.Array to copy the current InternalDataCollectionBase
                 object's elements into.
            </param>
            <param name="index">
                 The destination System.Array index to start copying into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase.GetEnumerator">
            <summary>
                 Gets an System.Collections.IEnumerator for the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator for the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase.Count">
            <summary>
                 Gets the total number of elements in a collection.
            </summary>
            <returns>
                 The total number of elements in a collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase.IsReadOnly">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is read-only.
            </summary>
            <returns>
                 true if the collection is read-only; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase.IsSynchronized">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is synchronized.
            </summary>
            <returns>
                 true if the collection is synchronized; otherwise, false. The default is
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.InternalDataCollectionBase.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize the collection.
            </summary>
            <returns>
                 The System.object used to synchronize the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Add">
            <summary>
                 Creates a new DataTable object by using a default name and adds
                 it to the collection.
            </summary>
            <returns>
                 The newly created DataTable.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Add(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Adds the specified DataTable to the collection.
            </summary>
            <param name="table">
                 The DataTable object to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The value specified for the table is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The table already belongs to this collection, or belongs to another collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 A table in the collection has the same name. The comparison is not case sensitive.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Add(System.String)">
            <summary>
                 Creates a DataTable object by using the specified name and adds
                 it to the collection.
            </summary>
            <param name="name">
                 The name to give the created DataTable.
            </param>
            <returns>
                 The newly created DataTable.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 A table in the collection has the same name. (The comparison is not case
                 sensitive.)
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Add(System.String,System.String)">
            <summary>
                 Creates a DataTable object by using the specified name and adds
                 it to the collection.
            </summary>
            <param name="name">
                 The name to give the created DataTable.
            </param>
            <param name="tableNamespace">
                 The namespace to give the created DataTable.
            </param>
            <returns>
                 The newly created DataTable.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 A table in the collection has the same name. (The comparison is not case
                 sensitive.)
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.AddRange(Crestron.SimplSharp.CrestronData.DataTable[])">
            <summary>
                 Copies the elements of the specified DataTable array to the end
                 of the collection.
            </summary>
            <param name="tables">
                 The array of DataTable objects to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.CanRemove(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Verifies whether the specified DataTable object can be removed
                 from the collection.
            </summary>
            <param name="table">
                 The DataTable in the collection to perform the check against.
            </param>
            <returns>
                 true if the table can be removed; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Clear">
            <summary>
                 Clears the collection of all DataTable objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Contains(System.String)">
            <summary>
                 Gets a value that indicates whether a DataTable object with the
                 specified name exists in the collection.
            </summary>
            <param name="name">
                 The name of the DataTable to find.
            </param>
            <returns>
                 true if the specified table exists; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Contains(System.String,System.String)">
            <summary>
                 Gets a value that indicates whether a DataTable object with the
                 specified name and table namespace exists in the collection.
            </summary>
            <param name="name">
                 The name of the DataTable to find.
            </param>
            <param name="tableNamespace">
                 The name of the DataTable namespace to look in.
            </param>
            <returns>
                 true if the specified table exists; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.CopyTo(Crestron.SimplSharp.CrestronData.DataTable[],System.Int32)">
            <summary>
                 Copies all the elements of the current DataTableCollection to
                 a one-dimensional System.Array, starting at the specified destination array
                 index.
            </summary>
            <param name="array">
                 The one-dimensional System.Array to copy the current DataTableCollection
                 object's elements into.
            </param>
            <param name="index">
                 The destination System.Array index to start copying into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.IndexOf(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Gets the index of the specified DataTable object.
            </summary>
            <param name="table">
                 The DataTable to search for.
            </param>
            <returns>
                 The zero-based index of the table, or -1 if the table is not found in the
                 collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.IndexOf(System.String)">
            <summary>
                 Gets the index in the collection of the DataTable object with
                 the specified name.
            </summary>
            <param name="tableName">
                 The name of the DataTable object to look for.
            </param>
            <returns>
                 The zero-based index of the DataTable with the specified name, or -1 if the
                 table does not exist in the collection.Returns -1 when two or more tables
                 have the same name but different namespaces. The call does not succeed if
                 there is any ambiguity when matching a table name to exactly one table.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.IndexOf(System.String,System.String)">
            <summary>
                 Gets the index in the collection of the specified DataTable object.
            </summary>
            <param name="tableName">
                 The name of the DataTable object to look for.
            </param>
            <param name="tableNamespace">
                 The name of the DataTable namespace to look in.
            </param>
            <returns>
                 The zero-based index of the DataTable with the specified name,
                 or -1 if the table does not exist in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Remove(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Removes the specified DataTable object from the collection.
            </summary>
            <param name="table">
                 The DataTable to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The value specified for the table is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The table does not belong to this collection.-or- The table is part of a
                 relationship.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Remove(System.String)">
            <summary>
                 Removes the DataTable object with the specified name from the
                 collection.
            </summary>
            <param name="name">
                 The name of the DataTable object to remove.
            </param>
            <exception cref="T:System.ArgumentException">
                 The collection does not have a table with the specified name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.Remove(System.String,System.String)">
            <summary>
                 Removes the DataTable object with the specified name from the
                 collection.
            </summary>
            <param name="name">
                 The name of the DataTable object to remove.
            </param>
            <param name="tableNamespace">
                 The name of the DataTable namespace to look in.
            </param>
            <exception cref="T:System.ArgumentException">
                 The collection does not have a table with the specified name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the DataTable object at the specified index from the
                 collection.
            </summary>
            <param name="index">
                 The index of the DataTable to remove.
            </param>
            <exception cref="T:System.ArgumentException">
                 The collection does not have a table at the specified index.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies all the elements of the current InternalDataCollectionBase
                 to a one-dimensional System.Array, starting at the specified InternalDataCollectionBase
                 index.
            </summary>
            <param name="ar">
                 The one-dimensional System.Array to copy the current InternalDataCollectionBase
                 object's elements into.
            </param>
            <param name="index">
                 The destination System.Array index to start copying into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableCollection.GetEnumerator">
            <summary>
                 Gets an System.Collections.IEnumerator for the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator for the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableCollection.Item(System.Int32)">
            <summary>
                 Gets the DataTable object at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the DataTable to find.
            </param>
            <returns>
                 A DataTable.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index value is greater than the number of items in the collection.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableCollection.Item(System.String)">
            <summary>
                 Gets the DataTable object with the specified name.
            </summary>
            <param name="name">
                 The name of the DataTable to find.
            </param>
            <returns>
                 A DataTable with the specified name; otherwise null if the DataTable
                 does not exist.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableCollection.Item(System.String,System.String)">
            <summary>
                 Gets the DataTable object with the specified name in the specified
                 namespace.
            </summary>
            <param name="name">
                 The name of the DataTable to find.
            </param>
            <param name="tableNamespace">
                 The name of the DataTable namespace to look in.
            </param>
            <returns>
                 A DataTable with the specified name; otherwise null if the DataTable
                 does not exist.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTableCollection.CollectionChanged">
            <summary>
                 Occurs after the DataTableCollection is changed because of DataTable
                 objects being added or removed.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataTableCollection.CollectionChanging">
            <summary>
                 Occurs while the DataTableCollection is changing because of DataTable
                 objects being added or removed.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableCollection.Count">
            <summary>
                 Gets the total number of elements in a collection.
            </summary>
            <returns>
                 The total number of elements in a collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableCollection.IsReadOnly">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is read-only.
            </summary>
            <returns>
                 true if the collection is read-only; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableCollection.IsSynchronized">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is synchronized.
            </summary>
            <returns>
                 true if the collection is synchronized; otherwise, false. The default is
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableCollection.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize the collection.
            </summary>
            <returns>
                 The System.object used to synchronize the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataSet">
            <summary>
                 Represents an in-memory cache of data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.#ctor">
            <summary>
                 Initializes a new instance of the DataSet class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.#ctor(System.String)">
            <summary>
                 Initializes a new instance of a DataSet class with the given
                 name.
            </summary>
            <param name="dataSetName">
                 The name of the DataSet.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.AcceptChanges">
            <summary>
                 Commits all the changes made to this DataSet since it was loaded
                 or since the last time DataSet.AcceptChanges() was called.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.BeginInit">
            <summary>
                 Begins the initialization of a DataSet that is used on a form
                 or used by another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Clear">
            <summary>
                 Clears the DataSet of any data by removing all rows in all tables.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Clone">
            <summary>
                 Copies the structure of the DataSet, including all DataTable
                 schemas, relations, and constraints. Does not copy any data.
            </summary>
            <returns>
                 A new DataSet with the same schema as the current DataSet,
                 but none of the data.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Copy">
            <summary>
                 Copies both the structure and data for this DataSet.
            </summary>
            <returns>
                 A new DataSet with the same structure (table schemas, relations,
                 and constraints) and data as this DataSet.If these classes have
                 been subclassed, the copy will also be of the same subclasses.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.CreateDataReader">
            <summary>
                 Returns a DataTableReader with one result set per DataTable,
                 in the same sequence as the tables appear in the DataSet.Tables
                 collection.
            </summary>
            <returns>
                 A DataTableReader containing one or more result sets, corresponding
                 to the DataTable instances contained within the source DataSet.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.CreateDataReader(Crestron.SimplSharp.CrestronData.DataTable[])">
            <summary>
                 Returns a DataTableReader with one result set per DataTable.
            </summary>
            <param name="dataTables">
                 An array of DataTables providing the order of the result sets to be returned
                 in the DataTableReader.
            </param>
            <returns>
                 A DataTableReader containing one or more result sets, corresponding
                 to the DataTable instances contained within the source DataSet.
                 The returned result sets are in the order specified by the dataTables parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.EndInit">
            <summary>
                 Ends the initialization of a DataSet that is used on a form or
                 used by another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.GetChanges">
            <summary>
                 Gets a copy of the DataSet that contains all changes made to
                 it since it was loaded or since DataSet.AcceptChanges() was last
                 called.
            </summary>
            <returns>
                 A copy of the changes from this DataSet that can have actions
                 performed on it and later be merged back in using DataSet.Merge(DataSet)
                 If no changed rows are found, the method returns null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.GetChanges(Crestron.SimplSharp.CrestronData.DataRowState)">
            <summary>
                 Gets a copy of the DataSet containing all changes made to it
                 since it was last loaded, or since DataSet.AcceptChanges() was
                 called, filtered by DataRowState.
            </summary>
            <param name="rowStates">
                 One of the DataRowState values.
            </param>
            <returns>
                 A filtered copy of the DataSet that can have actions performed
                 on it, and subsequently be merged back in using DataSet.Merge(DataSet).
                 If no rows of the desired DataRowState are found, the method
                 returns null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.HasChanges">
            <summary>
                 Gets a value indicating whether the DataSet has changes, including
                 new, deleted, or modified rows.
            </summary>
            <returns>
                 true if the DataSet has changes; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.HasChanges(Crestron.SimplSharp.CrestronData.DataRowState)">
            <summary>
                 Gets a value indicating whether the DataSet has changes, including
                 new, deleted, or modified rows, filtered by DataRowState.
            </summary>
            <param name="rowStates">
                 One of the DataRowState values.
            </param>
            <returns>
                 true if the DataSet has changes; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Load(Crestron.SimplSharp.CrestronData.IDataReader,Crestron.SimplSharp.CrestronData.LoadOption,Crestron.SimplSharp.CrestronData.DataTable[])">
            <summary>
                 Fills a DataSet with values from a data source using the supplied
                 IDataReader, using an array of DataTable instances
                 to supply the schema and namespace information.
            </summary>
            <param name="reader">
                 An IDataReader that provides one or more result sets.
            </param>
            <param name="loadOption">
                 A value from the LoadOption enumeration that indicates how rows
                 already in the DataTable instances within the DataSet
                 will be combined with incoming rows that share the same primary key.
            </param>
            <param name="tables">
                 An array of DataTable instances, from which the DataSet.Load(IDataReader,LoadOption,DataTable[])
                 method retrieves name and namespace information. Each of these tables must
                 be a member of the DataTableCollection contained by this DataSet.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Load(Crestron.SimplSharp.CrestronData.IDataReader,Crestron.SimplSharp.CrestronData.LoadOption,System.String[])">
            <summary>
                 Fills a DataSet with values from a data source using the supplied
                 IDataReader, using an array of strings to supply the names for
                 the tables within the DataSet.
            </summary>
            <param name="reader">
                 An IDataReader that provides one or more result sets.
            </param>
            <param name="loadOption">
                 A value from the LoadOption enumeration that indicates how rows
                 already in the DataTable instances within the DataSet will be
                 combined with incoming rows that share the same primary key.
            </param>
            <param name="tables">
                 An array of strings, from which the Load method retrieves table name information.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Load(Crestron.SimplSharp.CrestronData.IDataReader,Crestron.SimplSharp.CrestronData.LoadOption,Crestron.SimplSharp.CrestronData.FillErrorEventHandler,Crestron.SimplSharp.CrestronData.DataTable[])">
            <summary>
                 Fills a DataSet with values from a data source using the supplied
                 IDataReader, using an array of DataTable instances
                 to supply the schema and namespace information.
            </summary>
            <param name="reader">
                 An IDataReader that provides one or more result sets.
            </param>
            <param name="loadOption">
                 A value from the LoadOption enumeration that indicates how rows
                 already in the DataTable instances within the DataSet
                 will be combined with incoming rows that share the same primary key.
            </param>
            <param name="errorHandler">
                 A FillErrorEventHandler delegate to call when an error occurs
                 while loading data.
            </param>
            <param name="tables">
                 An array of DataTable instances, from which the DataSet.Load(IDataReader,LoadOption,FillErrorEventHandler,DataTable[])
                 method retrieves name and namespace information.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Merge(Crestron.SimplSharp.CrestronData.DataRow[])">
            <summary>
                 Merges an array of DataRow objects into the current DataSet.
            </summary>
            <param name="rows">
                 The array of DataRow objects to be merged into the DataSet.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Merge(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Merges a specified DataSet and its schema into the current DataSet.
            </summary>
            <param name="dataSet">
                 The DataSet whose data and schema will be merged.
            </param>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ConstraintException">
                 One or more constraints cannot be enabled.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The dataSet is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Merge(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Merges a specified DataTable and its schema into the current
                 DataSet.
            </summary>
            <param name="table">
                 The DataTable whose data and schema will be merged.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The dataSet is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Merge(Crestron.SimplSharp.CrestronData.DataSet,System.Boolean)">
            <summary>
                 Merges a specified DataSet and its schema into the current DataSet,
                 preserving or discarding any changes in this DataSet according to the given
                 argument.
            </summary>
            <param name="dataSet">
                 The DataSet whose data and schema will be merged.
            </param>
            <param name="preserveChanges">
                 true to preserve changes in the current DataSet; otherwise false.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Merge(Crestron.SimplSharp.CrestronData.DataRow[],System.Boolean,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 Merges an array of DataRow objects into the current DataSet,
                 preserving or discarding changes in the DataSet and handling an incompatible
                 schema according to the given arguments.
            </summary>
            <param name="rows">
                 The array of DataRow objects to be merged into the DataSet.
            </param>
            <param name="preserveChanges">
                 true to preserve changes in the DataSet; otherwise false.
            </param>
            <param name="missingSchemaAction">
                 One of the MissingSchemaAction values.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Merge(Crestron.SimplSharp.CrestronData.DataSet,System.Boolean,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 Merges a specified DataSet and its schema with the current DataSet,
                 preserving or discarding changes in the current DataSet and handling an incompatible
                 schema according to the given arguments.
            </summary>
            <param name="dataSet">
                 The DataSet whose data and schema will be merged.
            </param>
            <param name="preserveChanges">
                 true to preserve changes in the current DataSet; otherwise false.
            </param>
            <param name="missingSchemaAction">
                 One of the MissingSchemaAction values.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The dataSet is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Merge(Crestron.SimplSharp.CrestronData.DataTable,System.Boolean,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 Merges a specified DataTable and its schema into the current
                 DataSet, preserving or discarding changes in the DataSet and handling an
                 incompatible schema according to the given arguments.
            </summary>
            <param name="table">
                 The DataTable whose data and schema will be merged.
            </param>
            <param name="preserveChanges">
                 One of the MissingSchemaAction values.
            </param>
            <param name="missingSchemaAction">
                 true to preserve changes in the DataSet; otherwise false.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The dataSet is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.RejectChanges">
            <summary>
                 Rolls back all the changes made to the DataSet since it was created,
                 or since the last time DataSet.AcceptChanges() was called.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataSet.Reset">
            <summary>
                 Resets the DataSet to its original state. Subclasses should override
                 DataSet.Reset() to restore a DataSet to its original
                 state.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.CaseSensitive">
            <summary>
                 Gets or sets a value indicating whether string comparisons within DataTable
                 objects are case-sensitive.
            </summary>
            <returns>
                 true if string comparisons are case-sensitive; otherwise false. The default
                 is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.DataSetName">
            <summary>
                 Gets or sets the name of the current DataSet.
            </summary>
            <returns>
                 The name of the DataSet.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.DefaultViewManager">
            <summary>
                 Gets a custom view of the data contained in the DataSet to allow
                 filtering, searching, and navigating using a custom DataViewManager.
            </summary>
            <returns>
                 A DataViewManager.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.EnforceConstraints">
            <summary>
                 Gets or sets a value indicating whether constraint rules are followed when
                 attempting any update operation.
            </summary>
            <returns>
                 true if rules are enforced; otherwise false. The default is true.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ConstraintException">
                 One or more constraints cannot be enforced.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.ExtendedProperties">
            <summary>
                 Gets the collection of customized user information associated with the DataSet.
            </summary>
            <returns>
                 A PropertyCollection with all custom user information.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.HasErrors">
            <summary>
                 Gets a value indicating whether there are errors in any of the DataTable
                 objects within this DataSet.
            </summary>
            <returns>
                 true if any table contains an error;otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.IsInitialized">
            <summary>
                 Gets a value that indicates whether the DataSet is initialized.
            </summary>
            <returns>
                 true to indicate the component has completed initialization; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.Locale">
            <summary>
                 Gets or sets the locale information used to compare strings within the table.
            </summary>
            <returns>
                 A System.Globalization.CultureInfo that contains data about the user's machine
                 locale. The default is null.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.Namespace">
            <summary>
                 Gets or sets the namespace of the DataSet.
            </summary>
            <returns>
                 The namespace of the DataSet.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The namespace already has data.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.Prefix">
            <summary>
                 Gets or sets an XML prefix that aliases the namespace of the DataSet.
            </summary>
            <returns>
                 The XML prefix for the DataSet namespace.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.Relations">
            <summary>
                 Get the collection of relations that link tables and allow navigation from
                 parent tables to child tables.
            </summary>
            <returns>
                 A DataRelationCollection that contains a collection of DataRelation
                 objects. An empty collection is returned if no DataRelation objects
                 exist.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.Site">
            <summary>
                 Gets or sets an System.ComponentModel.ISite for the DataSet.
            </summary>
            <returns>
                 An System.ComponentModel.ISite for the DataSet.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataSet.Tables">
            <summary>
                 Gets the collection of tables contained in the DataSet.
            </summary>
            <returns>
                 The DataTableCollection contained by this DataSet.
                 An empty collection is returned if no DataTable objects exist.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataSet.Initialized">
            <summary>
                 Occurs after the DataSet is initialized.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataSet.MergeFailed">
            <summary>
                 Occurs when a target and source DataRow have the same primary
                 key value, and DataSet.EnforceConstraints is set to true.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataView">
            <summary>
                 Represents a databindable, customized view of a DataTable for
                 sorting, filtering, searching, editing, and navigation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.#ctor">
            <summary>
                 Initializes a new instance of the DataView class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.#ctor(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Initializes a new instance of the DataView class with the specified
                 DataTable.
            </summary>
            <param name="table">
                 A DataTable to add to the DataView.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.#ctor(Crestron.SimplSharp.CrestronData.DataTable,System.String,System.String,Crestron.SimplSharp.CrestronData.DataViewRowState)">
            <summary>
                 Initializes a new instance of the DataView class with the specified
                 DataTable, DataView.RowFilter, DataView.Sort,
                 and DataViewRowState.
            </summary>
            <param name="table">
                 A DataTable to add to the DataView.
            </param>
            <param name="RowFilter">
                 A DataView.RowFilter to apply to the DataView.
            </param>
            <param name="Sort">
                 A DataView.Sort to apply to the DataView.
            </param>
            <param name="RowState">
                 A DataViewRowState to apply to the DataView.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.AddNew">
            <summary>
                 Adds a new row to the DataView.
            </summary>
            <returns>
                 A DataRowView.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.BeginInit">
            <summary>
                 Starts the initialization of a DataView that is used on a form
                 or used by another component. The initialization occurs at runtime.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies items into an array. Only for Web Forms Interfaces.
            </summary>
            <param name="array">
                 array to copy into.
            </param>
            <param name="index">
                 index to start at.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.Delete(System.Int32)">
            <summary>
                 Deletes a row at the specified index.
            </summary>
            <param name="index">
                 The index of the row to delete.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.Dispose(System.Boolean)">
            <summary>
                 Disposes of the resources (other than memory) used by the DataView
                 object.
            </summary>
            <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.EndInit">
            <summary>
                 Ends the initialization of a DataView that is used on a form
                 or used by another component. The initialization occurs at runtime.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.Equals(Crestron.SimplSharp.CrestronData.DataView)">
            <summary>
                 Determines whether the specified DataView instances are considered
                 equal.
            </summary>
            <param name="view">
                 The DataView to be compared.
            </param>
            <returns>
                 true if the two DataView instances are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.Find(System.Object)">
            <summary>
                 Finds a row in the DataView by the specified sort key value.
            </summary>
            <param name="key">
                 The object to search for.
            </param>
            <returns>
                 The index of the row in the DataView that contains the sort key
                 value specified; otherwise -1 if the sort key value does not exist.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.Find(System.Object[])">
            <summary>
                 Finds a row in the DataView by the specified sort key values.
            </summary>
            <param name="key">
                 An array of values, typed as System.Object.
            </param>
            <returns>
                 The index of the position of the first row in the DataView that
                 matches the sort key values specified; otherwise -1 if there are no matching
                 sort key values.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.FindRows(System.Object)">
            <summary>
                 Returns an array of DataRowView objects whose columns match the
                 specified sort key value.
            </summary>
            <param name="key">
                 The column value, typed as System.Object, to search for.
            </param>
            <returns>
                 An array of DataRowView objects whose columns match the specified sort key
                 value; or, if no rows contain the specified sort key values, an empty DataRowView
                 array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.FindRows(System.Object[])">
            <summary>
                 Returns an array of DataRowView objects whose columns match the
                 specified sort key value.
            </summary>
            <param name="key">
                 An array of column values, typed as System.Object, to search for.
            </param>
            <returns>
                 An array of DataRowView objects whose columns match the specified sort key
                 value; or, if no rows contain the specified sort key values, an empty DataRowView
                 array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.GetEnumerator">
            <summary>
                 Gets an enumerator for this DataView.
            </summary>
            <returns>
                 An System.Collections.IEnumerator for navigating through the list.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.ToTable">
            <summary>
                 Creates and returns a new DataTable based on rows in an existing
                 DataView.
            </summary>
            <returns>
                 A new DataTable instance that contains the requested rows and
                 columns.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.ToTable(System.String)">
            <summary>
                 Creates and returns a new DataTable based on rows in an existing
                 DataView.
            </summary>
            <param name="tableName">
                 The name of the returned DataTable.
            </param>
            <returns>
                 A new DataTable instance that contains the requested rows and
                 columns.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.ToTable(System.Boolean,System.String[])">
            <summary>
                 Creates and returns a new DataTable based on rows in an existing
                 DataView.
            </summary>
            <param name="distinct">
                 If true, the returned DataTable contains rows that have distinct
                 values for all its columns. The default value is false.
            </param>
            <param name="columnNames">
                 A string array that contains a list of the column names to be included in
                 the returned DataTable. The DataTable contains the
                 specified columns in the order they appear within this array.
            </param>
            <returns>
                 A new DataTable instance that contains the requested rows and
                 columns.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataView.ToTable(System.String,System.Boolean,System.String[])">
            <summary>
                 Creates and returns a new DataTable based on rows in an existing
                 DataView.
            </summary>
            <param name="tableName">
                 The name of the returned DataTable.
            </param>
            <param name="distinct">
                 If true, the returned DataTable contains rows that have distinct
                 values for all its columns. The default value is false.
            </param>
            <param name="columnNames">
                 A string array that contains a list of the column names to be included in
                 the returned DataTable. The DataTable contains the specified
                 columns in the order they appear within this array.
            </param>
            <returns>
                 A new DataTable instance that contains the requested rows and
                 columns.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.AllowDelete">
            <summary>
                 Sets or gets a value that indicates whether deletes are allowed.
            </summary>
            <returns>
                 true, if deletes are allowed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.AllowEdit">
            <summary>
                 Gets or sets a value that indicates whether edits are allowed.
            </summary>
            <returns>
                 true, if edits are allowed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.AllowNew">
            <summary>
                 Gets or sets a value that indicates whether the new rows can be added by
                 using the DataView.AddNew() method.
            </summary>
            <returns>
                 true, if new rows can be added; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.ApplyDefaultSort">
            <summary>
                 Gets or sets a value that indicates whether to use the default sort.
            </summary>
            <returns>
                 true, if the default sort is used; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.Count">
            <summary>
                 Gets the number of records in the DataView after DataView.RowFilter
                 and DataView.RowStateFilter have been applied.
            </summary>
            <returns>
                 The number of records in the DataView.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.DataViewManager">
            <summary>
                 Gets the DataViewManager associated with this view.
            </summary>
            <returns>
                 The DataViewManager that created this view. If this is the default DataView
                 for a DataTable, the DataViewManager property returns the default
                 DataViewManager for the DataSet. Otherwise, if the DataView was created without
                 a DataViewManager, this property is null.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.IsInitialized">
            <summary>
                 Gets a value that indicates whether the component is initialized.
            </summary>
            <returns>
                 true to indicate the component has completed initialization; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.RowFilter">
            <summary>
                 Gets or sets the expression used to filter which rows are viewed in the DataView.
            </summary>
            <returns>
                 A string that specifies how rows are to be filtered. For more information,
                 see the Remarks section.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.RowStateFilter">
            <summary>
                 Gets or sets the row state filter used in the DataView.
            </summary>
            <returns>
                 One of the DataViewRowState values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.Sort">
            <summary>
                 Gets or sets the sort column or columns, and sort order for the DataView.
            </summary>
            <returns>
                 A string that contains the column name followed by "ASC" (ascending) or "DESC"
                 be separated by commas.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.Table">
            <summary>
                 Gets or sets the source DataTable.
            </summary>
            <returns>
                 A DataTable that provides the data for this view.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataView.Item(System.Int32)">
            <summary>
                 Gets a row of data from a specified table.
            </summary>
            <param name="recordIndex">
                 The index of a record in the DataTable.
            </param>
            <returns>
                 A DataRowView of the row that you want.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataView.Initialized">
            <summary>
                 Occurs when initialization of the DataView is completed.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataView.ListChanged">
            <summary>
                 Occurs when the list managed by the DataView changes.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRow">
            <summary>
                 Represents a row of data in a DataTable.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.AcceptChanges">
            <summary>
                 Commits all the changes made to this row since the last time DataRow.AcceptChanges()
                 was called.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.BeginEdit">
            <summary>
                 Starts an edit operation on a DataRow object.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InRowChangingEventException">
                 The method was called inside the DataTable.RowChanging event.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 The method was called upon a deleted row.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.CancelEdit">
            <summary>
                 Cancels the current edit on the row.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InRowChangingEventException">
                 The method was called inside the DataTable.RowChanging event.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.ClearErrors">
            <summary>
                 Clears the errors for the row. This includes the DataRow.RowError
                 and errors set with DataRow.SetColumnError(System.Int32,System.String).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.Delete">
            <summary>
                 Deletes the DataRow.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 The DataRow has already been deleted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.EndEdit">
            <summary>
                 Ends the edit occurring on the row.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InRowChangingEventException">
                 The method was called inside the DataTable.RowChanging event.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ConstraintException">
                 The edit broke a constraint.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ReadOnlyException">
                 The row belongs to the table and the edit tried to change the value of a
                 read-only column.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.NoNullAllowedException">
                 The edit tried to put a null value into a column where DataColumn.AllowDBNull
                 is false.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetChildRows(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Gets the child rows of this DataRow using the specified DataRelation.
            </summary>
            <param name="relation">
                 The DataRelation to use.
            </param>
            <returns>
                 An array of DataRow objects or an array of length zero.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The relation is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have this version of data.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetChildRows(System.String)">
            <summary>
                 Gets the child rows of a DataRow using the specified DataRelation.RelationName
                 of a DataRelation.
            </summary>
            <param name="relationName">
                 The DataRelation.RelationName of the DataRelation
                 to use.
            </param>
            <returns>
                 An array of DataRow objects or an array of length zero.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetChildRows(Crestron.SimplSharp.CrestronData.DataRelation,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the child rows of a DataRow using the specified DataRelation,
                 and DataRowVersion.
            </summary>
            <param name="relation">
                 The DataRelation to use.
            </param>
            <param name="version">
                 One of the DataRowVersion values specifying the version of the
                 data to get. Possible values are Default, Original, Current, and Proposed.
            </param>
            <returns>
                 An array of DataRow objects.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The relation is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have the requested DataRowVersion.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetChildRows(System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the child rows of a DataRow using the specified DataRelation.RelationName
                 of a DataRelation, and DataRowVersion.
            </summary>
            <param name="relationName">
                 The DataRelation.RelationName of the DataRelation
                 to use.
            </param>
            <param name="version">
                 One of the DataRowVersion values specifying the version of the
                 data to get. Possible values are Default, Original, Current, and Proposed.
            </param>
            <returns>
                 An array of DataRow objects or an array of length zero.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The relation is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have the requested DataRowVersion.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetColumnError(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Gets the error description of the specified DataColumn.
            </summary>
            <param name="column">
                 A DataColumn.
            </param>
            <returns>
                 The text of the error description.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetColumnError(System.Int32)">
            <summary>
                 Gets the error description for the column specified by index.
            </summary>
            <param name="columnIndex">
                 The zero-based index of the column.
            </param>
            <returns>
                 The text of the error description.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The columnIndex argument is out of range.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetColumnError(System.String)">
            <summary>
                 Gets the error description for a column, specified by name.
            </summary>
            <param name="columnName">
                 The name of the column.
            </param>
            <returns>
                 The text of the error description.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetColumnsInError">
            <summary>
                 Gets an array of columns that have errors.
            </summary>
            <returns>
                 An array of DataColumn objects that contain errors.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRow(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Gets the parent row of a DataRow using the specified DataRelation.
            </summary>
            <param name="relation">
                 The DataRelation to use.
            </param>
            <returns>
                 The parent DataRow of the current row.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The relation does not belong to the DataTable.The row is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 This row does not belong to the child table of the DataRelation
                 object.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to a table.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRow(System.String)">
            <summary>
                 Gets the parent row of a DataRow using the specified DataRelation.RelationName
                 of a DataRelation.
            </summary>
            <param name="relationName">
                 The DataRelation.RelationName of a DataRelation.
            </param>
            <returns>
                 The parent DataRow of the current row.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRow(Crestron.SimplSharp.CrestronData.DataRelation,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the parent row of a DataRow using the specified DataRelation,
                 and DataRowVersion.
            </summary>
            <param name="relation">
                 The DataRelation to use.
            </param>
            <param name="version">
                 One of the DataRowVersion values specifying the version of the
                 data to get.
            </param>
            <returns>
                 The parent DataRow of the current row.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The row is null.The relation does not belong to this table's parent relations.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation's child table is not the table the row belongs to.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to a table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have this version of data.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRow(System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the parent row of a DataRow using the specified DataRelation.RelationName
                 of a DataRelation, and DataRowVersion.
            </summary>
            <param name="relationName">
                 The DataRelation.RelationName of a DataRelation.
            </param>
            <param name="version">
                 One of the DataRowVersion values.
            </param>
            <returns>
                 The parent DataRow of the current row.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The relation is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have the requested DataRowVersion.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRows(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Gets the parent rows of a DataRow using the specified DataRelation.
            </summary>
            <param name="relation">
                 The DataRelation to use.
            </param>
            <returns>
                 An array of DataRow objects or an array of length zero.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The DataRelation does not belong to this row's DataSet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The row is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation's child table is not the table the row belongs to.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to a DataTable.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRows(System.String)">
            <summary>
                 Gets the parent rows of a DataRow using the specified DataRelation.RelationName
                 of a DataRelation.
            </summary>
            <param name="relationName">
                 The DataRelation.RelationName of a DataRelation.
            </param>
            <returns>
                 An array of DataRow objects or an array of length zero.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRows(Crestron.SimplSharp.CrestronData.DataRelation,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the parent rows of a DataRow using the specified DataRelation,
                 and DataRowVersion.
            </summary>
            <param name="relation">
                 The DataRelation to use.
            </param>
            <param name="version">
                 One of the DataRowVersion values specifying the version of the
                 data to get.
            </param>
            <returns>
                 An array of DataRow objects or an array of length zero.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The DataRelation does not belong to this row's DataSet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The row is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation's child table is not the table the row belongs to.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to a DataTable.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have the requested DataRowVersion.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.GetParentRows(System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the parent rows of a DataRow using the specified DataRelation.RelationName
                 of a DataRelation, and DataRowVersion.
            </summary>
            <param name="relationName">
                 The DataRelation.RelationName of a DataRelation.
            </param>
            <param name="version">
                 One of the DataRowVersion values specifying the version of the
                 data to get. Possible values are Default, Original, Current, and Proposed.
            </param>
            <returns>
                 An array of DataRow objects or an array of length zero.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The relation and row do not belong to the same table.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The relation is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have the requested DataRowVersion.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.HasVersion(Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets a value that indicates whether a specified version exists.
            </summary>
            <param name="version">
                 One of the DataRowVersion values that specifies the row version.
            </param>
            <returns>
                 true if the version exists; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.IsNull(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Gets a value that indicates whether the specified DataColumn
                 contains a null value.
            </summary>
            <param name="column">
                 A DataColumn.
            </param>
            <returns>
                 true if the column contains a null value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.IsNull(System.Int32)">
            <summary>
                 Gets a value that indicates whether the column at the specified index contains
                 a null value.
            </summary>
            <param name="columnIndex">
                 The zero-based index of the column.
            </param>
            <returns>
                 true if the column contains a null value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.IsNull(System.String)">
            <summary>
                 Gets a value that indicates whether the named column contains a null value.
            </summary>
            <param name="columnName">
                 The name of the column.
            </param>
            <returns>
                 true if the column contains a null value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.IsNull(Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets a value that indicates whether the specified DataColumn
                 and DataRowVersion contains a null value.
            </summary>
            <param name="column">
                 A DataColumn.
            </param>
            <param name="version">
                 One of the DataRowVersion values that specifies the row version.
                 Possible values are Default, Original, Current, and Proposed.
            </param>
            <returns>
                 true if the column contains a null value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.RejectChanges">
            <summary>
                 Rejects all changes made to the row since DataRow.AcceptChanges()
                 was last called.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 The row does not belong to the table.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.SetAdded">
            <summary>
                 Changes the DataRow.Rowstate of a DataRow to Added.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.SetColumnError(Crestron.SimplSharp.CrestronData.DataColumn,System.String)">
            <summary>
                 Sets the error description for a column specified as a DataColumn.
            </summary>
            <param name="column">
                 The DataColumn to set the error description for.
            </param>
            <param name="error">
                 The error description.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.SetColumnError(System.Int32,System.String)">
            <summary>
                 Sets the error description for a column specified by index.
            </summary>
            <param name="columnIndex">
                 The zero-based index of the column.
            </param>
            <param name="error">
                 The error description.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 The columnIndex argument is out of range
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.SetColumnError(System.String,System.String)">
            <summary>
                 Sets the error description for a column specified by name.
            </summary>
            <param name="columnName">
                 The name of the column.
            </param>
            <param name="error">
                 The error description.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.SetModified">
            <summary>
                 Changes the DataRow.Rowstate of a DataRow to Modified.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.SetParentRow(Crestron.SimplSharp.CrestronData.DataRow)">
            <summary>
                 Sets the parent row of a DataRow with specified new parent DataRow.
            </summary>
            <param name="parentRow">
                 The new parent DataRow.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRow.SetParentRow(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Sets the parent row of a DataRow with specified new parent DataRow
                 and DataRelation.
            </summary>
            <param name="parentRow">
                 The new parent DataRow.
            </param>
            <param name="relation">
                 The relation DataRelation to use.
            </param>
            <exception cref="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
                 One of the rows does not belong to a table
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 One of the rows is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The relation does not belong to the DataRelationCollection of
                 the DataSet object.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation's child DataTable is not the table this row belongs
                 to.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.HasErrors">
            <summary>
                 Gets a value that indicates whether there are errors in a row.
            </summary>
            <returns>
                 true if the row contains an error; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.ItemArray">
            <summary>
                 Gets or sets all the values for this row through an array.
            </summary>
            <returns>
                 An array of type System.Object.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The array is larger than the number of columns in the table.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 A value in the array does not match its DataColumn.DataType in
                 its respective DataColumn.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ConstraintException">
                 An edit broke a constraint.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ReadOnlyException">
                 An edit tried to change the value of a read-only column.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.NoNullAllowedException">
                 An edit tried to put a null value in a column where DataColumn.AllowDBNull
                 of the DataColumn object is false.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 The row has been deleted.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.RowError">
            <summary>
                 Gets or sets the custom error description for a row.
            </summary>
            <returns>
                 The text describing an error.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.RowState">
            <summary>
                 Gets the current state of the row with regard to its relationship to the
                 DataRowCollection.
            </summary>
            <returns>
                 One of the DataRowState values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.Table">
            <summary>
                 Gets the DataTable for which this row has a schema.
            </summary>
            <returns>
                 The DataTable to which this row belongs.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.Item(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Gets or sets the data stored in the specified DataColumn.
            </summary>
            <param name="column">
                 A DataColumn that contains the data.
            </param>
            <returns>
                 An System.Object that contains the data.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The column does not belong to this table.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The column is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to set a value on a deleted row.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The data types of the value and the column do not match.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.Item(System.Int32)">
            <summary>
                 Gets or sets the data stored in the column specified by index.
            </summary>
            <param name="columnIndex">
                 The zero-based index of the column.
            </param>
            <returns>
                 An System.Object that contains the data.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 Occurs when you try to set a value on a deleted row.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
                 The columnIndex argument is out of range.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 Occurs when you set the value and the new value's System.Type does not match
                 DataColumn.DataType.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.Item(System.String)">
            <summary>
                 Gets or sets the data stored in the column specified by name.
            </summary>
            <param name="columnName">
                 The name of the column.
            </param>
            <returns>
                 An System.Object that contains the data.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The column specified by columnName cannot be found.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 Occurs when you try to set a value on a deleted row.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 Occurs when you set a value and its System.Type does not match DataColumn.DataType.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.Item(Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the specified version of data stored in the specified DataColumn.
            </summary>
            <param name="column">
                 A DataColumn that contains information about the column.
            </param>
            <param name="version">
                 One of the DataRowVersion values that specifies the row version
                 that you want. Possible values are Default, Original, Current, and Proposed.
            </param>
            <returns>
                 An System.Object that contains the data.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The column does not belong to the table.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The column argument contains null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have this version of data.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.Item(System.Int32,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the data stored in the column, specified by index and version of the
                 data to retrieve.
            </summary>
            <param name="columnIndex">
                 The zero-based index of the column.
            </param>
            <param name="version">
                 One of the DataRowVersion values that specifies the row version
                 that you want. Possible values are Default, Original, Current, and Proposed.
            </param>
            <returns>
                 An System.Object that contains the data.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The columnIndex argument is out of range.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The data types of the value and the column do not match.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have this version of data.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to set a value on a deleted row.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRow.Item(System.String,Crestron.SimplSharp.CrestronData.DataRowVersion)">
            <summary>
                 Gets the specified version of data stored in the named column.
            </summary>
            <param name="columnName">
                 The name of the column.
            </param>
            <param name="version">
                 One of the DataRowVersion values that specifies the row version
                 that you want. Possible values are Default, Original, Current, and Proposed.
            </param>
            <returns>
                 An System.Object that contains the data.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The column specified by columnName cannot be found.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The data types of the value and the column do not match.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
                 The row does not have this version of data.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 The row was deleted.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRowCollection">
            <summary>
                 Represents a collection of rows for a DataTable.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Add(Crestron.SimplSharp.CrestronData.DataRow)">
            <summary>
                 Adds the specified DataRow to the DataRowCollection
                 object.
            </summary>
            <param name="row">
                 The DataRow to add.
            </param>
            <returns>
                 None.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The row is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The row either belongs to another table or already belongs to this table.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ConstraintException">
                 The addition invalidates a constraint.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.NoNullAllowedException">
                 The addition tries to put a null in a DataColumn where DataColumn.AllowDBNull
                 is false
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Add(System.Object[])">
            <summary>
                 Creates a row using specified values and adds it to the DataRowCollection.
            </summary>
            <param name="values">
                 The array of values that are used to create the new row.
            </param>
            <returns>
                 None.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The array is larger than the number of columns in the table.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 A value does not match its respective column type.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.ConstraintException">
                 Adding the row invalidates a constraint.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.NoNullAllowedException">
                 Trying to put a null in a column where DataColumn.AllowDBNull
                 is false.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Clear">
            <summary>
                 Clears the collection of all rows.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 A ForeignKeyConstraint is enforced on the DataRowCollection.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Contains(System.Object)">
            <summary>
                 Gets a value that indicates whether the primary key of any row in the collection
                 contains the specified value.
            </summary>
            <param name="key">
                 The value of the primary key to test for.
            </param>
            <returns>
                 true if the collection contains a DataRow with the specified
                 primary key value; otherwise, false.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException">
                 The table does not have a primary key.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Contains(System.Object[])">
            <summary>
                 Gets a value that indicates whether the primary key columns of any row in
                 the collection contain the values specified in the object array.
            </summary>
            <param name="keys">
                 An array of primary key values to test for.
            </param>
            <returns>
                 true if the DataRowCollection contains a DataRow
                 with the specified key values; otherwise, false.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException">
                 The table does not have a primary key.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies all the DataRow objects from the collection into the given
                 array, starting at the given destination array index.
            </summary>
            <param name="ar">
                 The one-dimensional array that is the destination of the elements copied
                 from the DataRowCollection. The array must have zero-based indexing.
            </param>
            <param name="index">
                 The zero-based index in the array at which copying begins.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.CopyTo(Crestron.SimplSharp.CrestronData.DataRow[],System.Int32)">
            <summary>
                 Copies all the DataRow objects from the collection into the given
                 array, starting at the given destination array index.
            </summary>
            <param name="array">
                 The one-dimensional array that is the destination of the elements copied
                 from the DataRowCollection. The array must have zero-based indexing.
            </param>
            <param name="index">
                 The zero-based index in the array at which copying begins.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Find(System.Object)">
            <summary>
                 Gets the row specified by the primary key value.
            </summary>
            <param name="key">
                 The primary key value of the DataRow to find.
            </param>
            <returns>
                 A DataRow that contains the primary key value specified; otherwise
                 a null value if the primary key value does not exist in the DataRowCollection.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException">
                 The table does not have a primary key.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Find(System.Object[])">
            <summary>
                 Gets the row that contains the specified primary key values.
            </summary>
            <param name="keys">
                 An array of primary key values to find. The type of the array is Object.
            </param>
            <returns>
                 A DataRow object that contains the primary key values specified;
                 otherwise a null value if the primary key value does not exist in the DataRowCollection.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 No row corresponds to that index value.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException">
                 The table does not have a primary key. 
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.GetEnumerator">
            <summary>
                 Gets an System.Collections.IEnumerator for this collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator for this collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.IndexOf(Crestron.SimplSharp.CrestronData.DataRow)">
            <summary>
                 Gets the index of the specified DataRow object.
            </summary>
            <param name="row">
                 The DataRow to search for.
            </param>
            <returns>
                 The zero-based index of the row, or -1 if the row is not found in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.InsertAt(Crestron.SimplSharp.CrestronData.DataRow,System.Int32)">
            <summary>
                 Inserts a new row into the collection at the specified location.
            </summary>
            <param name="row">
                 The DataRow to add.
            </param>
            <param name="pos">
                 The location in the collection where you want to add the DataRow.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.Remove(Crestron.SimplSharp.CrestronData.DataRow)">
            <summary>
                 Removes the specified DataRow from the collection.
            </summary>
            <param name="row">
                 The DataRow to remove.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the row at the specified index from the collection.
            </summary>
            <param name="index">
                 The index of the row to remove.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowCollection.Count">
            <summary>
                 Gets the total number of DataRow objects in this collection.
            </summary>
            <returns>
                 The total number of DataRow objects in this collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowCollection.Item(System.Int32)">
            <summary>
                 Gets the row at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the row to return.
            </param>
            <returns>
                 The specified DataRow.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index value is greater than the number of items in the collection.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowCollection.IsReadOnly">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is read-only.
            </summary>
            <returns>
                 true if the collection is read-only; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowCollection.IsSynchronized">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is synchronized.
            </summary>
            <returns>
                 true if the collection is synchronized; otherwise, false. The default is
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowCollection.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize the collection.
            </summary>
            <returns>
                 The System.object used to synchronize the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataColumn">
            <summary>
                 Represents the schema of a column in a DataTable.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumn.#ctor">
            <summary>
                 Initializes a new instance of a DataColumn class as type string.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumn.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the DataColumn class, as type
                 string, using the specified column name.
            </summary>
            <param name="columnName">
                 A string that represents the name of the column to be created. If set to
                 null or an empty string (""), a default name will be specified when added
                 to the columns collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumn.#ctor(System.String,System.Type)">
            <summary>
                 Initializes a new instance of the DataColumn class using the
                 specified column name and data type.
            </summary>
            <param name="columnName">
                 A string that represents the name of the column to be created. If set to
                 null or an empty string (""), a default name will be specified when added
                 to the columns collection.
            </param>
            <param name="dataType">
                 A supported DataColumn.DataType.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 No dataType was specified.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumn.#ctor(System.String,System.Type,System.String)">
            <summary>
                 Initializes a new instance of the DataColumn class using the
                 specified name, data type, and expression.
            </summary>
            <param name="columnName">
                 A string that represents the name of the column to be created. If set to
                 null or an empty string (""), a default name will be specified when added
                 to the columns collection.
            </param>
            <param name="dataType">
                 A supported DataColumn.DataType.
            </param>
            <param name="expr">
                 The expression used to create this column. For more information, see the
                 DataColumn.Expression property.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 No dataType was specified.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumn.#ctor(System.String,System.Type,System.String,Crestron.SimplSharp.CrestronData.MappingType)">
            <summary>
                 Initializes a new instance of the DataColumn class using the
                 specified name, data type, expression, and value that determines whether
                 the column is an attribute.
            </summary>
            <param name="columnName">
                 A string that represents the name of the column to be created. If set to
                 null or an empty string (""), a default name will be specified when added
                 to the columns collection.
            </param>
            <param name="dataType">
                 A supported DataColumn.DataType.
            </param>
            <param name="expr">
                 The expression used to create this column. For more information, see the
                 DataColumn.Expression property.
            </param>
            <param name="type">
                 One of the MappingType values.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 No dataType was specified.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumn.SetOrdinal(System.Int32)">
            <summary>
                 Changes the ordinal or position of the DataColumn to the specified
                 ordinal or position.
            </summary>
            <param name="ordinal">
                 The specified ordinal.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumn.ToString">
            <summary>
                 Gets the DataColumn.Expression of the column, if one exists.
            </summary>
            <returns>
                 The DataColumn.Expression value, if the property is set; otherwise,
                 the DataColumn.ColumnName property.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.AllowDBNull">
            <summary>
                 Gets or sets a value that indicates whether null values are allowed in this
                 column for rows that belong to the table.
            </summary>
            <returns>
                 true if null values values are allowed; otherwise, false. The default is
                 true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.AutoIncrement">
            <summary>
                 Gets or sets a value that indicates whether the column automatically increments
                 the value of the column for new rows added to the table.
            </summary>
            <returns>
                 true if the value of the column increments automatically; otherwise, false.
                 The default is false.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The column is a computed column.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.AutoIncrementSeed">
            <summary>
                 Gets or sets the starting value for a column that has its DataColumn.AutoIncrement
                 property set to true.
            </summary>
            <returns>
                 The starting value for the DataColumn.AutoIncrement feature.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.AutoIncrementStep">
            <summary>
                 Gets or sets the increment used by a column with its DataColumn.AutoIncrement
                 property set to true.
            </summary>
            <returns>
                 The number by which the value of the column is automatically incremented.
                 The default is 1.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value set is zero.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.Caption">
            <summary>
                 Gets or sets the caption for the column.
            </summary>
            <returns>
                 The caption of the column. If not set, returns the DataColumn.ColumnName
                 value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.ColumnMapping">
            <summary>
                 Gets or sets the MappingType of the column.
            </summary>
            <returns>
                 One of the MappingType values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.ColumnName">
            <summary>
                 Gets or sets the name of the column in the DataColumnCollection.
            </summary>
            <returns>
                 The name of the column.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property is set to null or an empty string and the column belongs to
                 a collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 A column with the same name already exists in the collection. The name comparison
                 is not case sensitive.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.DataType">
            <summary>
                 Gets or sets the type of data stored in the column.
            </summary>
            <returns>
                 A System.Type object that represents the column data type.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The column already has data stored. - or -DataColumn.AutoIncrement
                 is true, but the value is set to a type a unsupported by DataColumn.AutoIncrement.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.DateTimeMode">
            <summary>
                 Gets or sets the DateTimeMode for the column.
            </summary>
            <returns>
                 The DataSetDateTime for the specified column.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.DefaultValue">
            <summary>
                 Gets or sets the default value for the column when you are creating new rows.
            </summary>
            <returns>
                 A value appropriate to the column's DataColumn.DataType.
            </returns>
            <exception cref="T:System.InvalidCastException">
                 When you are adding a row, the default value is not an instance of the column's
                 data type.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.Expression">
            <summary>
                 Gets or sets the expression used to filter rows, calculate the values in
                 a column, or create an aggregate column.
            </summary>
            <returns>
                 An expression to calculate the value of a column, or create an aggregate
                 column. The return type of an expression is determined by the DataColumn.DataType
                 of the column.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The DataColumn.AutoIncrement or DataColumn.Unique
                 property is set to true.
            </exception>
            <exception cref="T:System.FormatException">
                 When you are using the CONVERT function, the expression evaluates to a string,
                 but the string does not contain a representation that can be converted to
                 the type parameter.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 When you are using the CONVERT function, the requested cast is not possible.
                 See the Conversion function in the following section for detailed information
                 about possible casts.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 When you use the SUBSTRING function, the start argument is out of range.-Or-
                 When you use the SUBSTRING function, the length argument is out of range.
            </exception>
            <exception cref="T:System.Exception">
                 When you use the LEN function or the TRIM function, the expression does not
                 evaluate to a string. This includes expressions that evaluate to System.Char.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.ExtendedProperties">
            <summary>
                 Gets the collection of custom user information associated with a DataColumn.
            </summary>
            <returns>
                 A PropertyCollection of custom information.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.MaxLength">
            <summary>
                 Gets or sets the maximum length of a text column.
            </summary>
            <returns>
                 The maximum length of the column in characters. If the column has no maximum
                 length, the value is –1 (default).
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.Namespace">
            <summary>
                 Gets or sets the namespace of the DataColumn.
            </summary>
            <returns>
                 The namespace of the DataColumn.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The namespace already has data.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.Ordinal">
            <summary>
                 Gets the position of the column in the DataColumnCollection collection.
            </summary>
            <returns>
                 The position of the column. Gets -1 if the column is not a member of a collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.Prefix">
            <summary>
                 Gets or sets an XML prefix that aliases the namespace of the DataTable.
            </summary>
            <returns>
                 The XML prefix for the DataTable namespace.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.ReadOnly">
            <summary>
                 Gets or sets a value that indicates whether the column allows for changes
                 as soon as a row has been added to the table.
            </summary>
            <returns>
                 true if the column is read only; otherwise, false. The default is false.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property is set to false on a computed column.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.Table">
            <summary>
                 Gets the DataTable to which the column belongs to.
            </summary>
            <returns>
                 The DataTable that the DataColumn belongs to.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumn.Unique">
            <summary>
                 Gets or sets a value that indicates whether the values in each row of the
                 column must be unique.
            </summary>
            <returns>
                 true if the value must be unique; otherwise, false. The default is false.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The column is a calculated column.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataColumnCollection">
            <summary>
                 Represents a collection of DataColumn objects for a DataTable.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Add">
            <summary>
                 Creates and adds a DataColumn object to the DataColumnCollection.
            </summary>
            <returns>
                 The newly created DataColumn.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Add(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Creates and adds the specified DataColumn object to the DataColumnCollection.
            </summary>
            <param name="column">
                 The DataColumn to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The column parameter is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The column already belongs to this collection, or to another collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a column with the specified name. (The comparison
                 is not case-sensitive.)
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidExpressionException">
                 The expression is invalid. See the DataColumn.Expression property
                 for more information about how to create expressions.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Add(System.String)">
            <summary>
                 Creates and adds a DataColumn object that has the specified name
                 to the DataColumnCollection.
            </summary>
            <param name="columnName">
                 The name of the column.
            </param>
            <returns>
                 The newly created DataColumn.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a column with the specified name. (The comparison
                 is not case-sensitive.)
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Add(System.String,System.Type)">
            <summary>
                 Creates and adds a DataColumn object that has the specified name
                 and type to the DataColumnCollection.
            </summary>
            <param name="columnName">
                 The DataColumn.ColumnName to use when you create the column.
            </param>
            <param name="type">
                 The DataColumn.DataType of the new column.
            </param>
            <returns>
                 The newly created DataColumn.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a column with the specified name. (The comparison
                 is not case-sensitive.)
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidExpressionException">
                 The expression is invalid. See the DataColumn.Expression property
                 for more information about how to create expressions.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Add(System.String,System.Type,System.String)">
            <summary>
                 Creates and adds a DataColumn object that has the specified name,
                 type, and expression to the DataColumnCollection.
            </summary>
            <param name="columnName">
                 The name to use when you create the column.
            </param>
            <param name="type">
                 The DataColumn.DataType of the new column.
            </param>
            <param name="expression">
                 The expression to assign to the DataColumn.Expression property.
            </param>
            <returns>
                 The newly created DataColumn.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a column with the specified name. (The comparison
                 is not case-sensitive.)
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidExpressionException">
                 The expression is invalid. See the DataColumn.Expression property
                 for more information about how to create expressions.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.AddRange(Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Copies the elements of the specified DataColumn array to the
                 end of the collection.
            </summary>
            <param name="columns">
                 The array of DataColumn objects to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.CanRemove(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Checks whether a specific column can be removed from the collection.
            </summary>
            <param name="column">
                 A DataColumn in the collection.
            </param>
            <returns>
                 true if the column can be removed; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The column parameter is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The column does not belong to this collection.-Or- The column is part of
                 a relationship.-Or- Another column's expression depends on this column.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Clear">
            <summary>
                 Clears the collection of any columns.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Contains(System.String)">
            <summary>
                 Checks whether the collection contains a column with the specified name.
            </summary>
            <param name="name">
                 The DataColumn.ColumnName of the column to look for.
            </param>
            <returns>
                 true if a column exists with this name; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.CopyTo(Crestron.SimplSharp.CrestronData.DataColumn[],System.Int32)">
            <summary>
                 Copies the entire collection into an existing array, starting at a specified
                 index within the array.
            </summary>
            <param name="array">
                 An array of DataColumn objects to copy the collection into.
            </param>
            <param name="index">
                 The index to start from.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.IndexOf(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Gets the index of a column specified by name.
            </summary>
            <param name="column">
                 The name of the column to return.
            </param>
            <returns>
                 The index of the column specified by column if it is found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.IndexOf(System.String)">
            <summary>
                 Gets the index of the column with the specific name (the name is not case
                 sensitive).
            </summary>
            <param name="columnName">
                 The name of the column to find.
            </param>
            <returns>
                 The zero-based index of the column with the specified name, or -1 if the
                 column does not exist in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Remove(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Removes the specified DataColumn object from the collection.
            </summary>
            <param name="column">
                 The DataColumn to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The column parameter is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The column does not belong to this collection.-Or- The column is part of
                 a relationship.-Or- Another column's expression depends on this column.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.Remove(System.String)">
            <summary>
                 Removes the DataColumn object that has the specified name from
                 the collection.
            </summary>
            <param name="name">
                 The name of the column to remove.
            </param>
            <exception cref="T:System.ArgumentException">
                 The collection does not have a column with the specified name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the column at the specified index from the collection.
            </summary>
            <param name="index">
                 The index of the column to remove.
            </param>
            <exception cref="T:System.ArgumentException">
                 The collection does not have a column at the specified index.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies all the elements of the current InternalDataCollectionBase
                 to a one-dimensional System.Array, starting at the specified InternalDataCollectionBase
                 index.
            </summary>
            <param name="ar">
                 The one-dimensional System.Array to copy the current InternalDataCollectionBase
                 object's elements into.
            </param>
            <param name="index">
                 The destination System.Array index to start copying into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnCollection.GetEnumerator">
            <summary>
                 Gets an System.Collections.IEnumerator for the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator for the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnCollection.Item(System.Int32)">
            <summary>
                 Gets the DataColumn from the collection at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the column to return.
            </param>
            <returns>
                 The DataColumn at the specified index.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index value is greater than the number of items in the collection.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnCollection.Item(System.String)">
            <summary>
                 Gets the DataColumn from the collection with the specified name.
            </summary>
            <param name="name">
                 The DataColumn.ColumnName of the column to return.
            </param>
            <returns>
                 The DataColumn in the collection with the specified DataColumn.ColumnName;
                 otherwise a null value if the DataColumn does not exist.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataColumnCollection.CollectionChanged">
            <summary>
                 Occurs when the columns collection changes, either by adding or removing
                 a column.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnCollection.Count">
            <summary>
                 Gets the total number of elements in a collection.
            </summary>
            <returns>
                 The total number of elements in a collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnCollection.IsReadOnly">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is read-only.
            </summary>
            <returns>
                 true if the collection is read-only; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnCollection.IsSynchronized">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is synchronized.
            </summary>
            <returns>
                 true if the collection is synchronized; otherwise, false. The default is
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnCollection.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize the collection.
            </summary>
            <returns>
                 The System.object used to synchronize the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRelation">
            <summary>
                 Represents a parent/child relationship between two DataTable
                 objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelation.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Initializes a new instance of the DataRelation class using the
                 specified DataRelation name, and parent and child DataColumn
                 objects.
            </summary>
            <param name="relationName">
                 The name of the DataRelation. If null or an empty string (""),
                 a default name will be given when the created object is added to the DataRelationCollection.
            </param>
            <param name="parentColumn">
                 The parent DataColumn in the relationship.
            </param>
            <param name="childColumn">
                 The child DataColumn in the relationship.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the DataColumn objects contains null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types -Or- The tables do not belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelation.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Initializes a new instance of the DataRelation class using the
                 specified DataRelation name and matched arrays of parent and
                 child DataColumn objects.
            </summary>
            <param name="relationName">
                 The name of the relation. If null or an empty string (""), a default name
                 will be given when the created object is added to the DataRelationCollection.
            </param>
            <param name="parentColumns">
                 An array of parent DataColumn objects.
            </param>
            <param name="childColumns">
                 An array of child DataColumn objects.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the DataColumn objects contains null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The DataColumn objects have different data types -Or- One or
                 both of the arrays are not composed of distinct columns from the same table.-Or-
                 The tables do not belong to the same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelation.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn,System.Boolean)">
            <summary>
                 Initializes a new instance of the DataRelation class using the
                 specified name, parent and child DataColumn objects, and a value
                 that indicates whether to create constraints.
            </summary>
            <param name="relationName">
                 The name of the relation. If null or an empty string (""), a default name
                 will be given when the created object is added to the DataRelationCollection.
            </param>
            <param name="parentColumn">
                 The parent DataColumn in the relation.
            </param>
            <param name="childColumn">
                 The child DataColumn in the relation.
            </param>
            <param name="createConstraints">
                 A value that indicates whether constraints are created. true, if constraints
                 are created. Otherwise, false.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the DataColumn objects contains null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types -Or- The tables do not belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelation.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[],System.Boolean)">
            <summary>
                 Initializes a new instance of the DataRelation class using the
                 specified name, matched arrays of parent and child DataColumn
                 objects, and value that indicates whether to create constraints.
            </summary>
            <param name="relationName">
                 The name of the relation. If null or an empty string (""), a default name
                 will be given when the created object is added to the DataRelationCollection.
            </param>
            <param name="parentColumns">
                 An array of parent DataColumn objects.
            </param>
            <param name="childColumns">
                 An array of child DataColumn objects.
            </param>
            <param name="createConstraints">
                 A value that indicates whether to create constraints. true, if constraints
                 are created. Otherwise, false.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the DataColumn objects is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types -Or- The tables do not belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
            <summary>
                 This constructor is provided for design time support in the Visual Studio
                 environment.
            </summary>
            <param name="relationName">
                 The name of the relation. If null or an empty string (""), a default name
                 will be given when the created object is added to the DataRelationCollection.
            </param>
            <param name="parentTableName">
                 The name of the DataTable that is the parent table of the relation.
            </param>
            <param name="childTableName">
                 The name of the DataTable that is the child table of the relation.
            </param>
            <param name="parentColumnNames">
                 An array of DataColumn object names in the parent DataTable
                 of the relation.
            </param>
            <param name="childColumnNames">
                 An array of DataColumn object names in the child DataTable
                 of the relation.
            </param>
            <param name="nested">
                 A value that indicates whether relationships are nested.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelation.ToString">
            <summary>
                 Gets the DataRelation.RelationName, if one exists.
            </summary>
            <returns>
                 The value of the DataRelation.RelationName property.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.ChildColumns">
            <summary>
                 Gets the child DataColumn objects of this relation.
            </summary>
            <returns>
                 An array of DataColumn objects.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.ChildKeyConstraint">
            <summary>
                 Gets the ForeignKeyConstraint for the relation.
            </summary>
            <returns>
                 A ForeignKeyConstraint.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.ChildTable">
            <summary>
                 Gets the child table of this relation.
            </summary>
            <returns>
                 A DataTable that is the child table of the relation.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.DataSet">
            <summary>
                 Gets the DataSet to which the DataRelation belongs.
            </summary>
            <returns>
                 A DataSet to which the DataRelation belongs.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.ExtendedProperties">
            <summary>
                 Gets the collection that stores customized properties.
            </summary>
            <returns>
                 A PropertyCollection that contains customized properties.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.Nested">
            <summary>
                 Gets or sets a value that indicates whether DataRelation objects
                 are nested.
            </summary>
            <returns>
                 true, if DataRelation objects are nested; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.ParentColumns">
            <summary>
                 Gets an array of DataColumn objects that are the parent columns
                 of this DataRelation.
            </summary>
            <returns>
                 An array of DataColumn objects that are the parent columns of
                 this DataRelation.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.ParentKeyConstraint">
            <summary>
                 Gets the UniqueConstraint that guarantees that values in the
                 parent column of a DataRelation are unique.
            </summary>
            <returns>
                 A UniqueConstraint that makes sure that values in a parent column
                 are unique.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.ParentTable">
            <summary>
                 Gets the parent DataTable of this DataRelation.
            </summary>
            <returns>
                 A DataTable that is the parent table of this relation.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelation.RelationName">
            <summary>
                 Gets or sets the name used to retrieve a DataRelation from the
                 DataRelationCollection.
            </summary>
            <returns>
                 The name of the a DataRelation.
            </returns>
            <exception cref="T:System.ArgumentException">
                 null or empty string ("") was passed into a DataColumn that is
                 a DataRelation.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The DataRelation belongs to a collection that already contains
                 a DataRelation with the same name.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRelationCollection">
            <summary>
                 Represents the collection of DataRelation objects for this DataSet.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Add(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Adds a DataRelation to the DataRelationCollection.
            </summary>
            <param name="relation">
                 The DataRelation to add to the collection.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The relation parameter is a null value.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The relation already belongs to this collection, or it belongs to another
                 collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a relation with the specified name. (The comparison
                 is not case sensitive.)
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation has entered an invalid state since it was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Add(Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Creates a DataRelation with a specified parent and child column,
                 and adds it to the collection.
            </summary>
            <param name="parentColumn">
                 The parent column of the relation.
            </param>
            <param name="childColumn">
                 The child column of the relation.
            </param>
            <returns>
                 The created relation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Add(Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Creates a DataRelation with the specified parent and child columns,
                 and adds it to the collection.
            </summary>
            <param name="parentColumns">
                 The parent columns of the relation.
            </param>
            <param name="childColumns">
                 The child columns of the relation.
            </param>
            <returns>
                 The created relation.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The relation argument is a null value.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The relation already belongs to this collection, or it belongs to another
                 collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a relation with the same name. (The comparison
                 is not case sensitive.)
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation has entered an invalid state since it was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Creates a DataRelation with the specified name, and parent and
                 child columns, and adds it to the collection.
            </summary>
            <param name="name">
                 The name of the relation.
            </param>
            <param name="parentColumn">
                 The parent column of the relation.
            </param>
            <param name="childColumn">
                 The child column of the relation.
            </param>
            <returns>
                 The created relation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Creates a DataRelation with the specified name and arrays of
                 parent and child columns, and adds it to the collection.
            </summary>
            <param name="name">
                 The name of the DataRelation to create.
            </param>
            <param name="parentColumns">
                 An array of parent DataColumn objects.
            </param>
            <param name="childColumns">
                 An array of child DataColumn objects.
            </param>
            <returns>
                 The created DataRelation.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The relation name is a null value.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The relation already belongs to this collection, or it belongs to another
                 collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a relation with the same name. (The comparison
                 is not case sensitive.)
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation has entered an invalid state since it was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn,System.Boolean)">
            <summary>
                 Creates a DataRelation with the specified name, parent and child
                 columns, with optional constraints according to the value of the createConstraints
                 parameter, and adds it to the collection.
            </summary>
            <param name="name">
                 The name of the relation.
            </param>
            <param name="parentColumn">
                 The parent column of the relation.
            </param>
            <param name="childColumn">
                 The child column of the relation.
            </param>
            <param name="createConstraints">
                 true to create constraints; otherwise false. (The default is true).
            </param>
            <returns>
                 The created relation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[],System.Boolean)">
            <summary>
                 Creates a DataRelation with the specified name, arrays of parent
                 and child columns, and value specifying whether to create a constraint, and
                 adds it to the collection.
            </summary>
            <param name="name">
                 The name of the DataRelation to create.
            </param>
            <param name="parentColumns">
                 An array of parent DataColumn objects.
            </param>
            <param name="childColumns">
                 An array of child DataColumn objects.
            </param>
            <param name="createConstraints">
                 true to create a constraint; otherwise false.
            </param>
            <returns>
                 The created relation.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The relation name is a null value.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The relation already belongs to this collection, or it belongs to another
                 collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a relation with the same name. (The comparison
                 is not case sensitive.)
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The relation has entered an invalid state since it was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.AddCore(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Performs verification on the table.
            </summary>
            <param name="relation">
                 The relation to check.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The relation is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The relation already belongs to this collection, or it belongs to another
                 collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a relation with the same name. (The comparison
                 is not case sensitive.)
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.AddRange(Crestron.SimplSharp.CrestronData.DataRelation[])">
            <summary>
                 Copies the elements of the specified DataRelation array to the
                 end of the collection.
            </summary>
            <param name="relations">
                 The array of DataRelation objects to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.CanRemove(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Verifies whether the specified DataRelation can be removed from
                 the collection.
            </summary>
            <param name="relation">
                 The relation to perform the check against.
            </param>
            <returns>
                 true if the DataRelation can be removed; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Clear">
            <summary>
                 Clears the collection of any relations.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Contains(System.String)">
            <summary>
                 Verifies whether a DataRelation with the specific name (case
                 insensitive) exists in the collection.
            </summary>
            <param name="name">
                 The name of the relation to find.
            </param>
            <returns>
                 true, if a relation with the specified name exists; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.CopyTo(Crestron.SimplSharp.CrestronData.DataRelation[],System.Int32)">
            <summary>
                 Copies the collection of DataRelation objects starting at the
                 specified index.
            </summary>
            <param name="array">
                 The array of DataRelation objects to copy the collection to.
            </param>
            <param name="index">
                 The index to start from.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.IndexOf(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Gets the index of the specified DataRelation object.
            </summary>
            <param name="relation">
                 The relation to search for.
            </param>
            <returns>
                 The 0-based index of the relation, or -1 if the relation is not found in
                 the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.IndexOf(System.String)">
            <summary>
                 Gets the index of the DataRelation specified by name.
            </summary>
            <param name="relationName">
                 The name of the relation to find.
            </param>
            <returns>
                 The zero-based index of the relation with the specified name, or -1 if the
                 relation does not exist in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Remove(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Removes the specified relation from the collection.
            </summary>
            <param name="relation">
                 The relation to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The relation is a null value.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The relation does not belong to the collection.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.Remove(System.String)">
            <summary>
                 Removes the relation with the specified name from the collection.
            </summary>
            <param name="name">
                 The name of the relation to remove.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 The collection does not have a relation with the specified name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the relation at the specified index from the collection.
            </summary>
            <param name="index">
                 The index of the relation to remove.
            </param>
            <exception cref="T:System.ArgumentException">
                 The collection does not have a relation at the specified index.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies all the elements of the current InternalDataCollectionBase
                 to a one-dimensional System.Array, starting at the specified InternalDataCollectionBase
                 index.
            </summary>
            <param name="ar">
                 The one-dimensional System.Array to copy the current InternalDataCollectionBase
                 object's elements into.
            </param>
            <param name="index">
                 The destination System.Array index to start copying into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationCollection.GetEnumerator">
            <summary>
                 Gets an System.Collections.IEnumerator for the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator for the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelationCollection.Item(System.Int32)">
            <summary>
                 Gets the DataRelation object at the specified index.
            </summary>
            <param name="index">
                 The zero-based index to find.
            </param>
            <returns>
                 The DataRelation, or a null value if the specified DataRelation
                 does not exist.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index value is greater than the number of items in the collection.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelationCollection.Item(System.String)">
            <summary>
                 Gets the DataRelation object specified by name.
            </summary>
            <param name="name">
                 The name of the relation to find.
            </param>
            <returns>
                 The named DataRelation, or a null value if the specified DataRelation
                 does not exist.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataRelationCollection.CollectionChanged">
            <summary>
                 Occurs when the collection has changed.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelationCollection.Count">
            <summary>
                 Gets the total number of elements in a collection.
            </summary>
            <returns>
                 The total number of elements in a collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelationCollection.IsReadOnly">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is read-only.
            </summary>
            <returns>
                 true if the collection is read-only; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelationCollection.IsSynchronized">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is synchronized.
            </summary>
            <returns>
                 true if the collection is synchronized; otherwise, false. The default is
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelationCollection.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize the collection.
            </summary>
            <returns>
                 The System.object used to synchronize the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRelationEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRelationEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Constraint">
            <summary>
                 Represents a constraint that can be enforced on one or more DataColumn
                 objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Constraint.ToString">
            <summary>
                 Gets the Constraint.ConstraintName, if there is one, as a string.
            </summary>
            <returns>
                 The string value of the Constraint.ConstraintName.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Constraint.ConstraintName">
            <summary>
                 The name of a constraint in the ConstraintCollection.
            </summary>
            <returns>
                 The name of the Constraint.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The Constraint name is a null value or empty string.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The ConstraintCollection already contains a Constraint
                 with the same name (The comparison is not case-sensitive.).
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Constraint.ExtendedProperties">
            <summary>
                 Gets the collection of user-defined constraint properties.
            </summary>
            <returns>
                 A PropertyCollection of custom information.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Constraint.Table">
            <summary>
                 Gets the DataTable to which the constraint applies.
            </summary>
            <returns>
                 A DataTable to which the constraint applies.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintImpl.ToString">
            <summary>
                 Gets the Constraint.ConstraintName, if there is one, as a string.
            </summary>
            <returns>
                 The string value of the Constraint.ConstraintName.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintImpl.ConstraintName">
            <summary>
                 The name of a constraint in the ConstraintCollection.
            </summary>
            <returns>
                 The name of the Constraint.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The Constraint name is a null value or empty string.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The ConstraintCollection already contains a Constraint
                 with the same name (The comparison is not case-sensitive.).
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintImpl.ExtendedProperties">
            <summary>
                 Gets the collection of user-defined constraint properties.
            </summary>
            <returns>
                 A PropertyCollection of custom information.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintImpl.Table">
            <summary>
                 Gets the DataTable to which the constraint applies.
            </summary>
            <returns>
                 A DataTable to which the constraint applies.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ConstraintCollection">
            <summary>
                 Represents a collection of constraints for a DataTable.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Add(Crestron.SimplSharp.CrestronData.Constraint)">
            <summary>
                 Adds the specified Constraint object to the collection.
            </summary>
            <param name="constraint">
                 The Constraint to add.
            </param>
            <returns>
                 A new UniqueConstraint or ForeignKeyConstraint.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 The constraint argument is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The constraint already belongs to this collection, or belongs to another
                 collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a constraint with the same name. (The comparison
                 is not case-sensitive.)
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn,System.Boolean)">
            <summary>
                 Constructs a new UniqueConstraint with the specified name, DataColumn,
                 and value that indicates whether the column is a primary key, and adds it
                 to the collection.
            </summary>
            <param name="name">
                 The name of the UniqueConstraint.
            </param>
            <param name="column">
                 The DataColumn to which the constraint applies.
            </param>
            <param name="primaryKey">
                 Specifies whether the column should be the primary key. If true, the column
                 will be a primary key column.
            </param>
            <returns>
                 A new UniqueConstraint.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The constraint already belongs to this collection.-Or- The constraint belongs
                 to another collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a constraint with the specified name. (The comparison
                 is not case-sensitive.)
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Constructs a new ForeignKeyConstraint with the specified name,
                 parent column, and child column, and adds the constraint to the collection.
            </summary>
            <param name="name">
                 The name of the ForeignKeyConstraint.
            </param>
            <param name="primaryKeyColumn">
                 The primary key, or parent, DataColumn.
            </param>
            <param name="foreignKeyColumn">
                 The foreign key, or child, DataColumn.
            </param>
            <returns>
                 A new ForeignKeyConstraint.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],System.Boolean)">
            <summary>
                 Constructs a new UniqueConstraint with the specified name, array
                 of DataColumn objects, and value that indicates whether the column
                 is a primary key, and adds it to the collection.
            </summary>
            <param name="name">
                 The name of the UniqueConstraint.
            </param>
            <param name="columns">
                 An array of DataColumn objects to which the constraint applies.
            </param>
            <param name="primaryKey">
                 Specifies whether the column should be the primary key. If true, the column
                 will be a primary key column.
            </param>
            <returns>
                 A new UniqueConstraint.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The constraint already belongs to this collection.-Or- The constraint belongs
                 to another collection.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The collection already has a constraint with the specified name. (The comparison
                 is not case-sensitive.)
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Add(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Constructs a new ForeignKeyConstraint, with the specified arrays
                 of parent columns and child columns, and adds the constraint to the collection.
            </summary>
            <param name="name">
                 The name of the ForeignKeyConstraint.
            </param>
            <param name="primaryKeyColumns">
                 An array of DataColumn objects that are the primary key, or parent,
                 columns.
            </param>
            <param name="foreignKeyColumns">
                 An array of DataColumn objects that are the foreign key, or child,
                 columns.
            </param>
            <returns>
                 A new ForeignKeyConstraint.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.AddRange(Crestron.SimplSharp.CrestronData.Constraint[])">
            <summary>
                 Copies the elements of the specified ConstraintCollection array
                 to the end of the collection.
            </summary>
            <param name="constraints">
                 An array of ConstraintCollection objects to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.CanRemove(Crestron.SimplSharp.CrestronData.Constraint)">
            <summary>
                 Indicates whether a Constraint can be removed.
            </summary>
            <param name="constraint">
                 The Constraint to be tested for removal from the collection.
            </param>
            <returns>
                 true if the Constraint can be removed from collection; otherwise,
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Clear">
            <summary>
                 Clears the collection of any Constraint objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Contains(System.String)">
            <summary>
                 Indicates whether the Constraint object specified by name exists
                 in the collection.
            </summary>
            <param name="name">
                 The Constraint.ConstraintName of the constraint.
            </param>
            <returns>
                 true if the collection contains the specified constraint; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.CopyTo(Crestron.SimplSharp.CrestronData.Constraint[],System.Int32)">
            <summary>
                 Copies the collection objects to a one-dimensional System.Array instance
                 starting at the specified index.
            </summary>
            <param name="array">
                 The one-dimensional System.Array that is the destination of the values copied
                 from the collection.
            </param>
            <param name="index">
                 The index of the array at which to start inserting.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.IndexOf(Crestron.SimplSharp.CrestronData.Constraint)">
            <summary>
                 Gets the index of the specified Constraint.
            </summary>
            <param name="constraint">
                 The Constraint to search for.
            </param>
            <returns>
                 The zero-based index of the Constraint if it is in the collection;
                 otherwise, -1.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.IndexOf(System.String)">
            <summary>
                 Gets the index of the Constraint specified by name.
            </summary>
            <param name="constraintName">
                 The name of the Constraint.
            </param>
            <returns>
                 The index of the Constraint if it is in the collection; otherwise,
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Remove(Crestron.SimplSharp.CrestronData.Constraint)">
            <summary>
                 Removes the specified Constraint from the collection.
            </summary>
            <param name="constraint">
                 The Constraint to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The constraint argument is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The constraint does not belong to the collection.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.Remove(System.String)">
            <summary>
                 Removes the Constraint object specified by name from the collection.
            </summary>
            <param name="name">
                 The name of the Constraint to remove.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the Constraint object at the specified index from the
                 collection.
            </summary>
            <param name="index">
                 The index of the Constraint to remove.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 The collection does not have a constraint at this index.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies all the elements of the current InternalDataCollectionBase
                 to a one-dimensional System.Array, starting at the specified InternalDataCollectionBase
                 index.
            </summary>
            <param name="ar">
                 The one-dimensional System.Array to copy the current InternalDataCollectionBase
                 object's elements into.
            </param>
            <param name="index">
                 The destination System.Array index to start copying into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintCollection.GetEnumerator">
            <summary>
                 Gets an System.Collections.IEnumerator for the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator for the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintCollection.Item(System.Int32)">
            <summary>
                 Gets the Constraint from the collection at the specified index.
            </summary>
            <param name="index">
                 The index of the constraint to return.
            </param>
            <returns>
                 The Constraint at the specified index.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index value is greater than the number of items in the collection.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintCollection.Item(System.String)">
            <summary>
                 Gets the Constraint from the collection with the specified name.
            </summary>
            <param name="name">
                 The Constraint.ConstraintName of the constraint to return.
            </param>
            <returns>
                 The Constraint with the specified name; otherwise a null value
                 if the Constraint does not exist.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.ConstraintCollection.CollectionChanged">
            <summary>
                 Occurs whenever the ConstraintCollection is changed because of
                 Constraint objects being added or removed.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintCollection.Count">
            <summary>
                 Gets the total number of elements in a collection.
            </summary>
            <returns>
                 The total number of elements in a collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintCollection.IsReadOnly">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is read-only.
            </summary>
            <returns>
                 true if the collection is read-only; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintCollection.IsSynchronized">
            <summary>
                 Gets a value that indicates whether the InternalDataCollectionBase
                 is synchronized.
            </summary>
            <returns>
                 true if the collection is synchronized; otherwise, false. The default is
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintCollection.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize the collection.
            </summary>
            <returns>
                 The System.object used to synchronize the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ConstraintEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint">
            <summary>
                 Represents an action restriction enforced on a set of columns in a primary
                 key/foreign key relationship when a value or row is either deleted or updated.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.#ctor(Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Initializes a new instance of the ForeignKeyConstraint class
                 with the specified parent and child DataColumn objects.
            </summary>
            <param name="parentColumn">
                 The parent DataColumn in the constraint.
            </param>
            <param name="childColumn">
                 The child DataColumn in the constraint.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the columns is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types.-Or - The tables don't belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.#ctor(Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Initializes a new instance of the ForeignKeyConstraint class
                 with the specified arrays of parent and child DataColumn objects.
            </summary>
            <param name="parentColumns">
                 An array of parent DataColumn in the constraint.
            </param>
            <param name="childColumns">
                 An array of child DataColumn in the constraint.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the columns is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types.-Or - The tables don't belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn,Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Initializes a new instance of the ForeignKeyConstraint class
                 with the specified name, parent and child DataColumn objects.
            </summary>
            <param name="constraintName">
                 The name of the constraint.
            </param>
            <param name="parentColumn">
                 The parent DataColumn in the constraint.
            </param>
            <param name="childColumn">
                 The child DataColumn in the constraint.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the columns is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types.-Or - The tables don't belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Initializes a new instance of the ForeignKeyConstraint class
                 with the specified name, and arrays of parent and child DataColumn
                 objects.
            </summary>
            <param name="constraintName">
                 The name of the ForeignKeyConstraint. If null or empty string,
                 a default name will be given when added to the constraints collection.
            </param>
            <param name="parentColumns">
                 An array of parent DataColumn in the constraint.
            </param>
            <param name="childColumns">
                 An array of child DataColumn in the constraint.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the columns is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types.-Or - The tables don't belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],Crestron.SimplSharp.CrestronData.AcceptRejectRule,Crestron.SimplSharp.CrestronData.Rule,Crestron.SimplSharp.CrestronData.Rule)">
            <summary>
                 This constructor is provided for design time support in the Visual Studio
                 environment. ForeignKeyConstraint objects created by using this
                 constructor must then be added to the collection via ConstraintCollection.AddRange(Constraint[]).
                 Tables and columns with the specified names must exist at the time the method
                 is called, or if DataTable.BeginInit() has been called prior
                 to calling this constructor, the tables and columns with the specified names
                 must exist at the time that DataTable.EndInit() is called.
            </summary>
            <param name="constraintName">
                 The name of the constraint.
            </param>
            <param name="parentTableName">
                 The name of the parent DataTable that contains parent DataColumn
                 objects in the constraint.
            </param>
            <param name="parentColumnNames">
                 An array of the names of parent DataColumn objects in the constraint.
            </param>
            <param name="childColumnNames">
                 An array of the names of child DataColumn objects in the constraint.
            </param>
            <param name="acceptRejectRule">
                 One of the AcceptRejectRule values. Possible values include None,
                 Cascade, and Default.
            </param>
            <param name="deleteRule">
                 One of the Rule values to use when a row is deleted. The default
                 is Cascade. Possible values include: None, Cascade, SetNull, SetDefault,
                 and Default.
            </param>
            <param name="updateRule">
                 One of the Rule values to use when a row is updated. The default
                 is Cascade. Possible values include: None, Cascade, SetNull, SetDefault,
                 and Default.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the columns is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types.-Or - The tables don't belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],Crestron.SimplSharp.CrestronData.AcceptRejectRule,Crestron.SimplSharp.CrestronData.Rule,Crestron.SimplSharp.CrestronData.Rule)">
            <summary>
                 This constructor is provided for design time support in the Visual Studio
                 environment. ForeignKeyConstraint objects created by using this
                 constructor must then be added to the collection via ConstraintCollection.AddRange(Constraint[]).
                 Tables and columns with the specified names must exist at the time the method
                 is called, or if DataTable.BeginInit() has been called prior
                 to calling this constructor, the tables and columns with the specified names
                 must exist at the time that DataTable.EndInit() is called.
            </summary>
            <param name="constraintName">
                 The name of the constraint.
            </param>
            <param name="parentTableName">
                 The name of the parent DataTable that contains parent DataColumn
                 objects in the constraint.
            </param>
            <param name="parentTableNamespace">
                 The name of the DataTable.Namespace.
            </param>
            <param name="parentColumnNames">
                 An array of the names of parent DataColumn objects in the constraint.
            </param>
            <param name="childColumnNames">
                 An array of the names of child DataColumn objects in the constraint.
            </param>
            <param name="acceptRejectRule">
                 One of the AcceptRejectRule values. Possible values include None,
                 Cascade, and Default.
            </param>
            <param name="deleteRule">
                 One of the Rule values to use when a row is deleted. The default
                 is Cascade. Possible values include: None, Cascade, SetNull, SetDefault,
                 and Default.
            </param>
            <param name="updateRule">
                 One of the Rule values to use when a row is updated. The default
                 is Cascade. Possible values include: None, Cascade, SetNull, SetDefault,
                 and Default.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 One or both of the columns is null.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
                 The columns have different data types.-Or - The tables don't belong to the
                 same DataSet.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.Equals(System.Object)">
            <summary>
                 Gets a value indicating whether the current ForeignKeyConstraint
                 is identical to the specified object.
            </summary>
            <param name="key">
                 The object to which this ForeignKeyConstraint is compared. Two
                 ForeignKeyConstraint are equal if they constrain the same columns.
            </param>
            <returns>
                 true, if the objects are identical; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.GetHashCode">
            <summary>
                 Gets the hash code of this instance of the ForeignKeyConstraint
                 object.
            </summary>
            <returns>
                 A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.ToString">
            <summary>
                 Gets the Constraint.ConstraintName, if there is one, as a string.
            </summary>
            <returns>
                 The string value of the Constraint.ConstraintName.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.ConstraintName">
            <summary>
                 The name of a constraint in the ConstraintCollection.
            </summary>
            <returns>
                 The name of the Constraint.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The Constraint name is a null value or empty string.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The ConstraintCollection already contains a Constraint
                 with the same name (The comparison is not case-sensitive.).
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.ExtendedProperties">
            <summary>
                 Gets the collection of user-defined constraint properties.
            </summary>
            <returns>
                 A PropertyCollection of custom information.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.AcceptRejectRule">
            <summary>
                 Indicates the action that should take place across this constraint when DataTable.AcceptChanges()
                 is invoked.
            </summary>
            <returns>
                 One of the AcceptRejectRule values. Possible values include None,
                 and Cascade. The default is None.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.Columns">
            <summary>
                 Gets the child columns of this constraint.
            </summary>
            <returns>
                 An array of DataColumn objects that are the child columns of
                 the constraint.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.DeleteRule">
            <summary>
                 Gets or sets the action that occurs across this constraint when a row is
                 deleted.
            </summary>
            <returns>
                 One of the Rule values. The default is Cascade.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.RelatedColumns">
            <summary>
                 The parent columns of this constraint.
            </summary>
            <returns>
                 An array of DataColumn objects that are the parent columns of
                 the constraint.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.RelatedTable">
            <summary>
                 Gets the parent table of this constraint.
            </summary>
            <returns>
                 The parent DataTable of this constraint.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.Table">
            <summary>
                 Gets the child table of this constraint.
            </summary>
            <returns>
                 A DataTable that is the child table in the constraint.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ForeignKeyConstraint.UpdateRule">
            <summary>
                 Gets or sets the action that occurs across this constraint on when a row
                 is updated.
            </summary>
            <returns>
                 One of the Rule values. The default is Cascade.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.UniqueConstraint">
            <summary>
                 Represents a restriction on a set of columns in which all values must be
                 unique.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the specified DataColumn.
            </summary>
            <param name="column">
                 The DataColumn to constrain.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the given array of DataColumn objects.
            </summary>
            <param name="columns">
                 The array of DataColumn objects to constrain.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(Crestron.SimplSharp.CrestronData.DataColumn,System.Boolean)">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the DataColumn to constrain, and a value specifying whether the
                 constraint is a primary key.
            </summary>
            <param name="column">
                 The DataColumn to constrain.
            </param>
            <param name="isPrimaryKey">
                 true to indicate that the constraint is a primary key; otherwise, false.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(Crestron.SimplSharp.CrestronData.DataColumn[],System.Boolean)">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 an array of DataColumn objects to constrain, and a value specifying
                 whether the constraint is a primary key.
            </summary>
            <param name="columns">
                 An array of DataColumn objects to constrain.
            </param>
            <param name="isPrimaryKey">
                 true to indicate that the constraint is a primary key; otherwise, false.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn)">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the specified name and DataColumn.
            </summary>
            <param name="name">
                 The name of the constraint.
            </param>
            <param name="column">
                 The DataColumn to constrain.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn[])">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the specified name and array of DataColumn objects.
            </summary>
            <param name="name">
                 The name of the constraint.
            </param>
            <param name="columns">
                 The array of DataColumn objects to constrain.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn,System.Boolean)">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the specified name, the DataColumn to constrain, and a value
                 specifying whether the constraint is a primary key.
            </summary>
            <param name="name">
                 The name of the constraint.
            </param>
            <param name="column">
                 The DataColumn to constrain.
            </param>
            <param name="isPrimaryKey">
                 true to indicate that the constraint is a primary key; otherwise, false.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(System.String,Crestron.SimplSharp.CrestronData.DataColumn[],System.Boolean)">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the specified name, an array of DataColumn objects to constrain,
                 and a value specifying whether the constraint is a primary key.
            </summary>
            <param name="name">
                 The name of the constraint.
            </param>
            <param name="columns">
                 An array of DataColumn objects to constrain.
            </param>
            <param name="isPrimaryKey">
                 true to indicate that the constraint is a primary key; otherwise, false.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
            <summary>
                 Initializes a new instance of the UniqueConstraint class with
                 the specified name, an array of DataColumn objects to constrain,
                 and a value specifying whether the constraint is a primary key.
            </summary>
            <param name="name">
                 The name of the constraint.
            </param>
            <param name="columnNames">
                 An array of DataColumn objects to constrain.
               is PrimaryKey:
                 true to indicate that the constraint is a primary key; otherwise, false.
            </param>
            <param name="isPrimaryKey">
                 true to indicate that the constraint is a primary key; otherwise, false.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.Equals(System.Object)">
            <summary>
                 Compares this constraint to a second to determine if both are identical.
            </summary>
            <param name="key2">
                 The object to which this UniqueConstraint is compared.
            </param>
            <returns>
                 true, if the constraints are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.GetHashCode">
            <summary>
                 Gets the hash code of this instance of the UniqueConstraint object.
            </summary>
            <returns>
                 A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.UniqueConstraint.ToString">
            <summary>
                 Gets the Constraint.ConstraintName, if there is one, as a string.
            </summary>
            <returns>
                 The string value of the Constraint.ConstraintName.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.UniqueConstraint.ConstraintName">
            <summary>
                 The name of a constraint in the ConstraintCollection.
            </summary>
            <returns>
                 The name of the Constraint.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The Constraint name is a null value or empty string.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
                 The ConstraintCollection already contains a Constraint
                 with the same name (The comparison is not case-sensitive.).
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.UniqueConstraint.ExtendedProperties">
            <summary>
                 Gets the collection of user-defined constraint properties.
            </summary>
            <returns>
                 A PropertyCollection of custom information.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.UniqueConstraint.Columns">
            <summary>
                 Gets the array of columns that this constraint affects.
            </summary>
            <returns>
                 An array of DataColumn objects.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.UniqueConstraint.IsPrimaryKey">
            <summary>
                 Gets a value indicating whether or not the constraint is on a primary key.
            </summary>
            <returns>
                 true, if the constraint is on a primary key; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.UniqueConstraint.Table">
            <summary>
                 Gets the table to which this constraint belongs.
            </summary>
            <returns>
                 The DataTable to which the constraint belongs.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.PropertyCollection">
            <summary>
                 Represents a collection of properties that can be added to DataColumn,
                 DataSet, or DataTable.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.PropertyCollection.#ctor">
            <summary>
                 Initializes a new instance of the PropertyCollection class.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataViewManager">
            <summary>
                 Contains a default DataViewSettingCollection for each DataTable
                 in a DataSet.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewManager.#ctor">
            <summary>
                 Initializes a new instance of the DataViewManager class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewManager.#ctor(Crestron.SimplSharp.CrestronData.DataSet)">
            <summary>
                 Initializes a new instance of the DataViewManager class for the
                 specified DataSet.
            </summary>
            <param name="dataSet">
                 The name of the DataSet to use.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewManager.CreateDataView(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Creates a DataView for the specified DataTable.
            </summary>
            <param name="table">
                 The name of the DataTable to use in the DataView.
            </param>
            <returns>
                 A DataView object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewManager.DataSet">
            <summary>
                 Gets or sets the DataSet to use with the DataViewManager.
            </summary>
            <returns>
                 The DataSet to use.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewManager.DataViewSettingCollectionString">
            <summary>
                 Gets or sets a value that is used for code persistence.
            </summary>
            <returns>
                 A value that is used for code persistence.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewManager.DataViewSettings">
            <summary>
                 Gets the DataViewSettingCollection for each DataTable
                 in the DataSet.
            </summary>
            <returns>
                 A DataViewSettingCollection for each DataTable.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataViewManager.ListChanged">
            <summary>
                 Occurs after a row is added to or deleted from a DataView.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataViewSetting">
            <summary>
                 Represents the default settings for DataView.ApplyDefaultSort,
                 DataView.DataViewManager, DataView.RowFilter, DataView.RowStateFilter,
                 DataView.Sort, and DataView.Table for DataViews created
                 from the DataViewManager.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSetting.ApplyDefaultSort">
            <summary>
                 Gets or sets a value indicating whether to use the default sort.
            </summary>
            <returns>
                 true if the default sort is used; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSetting.DataViewManager">
            <summary>
                 Gets the DataViewManager that contains this DataViewSetting.
            </summary>
            <returns>
                 A DataViewManager object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSetting.RowFilter">
            <summary>
                 Gets or sets the filter to apply in the DataView.
            </summary>
            <returns>
                 A string that contains the filter to apply.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSetting.RowStateFilter">
            <summary>
                 Gets or sets a value indicating whether to display Current, Deleted, Modified
                 Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the DataView.
            </summary>
            <returns>
                 A value that indicates which rows to display.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSetting.Sort">
            <summary>
                 Gets or sets a value indicating the sort to apply in the DataView.
            </summary>
            <returns>
                 The sort to apply in the DataView.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSetting.Table">
            <summary>
                 Gets the DataTable to which the DataViewSetting properties
                 apply.
            </summary>
            <returns>
                 A DataTable object.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataViewSettingCollection">
            <summary>
                 Contains a read-only collection of DataViewSetting objects for
                 each DataTable in a DataSet.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies the collection objects to a one-dimensional System.Array instance
                 starting at the specified index.
            </summary>
            <param name="ar">
                 The one-dimensional System.Array that is the destination of the values copied
                 from the collection.
            </param>
            <param name="index">
                 The index of the array at which to start inserting.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.CopyTo(Crestron.SimplSharp.CrestronData.DataViewSetting[],System.Int32)">
            <summary>
                 Copies the collection objects to a one-dimensional System.Array instance
                 starting at the specified index.
            </summary>
            <param name="ar">
                 The one-dimensional System.Array that is the destination of the values copied
                 from the collection.
            </param>
            <param name="index">
                 The index of the array at which to start inserting.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.GetEnumerator">
            <summary>
                 Gets an System.Collections.IEnumerator for the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.Count">
            <summary>
                 Gets the number of DataViewSetting objects in the DataViewSettingCollection.
            </summary>
            <returns>
                 The number of DataViewSetting objects in the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.IsReadOnly">
            <summary>
                 Gets a value that indicates whether the DataViewSettingCollection
                 is read-only.
            </summary>
            <returns>
                 Returns true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.IsSynchronized">
            <summary>
                 Gets a value that indicates whether access to the DataViewSettingCollection
                 is synchronized (thread-safe).
            </summary>
            <returns>
                 This property is always false, unless overridden by a derived class.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize access to the DataViewSettingCollection.
            </summary>
            <returns>
                 An object that can be used to synchronize access to the DataViewSettingCollection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.Item(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Gets the DataViewSetting objects of the specified DataTable
                 from the collection.
            </summary>
            <param name="table">
                 The DataTable to find.
            </param>
            <returns>
                 A DataViewSetting.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.Item(System.Int32)">
            <summary>
                 Gets the DataViewSetting objects of the DataTable
                 specified by its index.
            </summary>
            <param name="index">
                 The zero-based index of the DataTable to find.
            </param>
            <returns>
                 A DataViewSetting.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingCollection.Item(System.String)">
            <summary>
                 Gets the DataViewSetting of the DataTable specified
                 by its name.
            </summary>
            <param name="tableName">
                 The name of the DataTable to find.
            </param>
            <returns>
                 A DataViewSetting.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewSettingEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataViewSettingEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataViewSettingEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRowView">
            <summary>
                 Represents a customized view of a DataRow.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.BeginEdit">
            <summary>
                 Begins an edit procedure.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.CancelEdit">
            <summary>
                 Cancels an edit procedure.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.CreateChildView(Crestron.SimplSharp.CrestronData.DataRelation)">
            <summary>
                 Returns a DataView for the child DataTable with the
                 specified DataRelation.
            </summary>
            <param name="relation">
                 The DataRelation object.
            </param>
            <returns>
                 a DataView for the child DataTable.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.CreateChildView(System.String)">
            <summary>
                 Returns a DataView for the child DataTable with the
                 specified DataRelation name.
            </summary>
            <param name="relationName">
                 A string containing the DataRelation name.
            </param>
            <returns>
                 a DataView for the child DataTable.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.Delete">
            <summary>
                 Deletes a row.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.EndEdit">
            <summary>
                 Ends an edit procedure.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.Equals(System.Object)">
            <summary>
                 Gets a value indicating whether the current DataRowView is identical
                 to the specified object.
            </summary>
            <param name="other">
                 An System.Object to be compared.
            </param>
            <returns>
                 true if object is a DataRowView and it returns the same row as
                 the current DataRowView; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowView.GetHashCode">
            <summary>
                 Returns the hash code of the DataRow object.
            </summary>
            <returns>
                 A 32-bit signed integer hash code 1, which represents Boolean true if the
                 value of this instance is nonzero; otherwise the integer zero, which represents
                 Boolean false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowView.DataView">
            <summary>
                 Gets the DataView to which this row belongs.
            </summary>
            <returns>
                 The DataView to which this row belongs.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowView.IsEdit">
            <summary>
                 Indicates whether the row is in edit mode.
            </summary>
            <returns>
                 true if the row is in edit mode; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowView.IsNew">
            <summary>
                 Indicates whether a DataRowView is new.
            </summary>
            <returns>
                 true if the row is new; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowView.Row">
            <summary>
                 Gets the DataRow being viewed.
            </summary>
            <returns>
                 The DataRow being viewed by the DataRowView.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowView.RowVersion">
            <summary>
                 Gets the current version description of the DataRow.
            </summary>
            <returns>
                 One of the DataRowVersion values. Possible values for the DataRowView.RowVersion
                 property are Default, Original, Current, and Proposed.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowView.Item(System.Int32)">
            <summary>
                 Gets or sets a value in a specified column.
            </summary>
            <param name="ndx">
                 The specified column.
            </param>
            <returns>
                 The value of the column.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowView.Item(System.String)">
            <summary>
                 Gets or sets a value in a specified column.
            </summary>
            <param name="property">
                 String that contains the specified column.
            </param>
            <returns>
                 The value of the column.
            </returns>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronData.DataRowView.PropertyChanged">
            <summary>
                 Event that is raised when a DataRowView property is changed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowViewEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowViewEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowViewEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.StateChangeEventHandler">
            <summary>
                 Represents the method that will handle the DbConnection.StateChange
                 event.
            </summary>
            <param name="sender">
                 The source of the event.
            </param>
            <param name="e">
                 The StateChangeEventArgs that contains the event data.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.MergeFailedEventHandler">
            <summary>
                 Represents the method that will handle the DataSet.MergeFailed
                 event.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataColumnChangeEventHandler">
            <summary>
                 Represents the method that will handle the DataTable.ColumnChanging
                 event.
            </summary>
            <param name="sender">
                 The source of the event.
            </param>
            <param name="e">
                 A DataColumnChangeEventArgs that contains the event data.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRowChangeEventHandler">
            <summary>
                 Represents the method that will handle the DataTable.RowChanging,
                 DataTable.RowChanged, DataTable.RowDeleting, and
                 DataTable.RowDeleted events of a DataTable.
            </summary>
            <param name="sender">
                 The source of the event.
            </param>
            <param name="e">
                 A DataRowChangeEventArgs that contains the event data.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataTableClearEventHandler">
            <summary>
                 Represents the method that handles the DataTable.Clear() method.
            </summary>
            <param name="sender">
                 The source of the event.
            </param>
            <param name="e">
                 A DataTableClearEventArgs that contains the event data.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataTableNewRowEventHandler">
            <summary>
                 Represents the method that handles the DataTable.NewRow() method.
            </summary>
            <param name="sender">
                 The source of the event.
            </param>
            <param name="e">
                 A DataTableNewRowEventArgs that contains the event data.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.FillErrorEventHandler">
            <summary>
                 Represents the method that will handle the DataAdapter.FillError
                 event.
            </summary>
            <param name="sender">
                 The source of the event.
            </param>
            <param name="e">
                 The FillErrorEventArgs that contains the event data.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.MergeFailedEventArgs">
            <summary>
                 Occurs when a target and source DataRow have the same primary key value,
                 and the DataSet.EnforceConstraints property is set to true.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.MergeFailedEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataTable,System.String)">
            <summary>
                 Initializes a new instance of a MergeFailedEventArgs class with
                 the DataTable and a description of the merge conflict.
            </summary>
            <param name="table">
                 The DataTable object.
            </param>
            <param name="conflict">
                 A description of the merge conflict.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.MergeFailedEventArgs.Conflict">
            <summary>
                 Returns a description of the merge conflict.
            </summary>
            <returns>
                 A description of the merge conflict.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.MergeFailedEventArgs.Table">
            <summary>
                 Returns the DataTable object.
            </summary>
            <returns>
                 The DataTable object.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataColumnChangeEventArgs">
            <summary>
                 Provides data for the DataTable.ColumnChanging event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataColumnChangeEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.DataColumn,System.Object)">
            <summary>
                 Initializes a new instance of the DataColumnChangeEventArgs class.
            </summary>
            <param name="row">
                 The DataRow of the column with the changing value.
            </param>
            <param name="column">
                 The DataColumn with the changing value.
            </param>
            <param name="value">
                 The new value.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnChangeEventArgs.Column">
            <summary>
                 Gets the DataColumn with a changing value.
            </summary>
            <returns>
                 The DataColumn with a changing value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnChangeEventArgs.ProposedValue">
            <summary>
                 Gets or sets the proposed new value for the column.
            </summary>
            <returns>
                 The proposed value, of type System.Object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataColumnChangeEventArgs.Row">
            <summary>
                 Gets the DataRow of the column with a changing value.
            </summary>
            <returns>
                 The DataRow of the column with a changing value.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRowChangeEventArgs">
            <summary>
                 Provides data for the DataTable.RowChanged, DataTable.RowChanging,
                 DataTable.OnRowDeleting(DataRowChangeEventArgs),
                 and DataTable.OnRowDeleted(DataRowChangeEventArgs)
                 events.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataRowChangeEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.DataRowAction)">
            <summary>
                 Initializes a new instance of the DataRowChangeEventArgs class.
            </summary>
            <param name="row">
                 The DataRow upon which an action is occurring.
            </param>
            <param name="action">
                 One of the DataRowAction values.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowChangeEventArgs.Action">
            <summary>
                 Gets the action that has occurred on a DataRow.
            </summary>
            <returns>
                 One of the DataRowAction values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataRowChangeEventArgs.Row">
            <summary>
                 Gets the row upon which an action has occurred.
            </summary>
            <returns>
                 The DataRow upon which an action has occurred.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataTableClearEventArgs">
            <summary>
                 Provides data for the DataTable.Clear() method.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableClearEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Initializes a new instance of the DataTableClearEventArgs class.
            </summary>
            <param name="dataTable">
                 The DataTable whose rows are being cleared.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableClearEventArgs.Table">
            <summary>
                 Gets the table whose rows are being cleared.
            </summary>
            <returns>
                 The DataTable whose rows are being cleared.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableClearEventArgs.TableName">
            <summary>
                 Gets the table name whose rows are being cleared.
            </summary>
            <returns>
                 A System.String indicating the table name.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableClearEventArgs.TableNamespace">
            <summary>
                 Gets the namespace of the table whose rows are being cleared.
            </summary>
            <returns>
                 A System.String indicating the namespace name.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataTableNewRowEventArgs">
            <summary>
                 Provides data for the DataTable.NewRow() method.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableNewRowEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataRow)">
            <summary>
                 Initializes a new instance of DataTableNewRowEventArgs.
            </summary>
            <param name="dataRow">
                 The DataRow being added.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableNewRowEventArgs.Row">
            <summary>
                 Gets the row that is being added.
            </summary>
            <returns>
                 The DataRow that is being added.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.FillErrorEventArgs">
            <summary>
                 Provides data for the DataAdapter.FillError event of a
                 DbDataAdapter.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.FillErrorEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataTable,System.Object[])">
            <summary>
                 Initializes a new instance of the FillErrorEventArgs class.
            </summary>
            <param name="dataTable">
                 The DataTable being updated.
            </param>
            <param name="values">
                 The values for the row being updated.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.FillErrorEventArgs.Continue">
            <summary>
                 Gets or sets a value indicating whether to continue the fill operation despite
                 the error.
            </summary>
            <returns>
                 true if the fill operation should continue; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.FillErrorEventArgs.DataTable">
            <summary>
                 Gets the DataTable being updated when the error occurred.
            </summary>
            <returns>
                 The DataTable being updated.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.FillErrorEventArgs.Errors">
            <summary>
                 Gets the errors being handled.
            </summary>
            <returns>
                 The errors being handled.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.FillErrorEventArgs.Values">
            <summary>
                 Gets the values for the row being updated when the error occurred.
            </summary>
            <returns>
                 The values for the row being updated.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.StateChangeEventArgs">
            <summary>
                 Provides data for the state change event of a .NET Framework data provider.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.StateChangeEventArgs.#ctor(Crestron.SimplSharp.CrestronData.ConnectionState,Crestron.SimplSharp.CrestronData.ConnectionState)">
            <summary>
                 Initializes a new instance of the StateChangeEventArgs class,
                 when given the original state and the current state of the object.
            </summary>
            <param name="originalState">
                 One of the ConnectionState values.
            </param>
            <param name="currentState">
                 One of the ConnectionState values.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.StateChangeEventArgs.CurrentState">
            <summary>
                 Gets the new state of the connection. The connection object will be in the
                 new state already when the event is fired.
            </summary>
            <returns>
                 One of the ConnectionState values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.StateChangeEventArgs.OriginalState">
            <summary>
                 Gets the original state of the connection.
            </summary>
            <returns>
                 One of the ConnectionState values.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataTableReader">
            <summary>
                 The DataTableReader obtains the contents of one or more DataTable
                 objects in the form of one or more read-only, forward-only result sets.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.#ctor(Crestron.SimplSharp.CrestronData.DataTable)">
            <summary>
                 Initializes a new instance of the DataTableReader class by using
                 data from the supplied DataTable.
            </summary>
            <param name="dataTable">
                 The DataTable from which the new DataTableReader
                 obtains its result set.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.#ctor(Crestron.SimplSharp.CrestronData.DataTable[])">
            <summary>
                 Initializes a new instance of the DataTableReader class using
                 the supplied array of DataTable objects.
            </summary>
            <param name="dataTables">
                 The array of DataTable objects that supplies the results for
                 the new DataTableReader object.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.Close">
            <summary>
                 Closes the current DataTableReader.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetBoolean(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.Boolean.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a Boolean.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetByte(System.Int32)">
            <summary>
                 Gets the value of the specified column as a byte.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a byte.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of bytes starting at the specified column offset into the
                 buffer as an array starting at the specified buffer offset.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <param name="dataIndex">
                 The index within the field from which to start the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to read the stream of bytes.
            </param>
            <param name="bufferIndex">
                 The index within the buffer at which to start placing the data.
            </param>
            <param name="length">
                 The maximum length to copy into the buffer.
            </param>
            <returns>
                 The actual number of bytes read.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a byte array.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetChar(System.Int32)">
            <summary>
                 Gets the value of the specified column as a character.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified field does not contain a character.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
                 Returns the value of the specified column as a character array.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <param name="dataIndex">
                 The index within the field from which to start the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to read the stream of chars.
            </param>
            <param name="bufferIndex">
                 The index within the buffer at which to start placing the data.
            </param>
            <param name="length">
                 The maximum length to copy into the buffer.
            </param>
            <returns>
                 The actual number of characters read.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a character array.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetDataTypeName(System.Int32)">
            <summary>
                 Gets a string representing the data type of the specified column.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A string representing the column's data type.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetDateTime(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.DateTime object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a DateTime value.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetDecimal(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.Decimal.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a Decimal value.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetDouble(System.Int32)">
            <summary>
                 Gets the value of the column as a double-precision floating point number.
            </summary>
            <param name="ordinal">
                 The zero-based ordinal of the column.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a double-precision floating point number.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetEnumerator">
            <summary>
                 Returns an enumerator that can be used to iterate through the item collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator object that represents the item collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetFieldType(System.Int32)">
            <summary>
                 Gets the System.Type that is the data type of the object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The System.Type that is the data type of the object.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetFloat(System.Int32)">
            <summary>
                 Gets the value of the specified column as a single-precision floating point
                 number.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a single-precision floating point number.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetGuid(System.Int32)">
            <summary>
                 Gets the value of the specified column as a globally-unique identifier (GUID).
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a GUID.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetInt16(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 16-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a 16-bit signed integer.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetInt32(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 32-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a 32-bit signed integer value.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetInt64(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 64-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a 64-bit signed integer value.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetName(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.String.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal
            </param>
            <returns>
                 The name of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetOrdinal(System.String)">
            <summary>
                 Gets the column ordinal, given the name of the column.
            </summary>
            <param name="name">
                 The name of the column.
            </param>
            <returns>
                 The zero-based column ordinal.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The name specified is not a valid column name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
            <summary>
                 Gets the type of the specified column in provider-specific format.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The System.Type that is the data type of the object.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetProviderSpecificValue(System.Int32)">
            <summary>
                 Gets the value of the specified column in provider-specific format.
            </summary>
            <param name="ordinal">
                 The zero-based number of the column whose value is retrieved.
            </param>
            <returns>
                 The value of the specified column in provider-specific format.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetProviderSpecificValues(System.Object[])">
            <summary>
                 Fills the supplied array with provider-specific type information for all
                 the columns in the DataTableReader.
            </summary>
            <param name="values">
                 An array of objects to be filled in with type information for the columns
                 in the DataTableReader.
            </param>
            <returns>
                 The number of column values copied into the array.
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetSchemaTable">
            <summary>
                 Returns a DataTable that describes the column metadata of the
                 DataTableReader.
            </summary>
            <returns>
                 A DataTable that describes the column metadata.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The DataTableReader is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetString(System.Int32)">
            <summary>
                 Gets the value of the specified column as a string.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal
            </param>
            <returns>
                 The value of the specified column.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
            <exception cref="T:System.InvalidCastException">
                 The specified column does not contain a string.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetValue(System.Int32)">
            <summary>
                 Gets the value of the specified column in its native format.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal
            </param>
            <returns>
                 The value of the specified column. This method returns DBNull for null columns.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access columns in a closed DataTableReader
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetValues(System.Object[])">
            <summary>
                 Gets an array of Objects that contains the values from the current row in
                 the DataTableReader.
            </summary>
            <param name="values">
                 An array of System.Object into which to copy the column values from the DataTableReader.
            </param>
            <returns>
                 The number of column values copied into the array.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.IsDBNull(System.Int32)">
            <summary>
                 Gets a value that indicates whether the column contains non-existent or missing
                 values.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal
            </param>
            <returns>
                 true if the specified column value is equivalent to System.DBNull; otherwise,
                 false.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.NextResult">
            <summary>
                 Advances the DataTableReader to the next result set, if any.
            </summary>
            <returns>
                 true if there was another result set; otherwise false.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to navigate within a closed DataTableReader.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.Read">
            <summary>
                 Advances the DataTableReader to the next record.
            </summary>
            <returns>
                 true if there was another row to read; otherwise false.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataTableReader.GetDbDataReader(System.Int32)">
            <summary>
                 Returns a DbDataReader object for the requested column
                 ordinal that can be overridden with a provider-specific implementation.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A DbDataReader object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableReader.Depth">
            <summary>
                 The depth of nesting for the current row of the DataTableReader.
            </summary>
            <returns>
                 The depth of nesting for the current row; always zero.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableReader.FieldCount">
            <summary>
                 Returns the number of columns in the current row.
            </summary>
            <returns>
                 When not positioned in a valid result set, 0; otherwise the number of columns
                 in the current row.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to retrieve the field count in a closed DataTableReader.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableReader.HasRows">
            <summary>
                 Gets a value that indicates whether the DataTableReader contains
                 one or more rows.
            </summary>
            <returns>
                 true if the DataTableReader contains one or more rows; otherwise
                 false.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to retrieve information about a closed DataTableReader.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableReader.IsClosed">
            <summary>
                 Gets a value that indicates whether the DataTableReader is closed.
            </summary>
            <returns>
                 Returns true if the DataTableReader is closed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableReader.RecordsAffected">
            <summary>
                 Gets the number of rows inserted, changed, or deleted by execution of the
                 SQL statement.
            </summary>
            <returns>
                 The DataTableReader does not support this property and always
                 returns 0.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableReader.Item(System.Int32)">
            <summary>
                 Gets the value of the specified column in its native format given the column
                 ordinal.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column in its native format.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 to DataTableReader.FieldCount
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataTableReader.Item(System.String)">
            <summary>
                 Gets the value of the specified column in its native format given the column
                 name.
            </summary>
            <param name="name">
                 The name of the column.
            </param>
            <returns>
                 The value of the specified column in its native format.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The name specified is not a valid column name.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
                 An attempt was made to retrieve data from a deleted row.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 An attempt was made to read or access a column in a closed DataTableReader.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.LoadOption">
            <summary>
                 Controls how the values from the data source will be applied to existing
                 rows when using the Overload:DataTable.Load or Overload:DataSet.Load
                 method.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.LoadOption.OverwriteChanges">
            <summary>
                 The incoming values for this row will be written to both the current value
                 and the original value versions of the data for each column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.LoadOption.PreserveChanges">
            <summary>
                 The incoming values for this row will be written to the original value version
                 of each column. The current version of the data in each column will not be
                 changed. This is the default.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.LoadOption.Upsert">
            <summary>
                 The incoming values for this row will be written to the current version of
                 each column. The original version of each column's data will not be changed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRowState">
            <summary>
                 Gets the state of a DataRow object.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowState.Detached">
            <summary>
                 The row has been created but is not part of any DataRowCollection.
                 A DataRow is in this state immediately after it has been created
                 and before it is added to a collection, or if it has been removed from a
                 collection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowState.Unchanged">
            <summary>
                 The row has not changed since DataRow.AcceptChanges() was last
                 called.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowState.Added">
            <summary>
                 The row has been added to a DataRowCollection, and DataRow.AcceptChanges()
                 has not been called.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowState.Deleted">
            <summary>
                 The row was deleted using the DataRow.Delete() method of the
                 DataRow.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowState.Modified">
            <summary>
                 The row has been modified and DataRow.AcceptChanges() has not
                 been called.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.MissingSchemaAction">
            <summary>
                 Specifies the action to take when adding data to the DataSet
                 and the required DataTable or DataColumn is missing.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MissingSchemaAction.Add">
            <summary>
                 Adds the necessary columns to complete the schema.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MissingSchemaAction.Ignore">
            <summary>
                 Ignores the extra columns.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MissingSchemaAction.Error">
            <summary>
                 An System.InvalidOperationException is generated if the specified column
                 mapping is missing.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MissingSchemaAction.AddWithKey">
            <summary>
                 Adds the necessary columns and primary key information to complete the schema.
                 For more information about how primary key information is added to a DataTable,
                 see IDataAdapter.FillSchema(DataSet,SchemaType).To
                 function properly with the .NET Framework Data Provider for OLE DB, AddWithKey
                 requires that the native OLE DB provider obtains necessary primary key information
                 by setting the DBPROP_UNIQUEROWS property, and then determines which columns
                 are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset.
                 As an alternative, the user may explicitly set the primary key constraints
                 on each DataTable. This ensures that incoming records that match
                 existing records are updated instead of appended. When using AddWithKey,
                 the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause
                 to the statement being executed. The user should be aware of potential side
                 effects, such as interference with the use of SET FMTONLY ON statements.
                 See SQL Server Books Online for more information.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.MissingMappingAction">
            <summary>
                 Determines the action that occurs when a mapping is missing from a source
                 table or a source column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MissingMappingAction.Passthrough">
            <summary>
                 The source column or source table is created and added to the DataSet
                 using its original name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MissingMappingAction.Ignore">
            <summary>
                 The column or table not having a mapping is ignored. Returns null.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MissingMappingAction.Error">
            <summary>
                 An System.InvalidOperationException is generated if the specified column
                 mapping is missing.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataViewRowState">
            <summary>
                 Describes the version of data in a DataRow.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.None">
            <summary>
                 None.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.Unchanged">
            <summary>
                 An unchanged row.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.Added">
            <summary>
                 A new row.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.Deleted">
            <summary>
                 A deleted row.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.ModifiedCurrent">
            <summary>
                 A current version of original data that has been modified (see ModifiedOriginal).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.CurrentRows">
            <summary>
                 Current rows including unchanged, new, and modified rows.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.ModifiedOriginal">
            <summary>
                 The original version of the data that was modified. (Although the data has
                 since been modified, it is available as ModifiedCurrent).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataViewRowState.OriginalRows">
            <summary>
                 Original rows including unchanged and deleted rows.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRowVersion">
            <summary>
                 Describes the version of a DataRow.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowVersion.Original">
            <summary>
                 The row contains its original values.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowVersion.Current">
            <summary>
                 The row contains current values.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowVersion.Proposed">
            <summary>
                 The row contains a proposed value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowVersion.Default">
            <summary>
                 The default version of DataRowState. For a DataRowState value
                 of Added, Modified or Deleted, the default version is Current. For a DataRowState
                 value of Detached, the version is Proposed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.MappingType">
            <summary>
                 Specifies how a DataColumn is mapped.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MappingType.Element">
            <summary>
                 The column is mapped to an XML element.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MappingType.Attribute">
            <summary>
                 The column is mapped to an XML attribute.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MappingType.SimpleContent">
            <summary>
                 The column is mapped to an System.Xml.XmlText node.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.MappingType.Hidden">
            <summary>
                 The column is mapped to an internal structure.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataSetDateTime">
            <summary>
                 Describes the serialization format for System.DateTime columns in a DataSet.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataSetDateTime.Local">
            <summary>
                 DateTime is always stored in Local. If DataSetDateTime.Utc or
                 DataSetDateTime.Unspecified is assigned to a column in this mode,
                 it is first converted into Local. Serialization in this mode is always performed
                 in Local. There is an offset during serialization.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataSetDateTime.Unspecified">
            <summary>
                 DateTime is always stored in Unspecified. If DataSetDateTime.Local
                 or DataSetDateTime.Utc is assigned to a column in this mode,
                 it is first converted into DataSetDateTime.Unspecified. Serialization
                 in this mode does not cause an offset.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataSetDateTime.UnspecifiedLocal">
            <summary>
                 DateTime is stored in Unspecified. If DataSetDateTime.Local or
                 DataSetDateTime.Utc is assigned to a column in this mode, it
                 is first converted into DataSetDateTime.Unspecified. Serialization
                 in this mode causes offset. This is the default behavior and is backward
                 compatible. This option should be thought of as being Unspecified in storage
                 but applying an offset that is similar to DataSetDateTime.Local
                 during serialization.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataSetDateTime.Utc">
            <summary>
                 DateTime is stored in Universal Coordinated Time (UTC). If DataSetDateTime.Local
                 or DataSetDateTime.Unspecified is assigned to a column in this
                 mode, it is first converted into Utc format. Serialization in this mode is
                 always performed in Utc. There is no offset during serialization.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.AcceptRejectRule">
            <summary>
                 Determines the action that occurs when the DataSet.AcceptChanges()
                 or DataTable.RejectChanges() method is invoked on a DataTable
                 with a ForeignKeyConstraint.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.AcceptRejectRule.None">
            <summary>
                 No action occurs (default).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.AcceptRejectRule.Cascade">
            <summary>
                 Changes are cascaded across the relationship.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Rule">
            <summary>
                 Indicates the action that occurs when a ForeignKeyConstraint
                 is enforced.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Rule.None">
            <summary>
                 No action taken on related rows.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Rule.Cascade">
            <summary>
                 Delete or update related rows. This is the default.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Rule.SetNull">
            <summary>
                 Set values in related rows to DBNull.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Rule.SetDefault">
            <summary>
                 Set values in related rows to the value contained in the DataColumn.DefaultValue
                 property.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataRowAction">
            <summary>
                 Describes an action performed on a DataRow.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.Nothing">
            <summary>
                 The row has not changed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.Delete">
            <summary>
                 The row was deleted from the table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.Change">
            <summary>
                 The row has changed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.Rollback">
            <summary>
                 The most recent change to the row has been rolled back.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.Commit">
            <summary>
                 The changes to the row have been committed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.Add">
            <summary>
                 The row has been added to the table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.ChangeOriginal">
            <summary>
                 The original version of the row has been changed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DataRowAction.ChangeCurrentAndOriginal">
            <summary>
                 The original and the current versions of the row have been changed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DbType">
            <summary>
                 Specifies the data type of a field, a property, or a Parameter object of
                 a .NET Framework data provider.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.AnsiString">
            <summary>
                 A variable-length stream of non-Unicode characters ranging between 1 and
                 8,000 characters.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Binary">
            <summary>
                 A variable-length stream of binary data ranging between 1 and 8,000 bytes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Byte">
            <summary>
                 An 8-bit unsigned integer ranging in value from 0 to 255.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Boolean">
            <summary>
                 A simple type representing Boolean values of true or false.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Currency">
            <summary>
                 A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63
                 a currency unit.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Date">
            <summary>
                 A type representing a date value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.DateTime">
            <summary>
                 A type representing a date and time value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Decimal">
            <summary>
                 A simple type representing values ranging from 1.0 x 10 -28 to approximately
                 7.9 x 10 28 with 28-29 significant digits.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Double">
            <summary>
                 A floating point type representing values ranging from approximately 5.0
                 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Guid">
            <summary>
                 A globally unique identifier (or GUID).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Int16">
            <summary>
                 An integral type representing signed 16-bit integers with values between
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Int32">
            <summary>
                 An integral type representing signed 32-bit integers with values between
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Int64">
            <summary>
                 An integral type representing signed 64-bit integers with values between
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Object">
            <summary>
                 A general type representing any reference or value type not explicitly represented
                 by another DbType value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.SByte">
            <summary>
                 An integral type representing signed 8-bit integers with values between -128
                 and 127.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Single">
            <summary>
                 A floating point type representing values ranging from approximately 1.5
                 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.String">
            <summary>
                 A type representing Unicode character strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Time">
            <summary>
                 A type representing a time value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.UInt16">
            <summary>
                 An integral type representing unsigned 16-bit integers with values between
                 0 and 65535.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.UInt32">
            <summary>
                 An integral type representing unsigned 32-bit integers with values between
                 0 and 4294967295.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.UInt64">
            <summary>
                 An integral type representing unsigned 64-bit integers with values between
                 0 and 18446744073709551615.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.VarNumeric">
            <summary>
                 A variable-length numeric value.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.AnsiStringFixedLength">
            <summary>
                 A fixed-length stream of non-Unicode characters.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.StringFixedLength">
            <summary>
                 A fixed-length string of Unicode characters.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.Xml">
            <summary>
                 A parsed representation of an XML document or fragment.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.DateTime2">
            <summary>
                 Date and time data. Date value range is from January 1,1 AD through December
                 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an
                 accuracy of 100 nanoseconds.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.DbType.DateTimeOffset">
            <summary>
                 Date and time data with time zone awareness. Date value range is from January
                 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through
                 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range
                 is -14:00 through +14:00.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IsolationLevel">
            <summary>
                 Specifies the transaction locking behavior for the connection.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.IsolationLevel.Unspecified">
            <summary>
                 A different isolation level than the one specified is being used, but the
                 level cannot be determined.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.IsolationLevel.Chaos">
            <summary>
                 The pending changes from more highly isolated transactions cannot be overwritten.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.IsolationLevel.ReadUncommitted">
            <summary>
                 A dirty read is possible, meaning that no shared locks are issued and no
                 exclusive locks are honored.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.IsolationLevel.ReadCommitted">
            <summary>
                 Shared locks are held while the data is being read to avoid dirty reads,
                 but the data can be changed before the end of the transaction, resulting
                 in non-repeatable reads or phantom data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.IsolationLevel.RepeatableRead">
            <summary>
                 Locks are placed on all data that is used in a query, preventing other users
                 from updating the data. Prevents non-repeatable reads but phantom rows are
                 still possible.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.IsolationLevel.Serializable">
            <summary>
                 A range lock is placed on the DataSet, preventing other users
                 from updating or inserting rows into the dataset until the transaction is
                 complete.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.IsolationLevel.Snapshot">
            <summary>
                 Reduces blocking by storing a version of data that one application can read
                 while another is modifying the same data. Indicates that from one transaction
                 you cannot see changes made in other transactions, even if you requery.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ConnectionState">
            <summary>
                 Describes the current state of the connection to a data source.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConnectionState.Closed">
            <summary>
                 The connection is closed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConnectionState.Open">
            <summary>
                 The connection is open.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConnectionState.Connecting">
            <summary>
                 The connection object is connecting to the data source. (This value is reserved
                 for future versions of the product.)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConnectionState.Executing">
            <summary>
                 The connection object is executing a command. (This value is reserved for
                 future versions of the product.)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConnectionState.Fetching">
            <summary>
                 The connection object is retrieving data. (This value is reserved for future
                 versions of the product.)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConnectionState.Broken">
            <summary>
                 The connection to the data source is broken. This can occur only after the
                 connection has been opened. A connection in this state may be closed and
                 then re-opened. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.CommandBehavior">
            <summary>
                 Provides a description of the results of the query and its effect on the
                 database.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandBehavior.Default">
            <summary>
                 The query may return multiple result sets. Execution of the query may affect
                 the database state. Default sets no CommandBehavior flags, so
                 calling ExecuteReader(CommandBehavior.Default) is functionally equivalent
                 to calling ExecuteReader().
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandBehavior.SingleResult">
            <summary>
                 The query returns a single result set.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandBehavior.SchemaOnly">
            <summary>
                 The query returns column information only. When using CommandBehavior.SchemaOnly,
                 the .NET Framework Data Provider for SQL Server precedes the statement being
                 executed with SET FMTONLY ON.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandBehavior.KeyInfo">
            <summary>
                 The query returns column and primary key information.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandBehavior.SingleRow">
            <summary>
                 The query is expected to return a single row. Execution of the query may
                 affect the database state. Some .NET Framework data providers may, but are
                 not required to, use this information to optimize the performance of the
                 command. When you specify CommandBehavior.SingleRow with the
                 OleDb.OleDbCommand.ExecuteReader() method of the OleDb.OleDbCommand
                 object, the .NET Framework Data Provider for OLE DB performs binding using
                 the OLE DB IRow interface if it is available. Otherwise, it uses the IRowset
                 interface. If your SQL statement is expected to return only a single row,
                 specifying CommandBehavior.SingleRow can also improve application
                 performance. It is possible to specify SingleRow when executing queries that
                 return multiple result sets. In that case, multiple result sets are still
                 returned, but each result set has a single row.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandBehavior.SequentialAccess">
            <summary>
                 Provides a way for the DataReader to handle rows that contain columns with
                 large binary values. Rather than loading the entire row, SequentialAccess
                 enables the DataReader to load data as a stream. You can then use the GetBytes
                 or GetChars method to specify a byte location to start the read operation,
                 and a limited buffer size for the data being returned.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandBehavior.CloseConnection">
            <summary>
                 When the command is executed, the associated Connection object is closed
                 when the associated DataReader object is closed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.CommandType">
            <summary>
                 Specifies how a command string is interpreted.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandType.Text">
            <summary>
                 An SQL text command. (Default.)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandType.StoredProcedure">
            <summary>
                 The name of a stored procedure.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.CommandType.TableDirect">
            <summary>
                 The name of a table.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ConflictOption">
            <summary>
                 Specifies how conflicting changes to the data source will be detected and
                 resolved.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConflictOption.CompareAllSearchableValues">
            <summary>
                 Update and delete statements will include all searchable columns from the
                 table in the WHERE clause. This is equivalent to specifying CompareAllValuesUpdate
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConflictOption.CompareRowVersion">
            <summary>
                 If any Timestamp columns exist in the table, they are used in the WHERE clause
                 for all generated update statements. This is equivalent to specifying CompareRowVersionUpdate
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ConflictOption.OverwriteChanges">
            <summary>
                 All update and delete statements include only DataTable.PrimaryKey
                 columns in the WHERE clause. If no DataTable.PrimaryKey is defined,
                 all searchable columns are included in the WHERE clause. This is equivalent
                 to OverwriteChangesUpdate | OverwriteChangesDelete.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.StatementType">
            <summary>
                 Specifies the type of SQL query to be used by the OleDb.OleDbRowUpdatedEventArgs,
                 OleDb.OleDbRowUpdatingEventArgs, SqlClient.SqlRowUpdatedEventArgs,
                 or SqlClient.SqlRowUpdatingEventArgs class.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.StatementType.Select">
            <summary>
                 An SQL query that is a SELECT statement.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.StatementType.Insert">
            <summary>
                 An SQL query that is an INSERT statement.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.StatementType.Update">
            <summary>
                 An SQL query that is an UPDATE statement.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.StatementType.Delete">
            <summary>
                 An SQL query that is a DELETE statement.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.StatementType.Batch">
            <summary>
                 A SQL query that is a batch statement.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.UpdateStatus">
            <summary>
                 Specifies the action to take with regard to the current and remaining rows
                 during an DbDataAdapter.Update(DataSet).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateStatus.Continue">
            <summary>
                 The DataAdapter is to continue processing rows.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateStatus.ErrorsOccurred">
            <summary>
                 The event handler reports that the update should be treated as an error.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateStatus.SkipCurrentRow">
            <summary>
                 The current row is not to be updated.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateStatus.SkipAllRemainingRows">
            <summary>
                 The current row and all remaining rows are not to be updated.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.UpdateRowSource">
            <summary>
                 Specifies how query command results are applied to the row being updated.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateRowSource.None">
            <summary>
                 Any returned parameters or rows are ignored.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateRowSource.OutputParameters">
            <summary>
                 Output parameters are mapped to the changed row in the DataSet.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateRowSource.FirstReturnedRecord">
            <summary>
                 The data in the first returned row is mapped to the changed row in the DataSet.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.UpdateRowSource.Both">
            <summary>
                 Both the output parameters and the first returned row are mapped to the changed
                 row in the DataSet.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ParameterDirection">
            <summary>
                 Specifies the type of a parameter within a query relative to the DataSet.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ParameterDirection.Input">
            <summary>
                 The parameter is an input parameter.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ParameterDirection.Output">
            <summary>
                 The parameter is an output parameter.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ParameterDirection.InputOutput">
            <summary>
                 The parameter is capable of both input and output.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.ParameterDirection.ReturnValue">
            <summary>
                 The parameter represents a return value from an operation such as a stored
                 procedure, built-in function, or user-defined function.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.SchemaType">
            <summary>
                 Specifies how to handle existing schema mappings when performing a DataAdapter.FillSchema(DataSet,SchemaType)
                 operation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.SchemaType.Source">
            <summary>
                 Ignore any table mappings on the DataAdapter. Configure the DataSet
                 using the incoming schema without applying any transformations.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.SchemaType.Mapped">
            <summary>
                 Apply any existing table mappings to the incoming schema. Configure the DataSet
                 with the transformed schema.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IColumnMapping">
            <summary>
                 Associates a data source column with a DataSet column, and is
                 implemented by the DataColumnMapping class, which is used
                 in common by .NET Framework data providers.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IColumnMapping.DataSetColumn">
            <summary>
                 Gets or sets the name of the column within the DataSet to map
                 to.
            </summary>
            <returns>
                 The name of the column within the DataSet to map to. The name
                 is not case sensitive.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IColumnMapping.SourceColumn">
            <summary>
                 Gets or sets the name of the column within the data source to map from. The
                 name is case-sensitive.
            </summary>
            <returns>
                 The case-sensitive name of the column in the data source.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.IColumnMappingCollection">
            <summary>
                 Contains a collection of DataColumnMapping objects, and is implemented by
                 the DataColumnMappingCollection, which is used in common
                 by .NET Framework data providers.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IColumnMappingCollection.Add(System.String,System.String)">
            <summary>
                 Adds a ColumnMapping object to the ColumnMapping collection using the source
                 column and DataSet column names.
            </summary>
            <param name="sourceColumnName">
                 The case-sensitive name of the source column.
            </param>
            <param name="dataSetColumnName">
                 The name of the DataSet column.
            </param>
            <returns>
                 The ColumnMapping object that was added to the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IColumnMappingCollection.Contains(System.String)">
            <summary>
                 Gets a value indicating whether the DataColumnMappingCollection
                 contains a DataColumnMapping object with the specified
                 source column name.
            </summary>
            <param name="sourceColumnName">
                 The case-sensitive name of the source column.
            </param>
            <returns>
                 true if a DataColumnMapping object with the specified
                 source column name exists, otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IColumnMappingCollection.GetByDataSetColumn(System.String)">
            <summary>
                 Gets the ColumnMapping object with the specified DataSet column
                 name.
            </summary>
            <param name="dataSetColumnName">
                 The name of the DataSet column within the collection.
            </param>
            <returns>
                 The ColumnMapping object with the specified DataSet column name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IColumnMappingCollection.IndexOf(System.String)">
            <summary>
                 Gets the location of the DataColumnMapping object with
                 the specified source column name. The name is case-sensitive.
            </summary>
            <param name="sourceColumnName">
                 The case-sensitive name of the source column.
            </param>
            <returns>
                 The zero-based location of the DataColumnMapping object with the specified
                 source column name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IColumnMappingCollection.RemoveAt(System.String)">
            <summary>
                 Removes the IColumnMapping object with the specified IColumnMapping.SourceColumn
                 name from the collection.
            </summary>
            <param name="sourceColumnName">
                 The case-sensitive SourceColumn name.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 A DataColumnMapping object does not exist with the specified
                 SourceColumn name.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IColumnMappingCollection.Item(System.String)">
            <summary>
                 Gets or sets the IColumnMapping object with the specified SourceColumn
                 name.
            </summary>
            <param name="index">
                 The SourceColumn name of the IColumnMapping object to find.
            </param>
            <returns>
                 The IColumnMapping object with the specified SourceColumn name.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ITableMapping">
            <summary>
                 Associates a source table with a table in a DataSet, and is implemented
                 by the DataTableMapping class, which is used in common
                 by .NET Framework data providers.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ITableMapping.ColumnMappings">
            <summary>
                 Gets the derived DataColumnMappingCollection for the DataTable.
            </summary>
            <returns>
                 A DataColumnMappingCollection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ITableMapping.DataSetTable">
            <summary>
                 Gets or sets the case-insensitive name of the table within the DataSet.
            </summary>
            <returns>
                 The case-insensitive name of the table within the DataSet.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ITableMapping.SourceTable">
            <summary>
                 Gets or sets the case-sensitive name of the source table.
            </summary>
            <returns>
                 The case-sensitive name of the source table.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ITableMappingCollection">
            <summary>
                 Contains a collection of TableMapping objects, and is implemented by the
                 DataTableMappingCollection, which is used in common by
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ITableMappingCollection.Add(System.String,System.String)">
            <summary>
                 Adds a table mapping to the collection.
            </summary>
            <param name="sourceTableName">
                 The case-sensitive name of the source table.
            </param>
            <param name="dataSetTableName">
                 The name of the DataSet table.
            </param>
            <returns>
                 A reference to the newly-mapped ITableMapping object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ITableMappingCollection.Contains(System.String)">
            <summary>
                 Gets a value indicating whether the collection contains a table mapping with
                 the specified source table name.
            </summary>
            <param name="sourceTableName">
                 The case-sensitive name of the source table.
            </param>
            <returns>
                 true if a table mapping with the specified source table name exists, otherwise
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ITableMappingCollection.GetByDataSetTable(System.String)">
            <summary>
                 Gets the TableMapping object with the specified DataSet table
                 name.
            </summary>
            <param name="dataSetTableName">
                 The name of the DataSet table within the collection.
            </param>
            <returns>
                 The TableMapping object with the specified DataSet table name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ITableMappingCollection.IndexOf(System.String)">
            <summary>
                 Gets the location of the ITableMapping object within the collection.
            </summary>
            <param name="sourceTableName">
                 The case-sensitive name of the source table.
            </param>
            <returns>
                 The zero-based location of the ITableMapping object within the
                 collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ITableMappingCollection.RemoveAt(System.String)">
            <summary>
                 Removes the ITableMapping object with the specified ITableMapping.SourceTable
                 name from the collection.
            </summary>
            <param name="sourceTableName">
                 The case-sensitive name of the SourceTable.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.ITableMappingCollection.Item(System.String)">
            <summary>
                 Gets or sets the instance of ITableMapping with the specified
                 ITableMapping.SourceTable name.
            </summary>
            <param name="index">
                 The SourceTable name of the ITableMapping.
            </param>
            <returns>
                 The instance of ITableMapping with the specified SourceTable
                 name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.Cancel">
            <summary>
                 Attempts to cancels the execution of an IDbCommand.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.CreateParameter">
            <summary>
                 Creates a new instance of an IDbDataParameter object.
            </summary>
            <returns>
                 An IDbDataParameter object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.ExecuteNonQuery">
            <summary>
                 Executes an SQL statement against the Connection object of a .NET Framework
                 data provider, and returns the number of rows affected.
            </summary>
            <returns>
                 The number of rows affected.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The connection does not exist.-or- The connection is not open.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.ExecuteReader">
            <summary>
                 Executes the IDbCommand.CommandText against the IDbCommand.Connection
                 and builds an IDataReader.
            </summary>
            <returns>
                 An IDataReader object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.ExecuteReader(Crestron.SimplSharp.CrestronData.CommandBehavior)">
            <summary>
                 Executes the IDbCommand.CommandText against the IDbCommand.Connection,
                 and builds an IDataReader using one of the CommandBehavior
                 values.
            </summary>
            <param name="behavior">
                 One of the CommandBehavior values.
            </param>
            <returns>
                 An IDataReader object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.ExecuteScalar">
            <summary>
                 Executes the query, and returns the first column of the first row in the
                 resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            <returns>
                 The first column of the first row in the resultset.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.Prepare">
            <summary>
                 Creates a prepared (or compiled) version of the command on the data source.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The OleDb.OleDbCommand.Connection is not set.-or- The OleDb.OleDbCommand.Connection
                 is not OleDb.OleDbConnection.Open().
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbCommandImpl.Dispose">
            <summary>
                 Performs application-defined tasks associated with freeing, releasing, or
                 resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommandImpl.CommandText">
            <summary>
                 Gets or sets the text command to run against the data source.
            </summary>
            <returns>
                 The text command to execute. The default value is an empty string ("").
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommandImpl.CommandTimeout">
            <summary>
                 Gets or sets the wait time before terminating the attempt to execute a command
                 and generating an error.
            </summary>
            <returns>
                 The time (in seconds) to wait for the command to execute. The default value
                 is 30 seconds.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property value assigned is less than 0.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommandImpl.CommandType">
            <summary>
                 Indicates or specifies how the IDbCommand.CommandText property
                 is interpreted.
            </summary>
            <returns>
                 One of the CommandType values. The default is Text.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommandImpl.Connection">
            <summary>
                 Gets or sets the IDbConnection used by this instance of the IDbCommand.
            </summary>
            <returns>
                 The connection to the data source.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommandImpl.Parameters">
            <summary>
                 Gets the IDataParameterCollection.
            </summary>
            <returns>
                 The parameters of the SQL statement or stored procedure.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommandImpl.Transaction">
            <summary>
                 Gets or sets the transaction within which the Command object of a .NET Framework
                 data provider executes.
            </summary>
            <returns>
                 the Command object of a .NET Framework data provider executes. The default
                 value is null.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbCommandImpl.UpdatedRowSource">
            <summary>
                 Gets or sets how command results are applied to the DataRow when
                 used by the IDataAdapter.Update(DataSet) method of
                 a DbDataAdapter.
            </summary>
            <returns>
                 One of the UpdateRowSource values. The default is Both unless
                 the command is automatically generated. Then the default is None.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The value entered was not one of the UpdateRowSource values.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.BeginTransaction">
            <summary>
                 Begins a database transaction.
            </summary>
            <returns>
                 An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.BeginTransaction(Crestron.SimplSharp.CrestronData.IsolationLevel)">
            <summary>
                 Begins a database transaction with the specified IsolationLevel
                 value.
            </summary>
            <param name="il">
                 One of the IsolationLevel values.
            </param>
            <returns>
                 An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.ChangeDatabase(System.String)">
            <summary>
                 Changes the current database for an open Connection object.
            </summary>
            <param name="databaseName">
                 The name of the database to use in place of the current database.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.Close">
            <summary>
                 Closes the connection to the database.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.CreateCommand">
            <summary>
                 Creates and returns a Command object associated with the connection.
            </summary>
            <returns>
                 A Command object associated with the connection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.Open">
            <summary>
                 Opens a database connection with the settings specified by the ConnectionString
                 property of the provider-specific Connection object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.Dispose">
            <summary>
                 Performs application-defined tasks associated with freeing, releasing, or
                 resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.ConnectionString">
            <summary>
                 Gets or sets the string used to open a database.
            </summary>
            <returns>
                 A string containing connection settings.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.ConnectionTimeout">
            <summary>
                 Gets the time to wait while trying to establish a connection before terminating
                 the attempt and generating an error.
            </summary>
            <returns>
                 The time (in seconds) to wait for a connection to open. The default value
                 is 15 seconds.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.Database">
            <summary>
                 Gets the name of the current database or the database to be used after a
                 connection is opened.
            </summary>
            <returns>
                 The name of the current database or the name of the database to be used once
                 a connection is open. The default value is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbConnectionImpl.State">
            <summary>
                 Gets the current state of the connection.
            </summary>
            <returns>
                 One of the ConnectionState values.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbTransactionImpl.Commit">
            <summary>
                 Commits the database transaction.
            </summary>
            <exception cref="T:System.Exception">
                 An error occurred while trying to commit the transaction.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The transaction has already been committed or rolled back.-or- The connection
                 is broken.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbTransactionImpl.Rollback">
            <summary>
                 Rolls back a transaction from a pending state.
            </summary>
            <exception cref="T:System.Exception">
                 An error occurred while trying to commit the transaction.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The transaction has already been committed or rolled back.-or- The connection
                 is broken.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDbTransactionImpl.Dispose">
            <summary>
                 Performs application-defined tasks associated with freeing, releasing, or
                 resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbTransactionImpl.Connection">
            <summary>
                 Specifies the Connection object to associate with the transaction.
            </summary>
            <returns>
                 The Connection object to associate with the transaction.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbTransactionImpl.IsolationLevel">
            <summary>
                 Specifies the IsolationLevel for this transaction.
            </summary>
            <returns>
                 The IsolationLevel for this transaction. The default is ReadCommitted.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.Precision">
            <summary>
                 Indicates the precision of numeric parameters.
            </summary>
            <returns>
                 The maximum number of digits used to represent the Value property of a data
                 provider Parameter object. The default value is 0, which indicates that a
                 data provider sets the precision for Value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.Scale">
            <summary>
                 Indicates the scale of numeric parameters.
            </summary>
            <returns>
                 The number of decimal places to which OleDb.OleDbParameter.Value
                 is resolved. The default is 0.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.Size">
            <summary>
                 The size of the parameter.
            </summary>
            <returns>
                 The maximum size, in bytes, of the data within the column. The default value
                 is inferred from the the parameter value.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.DbType">
            <summary>
                 Gets or sets the DbType of the parameter.
            </summary>
            <returns>
                 One of the DbType values. The default is DbType.String.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The property was not set to a valid DbType.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.Direction">
            <summary>
                 Gets or sets a value indicating whether the parameter is input-only, output-only,
                 bidirectional, or a stored procedure return value parameter.
            </summary>
            <returns>
                 One of the ParameterDirection values. The default is Input.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property was not set to one of the valid ParameterDirection
                 values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.IsNullable">
            <summary>
                 Gets a value indicating whether the parameter accepts null values.
            </summary>
            <returns>
                 true if null values are accepted; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.ParameterName">
            <summary>
                 Gets or sets the name of the IDataParameter.
            </summary>
            <returns>
                 The name of the IDataParameter. The default is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.SourceColumn">
            <summary>
                 Gets or sets the name of the source column that is mapped to the DataSet
                 and used for loading or returning the IDataParameter.Value.
            </summary>
            <returns>
                 The name of the source column that is mapped to the DataSet.
                 The default is an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.SourceVersion">
            <summary>
                 Gets or sets the DataRowVersion to use when loading IDataParameter.Value.
            </summary>
            <returns>
                 One of the DataRowVersion values. The default is Current.
            </returns>
            <exception cref="T:System.ArgumentException">
                 The property was not set one of the DataRowVersion values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDbDataParameterImpl.Value">
            <summary>
                 Gets or sets the value of the parameter.
            </summary>
            <returns>
                 An System.Object that is the value of the parameter. The default value is
                 null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Contains(System.String)">
            <summary>
                 Gets a value indicating whether a parameter in the collection has the specified
                 name.
            </summary>
            <param name="parameterName">
                 The name of the parameter.
            </param>
            <returns>
                 true if the collection contains the parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.IndexOf(System.String)">
            <summary>
                 Gets the location of the IDataParameter within the collection.
            </summary>
            <param name="parameterName">
                 The name of the parameter.
            </param>
            <returns>
                 The zero-based location of the IDataParameter within the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.RemoveAt(System.String)">
            <summary>
                 Removes the IDataParameter from the collection.
            </summary>
            <param name="parameterName">
                 The name of the parameter.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies the elements of the System.Collections.ICollection to an System.Array,
                 starting at a particular System.Array index.
            </summary>
            <param name="array">
                 The one-dimensional System.Array that is the destination of the elements
                 copied from System.Collections.ICollection. The System.Array must have zero-based
                 indexing.
            </param>
            <param name="index">
                 The zero-based index in array at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 array is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 index is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
                 array is multidimensional.-or- index is equal to or greater than the length
                 of array.-or- The number of elements in the source System.Collections.ICollection
                 is greater than the available space from index to the end of the destination
                 array.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The type of the source System.Collections.ICollection cannot be cast automatically
                 to the type of the destination array.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Add(System.Object)">
            <summary>
                 Adds an item to the System.Collections.IList.
            </summary>
            <param name="value">
                 The System.Object to add to the System.Collections.IList.
            </param>
            <returns>
                 The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 The System.Collections.IList is read-only.-or- The System.Collections.IList
                 has a fixed size.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Clear">
            <summary>
                 Removes all items from the System.Collections.IList.
            </summary>
            <exception cref="T:System.NotSupportedException">
                 The System.Collections.IList is read-only.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Contains(System.Object)">
            <summary>
                 Determines whether the System.Collections.IList contains a specific value.
            </summary>
            <param name="value">
                 The System.Object to locate in the System.Collections.IList.
            </param>
            <returns>
                 true if the System.Object is found in the System.Collections.IList; otherwise,
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.IndexOf(System.Object)">
            <summary>
                 Determines the index of a specific item in the System.Collections.IList.
            </summary>
            <param name="value">
                 The System.Object to locate in the System.Collections.IList.
            </param>
            <returns>
                 The index of value if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Insert(System.Int32,System.Object)">
            <summary>
                 Inserts an item to the System.Collections.IList at the specified index.
            </summary>
            <param name="index">
                 The zero-based index at which value should be inserted.
            </param>
            <param name="value">
                 The System.Object to insert into the System.Collections.IList.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 index is not a valid index in the System.Collections.IList.
            </exception>
            <exception cref="T:System.NotSupportedException">
                 The System.Collections.IList is read-only.-or- The System.Collections.IList
                 has a fixed size.
            </exception>
            <exception cref="T:System.NullReferenceException">
                 value is null reference in the System.Collections.IList.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Remove(System.Object)">
            <summary>
                 Removes the first occurrence of a specific object from the System.Collections.IList.
            </summary>
            <param name="value">
                 The System.Object to remove from the System.Collections.IList.
            </param>
            <exception cref="T:System.NotSupportedException">
                 The System.Collections.IList is read-only.-or- The System.Collections.IList
                 has a fixed size.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.RemoveAt(System.Int32)">
            <summary>
                 Removes the System.Collections.IList item at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the item to remove.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 index is not a valid index in the System.Collections.IList.
            </exception>
            <exception cref="T:System.NotSupportedException">
                 The System.Collections.IList is read-only.-or- The System.Collections.IList
                 has a fixed size.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Item(System.String)">
            <summary>
                 Gets or sets the parameter at the specified index.
            </summary>
            <param name="parameterName">
                 The name of the parameter to retrieve.
            </param>
            <returns>
                 An System.Object at the specified index.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Count">
            <summary>
                 Gets the number of elements contained in the System.Collections.ICollection.
            </summary>
            <returns>
                 The number of elements contained in the System.Collections.ICollection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.IsSynchronized">
            <summary>
                 Gets a value indicating whether access to the System.Collections.ICollection
                 is synchronized (thread safe).
            </summary>
            <returns>
                 true if access to the System.Collections.ICollection is synchronized (thread
                 safe); otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.SyncRoot">
            <summary>
                 Gets an object that can be used to synchronize access to the System.Collections.ICollection.
            </summary>
            <returns>
                 An object that can be used to synchronize access to the System.Collections.ICollection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.IsFixedSize">
            <summary>
                 Gets a value indicating whether the System.Collections.IList has a fixed
                 size.
            </summary>
            <returns>
                 true if the System.Collections.IList has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.IsReadOnly">
            <summary>
                 Gets a value indicating whether the System.Collections.IList is read-only.
            </summary>
            <returns>
                 true if the System.Collections.IList is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataParameterCollectionImpl.Item(System.Int32)">
            <summary>
                 Gets or sets the element at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the element to get or set.
            </param>
            <returns>
                 The element at the specified index.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 index is not a valid index in the System.Collections.IList.
            </exception>
            <exception cref="T:System.NotSupportedException">
                 The property is set and the System.Collections.IList is read-only.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataParameterEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataParameterEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DataParameterEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.Close">
            <summary>
                 Closes the IDataReader Object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetSchemaTable">
            <summary>
                 Returns a DataTable that describes the column metadata of the
                 IDataReader.
            </summary>
            <returns>
                 A DataTable that describes the column metadata.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The IDataReader is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.NextResult">
            <summary>
                 Advances the data reader to the next result, when reading the results of
                 batch SQL statements.
            </summary>
            <returns>
                 true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.Read">
            <summary>
                 Advances the IDataReader to the next record.
            </summary>
            <returns>
                 true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetBoolean(System.Int32)">
            <summary>
                 Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetByte(System.Int32)">
            <summary>
                 Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The 8-bit unsigned integer value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of bytes from the specified column offset into the buffer
                 as an array, starting at the given buffer offset.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <param name="fieldOffset">
                 The index within the field from which to start the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to read the stream of bytes.
            </param>
            <param name="bufferoffset">
                 The index for buffer to start the read operation.
            </param>
            <param name="length">
                 The number of bytes to read.
            </param>
            <returns>
                 The actual number of bytes read.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetChar(System.Int32)">
            <summary>
                 Gets the character value of the specified column.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The character value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of characters from the specified column offset into the buffer
                 as an array, starting at the given buffer offset.
            </summary>
            <param name="i">
                 The zero-based column ordinal.
            </param>
            <param name="fieldoffset">
                 The index within the row from which to start the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to read the stream of bytes.
            </param>
            <param name="bufferoffset">
                 The index for buffer to start the read operation.
            </param>
            <param name="length">
                 The number of bytes to read.
            </param>
            <returns>
                 The actual number of characters read.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetData(System.Int32)">
            <summary>
                 Returns an IDataReader for the specified column ordinal.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 An IDataReader.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetDataTypeName(System.Int32)">
            <summary>
                 Gets the data type information for the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The data type information for the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetDateTime(System.Int32)">
            <summary>
                 Gets the date and time data value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The date and time data value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetDecimal(System.Int32)">
            <summary>
                 Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The fixed-position numeric value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetDouble(System.Int32)">
            <summary>
                 Gets the double-precision floating point number of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The double-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetFieldType(System.Int32)">
            <summary>
                 Gets the System.Type information corresponding to the type of System.Object
                 that would be returned from IDataRecord.GetValue(System.Int32).
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The System.Type information corresponding to the type of System.Object that
                 would be returned from IDataRecord.GetValue(System.Int32).
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetFloat(System.Int32)">
            <summary>
                 Gets the single-precision floating point number of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The single-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetGuid(System.Int32)">
            <summary>
                 Returns the GUID value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The GUID value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetInt16(System.Int32)">
            <summary>
                 Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The 16-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetInt32(System.Int32)">
            <summary>
                 Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The 32-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetInt64(System.Int32)">
            <summary>
                 Gets the 64-bit signed integer value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The 64-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetName(System.Int32)">
            <summary>
                 Gets the name for the field to find.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The name of the field or the empty string (""), if there is no value to return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetOrdinal(System.String)">
            <summary>
                 Return the index of the named field.
            </summary>
            <param name="name">
                 The name of the field to find.
            </param>
            <returns>
                 The index of the named field.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetString(System.Int32)">
            <summary>
                 Gets the string value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The string value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetValue(System.Int32)">
            <summary>
                 Return the value of the specified field.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 The System.Object which will contain the field value upon return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.GetValues(System.Object[])">
            <summary>
                 Gets all the attribute fields in the collection for the current record.
            </summary>
            <param name="values">
                 An array of System.Object to copy the attribute fields into.
            </param>
            <returns>
                 The number of instances of System.Object in the array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.IsDBNull(System.Int32)">
            <summary>
                 Return whether the specified field is set to null.
            </summary>
            <param name="i">
                 The index of the field to find.
            </param>
            <returns>
                 true if the specified field is set to null; otherwise, false.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.IDataReaderImpl.Dispose">
            <summary>
                 Performs application-defined tasks associated with freeing, releasing, or
                 resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReaderImpl.Depth">
            <summary>
                 Gets a value indicating the depth of nesting for the current row.
            </summary>
            <returns>
                 The level of nesting.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReaderImpl.IsClosed">
            <summary>
                 Gets a value indicating whether the data reader is closed.
            </summary>
            <returns>
                 true if the data reader is closed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReaderImpl.RecordsAffected">
            <summary>
                 Gets the number of rows changed, inserted, or deleted by execution of the
                 SQL statement.
            </summary>
            <returns>
                 The number of rows changed, inserted, or deleted; 0 if no rows were affected
                 or the statement failed; and -1 for SELECT statements.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReaderImpl.FieldCount">
            <summary>
                 Gets the number of columns in the current row.
            </summary>
            <returns>
                 When not positioned in a valid recordset, 0; otherwise, the number of columns
                 in the current record. The default is -1.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReaderImpl.Item(System.Int32)">
            <summary>
                 Gets the column located at the specified index.
            </summary>
            <param name="i">
                 The zero-based index of the column to get.
            </param>
            <returns>
                 The column located at the specified index as an System.Object.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The index passed was outside the range of 0 through IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.IDataReaderImpl.Item(System.String)">
            <summary>
                 Gets the column with the specified name.
            </summary>
            <param name="name">
                 The name of the column to find.
            </param>
            <returns>
                 The column with the specified name as an System.Object.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 No column with the specified name was found.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DataException">
            <summary>
                 Represents the exception that is thrown when errors are generated using ADO.NET
                 components.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataException.#ctor">
            <summary>
                 Initializes a new instance of the DataException class. This is
                 the default constructor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the DataException class with the
                 specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DataException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the DataException class with the
                 specified string and inner exception.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
            <param name="innerException">
                 A reference to an inner exception.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DuplicateNameException">
            <summary>
                 Represents the exception that is thrown when a duplicate database object
                 name is encountered during an add operation in a DataSet -related
                 object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DuplicateNameException.#ctor">
            <summary>
                 Initializes a new instance of the DuplicateNameException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DuplicateNameException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the DuplicateNameException class
                 with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DuplicateNameException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the DuplicateNameException class
                 with the specified string and exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ConstraintException">
            <summary>
                 Represents the exception that is thrown when attempting an action that violates
                 a constraint.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintException.#ctor">
            <summary>
                 Initializes a new instance of the ConstraintException class.
                 This is the default constructor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the ConstraintException class with
                 the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ConstraintException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the ConstraintException class using
                 the specified string and inner exception.
            </summary>
            <param name="message">
                 The string to display when the exception is thrown.
            </param>
            <param name="innerException">
                 Gets the Exception instance that caused the current exception.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.NoNullAllowedException">
            <summary>
                 Represents the exception that is thrown when you try to insert a null value
                 into a column where DataColumn.AllowDBNull is set to false.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.NoNullAllowedException.#ctor">
            <summary>
                 Initializes a new instance of the NoNullAllowedException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.NoNullAllowedException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the NoNullAllowedException class
                 with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.NoNullAllowedException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the NoNullAllowedException class
                 with a specified error message and a reference to the inner exception that
                 is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DBConcurrencyException">
            <summary>
                 The exception that is thrown by the DataAdapter during
                 an insert, update, or delete operation if the number of rows affected equals
                 zero.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DBConcurrencyException.#ctor">
            <summary>
                 Initializes a new instance of the DBConcurrencyException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DBConcurrencyException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the DBConcurrencyException class.
            </summary>
            <param name="message">
                 The text string describing the details of the exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DBConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the DBConcurrencyException class.
            </summary>
            <param name="message">
                 The text string describing the details of the exception.
            </param>
            <param name="inner">
                 A reference to an inner exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DBConcurrencyException.#ctor(System.String,System.Exception,Crestron.SimplSharp.CrestronData.DataRow[])">
            <summary>
                 Initializes a new instance of the DBConcurrencyException class.
            </summary>
            <param name="message">
                 The error message that explains the reason for this exception.
            </param>
            <param name="inner">
                 The exception that is the cause of the current exception, or a null reference
            </param>
            <param name="dataRows">
                 An array containing the DataRow objects whose update failure
                 generated this exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DBConcurrencyException.CopyToRows(Crestron.SimplSharp.CrestronData.DataRow[])">
            <summary>
                 Copies the DataRow objects whose update failure generated this
                 exception, to the specified array of DataRow objects.
            </summary>
            <param name="array">
                 The one-dimensional array of DataRow objects to copy the DataRow
                 objects into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DBConcurrencyException.CopyToRows(Crestron.SimplSharp.CrestronData.DataRow[],System.Int32)">
            <summary>
                 Copies the DataRow objects whose update failure generated this
                 exception, to the specified array of DataRow objects, starting
                 at the specified destination array index.
            </summary>
            <param name="array">
                 The one-dimensional array of DataRow objects to copy the DataRow
                 objects into.
            </param>
            <param name="arrayIndex">
                 The destination array index to start copying into.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DBConcurrencyException.Row">
            <summary>
                 Gets or sets the value of the DataRow that generated the DBConcurrencyException.
            </summary>
            <returns>
                 The value of the DataRow.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DBConcurrencyException.RowCount">
            <summary>
                 Gets the number of rows whose update failed, generating this exception.
            </summary>
            <returns>
                 An integer containing a count of the number of rows whose update failed.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException">
            <summary>
                 Represents the exception that is thrown when an action is tried on a DataRow
                 that has been deleted.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException.#ctor">
            <summary>
                 Initializes a new instance of the DeletedRowInaccessibleException
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the DeletedRowInaccessibleException
                 class with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the DeletedRowInaccessibleException
                 class with a specified error message and a reference to the inner exception
                 that is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.InvalidExpressionException">
            <summary>
                 Represents the exception that is thrown when you try to add a DataColumn
                 that contains an invalid DataColumn.Expression to a DataColumnCollection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InvalidExpressionException.#ctor">
            <summary>
                 Initializes a new instance of the InvalidExpressionException
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InvalidExpressionException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the InvalidExpressionException
                 class with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InvalidExpressionException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the InvalidExpressionException
                 class with a specified error message and a reference to the inner exception
                 that is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.EvaluateException">
            <summary>
                 Represents the exception that is thrown when the DataColumn.Expression
                 property of a DataColumn cannot be evaluated.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.EvaluateException.#ctor">
            <summary>
                 Initializes a new instance of the EvaluateException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.EvaluateException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the EvaluateException class with
                 the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.EvaluateException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the EvaluateException class with
                 a specified error message and a reference to the inner exception that is
                 the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.InRowChangingEventException">
            <summary>
                 Represents the exception that is thrown when you call the DataRow.EndEdit()
                 method within the DataTable.RowChanging event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InRowChangingEventException.#ctor">
            <summary>
                 Initializes a new instance of the InRowChangingEventException
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InRowChangingEventException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the InRowChangingEventException
                 class with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InRowChangingEventException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the InRowChangingEventException
                 class with a specified error message and a reference to the inner exception
                 that is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.InvalidConstraintException">
            <summary>
                 Represents the exception that is thrown when incorrectly trying to create
                 or access a relation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InvalidConstraintException.#ctor">
            <summary>
                 Initializes a new instance of the InvalidConstraintException
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InvalidConstraintException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the InvalidConstraintException
                 class with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.InvalidConstraintException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the InvalidConstraintException
                 class with a specified error message and a reference to the inner exception
                 that is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException">
            <summary>
                 Represents the exception that is thrown when you try to access a row in a
                 table that has no primary key.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException.#ctor">
            <summary>
                 Initializes a new instance of the MissingPrimaryKeyException
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the MissingPrimaryKeyException
                 class with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the MissingPrimaryKeyException
                 class with a specified error message and a reference to the inner exception
                 that is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.ReadOnlyException">
            <summary>
                 Represents the exception that is thrown when you try to change the value
                 of a read-only column.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ReadOnlyException.#ctor">
            <summary>
                 Initializes a new instance of the ReadOnlyException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ReadOnlyException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the ReadOnlyException class with
                 the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.ReadOnlyException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the ReadOnlyException class with
                 a specified error message and a reference to the inner exception that is
                 the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.RowNotInTableException">
            <summary>
                 Represents the exception that is thrown when you try to perform an operation
                 on a DataRow that is not in a DataTable.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.RowNotInTableException.#ctor">
            <summary>
                 Initializes a new instance of the RowNotInTableException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.RowNotInTableException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the RowNotInTableException class
                 with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.RowNotInTableException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the RowNotInTableException class
                 with a specified error message and a reference to the inner exception that
                 is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.StrongTypingException">
            <summary>
                 The exception that is thrown by a strongly typed DataSet when
                 the user accesses a DBNull value.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.StrongTypingException.#ctor">
            <summary>
                 Initializes a new instance of the StrongTypingException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.StrongTypingException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the StrongTypingException class
                 with the specified string.
            </summary>
            <param name="message">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.StrongTypingException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the StrongTypingException class
                 with the specified string and inner exception.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
            <param name="innerException">
                 A reference to an inner exception.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.SyntaxErrorException">
            <summary>
                 Represents the exception that is thrown when the DataColumn.Expression
                 property of a DataColumn contains a syntax error.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.SyntaxErrorException.#ctor">
            <summary>
                 Initializes a new instance of the SyntaxErrorException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.SyntaxErrorException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the SyntaxErrorException class
                 with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.SyntaxErrorException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the SyntaxErrorException class
                 with a specified error message and a reference to the inner exception that
                 is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.VersionNotFoundException">
            <summary>
                 Represents the exception that is thrown when you try to return a version
                 of a DataRow that has been deleted.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.VersionNotFoundException.#ctor">
            <summary>
                 Initializes a new instance of the VersionNotFoundException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.VersionNotFoundException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the VersionNotFoundException class
                 with the specified string.
            </summary>
            <param name="s">
                 The string to display when the exception is thrown.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.VersionNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the VersionNotFoundException class
                 with a specified error message and a reference to the inner exception that
                 is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
                 The exception that is the cause of the current exception, or a null reference
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.DbException">
            <summary>
                 The base class for all exceptions thrown on behalf of the data source.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbException.#ctor">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class with
                 the specified error message.
            </summary>
            <param name="message">
                 The message to display for this exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class with
                 the specified error message and a reference to the inner exception that is
                 the cause of this exception.
            </summary>
            <param name="message">
                 The error message string.
            </param>
            <param name="innerException">
                 The inner exception reference.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbException.#ctor(System.String,System.Int32)">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class with
                 the specified error message and error code.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="errorCode">
                 The error code for the exception.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.DbException.ErrorCode">
            <summary>
                 Gets the HRESULT of the error.
            </summary>
            <returns>
                 The HRESULT of the error.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbExceptionImpl.#ctor">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbExceptionImpl.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class with
                 the specified error message.
            </summary>
            <param name="message">
                 The message to display for this exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbExceptionImpl.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class with
                 the specified error message and a reference to the inner exception that is
                 the cause of this exception.
            </summary>
            <param name="message">
                 The error message string.
            </param>
            <param name="innerException">
                 The inner exception reference.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.DbExceptionImpl.#ctor(System.String,System.Int32)">
            <summary>
                 Initializes a new instance of the System.Data.Common.DbException class with
                 the specified error message and error code.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="errorCode">
                 The error code for the exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.#ctor">
            <summary>
                 Initializes a new instance of the DbDataReader class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.Close">
            <summary>
                 Closes the DbDataReader object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetBoolean(System.Int32)">
            <summary>
                 Gets the value of the specified column as a Boolean.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetByte(System.Int32)">
            <summary>
                 Gets the value of the specified column as a byte.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of bytes from the specified column, starting at location indicated
                 by dataOffset, into the buffer, starting at the location indicated by bufferOffset.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <param name="dataOffset">
                 The index within the row from which to begin the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to copy the data.
            </param>
            <param name="bufferOffset">
                 The index with the buffer to which the data will be copied.
            </param>
            <param name="length">
                 The maximum number of characters to read.
            </param>
            <returns>
                 The actual number of bytes read.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetChar(System.Int32)">
            <summary>
                 Gets the value of the specified column as a single character.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
                 Reads a stream of characters from the specified column, starting at location
                 indicated by dataIndex, into the buffer, starting at the location indicated
                 by bufferIndex.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <param name="dataOffset">
                 The index within the row from which to begin the read operation.
            </param>
            <param name="buffer">
                 The buffer into which to copy the data.
            </param>
            <param name="bufferOffset">
                 The index with the buffer to which the data will be copied.
            </param>
            <param name="length">
                 The maximum number of characters to read.
            </param>
            <returns>
                 The actual number of characters read.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetDataTypeName(System.Int32)">
            <summary>
                 Gets name of the data type of the specified column.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A string representing the name of the data type.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetDateTime(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.DateTime object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetDecimal(System.Int32)">
            <summary>
                 Gets the value of the specified column as a System.Decimal object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetDouble(System.Int32)">
            <summary>
                 Gets the value of the specified column as a double-precision floating point
                 number.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetEnumerator">
            <summary>
                 Returns an System.Collections.IEnumerator that can be used to iterate through
                 the rows in the data reader.
            </summary>
            <returns>
                 An System.Collections.IEnumerator that can be used to iterate through the
                 rows in the data reader.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetFieldType(System.Int32)">
            <summary>
                 Gets the data type of the specified column.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The data type of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetFloat(System.Int32)">
            <summary>
                 Gets the value of the specified column as a single-precision floating point
                 number.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetGuid(System.Int32)">
            <summary>
                 Gets the value of the specified column as a globally-unique identifier (GUID).
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetInt16(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 16-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetInt32(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 32-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetInt64(System.Int32)">
            <summary>
                 Gets the value of the specified column as a 64-bit signed integer.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetName(System.Int32)">
            <summary>
                 Gets the name of the column, given the zero-based column ordinal.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The name of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetOrdinal(System.String)">
            <summary>
                 Gets the column ordinal given the name of the column.
            </summary>
            <param name="name">
                 The name of the column.
            </param>
            <returns>
                 The zero-based column ordinal.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
                 The name specified is not a valid column name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetProviderSpecificFieldType(System.Int32)">
            <summary>
                 Returns the provider-specific field type of the specified column.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The System.Type object that describes the data type of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetProviderSpecificValue(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetProviderSpecificValues(System.Object[])">
            <summary>
                 Gets all provider-specific attribute columns in the collection for the current
                 row.
            </summary>
            <param name="values">
                 An array of System.Object into which to copy the attribute columns.
            </param>
            <returns>
                 The number of instances of System.Object in the array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetSchemaTable">
            <summary>
                 Returns a DataTable that describes the column metadata of the
                 DbDataReader.
            </summary>
            <returns>
                 A DataTable that describes the column metadata.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetString(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.String.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetValue(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetValues(System.Object[])">
            <summary>
                 Gets all attribute columns in the collection for the current row.
            </summary>
            <param name="values">
                 An array of System.Object into which to copy the attribute columns.
            </param>
            <returns>
                 The number of instances of System.Object in the array.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.IsDBNull(System.Int32)">
            <summary>
                 Gets a value that indicates whether the column contains nonexistent or missing
                 values.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 true if the specified column is equivalent to System.DBNull; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.NextResult">
            <summary>
                 Advances the reader to the next result when reading the results of a batch
                 of statements.
            </summary>
            <returns>
                 true if there are more result sets; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.Read">
            <summary>
                 Advances the reader to the next record in a result set.
            </summary>
            <returns>
                 true if there are more rows; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.GetDbDataReader(System.Int32)">
            <summary>
                 Returns a DbDataReader object for the requested column
                 ordinal that can be overridden with a provider-specific implementation.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 A DbDataReader object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.Depth">
            <summary>
                 Gets a value indicating the depth of nesting for the current row.
            </summary>
            <returns>
                 The depth of nesting for the current row.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.FieldCount">
            <summary>
                 Gets the number of columns in the current row.
            </summary>
            <returns>
                 The number of columns in the current row.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.HasRows">
            <summary>
                 Gets a value that indicates whether this DbDataReader
                 contains one or more rows.
            </summary>
            <returns>
                 true if the DbDataReader contains one or more rows; otherwise
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.IsClosed">
            <summary>
                 Gets a value indicating whether the DbDataReader is closed.
            </summary>
            <returns>
                 true if the DbDataReader is closed; otherwise false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.RecordsAffected">
            <summary>
                 Gets the number of rows changed, inserted, or deleted by execution of the
                 SQL statement.
            </summary>
            <returns>
                 The number of rows changed, inserted, or deleted. -1 for SELECT statements;
                 0 if no rows were affected or the statement failed.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.VisibleFieldCount">
            <summary>
                 Gets the number of fields in the DbDataReader that are
                 not hidden.
            </summary>
            <returns>
                 The number of fields that are not hidden.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.Item(System.Int32)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="ordinal">
                 The zero-based column ordinal.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataReaderImpl.Item(System.String)">
            <summary>
                 Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="name">
                 The name of the column.
            </param>
            <returns>
                 The value of the specified column.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping">
            <summary>
                 Contains a generic column mapping for an object that inherits from DataAdapter.
                 This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping.#ctor">
            <summary>
                 Initializes a new instance of the DataColumnMapping class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping.#ctor(System.String,System.String)">
            <summary>
                 Initializes a new instance of the DataColumnMapping class
                 with the specified source column name and DataSet column name
                 to map to.
            </summary>
            <param name="sourceColumn">
                 The case-sensitive column name from a data source.
            </param>
            <param name="dataSetColumn">
                 The column name, which is not case sensitive, from a DataSet
                 to map to.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping.GetDataColumnBySchemaAction(Crestron.SimplSharp.CrestronData.DataTable,System.Type,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 Gets a DataColumn from the given DataTable using
                 the MissingSchemaAction and the DataColumnMapping.DataSetColumn
                 property.
            </summary>
            <param name="dataTable">
                 The DataTable to get the column from.
            </param>
            <param name="dataType">
                 The System.Type of the data column.
            </param>
            <param name="schemaAction">
                 One of the MissingSchemaAction values.
            </param>
            <returns>
                 A DataColumn.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,Crestron.SimplSharp.CrestronData.DataTable,System.Type,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 A static version of DataColumnMapping.GetDataColumnBySchemaAction(DataTable,System.Type,MissingSchemaAction)
                 that can be called without instantiating a DataColumnMapping
                 object.
            </summary>
            <param name="sourceColumn">
                 The case-sensitive column name from a data source.
            </param>
            <param name="dataSetColumn">
                 The column name, which is not case sensitive, from a DataSet
                 to map to.
            </param>
            <param name="dataTable">
                 An instance of DataTable.
            </param>
            <param name="dataType">
                 The data type for the column being mapped.
            </param>
            <param name="schemaAction">
                 Determines the action to take when existing DataSet schema does
                 not match incoming data.
            </param>
            <returns>
                 A DataColumn object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping.ToString">
            <summary>
                 Converts the current DataColumnMapping.SourceColumn name
                 to a string.
            </summary>
            <returns>
                 The current DataColumnMapping.SourceColumn name as a string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping.DataSetColumn">
            <summary>
                 Gets or sets the name of the column within the DataSet to map
                 to.
            </summary>
            <returns>
                 The name of the column within the DataSet to map to. The name
                 is not case sensitive.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataColumnMapping.SourceColumn">
            <summary>
                 Gets or sets the name of the column within the data source to map from. The
                 name is case-sensitive.
            </summary>
            <returns>
                 The case-sensitive name of the column in the data source.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection">
            <summary>
                 Contains a collection of DataColumnMapping objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.#ctor">
            <summary>
                 Creates an empty DataColumnMappingCollection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Add(System.Object)">
            <summary>
                 Adds a DataColumnMapping object to the collection.
            </summary>
            <param name="value">
                 A DataColumnMapping object to add to the collection.
            </param>
            <returns>
                 The index of the DataColumnMapping object that was added to the collection.
            </returns>
            <exception cref="T:System.InvalidCastException">
                 The object passed in was not a DataColumnMapping object.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Add(System.String,System.String)">
            <summary>
                 Adds a DataColumnMapping object to the collection when
                 given a source column name and a DataSet column name.
            </summary>
            <param name="sourceColumn">
                 The case-sensitive name of the source column to map to.
            </param>
            <param name="dataSetColumn">
                 The name, which is not case-sensitive, of the DataSet column
                 to map to.
            </param>
            <returns>
                 The DataColumnMapping object that was added to the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.AddRange(System.Array)">
            <summary>
                 Copies the elements of the specified System.Array to the end of the collection.
            </summary>
            <param name="values">
                 The System.Array to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.AddRange(Crestron.SimplSharp.CrestronData.Common.DataColumnMapping[])">
            <summary>
                 Copies the elements of the specified DataColumnMapping
                 array to the end of the collection.
            </summary>
            <param name="values">
                 The array of DataColumnMapping objects to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Clear">
            <summary>
                 Removes all DataColumnMapping objects from the collection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Contains(System.Object)">
            <summary>
                 Gets a value indicating whether a DataColumnMapping object
                 with the given System.Object exists in the collection.
            </summary>
            <param name="value">
                 An System.Object that is the DataColumnMapping.
            </param>
            <returns>
                 true if the collection contains the specified DataColumnMapping
                 object; otherwise, false.
            </returns>
            <exception cref="T:System.InvalidCastException">
                 The object passed in was not a DataColumnMapping object.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Contains(System.String)">
            <summary>
                 Gets a value indicating whether a DataColumnMapping object
                 with the given source column name exists in the collection.
            </summary>
            <param name="value">
                 The case-sensitive source column name of the DataColumnMapping
                 object.
            </param>
            <returns>
                 true if collection contains a DataColumnMapping object
                 with the specified source column name; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies the elements of the DataColumnMappingCollection
                 to the specified array.
            </summary>
            <param name="array">
                 An System.Array to which to copy DataColumnMappingCollection
                 elements.
            </param>
            <param name="index">
                 The starting index of the array.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.CopyTo(Crestron.SimplSharp.CrestronData.Common.DataColumnMapping[],System.Int32)">
            <summary>
                 Copies the elements of the DataColumnMappingCollection
                 to the specified DataColumnMapping array.
            </summary>
            <param name="array">
                 A DataColumnMapping array to which to copy the DataColumnMappingCollection
                 elements.
            </param>
            <param name="index">
                 The zero-based index in the array at which copying begins.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
            <summary>
                 Gets the DataColumnMapping object with the specified DataSet
                 column name.
            </summary>
            <param name="value">
                 The name, which is not case-sensitive, of the DataSet column
                 to find.
            </param>
            <returns>
                 The DataColumnMapping object with the specified DataSet
                 column name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection,System.String,Crestron.SimplSharp.CrestronData.MissingMappingAction)">
            <summary>
                 Gets a DataColumnMapping for the specified DataColumnMappingCollection,
                 source column name, and MissingMappingAction.
            </summary>
            <param name="columnMappings">
                 The DataColumnMappingCollection.
            </param>
            <param name="sourceColumn">
                 The case-sensitive source column name to find.
            </param>
            <param name="mappingAction">
                 One of the MissingMappingAction values.
            </param>
            <returns>
                 A DataColumnMapping object.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The mappingAction parameter was set to Error, and no mapping was specified.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.GetDataColumn(Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection,System.String,System.Type,Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.MissingMappingAction,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 A static method that returns a DataColumn object without instantiating
                 a DataColumnMappingCollection object.
            </summary>
            <param name="columnMappings">
                 The DataColumnMappingCollection.
            </param>
            <param name="sourceColumn">
                 The case-sensitive column name from a data source.
            </param>
            <param name="dataType">
                 The data type for the column being mapped.
            </param>
            <param name="dataTable">
                 An instance of DataTable.
            </param>
            <param name="mappingAction">
                 One of the MissingMappingAction values.
            </param>
            <param name="schemaAction">
                 Determines the action to take when the existing DataSet schema
                 does not match incoming data.
            </param>
            <returns>
                 A DataColumn object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.GetEnumerator">
            <summary>
                 Gets an enumerator that can iterate through the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator that can be used to iterate through the
                 collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.IndexOf(System.Object)">
            <summary>
                 Gets the location of the specified System.Object that is a DataColumnMapping
                 within the collection.
            </summary>
            <param name="value">
                 An System.Object that is the DataColumnMapping to find.
            </param>
            <returns>
                 The zero-based location of the specified System.Object that is a DataColumnMapping
                 within the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.IndexOf(System.String)">
            <summary>
                 Gets the location of the DataColumnMapping with the specified
                 source column name.
            </summary>
            <param name="sourceColumn">
                 The case-sensitive name of the source column.
            </param>
            <returns>
                 The zero-based location of the DataColumnMapping with
                 the specified case-sensitive source column name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
            <summary>
                 Gets the location of the specified DataColumnMapping with
                 the given DataSet column name.
            </summary>
            <param name="dataSetColumn">
                 The name, which is not case-sensitive, of the data set column to find.
            </param>
            <returns>
                 The zero-based location of the specified DataColumnMapping
                 with the given DataSet column name, or -1 if the DataColumnMapping object
                 does not exist in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Insert(System.Int32,Crestron.SimplSharp.CrestronData.Common.DataColumnMapping)">
            <summary>
                 Inserts a DataColumnMapping object into the DataColumnMappingCollection
                 at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the DataColumnMapping object to
                 insert.
            </param>
            <param name="value">
                 The DataColumnMapping object.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
            <summary>
                 Inserts a DataColumnMapping object into the DataColumnMappingCollection
                 at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the DataColumnMapping object to
                 insert.
            </param>
            <param name="value">
                 The DataColumnMapping object.
            </param>
            <returns>
                 A DataColumnMapping object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Remove(Crestron.SimplSharp.CrestronData.Common.DataColumnMapping)">
            <summary>
                 Removes the specified DataColumnMapping from the collection.
            </summary>
            <param name="value">
                 The DataColumnMapping to remove.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Remove(System.Object)">
            <summary>
                 Removes the System.Object that is a DataColumnMapping
                 from the collection.
            </summary>
            <param name="value">
                 The System.Object that is the DataColumnMapping to remove.
            </param>
            <exception cref="T:System.InvalidCastException">
                 The object specified was not a DataColumnMapping object.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The object specified is not in the collection.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the DataColumnMapping object with the specified
                 index from the collection.
            </summary>
            <param name="index">
                 The zero-based index of the DataColumnMapping object to
                 remove.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 There is no DataColumnMapping object with the specified
                 index.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.RemoveAt(System.String)">
            <summary>
                 Removes the DataColumnMapping object with the specified
                 source column name from the collection.
            </summary>
            <param name="sourceColumn">
                 The case-sensitive source column name.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 There is no DataColumnMapping object with the specified
                 source column name.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Count">
            <summary>
                 Gets the number of DataColumnMapping objects in the collection.
            </summary>
            <returns>
                 The number of items in the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Item(System.Int32)">
            <summary>
                 Gets or sets the DataColumnMapping object at the specified
                 index.
            </summary>
            <param name="index">
                 The zero-based index of the DataColumnMapping object to
                 find.
            </param>
            <returns>
                 The DataColumnMapping object at the specified index.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingCollection.Item(System.String)">
            <summary>
                 Gets or sets the DataColumnMapping object with the specified
                 source column name.
            </summary>
            <param name="sourceColumn">
                 The case-sensitive name of the source column.
            </param>
            <returns>
                 The DataColumnMapping object with the specified source
                 column name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataColumnMappingEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DataTableMapping">
            <summary>
                 Contains a description of a mapped relationship between a source table and
                 a DataTable. This class is used by a DataAdapter
                 when populating a DataSet.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.#ctor">
            <summary>
                 Initializes a new instance of the DataTableMapping class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.#ctor(System.String,System.String)">
            <summary>
                 Initializes a new instance of the DataTableMapping class
                 with a source when given a source table name and a DataTable
                 name.
            </summary>
            <param name="sourceTable">
                 The case-sensitive source table name from a data source.
            </param>
            <param name="dataSetTable">
                 The table name from a DataSet to map to.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.#ctor(System.String,System.String,Crestron.SimplSharp.CrestronData.Common.DataColumnMapping[])">
            <summary>
                 Initializes a new instance of the DataTableMapping class
                 when given a source table name, a DataTable name, and an array
                 of DataColumnMapping objects.
            </summary>
            <param name="sourceTable">
                 The case-sensitive source table name from a data source.
            </param>
            <param name="dataSetTable">
                 The table name from a DataSet to map to.
            </param>
            <param name="columnMappings">
                 An array of DataColumnMapping objects.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,Crestron.SimplSharp.CrestronData.MissingMappingAction)">
            <summary>
                 Gets a DataColumn from the specified DataTable using
                 the specified MissingMappingAction value and the name of the
                 DataColumn.
            </summary>
            <param name="sourceColumn">
                 The name of the DataColumn.
            </param>
            <param name="mappingAction">
                 One of the MissingMappingAction values.
            </param>
            <returns>
                 A DataColumn.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The mappingAction parameter was set to Error, and no mapping was specified.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.GetDataColumn(System.String,System.Type,Crestron.SimplSharp.CrestronData.DataTable,Crestron.SimplSharp.CrestronData.MissingMappingAction,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 Returns a DataColumn object for a given column name.
            </summary>
            <param name="sourceColumn">
                 The name of the DataColumn.
            </param>
            <param name="dataType">
                 The data type for sourceColumn.
            </param>
            <param name="dataTable">
                 The table name from a DataSet to map to.
            </param>
            <param name="mappingAction">
                 One of the MissingMappingAction values.
            </param>
            <param name="schemaAction">
                 One of the MissingSchemaAction values.
            </param>
            <returns>
                 A DataColumn object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.GetDataTableBySchemaAction(Crestron.SimplSharp.CrestronData.DataSet,Crestron.SimplSharp.CrestronData.MissingSchemaAction)">
            <summary>
                 Gets the current DataTable for the specified DataSet
                 using the specified MissingSchemaAction value.
            </summary>
            <param name="dataSet">
                 The DataSet from which to get the DataTable.
            </param>
            <param name="schemaAction">
                 One of the MissingSchemaAction values.
            </param>
            <returns>
                 A DataTable.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.ToString">
            <summary>
                 Converts the current DataTableMapping.SourceTable name
                 to a string.
            </summary>
            <returns>
                 The current DataTableMapping.SourceTable name, as a string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.ColumnMappings">
            <summary>
                 Gets the DataColumnMappingCollection for the DataTable.
            </summary>
            <returns>
                 A DataColumnMappingCollection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.DataSetTable">
            <summary>
                 Gets or sets the table name from a DataSet.
            </summary>
            <returns>
                 The table name from a DataSet.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataTableMapping.SourceTable">
            <summary>
                 Gets or sets the case-sensitive source table name from a data source.
            </summary>
            <returns>
                 The case-sensitive source table name from a data source.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection">
            <summary>
                 A collection of DataTableMapping objects. This class cannot
                 be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.#ctor">
            <summary>
                 Initializes a new instance of the DataTableMappingCollection
                 class. This new instance is empty, that is, it does not yet contain any DataTableMapping
                 objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Add(System.Object)">
            <summary>
                 Adds an System.Object that is a table mapping to the collection.
            </summary>
            <param name="value">
                 A DataTableMapping object to add to the collection.
            </param>
            <returns>
                 The index of the DataTableMapping object added to the collection.
            </returns>
            <exception cref="T:System.InvalidCastException">
                 The object passed in was not a DataTableMapping object.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Add(System.String,System.String)">
            <summary>
                 Adds a DataTableMapping object to the collection when
                 given a source table name and a DataSet table name.
            </summary>
            <param name="sourceTable">
                 The case-sensitive name of the source table to map from.
            </param>
            <param name="dataSetTable">
                 The name, which is not case-sensitive, of the DataSet table to
                 map to.
            </param>
            <returns>
                 The DataTableMapping object that was added to the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.AddRange(System.Array)">
            <summary>
                 Copies the elements of the specified System.Array to the end of the collection.
            </summary>
            <param name="values">
                 An System.Array of values to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.AddRange(Crestron.SimplSharp.CrestronData.Common.DataTableMapping[])">
            <summary>
                 Copies the elements of the specified DataTableMapping
                 array to the end of the collection.
            </summary>
            <param name="values">
                 The array of DataTableMapping objects to add to the collection.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Clear">
            <summary>
                 Removes all DataTableMapping objects from the collection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Contains(System.Object)">
            <summary>
                 Gets a value indicating whether the given DataTableMapping
                 object exists in the collection.
            </summary>
            <param name="value">
                 An System.Object that is the DataTableMapping.
            </param>
            <returns>
                 true if this collection contains the specified DataTableMapping;
                 otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Contains(System.String)">
            <summary>
                 Gets a value indicating whether a DataTableMapping object
                 with the specified source table name exists in the collection.
            </summary>
            <param name="value">
                 The case-sensitive source table name containing the DataTableMapping
                 object.
            </param>
            <returns>
                 true if the collection contains a DataTableMapping object
                 with this source table name; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
            <summary>
                 Copies the elements of the DataTableMappingCollection
                 to the specified array.
            </summary>
            <param name="array">
                 An System.Array to which to copy the DataTableMappingCollection
                 elements.
            </param>
            <param name="index">
                 The starting index of the array.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.CopyTo(Crestron.SimplSharp.CrestronData.Common.DataTableMapping[],System.Int32)">
            <summary>
                 Copies the elements of the DataTableMapping to the specified
                 array.
            </summary>
            <param name="array">
                 A DataTableMapping to which to copy the DataTableMappingCollection
                 elements.
            </param>
            <param name="index">
                 The starting index of the array.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
            <summary>
                 Gets the DataTableMapping object with the specified DataSet
                 table name.
            </summary>
            <param name="dataSetTable">
                 The name, which is not case-sensitive, of the DataSet table to
                 find.
            </param>
            <returns>
                 The DataTableMapping object with the specified DataSet
                 table name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.GetEnumerator">
            <summary>
                 Gets an enumerator that can iterate through the collection.
            </summary>
            <returns>
                 An System.Collections.IEnumerator that can be used to iterate through the
                 collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection,System.String,System.String,Crestron.SimplSharp.CrestronData.MissingMappingAction)">
            <summary>
                 Gets a DataColumnMapping object with the specified source
                 table name and DataSet table name, using the given MissingMappingAction.
            </summary>
            <param name="tableMappings">
                 The DataTableMappingCollection collection to search.
            </param>
            <param name="sourceTable">
                 The case-sensitive name of the mapped source table.
            </param>
            <param name="dataSetTable">
                 The name, which is not case-sensitive, of the mapped DataSet
                 table.
            </param>
            <param name="mappingAction">
                 One of the MissingMappingAction values.
            </param>
            <returns>
                 A DataTableMapping object.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The mappingAction parameter was set to Error, and no mapping was specified.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.IndexOf(System.Object)">
            <summary>
                 Gets the location of the specified DataTableMapping object
                 within the collection.
            </summary>
            <param name="value">
                 An System.Object that is the DataTableMapping object to
                 find.
            </param>
            <returns>
                 The zero-based location of the specified DataTableMapping
                 object within the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.IndexOf(System.String)">
            <summary>
                 Gets the location of the DataTableMapping object with
                 the specified source table name.
            </summary>
            <param name="sourceTable">
                 The case-sensitive name of the source table.
            </param>
            <returns>
                 The zero-based location of the DataTableMapping object
                 with the specified source table name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
            <summary>
                 Gets the location of the DataTableMapping object with
                 the specified DataSet table name.
            </summary>
            <param name="dataSetTable">
                 The name, which is not case-sensitive, of the DataSet table to find.
            </param>
            <returns>
                 The zero-based location of the DataTableMapping object
                 with the given DataSet table name, or -1 if the DataTableMapping
                 object does not exist in the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Insert(System.Int32,Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Inserts a DataTableMapping object into the DataTableMappingCollection
                 at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the DataTableMapping object to
                 insert.
            </param>
            <param name="value">
                 The DataTableMapping object to insert.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
            <summary>
                 Inserts a DataTableMapping object into the DataTableMappingCollection
                 at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the DataTableMapping object to
                 insert.
            </param>
            <param name="value">
                 The DataTableMapping object to insert.
            </param>
            <returns>
                 A DataTableMapping object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Remove(Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Removes the specified DataTableMapping object from the
                 collection.
            </summary>
            <param name="value">
                 The DataTableMapping object to remove.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Remove(System.Object)">
            <summary>
                 Removes the specified DataTableMapping object from the
                 collection.
            </summary>
            <param name="value">
                 The DataTableMapping object to remove.
            </param>
            <exception cref="T:System.InvalidCastException">
                 The object specified was not a DataTableMapping object.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The object specified is not in the collection.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
            <summary>
                 Removes the DataTableMapping object located at the specified
                 index from the collection.
            </summary>
            <param name="index">
                 The zero-based index of the DataTableMapping object to
                 remove.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 A DataTableMapping object does not exist with the specified
                 index.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.RemoveAt(System.String)">
            <summary>
                 Removes the DataTableMapping object with the specified
                 source table name from the collection.
            </summary>
            <param name="sourceTable">
                 The case-sensitive source table name to find.
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
                 A DataTableMapping object does not exist with the specified
                 source table name.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Count">
            <summary>
                 Gets the number of DataTableMapping objects in the collection.
            </summary>
            <returns>
                 The number of DataTableMapping objects in the collection.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Item(System.Int32)">
            <summary>
                 Gets or sets the DataTableMapping object at the specified
                 index.
            </summary>
            <param name="index">
                 The zero-based index of the DataTableMapping object to
                 return.
            </param>
            <returns>
                 The DataTableMapping object at the specified index.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataTableMappingCollection.Item(System.String)">
            <summary>
                 Gets or sets the DataTableMapping object with the specified
                 source table name.
            </summary>
            <param name="sourceTable">
                 The case-sensitive name of the source table.
            </param>
            <returns>
                 The DataTableMapping object with the specified source
                 table name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DataTableMappingEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DataTableMappingEnumerator.Current">
            <summary>
                 Gets the current element in the collection.
            </summary>
            <returns>
                 The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The enumerator is positioned before the first element of the collection or
                 after the last element.-or- The collection was modified after the enumerator
                 was created.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn">
            <summary>
                 Describes the column metadata of the schema for a database table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.AllowDBNull">
            <summary>
                 Specifies whether value DBNull is allowed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.BaseColumnName">
            <summary>
                 Specifies the name of the column in the schema table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.BaseSchemaName">
            <summary>
                 Specifies the name of the schema in the schema table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.BaseTableName">
            <summary>
                 Specifies the name of the table in the schema table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.ColumnName">
            <summary>
                 Specifies the name of the column in the schema table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.ColumnOrdinal">
            <summary>
                 Specifies the ordinal of the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.ColumnSize">
            <summary>
                 Specifies the size of the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.DataType">
            <summary>
                 Specifies the type of data in the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.IsAliased">
            <summary>
                 Specifies whether this column is aliased.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.IsExpression">
            <summary>
                 Specifies whether this column is an expression.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.IsKey">
            <summary>
                 Specifies whether this column is a key for the table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.IsLong">
            <summary>
                 Specifies whether this column contains long data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.IsUnique">
            <summary>
                 Specifies whether a unique constraint applies to this column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.NonVersionedProviderType">
            <summary>
                 Specifies the non-versioned provider-specific data type of the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.NumericPrecision">
            <summary>
                 Specifies the precision of the column data, if the data is numeric.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.NumericScale">
            <summary>
                 Specifies the scale of the column data, if the data is numeric.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableColumn.ProviderType">
            <summary>
                 Specifies the provider-specific data type of the column.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn">
            <summary>
                 Describes optional column metadata of the schema for a database table.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
            <summary>
                 Specifies the value at which the series for new identity columns is assigned.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.AutoIncrementStep">
            <summary>
                 Specifies the increment between values in the identity column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.BaseCatalogName">
            <summary>
                 The name of the catalog associated with the results of the latest query.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
            <summary>
                 The namespace of the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.BaseServerName">
            <summary>
                 The server name of the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.BaseTableNamespace">
            <summary>
                 The namespace for the table that contains the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.ColumnMapping">
            <summary>
                 Specifies the mapping for the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.DefaultValue">
            <summary>
                 The default value for the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.Expression">
            <summary>
                 The expression used to compute the column.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.IsAutoIncrement">
            <summary>
                 Specifies whether the column values in the column are automatically incremented.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.IsHidden">
            <summary>
                 Specifies whether this column is hidden.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.IsReadOnly">
            <summary>
                 Specifies whether this column is read-only.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.IsRowVersion">
            <summary>
                 Specifies whether this column contains row version information.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
            <summary>
                 Specifies the provider-specific data type of the column.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.CatalogLocation">
            <summary>
                 Indicates the position of the catalog name in a qualified table name in a
                 text command.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.CatalogLocation.Start">
            <summary>
                 Indicates that the position of the catalog name occurs before the schema
                 portion of a fully qualified table name in a text command.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.CatalogLocation.End">
            <summary>
                 Indicates that the position of the catalog name occurs after the schema portion
                 of a fully qualified table name in a text command.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs">
            <summary>
                 Provides data for the RowUpdated event of a .NET Framework data provider.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.StatementType,Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Initializes a new instance of the RowUpdatedEventArgs
                 class.
            </summary>
            <param name="dataRow">
                 The DataRow sent through an DbDataAdapter.Update(DataSet).
            </param>
            <param name="command">
                 The IDbCommand executed when DbDataAdapter.Update(DataSet)
                 is called.
            </param>
            <param name="statementType">
                 The type of SQL statement executed.
            </param>
            <param name="tableMapping">
                 The DataTableMapping sent through an DbDataAdapter.Update(DataSet).
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.CopyToRows(Crestron.SimplSharp.CrestronData.DataRow[])">
            <summary>
                 Copies references to the modified rows into the provided array.
            </summary>
            <param name="array">
                 The array of DataRow to copy into.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.CopyToRows(Crestron.SimplSharp.CrestronData.DataRow[],System.Int32)">
            <summary>
                 Copies references to the modified rows into the provided array.
            </summary>
            <param name="array">
                 The array of DataRow to copy into.
            </param>
            <param name="arrayIndex">
                 The index in the array to start copying into.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.Command">
            <summary>
                 Gets the IDbCommand executed when DbDataAdapter.Update(DataSet)
                 is called.
            </summary>
            <returns>
                 The IDbCommand executed when DbDataAdapter.Update(DataSet)
                 is called.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.Errors">
            <summary>
                 Gets any errors generated by the .NET Framework data provider when the RowUpdatedEventArgs.Command
                 was executed.
            </summary>
            <returns>
                 The errors generated by the .NET Framework data provider when the RowUpdatedEventArgs.Command
                 was executed.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.RecordsAffected">
            <summary>
                 Gets the number of rows changed, inserted, or deleted by execution of the
                 SQL statement.
            </summary>
            <returns>
                 The number of rows changed, inserted, or deleted; 0 if no rows were affected
                 or the statement failed; and -1 for SELECT statements.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.Row">
            <summary>
                 Gets the DataRow sent through an DbDataAdapter.Update(DataSet).
            </summary>
            <returns>
                 The DataRow sent through an DbDataAdapter.Update(DataSet).
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.RowCount">
            <summary>
                 Gets the number of rows processed in a batch of updated records.
            </summary>
            <returns>
                 int that specifies the number of row processed.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.StatementType">
            <summary>
                 Gets the type of SQL statement executed.
            </summary>
            <returns>
                 The type of SQL statement executed.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.Status">
            <summary>
                 Gets the UpdateStatus of the RowUpdatedEventArgs.Command
                 property.
            </summary>
            <returns>
                 One of the UpdateStatus values. The default is Continue.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatedEventArgs.TableMapping">
            <summary>
                 Gets the DataTableMapping sent through an DbDataAdapter.Update(DataSet).
            </summary>
            <returns>
                 The DataTableMapping sent through an DbDataAdapter.Update(DataSet).
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs">
            <summary>
                 Provides the data for the RowUpdating event of a .NET Framework data provider.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs.#ctor(Crestron.SimplSharp.CrestronData.DataRow,Crestron.SimplSharp.CrestronData.IDbCommand,Crestron.SimplSharp.CrestronData.StatementType,Crestron.SimplSharp.CrestronData.Common.DataTableMapping)">
            <summary>
                 Initializes a new instance of the RowUpdatingEventArgs
                 class.
            </summary>
            <param name="dataRow">
                 The DataRow to DbDataAdapter.Update(DataSet).
            </param>
            <param name="command">
                 The IDbCommand to execute when DbDataAdapter.Update(DataSet)
                 is called.
            </param>
            <param name="statementType">
                 The type of SQL statement to execute.
            </param>
            <param name="tableMapping">
                 The DataTableMapping to send through an DbDataAdapter.Update(DataSet).
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs.Command">
            <summary>
                 Gets the IDbCommand to execute during the DbDataAdapter.Update(DataSet)
                 operation.
            </summary>
            <returns>
                 The IDbCommand to execute during the DbDataAdapter.Update(DataSet).
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs.Errors">
            <summary>
                 Gets any errors generated by the .NET Framework data provider when the RowUpdatedEventArgs.Command
                 executes.
            </summary>
            <returns>
                 The errors generated by the .NET Framework data provider when the RowUpdatedEventArgs.Command
                 executes.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs.Row">
            <summary>
                 Gets the DataRow that will be sent to the server as part of an
                 insert, update, or delete operation.
            </summary>
            <returns>
                 The DataRow to send through an DbDataAdapter.Update(DataSet).
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs.StatementType">
            <summary>
                 Gets the type of SQL statement to execute.
            </summary>
            <returns>
                 The type of SQL statement to execute.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs.Status">
            <summary>
                 Gets or sets the UpdateStatus of the RowUpdatedEventArgs.Command
                 property.
            </summary>
            <returns>
                 One of the UpdateStatus values. The default is Continue.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.RowUpdatingEventArgs.TableMapping">
            <summary>
                 Gets the DataTableMapping to send through the DbDataAdapter.Update(DataSet).
            </summary>
            <returns>
                 The DataTableMapping to send through the DbDataAdapter.Update(DataSet).
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbEnumerator">
            <summary>
            Exposes the GetEnumerator method, provides simple iteration over a collection by a .Net Framework data Provider.
            </summary>
            <remarks>DbEnumerator is intended to be used with only one resultset, 
            when running batch statements obtain a DbEnumerator for each resultset</remarks>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.DbEnumerator._dbenumerator">
            <summary>
            The underlying System DbEnumerator
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbEnumerator.#ctor(Crestron.SimplSharp.CrestronData.IDataReader)">
            <summary>
            Initializes a DbEnumerator with the specified IDataReader
            </summary>
            <param name="reader">The DataReader to iterate</param>
            <exception cref="T:System.ArgumentNullException">reader was null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbEnumerator.#ctor(Crestron.SimplSharp.CrestronData.IDataReader,System.Boolean)">
            <summary>
            Initializes a DbEnumerator with the specified IDataReader and indicate whether to automatically close the DataReader
            </summary>
            <param name="reader">The DataReader to iterate</param>
            <param name="closeReader">true to automatically close the DataReader after iterating through its data</param>
            <exception cref="T:System.ArgumentNullException">reader was null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; 
            false if the enumerator has passed the end of the collection</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbEnumerator.Reset">
            <summary>
            Sets the enumerator's position to before the first element in the collection
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbEnumerator.Current">
            <summary>
            Gets the current object in the collection
            </summary>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element or
            after the last element</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronData.Common.DbDataRecord">
            <summary>
            Implements IDataRecord and ICustomTypeDescriptor, and provides data binding support for DbEnumerator
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronData.Common.DbDataRecord._dbdatarecord">
            <summary>
            The underlying system DbDataRecord
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.#ctor(System.Data.IDataRecord)">
            <summary>
            Initializes the DbDataRecord object with a System DbDataRecord, for internal use
            </summary>
            <param name="record">The System DbDataRecord to wrap</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetBoolean(System.Int32)">
            <summary>
            Returns the value of the specified column as a Boolean
            </summary>
            <param name="i">The column ordinal</param>
            <returns>true if the boolean value is true; false otherwise</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a boolean</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a boolean</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetByte(System.Int32)">
            <summary>
            Returns the value of the specified column as a byte
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a byte</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a byte</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Returns the value of the specified column as a byte array
            </summary>
            <param name="i">The zero-based column ordinal</param>
            <param name="dataIndex">The index within the field from which to start the read operation</param>
            <param name="buffer">The buffer into which to read the stream of bytes</param>
            <param name="bufferIndex">The index for buffer to start the read operation</param>
            <param name="length">The number of bytes to read</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a byte array</remarks>
            <exception cref="T:System.InvalidCastException">The value was not a byte array</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetChar(System.Int32)">
            <summary>
            Returns the value of the specified column as a character
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a character</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a char</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetData(System.Int32)">
            <summary>
            For .Net Framework infrastructure only!
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Returns the value of the specified column as a character array
            </summary>
            <param name="i">The zero-based column ordinal</param>
            <param name="dataIndex">The index within the field from which to start the read operation</param>
            <param name="buffer">The buffer into which to read the stream of bytes</param>
            <param name="bufferIndex">The index for buffer to start the read operation</param>
            <param name="length">The number of bytes to read</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a character array</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a character array</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetDataTypeName(System.Int32)">
            <summary>
            Returns the name of the back-end data type
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The name of the back-end data type</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetDateTime(System.Int32)">
            <summary>
            Returns the value of the specified column as a DateTime object
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a DateTime</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a DateTime</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetDecimal(System.Int32)">
            <summary>
            Returns the value of the specified column as a Decimal object
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a Decimal</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a Decimal</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetDouble(System.Int32)">
            <summary>
            Returns the value of the specified column as a double
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a double</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a double</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetFieldType(System.Int32)">
            <summary>
            Returns the Type of the object
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The Type of the object</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetFloat(System.Int32)">
            <summary>
            Returns the value of the specified column as a float
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a float</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a float</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field
            </summary>
            <param name="i">The index of the field to return</param>
            <returns>The GUID value of the specified field</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a guid</remarks>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through 'FieldCount'</exception>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a guid</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetInt16(System.Int32)">
            <summary>
            Returns the value of the specified column as a 16-bit signed integer
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a 16-bit signed integer</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a 16-bit signed integer</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetInt32(System.Int32)">
            <summary>
            Returns the value of the specified column as an 32-bit signed integer
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a 32-bit signed integer</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetInt64(System.Int32)">
            <summary>
            Returns the value of the specified column as an 64-bit signed integer
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a 64-bit signed integer</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a 64-bit signed integer</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetName(System.Int32)">
            <summary>
            Returns the name of the specified column
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The name of the specified column</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetOrdinal(System.String)">
            <summary>
            Returns the column ordinal, given the name of the column
            </summary>
            <param name="name">The name of the column</param>
            <returns>The column ordinal</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetString(System.Int32)">
            <summary>
            Returns the value of the specified column as string
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The column value</returns>
            <remarks>No conversions are performed; therefore the data retrieved must already be a string</remarks>
            <exception cref="T:System.InvalidCastException">The value at 'i' was not a string</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetValue(System.Int32)">
            <summary>
            Returns the value of the specified column in its native format
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The value to return</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetValues(System.Object[])">
            <summary>
            Populates an array of objects with the column values of the current record
            </summary>
            <param name="values">An array of objects to copy the attribute fields into</param>
            <returns>The number of instances of Object in the array</returns>
            <remarks>Using this method may be more efficient for most applications than retrieving each field individually</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.IsDBNull(System.Int32)">
            <summary>
            Used to indicate nonexistent values
            </summary>
            <param name="i">The column ordinal</param>
            <returns>true if the specified column is equivalent to DBNull; false otherwise</returns>
            <remarks>Call this method to check for null column values before calling the typed get methods, 
            ex) GetByte, GetChar, etc.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.op_Equality(Crestron.SimplSharp.CrestronData.Common.DbDataRecord,Crestron.SimplSharp.CrestronData.Common.DbDataRecord)">
            <summary>
            Checks for referential equality between two DbDataRecord
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the DbDataRecords are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.op_Inequality(Crestron.SimplSharp.CrestronData.Common.DbDataRecord,Crestron.SimplSharp.CrestronData.Common.DbDataRecord)">
            <summary>
            Checks for referential inequality between two DbDataRecord
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the DbDataRecords are not the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.GetHashCode">
            <summary>
            Gets the hash code for this DbDataRecord
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current DbDataRecord
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to this DbDataRecord; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.FieldCount">
            <summary>
            Indicates the number of fields within the current record.  This property is readonly
            </summary>
            <exception cref="T:System.NotSupportedException">Not connected to a data source to read from</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.Item(System.Int32)">
            <summary>
            Indicates the value at the specified column in its native format given the column ordinal.  This property is readonly
            </summary>
            <param name="i">The column ordinal</param>
            <returns>The value at the specified column in its native format</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronData.Common.DbDataRecord.Item(System.String)">
            <summary>
            Indicates the value at the specified column in its native format given the column name.  This property is readonly
            </summary>
            <param name="name">The column name</param>
            <returns>The value at the specified column in its native format</returns>
        </member>
    </members>
</doc>
