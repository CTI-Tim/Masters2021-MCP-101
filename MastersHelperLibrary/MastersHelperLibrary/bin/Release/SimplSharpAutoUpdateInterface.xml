<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimplSharpAutoUpdateInterface</name>
    </assembly>
    <members>
        <member name="T:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState">
            <summary>
            The possible states for the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> property.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateIsAvailable">
            <summary>
            An update is available.  This is set when the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/> event is triggered.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateCancellationComplete">
            <summary>
            The update cancellation progress is complete.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateStarted">
            <summary>
            The update has started.  This will occur the first time a manifest file is processed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateRunning">
            <summary>
            The update is running.  This will happen each time the engine is started (i.e. first time a manifest is processed
            or the engine wakes up from a waiting state).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateWaiting">
            <summary>
            The engine is waiting for a timed event to occur, as specified in the manifest file.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateFinished">
            <summary>
            The update is completed and has nothing else to do.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateConfirmed">
            <summary>
            The API has passed true to <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateDenied">
            <summary>
            The API has passed false to <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateConfirmedViaTimeout">
            <summary>
            The auto update state is confirmed since the API did not call <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> within the timeout period.
            (default 30 seconds).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateDownloadingPlugins">
            <summary>
            The auto update process is downloading plugins for various devices.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateRunningDiscovery">
            <summary>
            The auto update process is running various network discovery protocols (Cresnet, Ethernet, etc.) to figure out the network topology.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateCancellationInProgress">
            <summary>
            The auto update process is being cancelled.  However, the device that is currently being updated (if any) will need to finish, so this
            could take quite some time depending on the device.  When finished, <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateCancellationComplete"/> will be sent.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateStartedWithNoConfirmation">
            <summary>
            The auto update process has been started through the console command AUCHECKNOW.  Unlike <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateIsAvailable"/>, there is no need
            to acknowledge the update through the call to <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateStateNone">
            <summary>
            Initial state at system startup.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateCancellationThroughForceInProgress">
            <summary>
            The auto update process has been cancelled through the console command AUFORCE or through the API call ForceCheck(), and will start over.  After it 
            starts over, <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateStarted"/> will be sent.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.GeneratingDeviceLists">
            <summary>
            The <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GenerateDeviceLists"/> method has been called.  Strictly speaking, this is not an auto update state, but since it makes
            use of the auto engine, the auto update process will be unavailable while it is running, hence it should be known about.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.GeneratingDeviceListsFinished">
            <summary>
            The <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GenerateDeviceLists"/> method has completed.  Strictly speaking, this is not an auto update state, but since it makes
            use of the auto engine, the auto update process will be unavailable while it is running, hence it should be known about.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitializing">
            <summary>
            Initial state at system startup until the process has completely initialized (i.e. all programs have been loaded and the auto update engine has 
            run if it needs to - such as if an update had rebooted the system).  This state is only possible in firmware version 1.501.0023 and later.  If 
            running on an earlier firmware, this state will never be set.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitialized">
            <summary>
            If running on firmware version 1.501.0023 or later, this state is set after all programs have been loaded and the engine has been run if required 
            (such as an update in progress that had rebooted the system.)
            If running earlier firmware, this state is not set.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds">
            <summary>
            Items that can change within auto update.  These are used in the <see cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventArgs"/> event arguments, 
            and triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.Enable">
            <summary>
            The state of the enable has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.Enabled"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.ManifestUrl">
            <summary>
            The Manifest URL has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ManifestUrl"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.PluginCatalogUrl">
            <summary>
            The Plugin Catalog URL has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PluginCatalogUrl"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.PollIntervalTime">
            <summary>
            The Update Retry Interval has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PollIntervalTime"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.RemoteServerLoginName">
            <summary>
            The Login Name has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerLoginName"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.RemoteServerLoginPassword">
            <summary>
            The Login Password has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerLoginPassword"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.DeviceConnectLoginName">
            <summary>
            The Device Login Name has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.DeviceConnectLoginName"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.DeviceConnectLoginPassword">
            <summary>
            The Device Login Password has changed.  The <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.DeviceConnectLoginName"/> property can be read to get the latest value.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable">
            <summary>
            As long as <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.Enabled"/> is true and an update is available for one or more components, this will fire 
            at the time given by <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.SetTimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays,System.UInt32,System.UInt32)"/>.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateCancellationComplete">
            <summary>
            Indicates that the update cancellation progress is complete.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateStarted">
            <summary>
            Indicates that the update has started and processing the manifest.  
            This will only take place after the the <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> function has been
            called with a true to confirm the update is desired, which in turn should be called after the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/> Event ID is triggered through
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateRunning">
            <summary>
            Indicates that the update process is running.  This is the state that will be returned after the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateStarted"/> or when the update
            process wakes up from waiting to perform an update check for a device (or devices) in the manifest file.
            Event ID is triggered through  the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateWaiting">
            <summary>
            The update is waiting to process the next event in the manifest file
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateFinished">
            <summary>
            Indicates that the update has finished completely processing the manifest file.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.LastManifestDownloadDateTime">
            <summary>
            This event is received after the manifest is downloaded by the auto update engine.  It can be read with the property 
            <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastManifestDownloadDateTime"/>.  The format is "MM/DD/YYYY HH:MM:SS" with 24 hour time.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.LastManifestCheckDateTime">
            <summary>
            This event is received after the manifest is checked by the auto update engine.  It can be read with the property
            <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastManifestCheckDateTime"/>  The format is "MM/DD/YYYY HH:MM:SS" with 24 hour time.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.LastManifestCheckStatus">
            <summary>
            This event is received after the auto update engine checks the manifest file and contains status of the operation.  It can be
            read with the property <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastManifestCheckStatus"/>  The format is "ERROR: {error text}" or "SUCCESS".
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateConfirmed">
            <summary>
            The auto update state is confirmed from an API call to <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> with a true argument.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateDenied">
            <summary>
            The auto update state was denied from an API call to <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> with a false argument.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateConfirmedViaTimeout">
            <summary>
            The auto update state is confirmed since the API did not call <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> within the timeout period.
            (default 30 seconds).
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateDownloadingPlugins">
            <summary>
            The auto update process is downloading plugins for various devices.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateRunningDiscovery">
            <summary>
            The auto update process is running various network discovery protocols (Cresnet, Ethernet, etc.) to figure out the network topology.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateCancellationInProgress">
            <summary>
            The auto update process is being cancelled.  However, the device that is currently being updated (if any) will need to finish, so this
            could take quite some time depending on the device.  When finished, <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateCancellationComplete"/> will be sent.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateStartedWithNoConfirmation">
            <summary>
            The auto update process has been started through the console command AUCHECKNOW, AUFORCECHECK, or the API Call ForceCheck().  
            Unlike <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/>, there is no need  to acknowledge the update through the call to 
            <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/>.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateCancellationThroughForceInProgress">
            <summary>
            The auto update process is being cancelled through a force command.  However, the device that is currently being updated (if any) will need to finish, so this
            could take quite some time depending on the device.  After cancellation through force, <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateStartedWithNoConfirmation"/> will be sent as the process continues.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.ErrorMessage">
            <summary>
            Error messages from the auto update process.  It can be read with the property <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastErrorReceived"/>.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.GeneratingDeviceLists">
            <summary>
            Receipt of this message occurs the <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GenerateDeviceLists"/> method is called.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.GeneratingDeviceListsFinished">
            <summary>
            Receipt of this message occurs when process started by the <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GenerateDeviceLists"/> method is complete.  It will occur after the 
            receipt of any data from the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GeneratedDeviceListsChange"/> event.
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateInitialized">
            <summary>
            If running firmware version 1.501.0023, receipt of this message occurs after all programs have been loaded and the engine has been run if 
            required (such as an update in progress that had rebooted the system.)
            If running an earlier firmware, this EventId is never triggered.
            </summary>
            <para>This is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event if the firmware version is 1.501.0023 or later.</para>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdate">
            <summary>
            Access to the system's AutoUpdate feature, including status events and some basic control. This feature is not supported on <see cref="F:Crestron.SimplSharp.eDevicePlatform.Server"/>.
            </summary>
            <remarks>When a program with an API starts, if the firmware version is 1.501.0023, several API operations such as <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CheckNow"/>, 
            <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ForceUpdateNow"/>, and <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CancelUpdate"/> may throw exceptions if the update process is busy or initializing.  
            A programmer can detect the end of initialization by subscribing to the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event and checking for the 
            <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateInitialized"/> Event ID.  If the firmware version is earlier than 1.501.0023, those API functions will not throw the
            aforementioned exceptions and will attempt to perform their operations.  It is highly recommended to use 1.501.0023 or later to avoid synchronization 
            issues.
            </remarks>
            <remarks>If you need to see the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateInitialized"/> Event ID that the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/>
            event fires, you should make sure that subscribing to this event is the first auto update operation that occurs in your program!</remarks>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdate._autoUpdateInternal">
            <summary>
            The class that does all the heavy lifting for all the auto update API operations.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdate._username">
            <summary>
            String representing the username for authentication.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdate._password">
            <summary>
            String representing the password for authentication.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.SetAuthenticationCredentials(System.String,System.String)">
            <summary>
            This function should be called to set the username and password if authentication is currently turned on.
            Each time an API function/property is called, the credentials will be validated.
            </summary>
            <param name="username">The username for the account to validate.</param>
            <param name="password">The password for the account to validate.</param>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdate._InternalClassProtection">
            <summary>
            Note that the static member will be initialized before the static constructor is called.
            This event is used as a one-time obtain to insure that the internals are initialized once on first access via any
            API function.  It is set by defualt, and is not auto-reset.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.SetTimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays,System.UInt32,System.UInt32)">
            <summary>
            Function to set the day and time to process the manifest file.
            When the value is changed, the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdateChange"/> event is triggered.
            </summary>
            <remarks>This function supercedes <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays,System.UInt32,System.UInt32)"/>.</remarks>
            <remarks>Corresponds to the AUTIME console command.</remarks>
            <param name="scheduledDay">The day the manifest file is processed.  Set to ScheduledEventCommon.eWeekDays.All for Daily occurrence.  
            Set to ScheduledEventCommon.eWeekDays.NotSet to remove the recurrence.  Although this field supports OR'ing of the values, the underlying scheduling 
            process will only allow for a specific day, All, or NotSet.</param>
            <param name="hours">The hour component of the time to process the manifest file.</param>
            <param name="minutes">The minute component of the time to process the manifest file.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If hours is greater than 23 or minutes is greater than 59, as long as scheduledDay is different from ScheduledEventCommon.eWeekDays.All.</exception>
            <exception cref="T:System.InvalidOperationException">An internal error occurred while setting the time and date.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays,System.UInt32,System.UInt32)">
            <summary>
            Function to set the day and time to process the manifest file.
            When the value is changed, the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdateChange"/> event is triggered.
            </summary>
            <remarks>This function is superceded by <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.SetTimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays,System.UInt32,System.UInt32)"/>.</remarks>
            <remarks>Corresponds to the AUTIME console command.</remarks>
            <param name="scheduledDay">The day the manifest file is processed.  Set to ScheduledEventCommon.eWeekDays.All for Daily occurrence.  
            Set to ScheduledEventCommon.eWeekDays.NotSet to remove the recurrence.  Although this field supports OR'ing of the values, the underlying scheduling 
            process will only allow for a specific day, All, or NotSet.</param>
            <param name="hours">The hour component of the time to process the manifest file.</param>
            <param name="minutes">The minute component of the time to process the manifest file.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If hours is greater than 23 or minutes is greater than 59, as long as scheduledDay is different from ScheduledEventCommon.eWeekDays.All.</exception>
            <exception cref="T:System.InvalidOperationException">An internal error occurred while setting the time and date.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GetTimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays@,System.UInt32@,System.UInt32@)">
            <summary>
            Function to get the day and time to process the manifest file.
            When the value is changed, the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdateChange"/> event is triggered.
            </summary>
            <remarks>Corresponds to the AUTIME console command.</remarks>
            <remarks>Note that setting AUTIME or calling this function will override any pre-existing AUPOLLINTERVAL or call to 
            <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GetTimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays@,System.UInt32@,System.UInt32@)"/>.  </remarks>
            <param name="scheduledDay">The day the manifest file is processed.  ScheduledEventCommon.eWeekDays.All is for Daily occurrence, and
            ScheduledEventCommon.eWeekDays.NotSet for no occurrence.</param>
            <param name="hours">The hour component of the time to process the manifest file.  This information is considered invalid if the
            scheduledDay is ScheduledEventCommon.eWeekDays.NotSet</param>
            <param name="minutes">The minute component of the time to process the manifest file.  This information is considered invalid if the
            scheduledDay is ScheduledEventCommon.eWeekDays.NotSet</param>
            <exception cref="T:System.InvalidOperationException">If there is an error changing the update time.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CheckNow">
            <summary>
            This will cause the auto update engine to check the manifest file rather than wait for the specified check time.
            <para>If an update is already in progress, this throws exceptions as noted below.</para>
            </summary>
            <remarks>Corresponds to the AUCHECKNOW console command.</remarks>
            <remarks>The auto update state can be checked by examining the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> property to determine the exact state, 
            or the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.UpdateInProgress"/> bool property to see if the update is in progress or not.</remarks>
            <exception cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateException">
            <list type="bullet">
            <item><description>If <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> is <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitializing"/>, the text for the exception is "Auto update is still initializing"</description></item>
            <item><description>If a cancel operation is already running via <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CancelUpdate"/>, <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ForceUpdateNow"/>, AUCHECKNOW or AUFORCEUPDATE console commands, the text for the exception is "Cancellation is already in progress"</description></item>
            <item><description>If <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.UpdateInProgress"/> is true, text for the exception is "Auto update is currently running."</description></item>
            </list>
            </exception>
            <exception cref="T:System.InvalidOperationException">If there is an error during the check process.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ForceUpdateNow">
            <summary>
            This will force the engine to cancel the current update in progress, delete the intermediate files, download the manifest, and force the engine to process
            the manifest as if it were the first time it has downloaded this particular manifest.
            <para>If a cancellation or force is already in progress, this method throws exceptions as noted below.</para>
            <para>If an update is currently running, this method will take an indeterminate amount of time to complete, as the current device being updated is allowed to finish being
            updated.</para>
            </summary>
            <remarks>Corresponds to the AUFORCEUPDATENOW console command.</remarks>
            <remarks>The auto update state can be checked by examining the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> property to determine the exact state, 
            or the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.UpdateInProgress"/> bool property to see if the update is in progress or not.</remarks>
            <exception cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateException">
            <list type="bullet">
            <item><description>If <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> is <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitializing"/>, the text for the exception is "Auto update is still initializing"</description></item>
            <item><description>If a cancel operation is already running via <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CancelUpdate"/>, <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ForceUpdateNow"/>, AUCHECKNOW or AUFORCEUPDATE console commands, the text for the exception is "Cancellation is already in progress"</description></item>
            </list>
            </exception>
            <exception cref="T:System.InvalidOperationException">If there is an error during the check process.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)">
            <summary>
            When the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/> ID is thrown via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event, the programmer
            needs to acknowledge whether or not to perform the update.
            </summary>
            <param name="performUpdate">true to perform the update, false to not perform the update</param>
            <remarks>If this is not called within 30s of receiving the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/>, a value of true will be assumed.
            In response to this call, the API will receive one of three events through the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event:
            <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateConfirmed"/>, <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateDenied"/>, or <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateConfirmedViaTimeout"/>.
            </remarks>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdate._logFilesDirectory">
            <summary>
            Private member corresponding to <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LogFilesDirectory"/> property.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.AutoUpdate._releaseNotesFile">
            <summary>
            Private member corresponding to the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ReleaseNotesFile"/> property.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CancelUpdate">
            <summary>
            This function will cancel any update that is in progress.  It will prevent further progression of processing of the current manifest file.
            </summary>
            <remarks>Corresponds to the AUCANCEL console command.</remarks>
            <remarks>The auto update state can be checked by examining the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> property to determine the exact state, 
            or the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.UpdateInProgress"/> bool property to see if the update is in progress or not.</remarks>
            <exception cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateException">
            <list type="bullet">
            <item><description>If <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> is <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitializing"/>, the text for the exception is "Auto update is still initializing"</description></item>
            <item><description>If a cancel operation is already running via <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CancelUpdate"/>, <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ForceUpdateNow"/>, AUCHECKNOW or AUFORCEUPDATE console commands, the text for the exception is "Cancellation is already in progress"</description></item>
            </list>
            </exception>
            <exception cref="T:System.InvalidOperationException">If there is an error during the cancel process.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GenerateDeviceLists">
            <summary>
            This method will cause the system to find all devices accessible to the control system and provide two lists:  the list of all devices,
            and a list filtered by the manifest file (if one is available).  When the discovery is complete, the 
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GeneratedDeviceListsChange"/> event is triggered with an argument of type <see cref="T:Crestron.SimplSharp.AutoUpdate.GeneratedDeviceListsEventArgs"/> containing the lists.
            </summary>
            <exception cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateException">
            <list type="bullet">
            <item><description>If <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> is <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitializing"/>, the text for the exception is "Auto update is still initializing"</description></item>
            <item><description>If a cancel operation is already running via <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CancelUpdate"/>, <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ForceUpdateNow"/>, AUCHECKNOW or AUFORCEUPDATE console commands, the text for the exception is "Cancellation is already in progress"</description></item>
            <item><description>If <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.UpdateInProgress"/> is true, text for the exception is "Auto update is currently running."</description></item>
            </list>
            </exception>
            <exception cref="T:System.InvalidOperationException">If there is an error during the check process.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.CreateInternalClass(Crestron.AutoUpdateApiCommon.ApiCall)">
            <summary>
            Create the internal class that does much of the heavy lifting behind the scenes of the API.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ReadRegistryItems">
            <summary>
            Reads startup items from the registry.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState">
            <summary>
            The state of the auto update process.  This corresponds to a value from the enum <see cref="T:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState"/>.  When the 
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event is triggered, this value is set.  
            <para>At system startup, if the firmware version is 1.501.0023 or later, AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitializing"/>  If the firmware
            version is earlier than 1.501.0023, the state is <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitialized"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateIsAvailable"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateCancellationComplete"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateCancellationComplete"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateStarted"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateStarted"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateRunning"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateRunning"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateWaiting"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateWaiting"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateFinished"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateFinished"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateConfirmed"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateConfirmed"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateDenied"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateDenied"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateConfirmedViaTimeout"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateConfirmedViaTimeout"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateDownloadingPlugins"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateDownloadingPlugins"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateRunningDiscovery"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateRunningDiscovery"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateCancellationInProgress"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateCancellationInProgress"/></para>
            <para><see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateInitialized"/> causes AutoUpdateState to be set to <see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateInitialized"/>  Note that this 
            EventId is only possible if using firmware 1.501.0023 or later.</para>
            </summary>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange">
            <summary>
            The event that the programmer can subscribe to to receive notifications of changes to the Auto Update process.  The event information is in
            the returned as a <see cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventArgs"/> parameter.
            <remarks>If you need to see the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateInitialized"/> Event ID that the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/>
            event fires, you should make sure that subscribing to this event is the first auto update operation that occurs in your program!</remarks>
            </summary>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.InitialUpdateInformationChange">
            <summary>
            The event that the programmer can subscribe to to receive information about the auto update before the update is accepted or declined
            by calling the <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> function.  The event information is returned as a 
            <see cref="T:Crestron.SimplSharp.AutoUpdate.InitialUpdateInformationEventArgs"/> parameter.
            </summary>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerToControlSystemUpdateProgressChange">
            <summary>
            The event that the programmer can subscribe to to receive notifications of update progress for file transfers from the 
            RemoteServer to the control system during auto update.  The event information is returned in a 
            <see cref="T:Crestron.SimplSharp.AutoUpdate.RemoteServerToControlSystemUpdateProgressEventArgs"/> parameter.
            </summary>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange">
            <summary>
            The event that the programmer can subscribe to to receive notifications of update progress for file transfers from the 
            control system to a specific device during auto update.  The event information is returned in a 
            <see cref="T:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs"/> parameter.
            </summary>       
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdateChange">
            <summary>
            The event that the programmer can subscribe to to receive notifications of the time to perform the update process having changed.
            The event information is returned in a <see cref="T:Crestron.SimplSharp.AutoUpdate.TimeToPerformUpdateEventArgs"/> parameter.
            </summary>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GeneratedDeviceListsChange">
            <summary>
            The event that the programmer can subscribe to to receive information about the generated device lists after the 
            <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GenerateDeviceLists"/> method is called. by calling the <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> function.  
            The event information is returned as a <see cref="T:Crestron.SimplSharp.AutoUpdate.GeneratedDeviceListsEventArgs"/> parameter.
            </summary>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.Enabled">
            <summary>
            Property to enable or disable the auto update or get the current value.
            When the state is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.Enable"/> ID is triggered via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this to true enables auto update, setting this to false disables auto update.  
            Getting this value returns true if auto update is enabled, false if auto update is disabled.
            </summary>
            <remarks>Corresponds to the AUENABLE console command.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error changing the auto update state</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ManifestUrl">
            <summary>
            Property to set or get the URL of the Manifest URL.
            When the value is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.ManifestUrl"/> ID is triggered via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this value changes the Manifest URL to the given string.
            Getting this value returns a string corresponding to the current Manifest URL.
            </summary>
            <remarks>Corresponds to the AUMANIFESTURL console command.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">If the Manifest URL is too large or not valid.</exception>
            <exception cref="T:System.InvalidOperationException">If there is an error changing the Manifest URL at a lower level.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PluginCatalogUrl">
            <summary>
            Property to set or get the URL of the Plugin Catalog.
            When the value is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.PluginCatalogUrl"/> ID is triggered via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this value changes the Plugin Catalog URL to the given string.
            Getting this value returns a string corresponding to the current Plugin Catalog URL.
            </summary>
            <remarks>Corresponds to the AUPLUGINCATALOGURL console command.</remarks>
            <remarks>If the value is set to an empty string, then a default URL will be used.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">If the Plugin Catalog URL is too large or not valid.</exception>
            <exception cref="T:System.InvalidOperationException">If there is an error changing the Plugin Catalog URL at a lower level.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PollIntervalTime">
            <summary>
            Property to set or get the Poll Interval time.  If AUTIME nor <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays,System.UInt32,System.UInt32)"/> is not set, the Poll Interval time will
            be in effect.
            When the value is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.PollIntervalTime"/> ID is triggered via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this value changes the Poll Interval time to the given number of hours.
            Getting this value returns a uint corresponding to the set number of hours for the Poll Interval.
            </summary>
            <remarks>Corresponds to the AUPOLLINTERVAL console command.</remarks>
            <remarks>If a Poll Interval is set but is being overridden by AUTIME or <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdate(Crestron.SimplSharp.Scheduler.ScheduledEventCommon.eWeekDays,System.UInt32,System.UInt32)"/>, this still will return the given number of 
            hours for the Poll Interval.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error changing the update interval.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.UpdateInProgress">
            <summary>
            A property to determine if an update is in progress.
            The property returns true if an update is in progress, false otherwise.
            </summary>
            <remarks>An update is considered not in progress if the <see cref="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateState"/> property is any of the following:
            <list type="bullet">
            <listheader><term><see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateStateNone"/></term></listheader>
            <listheader><term><see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateDenied"/></term></listheader>
            <listheader><term><see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateFinished"/></term></listheader>
            <listheader><term><see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.UpdateCancellationComplete"/></term></listheader>
            <listheader><term><see cref="F:Crestron.SimplSharp.AutoUpdate.eAutoUpdateState.GeneratingDeviceListsFinished"/></term></listheader>
            </list>
            </remarks>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerLoginName">
            <summary>
            A property to set or get the name to log into the update server with.
            When the value is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.RemoteServerLoginName"/> ID is thrown via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this value changes the remote server login name to the given string.
            Getting this value returns a string corresponding to the current remote server login name.
            </summary>
            <remarks>Corresponds to the AUUSERNAME console command.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error setting the login name.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerLoginPassword">
            <summary>
            A property to set or get the password to log into the update server with.
            When the value is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.RemoteServerLoginPassword"/> ID is thrown via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this value changes the remote server login password to the given string.
            Getting this value returns the string "SET" (no quotes) if the password is greater than 0 characters.
            Getting this value returns the string "NOT SET" (no quotes) if the password is 0 characters.
            </summary>
            <remarks>Corresponds to the AUPASSWORD console command.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error setting the password.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.DeviceConnectLoginName">
            <summary>
            A property to set or get the name to log into the remote device with.
            When the value is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.DeviceConnectLoginName"/> ID is thrown via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this value changes the device login name to the given string.
            Getting this value returns a string corresponding to the current device login name.
            </summary>
            <remarks>Corresponds to the AUDEVCONNECTUSER console command.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error setting the login name.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.DeviceConnectLoginPassword">
            <summary>
            A property to set or get the password to log into the remote device with.
            When the value is changed, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.DeviceConnectLoginPassword"/> ID is thrown via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            Setting this value changes the device login password to the given string.
            Getting this value returns the string "SET" (no quotes) if the password is greater than 0 characters.
            Getting this value returns the string "NOT SET" (no quotes) if the password is 0 characters.
            </summary>
            <remarks>Corresponds to the AUDEVCONNECTPASS console command.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error setting the password.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastManifestDownloadDateTime">
            <summary>
            A property to get the last date and time that the manifest file was downloaded.
            When the system changes this value, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.LastManifestDownloadDateTime"/> ID is thrown via 
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            </summary>
            <remarks>The format of the string is is "MM/DD/YYYY HH:MM:SS" with 24 hour time.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error retrieving the last manifest download date/time.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastErrorReceived">
            <summary>
            A property to get the last error received from the auto update process.
            When the system changes this value, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.ErrorMessage"/> ID is thrown via 
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            </summary>
            <remarks>The format of the string is is "{error text} on MM/DD/YYYY HH:MM:SS" with 24 hour time.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error retrieving the last error received.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastManifestCheckDateTime">
            <summary>
            A property to get the last date and time that the manifest file was checked.
            When the system changes this value, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.LastManifestCheckDateTime"/> ID is thrown via 
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            </summary>
            <remarks>The format is "MM/DD/YYYY HH:MM:SS" with 24 hour time.</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error retrieving the last manifest check date/time.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LastManifestCheckStatus">
            <summary>
            A property to get the status of the last time the manifest file was checked.
            When the system changes this value, the <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.LastManifestCheckStatus"/> ID is thrown 
            via the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            </summary>
            <remarks>The format is "ERROR: {error text}" or "SUCCESS".</remarks>
            <exception cref="T:System.InvalidOperationException">If there is an error retrieving the last manifest check status.</exception>
            <exception cref="T:System.NotSupportedException">AutoUpdate is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.LogFilesDirectory">
            <summary>
            This property will return the directory containing the logs from the most recent auto update (or the current auto update that is in progress).
            The path has a trailing backslash.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ReleaseNotesFile">
            <summary>
            This property will return the fully qualified name of the release notes file.  The release notes are considered valid after receipt of the
            <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/> event ID by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            </summary>
            <remarks>This property was changed to private as we're not supporting a release notes file for any public release (at the moment...)</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChangeEventHandler">
            <summary>
            Change event delegate for general changes to Auto Update parameters.  This is used by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdate.InitialUpdateInformationChangeEventHandler">
            <summary>
            Change event delegate for general information about the files to be transferred.  This will occur after the user receives <see cref="F:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds.UpdateIsAvailable"/> and
            from the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/>.
            </summary>
            <param name="args">Information about the arguments to the event.</param>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerToControlSystemUpdateProgressChangeEventHandler">
            <summary>
            Change event delegate for file transfer progress from the RemoteServer to the control system.  This is used by the
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerToControlSystemUpdateProgressChange"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChangeEventHandler">
            <summary>
            Change event delegate for file transfer progress from the control system to a specific device.  This is used by the
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdateChangeEventHandler">
            <summary>
            Change event delegate for the time to perform the update changing.  This is used by the 
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdateChange"/> event.  
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GeneratedDeviceListsChangeEventHandler">
            <summary>
            Change event delegate for the generated device lists.  This contains information about the discovered devices when the 
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GeneratedDeviceListsChange"/> event is triggered.
            </summary>
            <param name="args">Information about the arguments to the event.</param>
        </member>
        <member name="T:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser">
            <summary>
            AutoUpdateInterfaceDataMessageParser Class
            </summary>
        </member>
        <member name="M:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser.CreateAppSpecificQueues(System.String,System.String)">
            <summary>
            Open the Queues; reader then writer.
            </summary>
            <param name="fromAppQName">This is the read queue</param>
            <param name="toAppQName">This is the write queue</param>
        </member>
        <member name="M:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser._fromAppMsgQ_DataOnQueueChanged(System.Object,System.EventArgs)">
            <summary>
            This handler will be invoked when the queue receives data, whether it is from App00-NN or the Engine.
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser.SendStructureToQueue(Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes,System.IntPtr,System.UInt32,System.String)">
            <summary>
            SendStructureToQueue method
            </summary>
            <param name="messageType">Message type from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/></param>
            <param name="ptr">A platform-specific type that is used to represent a pointer or a handle</param>
            <param name="Length">Length of structure</param>
            <param name="Label">Label</param>
            <returns>bool</returns>
        </member>
        <member name="M:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser.CreateAndSendNoValueStruct(Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes,System.Boolean)">
            <summary>
            CreateAndSendNoValueStruct method
            </summary>
            <param name="messageType">Message type from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/></param>
            <param name="isQuery">Boolean, message is query</param>
            <returns>bool</returns>
        </member>
        <member name="M:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser.CreateAndSendIntegerStruct(Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes,System.UInt32,System.Boolean)">
            <summary>
            CreateAndSendIntegerStruct method
            </summary>
            <param name="messageType">Message type from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/></param>
            <param name="value">Unsigned integer value to send</param>
            <param name="isQuery">Boolean, message is query</param>
            <returns>bool</returns>
        </member>
        <member name="M:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser.CreateAndSendStringStruct(Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes,System.String,System.Boolean)">
            <summary>
            CreateAndSendStringStruct method
            </summary>
            <param name="messageType">Message type from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/></param>
            <param name="value">String value to send</param>
            <param name="isQuery">Boolean, message is query</param>
            <returns>bool</returns>
        </member>
        <member name="M:Crestron.AutoUpdateInterface.AutoUpdateInterfaceDataMessageParser.CreateAndSendStringStruct(Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes,System.String,System.UInt32)">
            <summary>
            CreateAndSendStringStruct method
            </summary>
            <param name="messageType">Message type from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/></param>
            <param name="value">String value to send</param>
            <param name="flags">Message flag</param>
            <returns>bool</returns>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus">
            <summary>
            This is the status of the transfer as given by the <see cref="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileTransferStatus"/> member when the
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.InProgress">
            <summary>
            The file transfer is in progress.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.Complete">
            <summary>
            The file transfer is complete.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.AlreadyUpToDate">
            <summary>
            The firmware for the device is already up to date.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.Configured">
            <summary>
            The device supports auto update and has been configured to perform the update on it's own without subsequent
            action by the control system.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.NotApplicable">
            <summary>
            No transfer status is applicable at the given time.  This is only applicable for <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentFileTransferStatus"/>.
            This can happen if a newer INCLUDE4.DAT is in use and the firmware does not support the subcomponent status.  It can also happen when the auto update tells the user it is
            starting/ending the transfer for an entire device (i.e. it is starting to update or finishes updating a CEN-TRACK.  Each subcomponent gets a proper status, though
            there is no subcomponent status that is reflected for the overall transfer).  In that case, the <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentDevicename"/>
            would have the string value "NotApplicable" also.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.Failure">
            <summary>
            The file transfer failed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.TimeToPerformUpdateEventArgs">
            <summary>
            This argument is triggered by the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.TimeToPerformUpdateChange"/> when the time to update changes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.TimeToPerformUpdateEventArgs.DayToPerformUpdate">
            <summary>
            The day of the week to that the update process is scheduled to run.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.TimeToPerformUpdateEventArgs.Hour">
            <summary>
            The hour component of the time that the update process is scheduled to run.  This information is considered invalid if the
            <see cref="P:Crestron.SimplSharp.AutoUpdate.TimeToPerformUpdateEventArgs.DayToPerformUpdate"/> is ScheduledEventCommon.eWeekDays.NotSet.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.TimeToPerformUpdateEventArgs.Minute">
            <summary>
            The minute component of the time that the update process is scheduled to run.  This information is considered invalid if the
            <see cref="P:Crestron.SimplSharp.AutoUpdate.TimeToPerformUpdateEventArgs.DayToPerformUpdate"/> is ScheduledEventCommon.eWeekDays.NotSet.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.InitialUpdateInformationEventArgs">
            <summary>
            Contains items that are given to the user's program when the AutoUpdate timer comes due and triggers.  When this event triggers, they must call the 
            <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.PerformUpdateInResponseToEvent(System.Boolean)"/> method to allow the update to continue or postpone it to the next update cycle.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.InitialUpdateInformationEventArgs.NumberOfFilesToGetFromRemoteServer">
            <summary>
            This property gives the number of files that need to be transferred from Remote Server to the control system for device updates when the update runs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.InitialUpdateInformationEventArgs.NumberOfFilesToSendFromControlSystemToDevices">
            <summary>
            This property gives the number of files that need to be transferred from the control system to various devices the update runs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.InitialUpdateInformationEventArgs.DevicesFound">
            <summary>
            This is a list of strings containing the devices that are found via discovery.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.GeneratedDeviceListsEventArgs">
            <summary>
            This class contains a two lists of devices.  When the <see cref="M:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GenerateDeviceLists"/> method is called, it begins list population.  This 
            class is passed as an argument when the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.GeneratedDeviceListsChange"/> event is triggered.
            <para><see cref="P:Crestron.SimplSharp.AutoUpdate.GeneratedDeviceListsEventArgs.AllDiscoveredDevices"/> which contains all discovered devices.</para>
            <para><see cref="P:Crestron.SimplSharp.AutoUpdate.GeneratedDeviceListsEventArgs.DiscoveredDevicesFilteredByManifest"/> which contains all discovered devices filtered by the manifest.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.GeneratedDeviceListsEventArgs.AllDiscoveredDevices">
            <summary>
            This is a list of all discovered devices, unfiltered.
            The format of this is DeviceLocation:DeviceType:FirmwareVersion:Hostname:NetworkType
            DeviceLocation contains a period separated list of entities such as IP-ID-XX, RF-ID-XX, ID-XX, ID-Y.XX, CS, CARD-XX where card is a 2 digit hex ID and
            Y is a 1 digit decimal number.  If the device is ethernet and not part of a control system's IP table, then the format for the IP-ID will actually be the
            text "IP-ID-XX [" + hostname of the device + "]"
            The DeviceType is the actual name of the device, such as CLW-DIMEX-E.
            The firmware version v followed by the version.
            The Hostname is either {none} or the actual hostname if it is an ethernet device.
            The Network type is ENET, CNET, RF, CS or CARD
            </summary>
            <example>
            IP-ID-XX [CEN-SWPOE-16-6CBAFA]:CEN-SWPOE-16:v1.1805.00000:CEN-SWPOE-16-6CBAFA:ENET
            IP-ID-07:SWAMP:v4.002.265319146:SWAMP-00107F5B37A1:ENET
            RF-ID-03:CLW-DIMEX-E:v2.004.0004:{none}:RF
            ID-2F:CEN-RFGW-EX:v2.002.0000:{none}:CNET
            IP-ID-25.RF-ID-3A:INET-CBDEX-E:v1.002.0034:{none}:RF
            </example>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.GeneratedDeviceListsEventArgs.DiscoveredDevicesFilteredByManifest">
            <summary>
            This is a list of all discovered devices, filtered by the manifest file.
            The format of this is DeviceLocation:DeviceType:FirmwareVersion:Hostname:NetworkType
            DeviceLocation contains a period separated list of entities such as IP-ID-XX, RF-ID-XX, ID-XX, ID-Y.XX, CS, CARD-XX where card is a 2 digit hex ID and
            Y is a 1 digit decimal number.  If the device is ethernet and not part of a control system's IP table, then the format for the IP-ID will actually be the
            text "IP-ID-XX [" + hostname of the device + "]"
            The DeviceType is the actual name of the device, such as CLW-DIMEX-E.
            The firmware version v followed by the version.
            The Hostname is either {none} or the actual hostname if it is an ethernet device.
            The Network type is ENET, CNET, RF, CS or CARD
            </summary>
            <example>
            IP-ID-XX [CEN-SWPOE-16-6CBAFA]:CEN-SWPOE-16:v1.1805.00000:CEN-SWPOE-16-6CBAFA:ENET
            IP-ID-07:SWAMP:v4.002.265319146:SWAMP-00107F5B37A1:ENET
            RF-ID-03:CLW-DIMEX-E:v2.004.0004:{none}:RF
            ID-2F:CEN-RFGW-EX:v2.002.0000:{none}:CNET
            IP-ID-25.RF-ID-3A:INET-CBDEX-E:v1.002.0034:{none}:RF
            </example>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.RemoteServerToControlSystemUpdateProgressEventArgs">
            <summary>
            When a file is begin transferred from the RemoteServer to the control system, the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerToControlSystemUpdateProgressChange"/> handler is triggered
            with information from this class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.RemoteServerToControlSystemUpdateProgressEventArgs.CurrentFileNumberBeingTransferredFromRemoteServer">
            <summary>
            This property gives the current file number being transferred from the RemoteServer to the control system out of <see cref="P:Crestron.SimplSharp.AutoUpdate.InitialUpdateInformationEventArgs.NumberOfFilesToGetFromRemoteServer"/> total when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerToControlSystemUpdateProgressChange"/> handler is triggered.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.RemoteServerToControlSystemUpdateProgressEventArgs.NumberOfFilesToGetFromRemoteServer">
            <summary>
            This property gives the number of files that need to be transferred from Remote Server to the control system for device updates when the update runs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.RemoteServerToControlSystemUpdateProgressEventArgs.CurrentFileTransferStatus">
            <summary>
            This is the status of the current transfer as given by the enum <see cref="T:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus"/> when the 
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerToControlSystemUpdateProgressChange"/> handler is triggered.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.RemoteServerToControlSystemUpdateProgressEventArgs.CurrentFileNameBeingTransferredFromRemoteServer">
            <summary>
            This property gives the current file name being transferred from the RemoteServer to the control system when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.RemoteServerToControlSystemUpdateProgressChange"/> handler is triggered.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs">
            <summary>
            When a file is being transferred from the control system to a device, the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered with
            information from this class.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentDevicename">
            <summary>
            When a device has multiple subcomponents such as a SWAMP that has multiple expanders, this is the name of the subcomponent
            when the the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            </summary>
            <remarks>
            If the firmware version is prior to 1.502.XXXX, this field will be empty.
            </remarks>
            <remarks>
            For a device such as a SWAMP with several expanders, this transfer status would change for the SWAMP and each expander.  The overall
            status of the transfer to the device as an entity is still given by the <see cref="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileTransferStatus"/>
            member.  Note that when the transfer starts and the API is notified that the device is going to be updated, the <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentFileTransferStatus"/> is 
            NotApplicable and the <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentDevicename"/> is "NotApplicable".
            </remarks>
        </member>
        <member name="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentFileTransferStatus">
            <summary>
            This is the status of the current transfer to a subcomponent as given by the enum <see cref="T:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus"/> when the 
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            </summary>
            <remarks>
            If the firmware version is prior to 1.502.XXXX, the field will be <see cref="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.NotApplicable"/>.
            </remarks>
            <remarks>
            For a device such as a SWAMP with several expanders, this transfer status would change for the SWAMP and each expander.  The overall
            status of the transfer to the device as an entity is still given by the <see cref="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileTransferStatus"/>
            member.  Note that when the transfer starts and the API is notified that the device is going to be updated, the <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentFileTransferStatus"/> is 
            NotApplicable and the <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentDevicename"/> is "NotApplicable".
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentDeviceNumberToSendTo">
            <summary>
            This property gives the current device number being transferred from the control system out of <see cref="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.NumberOfDevicesToSendTo"/> total when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.NumberOfDevicesToSendTo">
            <summary>
            This property gives the number of devices that need to be transferred to from the control system when the
            <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileNumberBeingTransferredFromControlSystemToSpecificDevice">
            <summary>
            This property gives the current file number being transferred from the control system out of <see cref="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.NumberOfFilesToSendFromControlSystemToSpecificDevice"/> total when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.  When a device such as a SWAMP has multiple subcomponents to send
            to (such as the SWAMP itself and a number of expanders), the subcomponent name is given by the member 
            <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentDevicename"/> and the transfer status to the subcomponent is given by 
            <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentFileTransferStatus"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.NumberOfFilesToSendFromControlSystemToSpecificDevice">
            <summary>
            This property gives the number of files that need to be transferred from the control system to a specific device when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.  
            When a device such as a SWAMP has multiple subcomponents to send
            to (such as the SWAMP itself and a number of expanders), the subcomponent name is given by the member 
            <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentDevicename"/> and the transfer status to the subcomponent is given by 
            <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentFileTransferStatus"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileSizeBeingTransferredToSpecificDevice">
            <summary>
            This property gives the current file size in bytes being transferred from the control system to a specific device when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            When a device such as a SWAMP has multiple subcomponents to send
            to (such as the SWAMP itself and a number of expanders), the subcomponent name is given by the member 
            <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentDevicename"/> and the transfer status to the subcomponent is given by 
            <see cref="F:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentSubcomponentFileTransferStatus"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileNameBeingTransferredToSpecificDevice">
            <summary>
            This property gives the current file name being transferred from the control system to a specific device when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentNameOfDeviceBeingTransferredTo">
            <summary>
            This property gives the name of the device being transferred to from the control system when
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.  This is the
            name of the primary device - if the system is updating to a SWAMP and 3 extenders, this is still the fully qualified device
            hierarchy such as IP-ID-25:SWAMP
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileTransferStatus">
            <summary>
            This is the status of the current transfer as given by the enum <see cref="T:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus"/> when the 
            the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.ControlSystemToDeviceUpdateProgressChange"/> handler is triggered.
            </summary>
            <remarks>If this is <see cref="F:Crestron.SimplSharp.AutoUpdate.eCurrentTransferStatus.AlreadyUpToDate"/> then <see cref="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.CurrentFileSizeBeingTransferredToSpecificDevice"/> and
            <see cref="P:Crestron.SimplSharp.AutoUpdate.ControlSystemToDeviceUpdateProgressEventArgs.NumberOfFilesToSendFromControlSystemToSpecificDevice"/> would be zero.</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventArgs">
            <summary>
            This class is used to send an EventId given by one of the <see cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds"/> to the <see cref="E:Crestron.SimplSharp.AutoUpdate.AutoUpdate.AutoUpdateChange"/> event handler.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventArgs.EventId">
            <summary>
            Event ID for the Auto Update, see <see cref="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateEventIds"/>.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.AutoUpdate.AutoUpdateException">
            <summary>
            The exception that is thrown when an error occurs during an Auto Update API operation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AutoUpdate.AutoUpdateException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.ApiSync">
            <summary>
            Used for syncing the API to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._enable">
            <summary>
            internal class properties that manage sending get/set of the enable from the user API.
            Enable should be used when setting from the API, _enable when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._manifestURL">
            <summary>
            internal class properties that manage sending get/set of the Manifest URL from the user API.
            ManifestURL should be used when setting from the API, _manifestURL when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If the URL is too large or not valid.</exception>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._pluginCatalogURL">
            <summary>
            internal class properties that manage sending get/set of the Plugin Catalog URL from the user API.
            PluginCatalogURL should be used when setting from the API, _pluginCatalogURL when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If the URL is too large or not valid.</exception>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._remoteServerLoginName">
            <summary>
            internal class properties that manage sending get/set of the Remote Server Login name from the user API.
            RemoteServerLoginName should be used when setting from the API, _remoteServerLoginName when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._remoteServerLoginPassword">
            <summary>
            internal class properties that manage sending get/set of the Remote Server Login password from the user API.
            RemoteServerLoginPassword should be used when setting from the API, _remoteServerLoginPassword when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._deviceConnectUsername">
            <summary>
            internal class properties that manage sending get/set of the Device Login name from the user API.
            DeviceConnectUsername should be used when setting from the API, _deviceConnectUsername when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._deviceConnectPassword">
            <summary>
            internal class properties that manage sending get/set of the Device Login password from the user API.
            DeviceConnectPassword should be used when setting from the API, _deviceConnectPassword when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.CancelIssued">
            <summary>
            A flag in the API that tells us if we did a cancel, but we haven't yet gotten the true feedback from
            the AUI yet to know if we're in cancellation phase.  This is so that when the API issues a cancel,
            other operations can be blocked immediately.
            </summary>
        </member>
        <member name="M:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.CancelUpdate">
            <summary>
            Tells the AUI to cancel the update.  You cannot cancel the update if:
            - Initializing
            - API has issued cancel (or gotten status back from elsewhere that a cancel is in progress)
            </summary>
        </member>
        <member name="M:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.ForceUpdateNow">
            <summary>
            Tells the AUI to force a new update.  You cannot force the update if:
            - Initializing
            - API has issued cancel (or gotten status back from elsewhere that a cancel is in progress)
            </summary>
        </member>
        <member name="M:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.CheckNow">
            <summary>
            Tells the AUI to check for update.  You cannot check for update if:
            - Initializing
            - API has issued cancel (or gotten status back from elsewhere that a cancel is in progress)
            - An update is already in progress (one of several states that is noted in the code below)
            </summary>
        </member>
        <member name="M:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.GenerateDeviceLists">
            <summary>
            Tells the AUI to generate a device list of discovered devices and ones filtered by manifest.  You cannot generate the list if:
            - Initializing
            - API has issued cancel (or gotten status back from elsewhere that a cancel is in progress)
            - An update is already in progress (one of several states that is noted in the code below)
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiInternal.AutoUpdateInternal._pollIntervalTime">
            <summary>
            internal class properties that manage sending get/set of the enable from the user API.
            PollIntervalTime should be used when setting from the API, _pollIntervalTime when setting from the parser so as not to trigger a message
            being sent to the AUI.
            </summary>
        </member>
        <member name="M:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.ChangePollIntervalTime(System.UInt32)">
            <summary>
            Private function that talks to the lower managment layer to change the poll interval time
            </summary>
            <param name="intervalInHours">the frequency (in hours) of how often to attempt to process the manifest file.</param>
            <returns>true on success, false on failure.</returns>
        </member>
        <member name="P:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.LastManifestDownloadDateTime">
            <summary>
            internal class properties that manage getting the Last Manifest Download Date Time from the user API.
            </summary>
        </member>
        <member name="P:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.LastManifestCheckDateTime">
            <summary>
            internal class properties that manage getting the Last Manifest Check Date Time from the user API.
            </summary>
        </member>
        <member name="P:Crestron.AutoUpdateApiInternal.AutoUpdateInternal.LastManifestCheckStatus">
            <summary>
            internal class properties that manage getting the Last Manifest Check Status from the user API.
            </summary>
        </member>
        <member name="T:AutoUpdateInterfaceAUItoAPIMessageParser">
            <summary>
            This is the parser that resides in the API project that handles messages coming from the AUI.
            </summary>
        </member>
        <member name="M:AutoUpdateInterfaceAUItoAPIMessageParser.ProcessTimeToPerformDiscovery">
            <summary>
            The API/console attempts to schedule an AUCLOUDDISCOVERY type event - this should be processed and scheduled, but we 
            do not send this notification to the engine.
            </summary>
        </member>
        <member name="M:AutoUpdateInterfaceAUItoAPIMessageParser.ProcessTimeToPerformUpdate">
            <summary>
            The API/console attempts to schedule an AUTIME type event - this should be processed and scheduled, but we 
            do not send this notification to the engine.
            </summary>
        </member>
        <member name="M:AutoUpdateInterfaceAUItoAPIMessageParser.ProcessPollIntervalTime">
            <summary>
            This will field the api call equivilant to AUPOLLINTERVAL.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateConstants">
            <summary>
            Constants used within Auto Update.
            </summary>
            <remarks>For any new registry keys or branches, please remember to make entries into SaveRegistry.cpp under EthCmdUtility.</remarks>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.PreviouslyDiscoveredList">
            <summary>
            Path for file that holds the contents of the previous discovery (Cresnet, Ethernet, etc...)
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auFriendlyNameForPythagoras">
            <summary>
            This is the name used to set in the InitialParameters class so that the Crestron Scheduler (aka Pythagoras) sees it like a App.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auInterfaceRegistryPathStr">
            <summary>
            The general path to the auto update interface in the registry.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auDefaultLogPath">
            <summary>
            Path to the log files for consumption by the API.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auReleaseNotesFilename">
            <summary>
            Filename that the Engine will dump the "Description" field from the manifest into.  It is considered current when
            the API receives the "UpdateAvailable" message.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auMaxAppMessageQSizeStr">
            <summary>
            Registry Key name - The maximum size of the message queue between the apps and the interface [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auMaxAppMessageSizeStr">
            <summary>
            Registry Key name - The maximum message size in the queue between the apps and the interface [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auLogFilesDirectoryStr">
            <summary>
            Registry Key name - The location where the engine will place the log files.  This path has a trailing backslash on it [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auServerLoginNameStr">
            <summary>
            Registry Key name - The username for the server to log into for auto update to obtain files to download [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auServerLoginPasswordStr">
            <summary>
            Registry Key name - The password for the server to log into for auto update to obtain files to download [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auDeviceLoginNameStr">
            <summary>
            Registry Key name - The username for auto update to login to remote devices with [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auDeviceLoginPasswordStr">
            <summary>
            Registry Key name - The password for auto update to login to remote devices with [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auEnabledStr">
            <summary>
            Registry Key name - auto update is enabled or disabled.  0 is disabled, 1 is enabled [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auManifestUrlStr">
            <summary>
            Registry Key name - the URL of the manifest file used by the auto update engine [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auPluginCatalogUrlStr">
            <summary>
            Registry Key name - the URL of the plugin catalog used by the auto update engine [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auCloudDiagTimeIntervalStr">
            <summary>
            Registry Key name - time and interval written by the Cloud Diagnostics to trigger autodiscovery [String]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auPollIntervalStr">
            <summary>
            Registry Key name - the value to poll at (assuming no autime is set) [DWORD].
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auEngineAppNumberStr">
            <summary>
            Registry Key Name - the app number that the Engine is supposed to be [DWORD].
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auPerAppThreadPriority">
            <summary>
            The priority of the threads for App00-AppNN + Engine [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auMsgHandlerThreadPriority">
            <summary>
            For each API, this is the thread priority of the Message Handler [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auAuiEngineExitThreadPriority">
            <summary>
            The priority of the thread that monitors the engine wanting to exit event [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auQueueWriteTimeout">
            <summary>
            The timeout when writing to a message queue (used by API->AUI, AUI->Engine) [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auConfirmUpdateTimeout">
            <summary>
            The timeout when a message is sent to the API for confirming/denying an update.  If the timeout happens,
            the update proceeds ahead.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auDefaultConfirmationUpdateTimeout">
            <summary>
            Default timeout for API confirmation/denial of update (in ms).
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auApiSyncWaitTimeout">
            <summary>
            How long the API waits for the initial sync to take place [DWORD]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auLogFilePath">
            <summary>
            The path to the log files [STRING]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auConfirmUpdateEventName">
            <summary>
            When an update starts, after the initial information block is sent, the engine will wait on 
            auConfirmUpdateEventName and auDenyUpdateEventName.
            If it gets this, it will continue with the update.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auDenyUpdateEventName">
            <summary>
            When an update starts, after the initial information block is sent, the engine will wait on 
            auConfirmUpdateEventName and auDenyUpdateEventName
            If it gets this, it will exit.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auTimerEventEngineGroupNameForAutoUpdate">
            <summary>
            For Crestron Timer Event Engine - the name of our Timer group for AUTIME, AUPOLLINTERVAL.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auTimerEventEngineGroupNameForEngineEvents">
            <summary>
            For Crestron Timer Event Engine - the name of our Timer group for engine scheduled events.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auTimerEventEngineAuCloudDiscoveryName">
            <summary>
            For Crestron Timer Event Engine - the name of the Event that corresponds to the data for AUCLOUDAUTODISCOVERYINTERVAL
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auTimerEventEngineAutimeName">
            <summary>
            For Crestron Timer Event Engine - the name of the Event that corresponds to the data for AUTIME
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AutoUpdateStringStructSize">
            <summary>
            For the queues - the size of the string for fixed data.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.FromEngineQueue">
            <summary>
            The name of the queue where the AUI receives from the engine.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.ToEngineQueue">
            <summary>
            The name of the queue where the AUI transmits to the engine.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineWantsToExitEventName">
            <summary>
            The name of the event that the Auto Update Engine will set when it wants to exit cleanly.  AUI will wait on it.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineWantsToExitFromApiCancelEventName">
            <summary>
            The name of the event that the Auto Update Engine will set when it wants to exit from an API cancel.  AUI will wait on it.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineWantsToExitFromConsoleCancelEventName">
            <summary>
            The name of the event that the Auto Update Engine will set when it wants to exit from a Console cancel.  AUI will wait on it.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineWantsToExitFromConsoleForceEventName">
            <summary>
            The name of the event that the Auto Update Engine will set when it wants to exit from a Console Force.  AUI will wait on it.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineWantsToExitFromApiForceEventName">
            <summary>
            The name of the event that the Auto Update Engine will set when it wants to exit from an API Force.  AUI will wait on it.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineWantsToExitFromGenerateDeviceListsEventName">
            <summary>
            The name of the event hat the Auto Update Engine will set when it wants to exit from the GenerateDeviceLists() API call.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineExitOkEventName">
            <summary>
            Event that the AUI will set so that the engine knows it is OK to exit cleanly.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineExitCancelViaApiEventName">
            <summary>
            Event that the AUI will set so that the engine knows it needs to exit as a cancel from the API.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineExitCancelViaConsoleEventName">
            <summary>
            Event that the  AUI will set so that the engine knows it needs to exit as a cancel from the Console.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineExitFromConsoleForceEventName">
            <summary>
            Event that the AUI will set to let the engine know we want to do a FORCE through the console.  Engine waits on it.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineExitFromApiForceEventName">
            <summary>
            Event that the AUI will set to let the engine know we want to do a FORCE through the API.  Engine waits on it.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.EngineIsRunningEventName">
            <summary>
            Event that both the engine and AUI create - if the AUI creates it and then does a GetLastError() and sees that ERROR_ALREADY_EXISTS, then
            we know the engine is up and running, otherwise, we should close the event and assume it's not running.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AUForceEventHandled">
            <summary>
            Event that the AUI will set to let the restore command handler that AU has completed handling the restore event.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auDefaultPluginCatalogUrl">
            <summary>
            The default URL to be used for the plugin catalog if NONE is used.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auErSleepyDeviceFileName">
            <summary>
            The location of the "Grumpy" device list.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.TimeoutForEngineAbortSuccess">
            <summary>
            Timeout to wait for the engine to actually abort when it's cancelled.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.TimeoutAfterEngineIsToldToExitUntilItActuallyExits">
            <summary>
            When the AUI tells the engine it's OK to exit, there is still some finite time it takes to go away.
            The engine will notify us via an event, but we should have some timeout in case the engine never goes away,
            We can't wait forever.  
            This is in milliseconds.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.ParseSeparator">
            <summary>
            When building strings in the engine, this is used to concatenate entities.  Also used to split them back up in the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AnyChangeToSleepyParametersEventName">
            <summary>
            This is the name of the event that will be pulsed when there is a change (via console command or API) to any of the following:
            1. AUMANIFESTURL
            2. AUPASSWORD
            3. AUUSERNAME
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.ERROR_ALREADY_EXISTS">
            <summary>
            From unmanaged API
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.WAIT_OBJECT_0">
            <summary>
            Constant WAIT_OBJECT_0
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.WAIT_ABANDONED">
            <summary>
            Constant WAIT_ABANDONED
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.WAIT_ABANDONED_0">
            <summary>
            Constant WAIT_ABANDONED_0
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.WAIT_FAILED">
            <summary>
            Constant WAIT_FAILED
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.INFINITE">
            <summary>
            Constant INFINITE
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.StringStructOverhead">
            <summary>
            Constant StringStructOverhead
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AutoUpdateNoValueStruct">
            <summary>
            Constant AutoUpdateNoValueStruct
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AutoUpdateIntegerValueStruct">
            <summary>
            Constant AutoUpdateIntegerValueStruct
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AutoUpdateInitialInformationStructOverhead">
            <summary>
            Constant AutoUpdateInitialInformationStructOverhead
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.RemoteServerToControlSystemUpdateProgressStructOverhead">
            <summary>
            Constant RemoteServerToControlSystemUpdateProgressStructOverhead
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.ControlSystemToDeviceUpdateProgressStructOverhead">
            <summary>
            Constant ControlSystemToDeviceUpdateProgressStructOverhead
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AutoUpdateTimeToPerformUpdateStruct">
            <summary>
            Constant AutoUpdateTimeToPerformUpdateStruct
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AutoUpdateEngineSchedulingEventStruct">
            <summary>
            Constant AutoUpdateEngineSchedulingEventStruct
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.AutoUpdateTimeToPerformDiscoveryStruct">
            <summary>
            Constant AutoUpdateTimeToPerformUpdateStruct
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateConstants.auTimerEventEngineAupollintervalName">
            <summary>
            For Crestron Timer Event Engine - the name of the Event that corresponds to the data for AUPOLLINTERVAL
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AuiUtils">
            <summary>
            Some general purpose utilities that we want to share between the projects.
            </summary>
        </member>
        <member name="M:Crestron.AutoUpdateApiCommon.AuiUtils.ParseAuDateTime(System.String,System.Int32@,System.Int32@,System.DayOfWeek@,System.Boolean@)">
            <summary>
            Process the AUTIME style string to its constituent components.
            </summary>
            <param name="CmdToParse">string containing day and day/time like "Monday 23:25" or "23:25"</param>
            <param name="Hours">hours value parsed out of the string (out param)</param>
            <param name="Minutes">minutes value parsed out of the string (out param)</param>
            <param name="dayOfWeek">System.DayOfWeek parsed out of the string (out param)</param>
            <param name="StringContainsDay">true if form that contains the Day, false if form that contains only the time</param>
            <returns>0 no error, 1 invalid day of week, 2 invalid time, 3 Invalid date/time format in string</returns>
        </member>
        <member name="M:Crestron.AutoUpdateApiCommon.AuiUtils.ParseAuCloudAutoupdateTime(System.String,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Process the CloudAutodiscoveryInterval style string to its constituent components.
            </summary>
            <param name="CmdToParse">String containing time "23:25" or time and interval "23:59 24"</param>
            <param name="Hours">Hours value parsed out of the string (out param)</param>
            <param name="Minutes">Minutes value parsed out of the string (out param)</param>
            <param name="Interval">Interval value parsed out of the string (out param)</param>
            <returns>0 no error, 1 invalid time, 2 Invalid time format in string</returns>
        </member>
        <member name="M:Crestron.AutoUpdateApiCommon.AuiUtils.CheckShowExtra(System.Boolean@,System.Boolean@)">
            <summary>
            Checks the status of the ShowExtra and ShowExtraDev for Auto Update from the registry.
            </summary>
            <param name="ShowExtraAutoUpdate">true if SHOWEXTRA AUTOUPDATE ON, false if not.</param>
            <param name="ShowExtraDevAutoUpdate">true if SHOWEXTRA AUTOUPDATE ON and SHOWEXTRA DEV ON, false if not.</param>
        </member>
        <member name="M:Crestron.AutoUpdateApiCommon.AuiUtils.TestPath(System.String,System.Boolean@)">
            <summary>
            Tests to see if the given name is a valid rooted path in the filesystem.  This does NOT meant the path exists, just that it is properly
            constructed.
            </summary>
            <param name="name"></param>
            <param name="IsRooted"></param>
            <returns>true if the path is valid, false if not.</returns>
        </member>
        <member name="M:Crestron.AutoUpdateApiCommon.AuiUtils.TestFilename(System.String@,System.Boolean,System.Boolean@,System.Boolean@)">
            <summary>
            this function sees if the path is a valid rooted path and if not, then if it is a valid URL.  It will also convert
            URL characters (i.e. space to %20).  This does NOT mean the path or URL exists, just that it is validly constructed.
            It will also strip leading/trailing double quotes.
            </summary>
            <param name="name">name of the file to verify</param>
            <param name="ConvertUrl"> Indicates if we want to convert to a URL</param>
            <param name="isValidRootedPath"> Indicates if this is a valid rooted path</param>
            <param name="isValidURL">Indicates if this is a URL</param>
            <returns>true if the given name is a valid path or URL.  false otherwise.</returns>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes">
            <summary>
            AutoUpdateMessageTypes
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.Unknown">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.Enable">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ManifestUrl">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.PluginCatalogUrl">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.PollIntervalTime">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.RemoteServerLoginName">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.RemoteServerLoginPassword">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.DeviceConnectUsername">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.DeviceConnectPassword">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateIsAvailable">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateCancellationComplete">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateStarted">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateRunning">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateWaiting">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateFinished">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.CancelUpdate">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.LastManifestDownloadDateTime">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.LastManifestCheckDateTime">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.LastManifestCheckStatus">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateConfirmed">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateDenied">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateConfirmedViaTimeout">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateDownloadingPlugins">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateRunningDiscovery">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateCancellationInProgress">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateStartedWithNoConfirmation">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateStateNone">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ForceUpdate">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateCancellationThroughForceInProgress">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ErrorMessage">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GenerateDeviceLists">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GeneratingDeviceLists">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GeneratingDeviceListsFinished">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GeneratedDeviceListInfo">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateInitializing">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This is sent from the AUI to the API.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateInitialized">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This is sent from the AUI to the API.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.CheckNow">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType"/>.
            This can be sent to the auto update process and received from the auto update process.
            </summary>        
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.PerformUpdateInResponseToEvent">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateMessageType"/>
            This can be sent to the auto update process and received from the auto update process.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.InitialInformationStruct">
            <summary>
            The structure returned is used to populate the "AutoUpdateApi.InitialUpdateInformationEventArgs" class.
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.autoUpdateMessageType"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.RemoteServerToControlSystemUpdateProgress">
            <summary>
            The structure returned is used to populate the "AutoUpdateApi.RemoteServerToControlSystemUpdateProgressEventArgs" class.
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.autoUpdateMessageType"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ControlSystemToDeviceUpdateProgress">
            <summary>
            The structure returned is used to populate the "AutoUpdateApi.ControlSystemToDeviceUpdateProgressEventArgs" class.
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.autoUpdateMessageType"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.EngineSchedulingEvent">
            <summary>
            The engine wants to schedule an event.  
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateMessageType"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.TimeToPerformUpdate">
            <summary>
            The structure is used to populate the "AutoUpdateApi.TimeToPerformUpdateEventArgs" class.
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateMessageType"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.InitialStateSyncForApiStart">
            <summary>
            Used for syncing the API to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.InitialStateSyncForApiEnd">
            <summary>
            Used for syncing the API to the AUI.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.AutoUpdateState">
            <summary>
            The state of the autoupdate, culled from the other discrete states events that are received.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.TimeToPerformDiscovery">
            <summary>
            The structure is used to populate the "AutoUpdateApi.TimeToPerformUpdateEventArgs" class.
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateMessageType"/>
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct">
            <summary>
            This is used to indication of something that doesn't require a value between the C# layer and the Auto Update manager layer.  
            Any of the values from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/> can be used that are commented with "No Type."
            For example, the fact that the update is cancelled is just a statement unto it self, it doesn't require any extra data.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [Should be AutoUpdateConstants.AutoUpdateNoValueStruct]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateIsAvailable"/> 
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateCancellationComplete"/> 
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateStarted"/> 
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateRunning"/> 
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateWaiting"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateFinished"/> 
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.CancelUpdate"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.CheckNow"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.InitialStateSyncForApiStart"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.InitialStateSyncForApiEnd"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateDownloadingPlugins"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateRunningDiscovery"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateCancellationInProgress"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateStartedWithNoConfirmation"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateStateNone"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ForceUpdate"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateCancellationThroughForceInProgress"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GeneratingDeviceLists"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GeneratingDeviceListsFinished"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateInitializing"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.UpdateInitialized"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateNoValueStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct">
            <summary>
            This is used to send/receive an integer value between the C# layer and the Auto Update manager layer.  
            Any of the values from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/> can be used that are commented with "Integer Type."
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [Should be AutoUpdateConstants.AutoUpdateIntegerValueStruct]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.PollIntervalTime"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.Enable"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.PerformUpdateInResponseToEvent"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.AutoUpdateState"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateIntegerValueStruct.autoUpdateValue">
            <summary>
            A value for the specific type.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct">
            <summary>
            This is used to send/receive a string value between the C# layer and the Auto Update manager layer.  
            Any of the values from <see cref="T:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes"/> can be used that are commented with "String Type."
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [AutoUpdateConstants.StringStructOverhead + autoUpdateValue.Length]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ManifestUrl"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.RemoteServerLoginName"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.RemoteServerLoginPassword"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.PluginCatalogUrl"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.DeviceConnectUsername"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.DeviceConnectPassword"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.LastManifestDownloadDateTime"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.LastManifestCheckDateTime"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.LastManifestCheckStatus"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ErrorMessage"/>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GenerateDeviceLists"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            Specifics for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.GenerateDeviceLists"/>:
            b1:  1:  There is more device name data to be requested (filled in the <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateValue"/> field). // 2
                 0:  No more device name data.
            b2:  1:  This is the first block of data // 4
                 0:  This is not the first block.
            b3:  1:  All Devices // 8
                 0:  Filtered by Manifest
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateStringValueStruct.autoUpdateValue">
            <summary>
            A value for the specific type.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct">
            <summary>
            This structure returned is used to populate the "AutoUpdateApi.InitialUpdateInformationEventArgs" class.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [AutoUpdateConstants.AutoUpdateInitialInformationStructOverhead + DeviceNameBuffer.Length]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.InitialInformationStruct"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            b1:  1:  There is more device name data to be requested (filled in the <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.DeviceNameBuffer"/> field). // 2
                 0:  No more device name data.
            b2:  1:  This is the first "Initial Information" block // 4
                 0:  This is not the first block.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.NumberOfFilesToGetFromRemoteServer">
            <summary>
            This property gives the number of files that need to be transferred from Remote Server to the control system for device updates when the update runs.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.NumberOfFilesToSendFromControlSystemToDevices">
            <summary>
            This property gives the number of files that need to be transferred from the control system to various devices the update runs.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.DeviceNameBufferLength">
            <summary>
            The length of the DeviceNameBuffer field.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateInitialInformationStruct.DeviceNameBuffer">
            <summary>
            This is a list of strings containing the devices that will receive updates; it will be used to populate the 
            "AutoUpdateApi.InitialUpdateInformationEventArgs.DevicesFound" member.   
            The buffer has items delineated by a ","
            Each name has a format similar to:  This should have a format similar to "Slot-05.IP-ID-25.ID-AA.RF-ID-07:CLW-DIM-EX-P"
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct">
            <summary>
            This structure returned is used to populate the "AutoUpdateApi.RemoteServerToControlSystemUpdateProgressEventArgs" class.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [AutoUpdateConstants.RemoteServerToControlSystemUpdateProgressStructOverhead + CurrentFileNameBeingTransferredFromRemoteServer.Length]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.RemoteServerToControlSystemUpdateProgress"/>.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.CurrentFileNumberBeingTransferredFromRemoteServer">
            <summary>
            The current file number being transferred from the RemoteServer to the control system out of <see cref="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.NumberOfFilesToGetFromRemoteServer"/> total.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.NumberOfFilesToGetFromRemoteServer">
            <summary>
            The number of files that need to be transferred from Remote Server to the control system for device updates when the update runs.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.autoUpdateStatus">
            <summary>
            Status of the transfer:  0: Started, 1: Completed successfully, 2: Already Up to date.  
            100+:  Failures
            This is propagated to the user via the eCurrentTransferStatus in the AutoUpdateEventArgs.cs file.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.CurrentFileNameBeingTransferredFromRemoteServerLength">
            <summary>
            The length of the CurrentFileNameBeingTransferredFromRemoteServer field.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.RemoteServerToControlSystemUpdateProgressStruct.CurrentFileNameBeingTransferredFromRemoteServer">
            <summary>
            This property gives the current file name being transferred from the RemoteServer to the control system.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct">
            <summary>
            This structure returned is used to populate the "AutoUpdateApi.RemoteServerToControlSystemUpdateProgressEventArgs" class.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [AutoUpdateConstants.ControlSystemToDeviceUpdateProgressStructOverhead + CurrentFileNameBeingTransferredToSpecificDevice.Length + CurrentNameOfDeviceBeingTransferredTo.Length]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.ControlSystemToDeviceUpdateProgress"/>.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.autoUpdateStatus">
            <summary>
            Status of the transfer:  0: Started, 1: Completed successfully, 2: Already Up to date, 3:"Configured" (auto-updatable/Delegated devices).  
            100+:  Failures
            This is propagated to the user via the eCurrentTransferStatus in the AutoUpdateEventArgs.cs file.
            This is the status of the overall device.  For example, if you are updating firmware on a SWAMP and 3 attached
            expanders, this status would be of the entire process; i.e. when you start transferring, it is 0, and then 
            when you finish with the SWAMP + 3 expanders, it would go to completed.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.CurrentDeviceNumberToSendTo">
            <summary>
            The current file number being transferred from the control system out of <see cref="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.NumberOfDevicesToSendTo"/> total.
            If this system had a SWAMP + CEN-TRACK, this would either be 1 or 2 (If the SWAMP and all of it's subcomponents is the first
            device, then this is 1.  When we finally get to the CEN-TRACK and it's subcomponents, this changes to 2).
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.NumberOfDevicesToSendTo">
            <summary>
            The number of files that need to be transferred from the control system to all devices.
            If this system had a SWAMP + CEN-TRACK, this would be 2 (i.e. we have 2 devices to send to).
            This does NOT reflect the subcomponents; that is handled by CurrentFileNumberBeingTransferredFromControlSystemToSpecificDevice 
            and NumberOfFilesToSendFromControlSystemToSpecificDevice.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.NumberOfFilesToSendFromControlSystemToSpecificDevice">
            <summary>
            The number of files that need to be transferred from the control system to a specific device.
            For example, if this is a SWAMP + 3 expanders, this would be 4.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.CurrentFileNumberBeingTransferredFromControlSystemToSpecificDevice">
            <summary>
            The current file number being transferred from the control system out of <see cref="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.NumberOfFilesToSendFromControlSystemToSpecificDevice"/> total.
            For example, if this were a SWAMP + 3 expanders, it would be 1 or 2 or 3 or 4, depending on which device we are updating.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.CurrentFileSizeBeingTransferredToSpecificDevice">
            <summary>
            The current file size in bytes being transferred from the control system to a specific device.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.CurrentFileNameAndDeviceNameBufferLength">
            <summary>
            The length of the CurrentFileNameAndDeviceNameBuffer field.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.ControlSystemToDeviceUpdateProgressStruct.CurrentFileNameAndDeviceNameBuffer">
             <summary>
             The current file name being transferred from the control system to a specific device concatenated with
             the device name, separated by a comma.  i.e. MyFirmware.zip,Slot-05.IP-ID-25.ID-AA.RF-ID-07:CLW-DIM-EX-P
            
             As a modification for an enhancement, we are altering this to deal with subcomponents
             {string:FirmwareFile},{string:Fully Qualified Path to Primary Device},{string:Subdevice},{string:Status of subDevice = InProgress|Complete|Failed|AlreadyUpToDate}
            
             For a single device like a dimmer this would look like:
             MyFirmware.zip,Slot-05.IP-ID-25.ID-AA.RF-ID-07:CLW-DIM-EX-P,Slot-05.IP-ID-25.ID-AA.RF-ID-07:CLW-DIM-EX-P,InProgress
             Note that the status, since it's a single device, would track the autoUpdateStatus member.
            
             For a device with a subcomponent, this would look like:
             MyFirmware.zip,IP-ID-25:CEN-TRACK,IP-ID-25.Slot-01:ATC-AMFMXM,InProgress
            
             When this is broken up for AUSTATUS or the API, the subcomponent and subcomponent status may show if it's an older API. 
             </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct">
            <summary>
            This is used to send/receive an integer value between the C# layer and the Auto Update manager layer.  
            Any of the values from <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.TimeToPerformUpdate"/> can be used that are commented with "Integer Type."
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [AutoUpdateConstants.AutoUpdateTimeToPerformUpdateStruct]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.TimeToPerformUpdate"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateDayOfWeek">
            <summary>
            The day of the week - comes from the ScheduledEventCommon.eWeekDays from Pythagoras.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateHours">
            <summary>
            The hour component of the time to check the manifest file.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformUpdateStruct.autoUpdateMinutes">
            <summary>
            The minute component of the time to check the manifest file.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct">
            <summary>
            This is used to send/receive an integer value between the C# layer and the Auto Update manager layer.  
            Any of the values from <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.TimeToPerformUpdate"/> can be used that are commented with "Integer Type."
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [AutoUpdateConstants.AutoUpdateTimeToPerformDiscoveryStruct]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.TimeToPerformUpdate"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct.autoUpdateInterval">
            <summary>
            The interval after which to repeat a discovery.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct.autoUpdateHours">
            <summary>
            The hour component of the daily time to check the manifest file.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateTimeToPerformDiscoveryStruct.autoUpdateMinutes">
            <summary>
            The minute component of the daily time to check the manifest file.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct">
            <summary>
            AutoUpdateEngineSchedulingEventStruct
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateMessageLength">
            <summary>
            Size of the structure, including itself [Should be AutoUpdateConstants.AutoUpdateEngineSchedulingEventStruct]
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateMessageType">
            <summary>
            Valid for <see cref="F:Crestron.AutoUpdateApiCommon.AutoUpdateMessageTypes.EngineSchedulingEvent"/>
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateMessageFlagsFromAPI">
            <summary>
            General purpose bitfield.
            b0:  1:  API is performing a Query.  When the API sends the lower layer a query, the response to the query should have this bit set.  This will 
                     indicate to the API that it should not fire an event.  This will be used when the user tries to read a property (a query will be sent 
                     by the API, the API will wait for a timeout.  The thread that reads from the queue will either fire an event or not based on this bit.
                 0:  API is setting the given value.  Lower layer when it responds should have this bit cleared, which means that the API will fire an event 
                     back to the programmer.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateAppNumber">
            <summary>
            The app number this came from.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateDayOfWeek">
            <summary>
            The day of the week - comes from the ScheduledEventCommon.eWeekDays from Pythagoras.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateHours">
            <summary>
            The hour component of the time to check the manifest file.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateMinutes">
            <summary>
            The minute component of the time to check the manifest file.
            </summary>
        </member>
        <member name="F:Crestron.AutoUpdateApiCommon.AutoUpdateEngineSchedulingEventStruct.autoUpdateEventUID">
            <summary>
            A unique number that will get passed back to the engine on the command line so that it knows what day we're talking about.
            </summary>
        </member>
        <member name="T:Crestron.AutoUpdateApiCommon.ApiCall">
            <summary>
            Used to track which API call was the first one that called CreateInternalClass()
            </summary>
        </member>
    </members>
</doc>
