<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimplSharpHelperInterface</name>
    </assembly>
    <members>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SshData">
            <summary>
            Base ssh data serialization type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.SshData._data">
            <summary>
            Data byte array that hold message unencrypted data
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.GetBytes">
            <summary>
            Gets data bytes array
            </summary>
            <returns>Byte array representation of data structure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Load(System.Byte[])">
            <summary>
            Loads data from specified bytes.
            </summary>
            <param name="value">Bytes array.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.LoadBytes(System.Byte[])">
            <summary>
            Loads data bytes into internal buffer.
            </summary>
            <param name="bytes">The bytes.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="bytes"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ResetReader">
            <summary>
            Resets internal data reader index.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadBytes">
            <summary>
            Reads all data left in internal buffer at current position.
            </summary>
            <returns>An array of bytes containing the remaining data in the internal buffer.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadBytes(System.Int32)">
            <summary>
            Reads next specified number of bytes data type from internal buffer.
            </summary>
            <param name="length">Number of bytes to read.</param>
            <returns>An array of bytes that was read from the internal buffer.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is greater than the internal buffer size.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadByte">
            <summary>
            Reads next byte data type from internal buffer.
            </summary>
            <returns>Byte read.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadBoolean">
            <summary>
            Reads next boolean data type from internal buffer.
            </summary>
            <returns>Boolean read.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadUInt16">
            <summary>
            Reads next uint16 data type from internal buffer.
            </summary>
            <returns>uint16 read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadUInt32">
            <summary>
            Reads next uint32 data type from internal buffer.
            </summary>
            <returns>uint32 read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadUInt64">
            <summary>
            Reads next uint64 data type from internal buffer.
            </summary>
            <returns>uint64 read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadInt64">
            <summary>
            Reads next int64 data type from internal buffer.
            </summary>
            <returns>int64 read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadAsciiString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadString(System.Text.Encoding)">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadBinaryString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadBigInt">
            <summary>
            Reads next mpint data type from internal buffer.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadNamesList">
            <summary>
            Reads next name-list data type from internal buffer.
            </summary>
            <returns>String array or read data..</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.ReadExtensionPair">
            <summary>
            Reads next extension-pair data type from internal buffer.
            </summary>
            <returns>Extensions pair dictionary.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Writes bytes array data into internal buffer.
            </summary>
            <param name="data">Byte array data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.Byte)">
            <summary>
            Writes byte data into internal buffer.
            </summary>
            <param name="data">Byte data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.Boolean)">
            <summary>
            Writes boolean data into internal buffer.
            </summary>
            <param name="data">Boolean data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.UInt16)">
            <summary>
            Writes uint16 data into internal buffer.
            </summary>
            <param name="data">uint16 data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.UInt32)">
            <summary>
            Writes uint32 data into internal buffer.
            </summary>
            <param name="data">uint32 data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.UInt64)">
            <summary>
            Writes uint64 data into internal buffer.
            </summary>
            <param name="data">uint64 data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.Int64)">
            <summary>
            Writes int64 data into internal buffer.
            </summary>
            <param name="data">int64 data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.WriteAscii(System.String)">
            <summary>
            Writes string data into internal buffer as ASCII.
            </summary>
            <param name="data">string data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.String)">
            <summary>
            Writes string data into internal buffer using default encoding.
            </summary>
            <param name="data">string data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.WriteBinaryString(System.Byte[])">
            <summary>
            Writes string data into internal buffer.
            </summary>
            <param name="data">string data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Writes mpint data into internal buffer.
            </summary>
            <param name="data">mpint data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.String[])">
            <summary>
            Writes name-list data into internal buffer.
            </summary>
            <param name="data">name-list data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes extension-pair data into internal buffer.
            </summary>
            <param name="data">extension-pair data to write.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.SshData.IsEndOfData">
            <summary>
            Gets a value indicating whether all data from the buffer has been read.
            </summary>
            <value>
            	<c>true</c> if this instance is end of data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.SshData.ZeroReaderIndex">
            <summary>
            Gets the index that represents zero in current data type.
            </summary>
            <value>
            The index of the zero reader.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman">
            <summary>
            Represents base class for Diffie Hellman key exchange algorithm
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchange">
            <summary>
            Represents base class for different key exchange algorithm implementations
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Algorithm">
            <summary>
            Represents the abstract base class from which all implementations of algorithms must inherit.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Algorithm.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.Start(Crestron.SimplSharp.Ssh.Session,Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CreateServerCipher">
            <summary>
            Creates the server side cipher to use.
            </summary>
            <returns>Server cipher.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CreateClientCipher">
            <summary>
            Creates the client side cipher to use.
            </summary>
            <returns>Client cipher.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CreateServerHash">
            <summary>
            Creates the server side hash algorithm to use.
            </summary>
            <returns>Hash algorithm</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CreateClientHash">
            <summary>
            Creates the client side hash algorithm to use.
            </summary>
            <returns>Hash algorithm</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CreateCompressor">
            <summary>
            Creates the compression algorithm to use to deflate data.
            </summary>
            <returns>Compression method.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CreateDecompressor">
            <summary>
            Creates the compression algorithm to use to inflate data.
            </summary>
            <returns>Compression method.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CanTrustHostKey(Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm)">
            <summary>
            Determines whether the specified host key can be trusted.
            </summary>
            <param name="host">The host algorithm.</param>
            <returns>
              <c>true</c> if the specified host can be trusted; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>true if exchange hash is valid; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>Key exchange hash.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.Hash(System.Byte[])">
            <summary>
            Hashes the specified data bytes.
            </summary>
            <param name="hashData">The hash data.</param>
            <returns>
            Hashed bytes
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.SendMessage(Crestron.SimplSharp.Ssh.Messages.Message)">
            <summary>
            Sends SSH message to the server
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.GenerateSessionKey(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Generates the session key.
            </summary>
            <param name="sharedKey">The shared key.</param>
            <param name="exchangeHash">The exchange hash.</param>
            <param name="key">The key.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.GenerateSessionKey(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Byte[],System.Char,System.Byte[])">
            <summary>
            Generates the session key.
            </summary>
            <param name="sharedKey">The shared key.</param>
            <param name="exchangeHash">The exchange hash.</param>
            <param name="p">The p.</param>
            <param name="sessionId">The session id.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchange.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.Security.KeyExchange"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchange.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchange.SharedKey">
            <summary>
            Gets or sets key exchange shared key.
            </summary>
            <value>
            The shared key.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchange.ExchangeHash">
            <summary>
            Gets the exchange hash.
            </summary>
            <value>The exchange hash.</value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Security.KeyExchange.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._group">
            <summary>
            Specifies key exchange group number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._prime">
            <summary>
            Specifies key exchange prime number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._clientPayload">
            <summary>
            Specifies client payload
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._serverPayload">
            <summary>
            Specifies server payload
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._clientExchangeValue">
            <summary>
            Specifies client exchange number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._serverExchangeValue">
            <summary>
            Specifies server exchange number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._randomValue">
            <summary>
            Specifies random generated number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._hostKey">
            <summary>
            Specifies host key data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman._signature">
            <summary>
            Specifies signature data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>
            true if exchange hash is valid; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman.Start(Crestron.SimplSharp.Ssh.Session,Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue">
            <summary>
            Populates the client exchange value.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Crestron.SimplSharp.Ssh.Common.BigInteger,System.Byte[])">
            <summary>
            Handles the server DH reply message.
            </summary>
            <param name="hostKey">The host key.</param>
            <param name="serverExchangeValue">The server exchange value.</param>
            <param name="signature">The signature.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeShaBase.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeShaBase.Start(Crestron.SimplSharp.Ssh.Session,Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeShaBase.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.DsaKey">
            <summary>
            Contains DSA private and public key
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Key">
            <summary>
            Base class for asymmetric cipher algorithms
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Key.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Key.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Key._privateKey">
            <summary>
            Specifies array of big integers that represent private key
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Key.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Key"/> class.
            </summary>
            <param name="data">DER encoded private key data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Key.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Key"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Key.Sign(System.Byte[])">
            <summary>
            Signs the specified data with the key.
            </summary>
            <param name="data">The data to sign.</param>
            <returns>
            Signed data.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Key.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data to verify.</param>
            <param name="signature">The signature to verify against.</param>
            <returns><c>True</c> is signature was successfully verifies; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Key.DigitalSignature">
            <summary>
            Gets the key specific digital signature.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Key.Public">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>
            The public.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Key.KeyLength">
            <summary>
            Gets the length of the key.
            </summary>
            <value>
            The length of the key.
            </value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.DsaKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.DsaKey"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.DsaKey.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.DsaKey"/> class.
            </summary>
            <param name="data">DER encoded private key data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.DsaKey.#ctor(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.DsaKey"/> class.
            </summary>
            <param name="p">The p.</param>
            <param name="q">The q.</param>
            <param name="g">The g.</param>
            <param name="y">The y.</param>
            <param name="x">The x.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.DsaKey.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.DsaKey.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.P">
            <summary>
            Gets the P.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.Q">
            <summary>
            Gets the Q.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.G">
            <summary>
            Gets the G.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.Y">
            <summary>
            Gets public key Y.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.X">
            <summary>
            Gets private key X.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.KeyLength">
            <summary>
            Gets the length of the key.
            </summary>
            <value>
            The length of the key.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.DigitalSignature">
            <summary>
            Gets the digital signature.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.DsaKey.Public">
            <summary>
            Gets or sets the public.
            </summary>
            <value>
            The public.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher">
            <summary>
            Implements Serpent cipher algorithm.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher">
            <summary>
            Base class for block cipher implementations.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.SymmetricCipher">
            <summary>
            Base class for symmetric cipher implementations.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher">
            <summary>
            Base class for cipher implementation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>Encrypted data.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>Decrypted data.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[])">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[],System.Int32)">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[])">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[],System.Int32)">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher.MinimumSize">
            <summary>
            Gets the minimum data size.
            </summary>
            <value>
            The minimum data size.
            </value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SymmetricCipher.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.SymmetricCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SymmetricCipher.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher._blockSize">
            <summary>
            Gets the size of the block in bytes.
            </summary>
            <value>
            The size of the block in bytes.
            </value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher.#ctor(System.Byte[],System.Byte,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="blockSize">Size of the block.</param>
            <param name="mode">Cipher mode.</param>
            <param name="padding">Cipher padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Encrypted data</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Decrypted data</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher.MinimumSize">
            <summary>
            Gets the minimum data size.
            </summary>
            <value>
            The minimum data size.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.#ctor(System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.MakeWorkingKey(System.Byte[])">
             Expand a user-supplied key material into a session key.
            
             @param key  The user-key bytes (multiples of 4) to use.
             @exception ArgumentException
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb0(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S0 - { 3, 8,15, 1,10, 6, 5,11,14,13, 4, 2, 7, 0, 9,12 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib0(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvSO - {13, 3,11, 0,10, 6, 5,12, 1,14, 4, 7,15, 9, 8, 2 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S1 - {15,12, 2, 7, 9, 0, 5,10, 1,11,14, 8, 6,13, 3, 4 } - 14 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS1 - { 5, 8, 2,14,15, 6,12, 3,11, 4, 7, 9, 1,13,10, 0 } - 14 steps.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb2(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S2 - { 8, 6, 7, 9, 3,12,10,15,13, 1,14, 4, 0,11, 5, 2 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib2(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS2 - {12, 9,15, 4,11,14, 1, 2, 0, 3, 6,13, 5, 8,10, 7 } - 16 steps.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb3(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S3 - { 0,15,11, 8,12, 9, 6, 3,13, 1, 2, 4,10, 7, 5,14 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib3(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS3 - { 0, 9,10, 7,11,14, 6,13, 3, 5,12, 2, 4, 8,15, 1 } - 15 terms
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb4(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S4 - { 1,15, 8, 3,12, 0,11, 6, 2, 5, 4,10, 9,14, 7,13 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib4(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS4 - { 5, 0, 8, 3,10, 9, 7,14, 2,12,11, 6, 4,15,13, 1 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb5(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S5 - {15, 5, 2,11, 4,10, 9,12, 0, 3,14, 8,13, 6, 7, 1 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib5(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS5 - { 8,15, 2, 9, 4, 1,13,14,11, 6, 5, 3, 7,12,10, 0 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb6(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S6 - { 7, 2,12, 5, 8, 4, 6,11,14, 9, 1,15,13, 3,10, 0 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib6(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS6 - {15,10, 1,13, 5, 3, 6, 0, 4, 9,14, 7, 2,12, 8,11 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Sb7(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S7 - { 1,13,15, 0,14, 8, 2,11, 7, 4,12,10, 9, 3, 5, 6 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.Ib7(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS7 - { 3, 0, 6,13, 9,14,15, 8, 5,12,11, 7,10, 1, 4, 2 } - 17 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.LT">
            <summary>
            Apply the linear transformation to the register set.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.SerpentCipher.InverseLT">
            <summary>
            Apply the inverse of the linear transformation to the register set.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeReply">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_REPLY message.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Message">
            <summary>
            Base class for all SSH protocol messages
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Message.GetBytes">
            <summary>
            Gets data bytes array
            </summary>
            <returns>Byte array representation of the message</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Message.ZeroReaderIndex">
            <summary>
            Gets the index that represents zero in current data type.
            </summary>
            <value>
            The index of the zero reader.
            </value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeReply.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeReply.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeReply.HostKey">
            <summary>
            Gets server public host key and certificates
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeReply.F">
            <summary>
            Gets the F value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeReply.Signature">
            <summary>
            Gets the signature of H.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.IKeyExchangedAllowed">
            <summary>
            Indicates that message that implement this interface is allowed during key exchange phase
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo">
            <summary>
            Represents "exit-signal" type channel request information
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo">
            <summary>
            Represents type specific information for channel request.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo.WantReply">
            <summary>
            Gets or sets a value indicating whether reply message is needed.
            </summary>
            <value>
              <c>true</c> if reply message is needed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> then core is dumped.</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.CoreDumped">
            <summary>
            Gets a value indicating whether core is dumped.
            </summary>
            <value>
              <c>true</c> if core is dumped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExitSignalRequestInfo.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.X11ChannelOpenInfo">
            <summary>
            Used to open "x11" channel type
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenInfo">
            <summary>
            Base class for open channel messages
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.X11ChannelOpenInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.X11ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.X11ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ChannelOpenInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ChannelOpenInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EXTENDED_DATA message.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelMessage">
            <summary>
            Base class for all channel specific SSH messages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelMessage.LocalChannelNumber">
            <summary>
            Gets or sets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage.#ctor(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="dataTypeCode"></param>
            <param name="data"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage.DataTypeCode">
            <summary>
            Gets message data type code.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage.Data">
            <summary>
            Gets message data.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ForwardedPortLocal">
            <summary>
            Provides functionality for local port forwarding
            </summary>
            <summary>
            Provides functionality for local port forwarding
            </summary>
            <summary>
            Provides functionality for local port forwarding
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ForwardedPort">
            <summary>
            Base class for port forwarding functionality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPort.Start">
            <summary>
            Starts port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPort.Stop">
            <summary>
            Stops port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPort.RaiseExceptionEvent(System.Exception)">
            <summary>
            Raises <see cref="E:Crestron.SimplSharp.Ssh.ForwardedPort.Exception"/> event.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)">
            <summary>
            Raises <see cref="E:Crestron.SimplSharp.Ssh.ForwardedPort.RequestReceived"/> event.
            </summary>
            <param name="host">Request originator host.</param>
            <param name="port">Request originator port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPort.Session_ErrorOccured(System.Object,Crestron.SimplSharp.Ssh.Common.ExceptionEventArgs)">
            <summary>
            Handles session ErrorOccurred event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Crestron.SimplSharp.Ssh.Common.ExceptionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPort.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPort.IsStarted">
            <summary>
            Gets or sets a value indicating whether port forwarding started.
            </summary>
            <value>
            	<c>true</c> if port forwarding started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.ForwardedPort.Exception">
            <summary>
            Occurs when exception is thrown.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.ForwardedPort.RequestReceived">
            <summary>
            Occurs when port forwarding request received.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.#ctor(System.String,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundHost">The bound host.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundHost">The bound host.</param>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.Start">
            <summary>
            Starts local port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.Stop">
            <summary>
            Stops local port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortLocal.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortLocal"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortLocal.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortLocal.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortLocal.Host">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortLocal.Port">
            <summary>
            Gets the forwarded port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ConnectionInfo">
            <summary>
            Represents remote connection information class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="username">The username.</param>
            <param name="authenticationMethods">The authentication methods.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="username">The username.</param>
            <param name="authenticationMethods">The authentication methods.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String,Crestron.SimplSharp.Ssh.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="authenticationMethods">The authentication methods.</param>
            <exception cref="T:System.ArgumentException">host</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">proxyPort</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ConnectionInfo.Authenticate(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to be authenticated.</param>
            <returns>true if authenticated; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is null.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException">No suitable authentication method found to complete authentication.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.KeyExchangeAlgorithms">
            <summary>
            Gets supported key exchange algorithms for this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.Encryptions">
            <summary>
            Gets supported encryptions for this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.HmacAlgorithms">
            <summary>
            Gets supported hash algorithms for this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.HostKeyAlgorithms">
            <summary>
            Gets supported host key algorithms for this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.AuthenticationMethods">
            <summary>
            Gets supported authentication methods for this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CompressionAlgorithms">
            <summary>
            Gets supported compression algorithms for this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ChannelRequests">
            <summary>
            Gets supported channel requests for this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.IsAuthenticated">
            <summary>
            Gets a value indicating whether connection is authenticated.
            </summary>
            <value>
            	<c>true</c> if connection is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.Host">
            <summary>
            Gets connection host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.Port">
            <summary>
            Gets connection port.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.Username">
            <summary>
            Gets connection username.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ProxyType">
            <summary>
            Gets proxy type.
            </summary>
            <value>
            The type of the proxy.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ProxyHost">
            <summary>
            Gets proxy connection host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ProxyPort">
            <summary>
            Gets proxy connection port.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ProxyUsername">
            <summary>
            Gets proxy connection username.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ProxyPassword">
            <summary>
            Gets proxy connection password.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.Timeout">
            <summary>
            Gets or sets connection timeout.
            </summary>
            <value>
            Connection timeout.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.Encoding">
            <summary>
            Gets or sets the default encoding.
            </summary>
            <value>
            The default encoding.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.RetryAttempts">
            <summary>
            Gets or sets number of retry attempts when session channel creation failed.
            </summary>
            <value>
            Number of retry attempts.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.MaxSessions">
            <summary>
            Gets or sets maximum number of session channels to be open simultaneously.
            </summary>
            <value>
            The max sessions.
            </value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.ConnectionInfo.AuthenticationBanner">
            <summary>
            Occurs when authentication banner is sent by the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentKeyExchangeAlgorithm">
            <summary>
            Gets the current key exchange algorithm.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentServerEncryption">
            <summary>
            Gets the current server encryption.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentClientEncryption">
            <summary>
            Gets the current client encryption.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentServerHmacAlgorithm">
            <summary>
            Gets the current server hash algorithm.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentClientHmacAlgorithm">
            <summary>
            Gets the current client hash algorithm.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentHostKeyAlgorithm">
            <summary>
            Gets the current host key algorithm.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentServerCompressionAlgorithm">
            <summary>
            Gets the current server compression algorithm.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ServerVersion">
            <summary>
            Gets the server version.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.ClientVersion">
            <summary>
            Get the client version.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ConnectionInfo.CurrentClientCompressionAlgorithm">
            <summary>
            Gets the current client compression algorithm.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ChannelOpenFailedEventArgs">
            <summary>
            Provides data for <see cref="E:Crestron.SimplSharp.Ssh.Channels.Channel.OpenFailed"/> event.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ChannelEventArgs">
            <summary>
            Base class for all channel related events.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ChannelEventArgs.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ChannelEventArgs"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ChannelEventArgs.ChannelNumber">
            <summary>
            Gets the channel number.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ChannelOpenFailedEventArgs.#ctor(System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ChannelOpenFailedEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="reasonCode">Failure reason code.</param>
            <param name="description">Failure description.</param>
            <param name="language">Failure language.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ChannelOpenFailedEventArgs.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ChannelOpenFailedEventArgs.Description">
            <summary>
            Gets failure description.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ChannelOpenFailedEventArgs.Language">
            <summary>
            Gets failure language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroup1Sha1">
            <summary>
            Represents "diffie-hellman-group1-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupSha1">
            <summary>
            Represents "diffie-hellman-group1-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupSha1.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupSha1.Start(Crestron.SimplSharp.Ssh.Session,Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupSha1.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupSha1.GroupPrime">
            <summary>
            Gets the group prime.
            </summary>
            <value>
            The group prime.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroup1Sha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroup1Sha1.GroupPrime">
            <summary>
            Gets the group prime.
            </summary>
            <value>
            The group prime.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroup14Sha1">
            <summary>
            Represents "diffie-hellman-group14-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroup14Sha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroup14Sha1.GroupPrime">
            <summary>
            Gets the group prime.
            </summary>
            <value>
            The group prime.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.RsaDigitalSignature">
            <summary>
            Implements RSA digital signature algorithm.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.CipherDigitalSignature">
            <summary>
            Implements digital signature where where asymmetric cipher is used,
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.DigitalSignature">
            <summary>
            Base class for signature implementations
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="input">The input.</param>
            <param name="signature">The signature.</param>
            <returns><c>True</c> if signature was successfully verified; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DigitalSignature.Sign(System.Byte[])">
            <summary>
            Creates the signature.
            </summary>
            <param name="input">The input.</param>
            <returns>Signed input data.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.CipherDigitalSignature.#ctor(Crestron.SimplSharp.Ssh.Common.ObjectIdentifier,Crestron.SimplSharp.Ssh.Security.Cryptography.AsymmetricCipher)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.CipherDigitalSignature"/> class.
            </summary>
            <param name="oid">The object identifier.</param>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.CipherDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="input">The input.</param>
            <param name="signature">The signature.</param>
            <returns>
              <c>True</c> if signature was successfully verified; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.CipherDigitalSignature.Sign(System.Byte[])">
            <summary>
            Creates the signature.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Signed input data.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.CipherDigitalSignature.Hash(System.Byte[])">
            <summary>
            Hashes the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>Hashed data.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.CipherDigitalSignature.DerEncode(System.Byte[])">
            <summary>
            Encodes hash using DER.
            </summary>
            <param name="hashData">The hash data.</param>
            <returns>DER Encoded byte array</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RsaDigitalSignature.#ctor(Crestron.SimplSharp.Ssh.Security.RsaKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.RsaDigitalSignature"/> class.
            </summary>
            <param name="rsaKey">The RSA key.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RsaDigitalSignature.Hash(System.Byte[])">
            <summary>
            Hashes the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Hashed data.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RsaDigitalSignature.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RsaDigitalSignature.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RsaDigitalSignature.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher">
            <summary>
            Implements CAST cipher algorithm
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher._kr">
            <summary>
            The rotating round key
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher._km">
            <summary>
            The masking round key
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.#ctor(System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.SetKey(System.Byte[])">
            <summary>
            Sets the subkeys using the same nomenclatureas described in RFC2144.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.F1(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            The first of the three processing functions for the encryption and decryption.
            </summary>
            <param name="D">The input to be processed.</param>
            <param name="Kmi">The mask to be used from Km[n].</param>
            <param name="Kri">The rotation value to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.F2(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            The second of the three processing functions for the encryption and decryption.
            </summary>
            <param name="D">The input to be processed.</param>
            <param name="Kmi">The mask to be used from Km[n].</param>
            <param name="Kri">The rotation value to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.F3(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            The third of the three processing functions for the encryption and decryption.
            </summary>
            <param name="D">The input to be processed.</param>
            <param name="Kmi">The mask to be used from Km[n].</param>
            <param name="Kri">The rotation value to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CastCipher.CastEncipher(System.UInt32,System.UInt32,System.UInt32[])">
            <summary>
            Does the 16 rounds to encrypt the block.
            </summary>
            <param name="L0">The LH-32bits of the plaintext block.</param>
            <param name="R0">The RH-32bits of the plaintext block.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession">
            <summary>
            Base class for SSH subsystem implementations
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession._operationTimeout">
            <summary>
            Specifies a timeout to wait for operation to complete
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.#ctor(Crestron.SimplSharp.Ssh.Session,System.String,System.TimeSpan,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the SubsystemSession class.
            </summary>
            <param name="session">The session.</param>
            <param name="subsystemName">Name of the subsystem.</param>
            <param name="operationTimeout">The operation timeout.</param>
            <param name="encoding">The encoding.</param>
            <exception cref="T:System.ArgumentNullException">session</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> or <paramref name="subsystemName"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.Connect">
            <summary>
            Connects subsystem on SSH channel.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.Disconnect">
            <summary>
            Disconnects subsystem channel.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.SendData(System.Byte[])">
            <summary>
            Sends data to the subsystem.
            </summary>
            <param name="data">The data to be sent.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.OnChannelOpen">
            <summary>
            Called when channel is open.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.OnDataReceived(System.UInt32,System.Byte[])">
            <summary>
            Called when data is received.
            </summary>
            <param name="dataTypeCode">The data type code.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.RaiseError(System.Exception)">
            <summary>
            Raises the error.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession"/> class.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.Disconnected">
            <summary>
            Occurs when session has been disconnected form the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SubsystemSession.ChannelNumber">
            <summary>
            Gets the channel number.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConf.NetConfSession.#ctor(Crestron.SimplSharp.Ssh.Session,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.NetConf.NetConfSession"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="operationTimeout">The operation timeout.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.NetConf.NetConfSession.ServerCapabilities">
            <summary>
            Gets NetConf server capabilities.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.NetConf.NetConfSession.ClientCapabilities">
            <summary>
            Gets NetConf client capabilities.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey">
            <summary>
            Represents "publickey" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_REQUEST message. Server as a base message for other user authentication requests.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage.Username">
            <summary>
            Gets authentication username.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
            <param name="signature">Private key signature.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePublicKey.Signature">
            <summary>
            Gets or sets public key signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Compression.ZlibOpenSsh">
            <summary>
            Represents "zlib@openssh.org" compression implementation
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Compression.Compressor">
            <summary>
            Represents base class for compression algorithm implementation
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Compressor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Compression.Compressor"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Compressor.Init(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Compressor.Compress(System.Byte[])">
            <summary>
            Compresses the specified data.
            </summary>
            <param name="data">Data to compress.</param>
            <returns>Compressed data</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Compressor.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="data">Compressed data.</param>
            <returns>Decompressed data.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Compressor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Compressor.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Compressor.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Compression.Compressor.IsActive">
            <summary>
            Gets or sets a value indicating whether compression is active.
            </summary>
            <value>
              <c>true</c> if compression is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Compression.Compressor.Session">
            <summary>
            Gets the session.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.ZlibOpenSsh.Init(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Compression.ZlibOpenSsh.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Compression.CompressionMode">
            <summary>
            Specifies compression modes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Compression.CompressionMode.Compress">
            <summary>
            Specifies that content should be compressed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Compression.CompressionMode.Decompress">
            <summary>
            Specifies that content should be decompressed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight">
            <summary>
            Light implementation of SemaphoreSlim.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SemaphoreLight.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight"/> class, specifying 
            the initial number of requests that can be granted concurrently.
            </summary>
            <param name="initialCount">The initial number of requests for the semaphore that can be granted concurrently.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="initialCount"/> is a negative number.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SemaphoreLight.Release">
            <summary>
            Exits the <see cref="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight"/> once.
            </summary>
            <returns>The previous count of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SemaphoreLight.Release(System.Int32)">
            <summary>
            Exits the <see cref="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight"/> a specified number of times.
            </summary>
            <param name="releaseCount">The number of times to exit the semaphore.</param>
            <returns>The previous count of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight"/>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SemaphoreLight.Wait">
            <summary>
            Blocks the current thread until it can enter the <see cref="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.SemaphoreLight.CurrentCount">
            <summary>
            Gets the current count of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SemaphoreLight"/>.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ExceptionEventArgs">
            <summary>
            Provides data for the ErrorOccurred events.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ExceptionEventArgs"/> class.
            </summary>
            <param name="exception">An System.Exception that represents the error that occurred.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ExceptionEventArgs.Exception">
            <summary>
            Gets the System.Exception that represents the error that occurred.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Represents an arbitrarily large signed integer.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.Int16,System.UInt32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="sign">The sign.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.Int32">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a 32-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 32-bit signed integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.UInt32">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned 32-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 32-bit integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.Int16">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a 16-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 16-bit signed integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.UInt16">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned 16-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 16-bit integer.</param>
            <returns>
            An object that contains the value of the value parameter
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.Byte">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned byte value.
            </summary>
            <param name="value">The value to convert to a System.Byte.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.SByte">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a signed 8-bit value.
            </summary>
            <param name="value">The value to convert to a signed 8-bit value.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.Int64">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a 64-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 64-bit signed integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.UInt64">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned 64-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 64-bit integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.Double">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:System.Double"/>.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.Single">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a single-precision floating-point value.
            </summary>
            <param name="value">The value to convert to a single-precision floating-point value.</param>
            <returns>
            An object that contains the closest possible representation of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(Crestron.SimplSharp.Ssh.Common.BigInteger)~System.Decimal">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:System.Decimal"/>.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.Int32)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 32-bit integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.UInt32)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 32-bit unsigned integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.Int16)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 16-bit integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.UInt16)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 16-bit unsigned integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.Byte)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of an unsigned byte to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.SByte)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of an 8-bit signed integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.Int64)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 64-bit integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Implicit(System.UInt64)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 64-bit unsigned integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(System.Double)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Double"/> value to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(System.Single)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Single"/> object to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Explicit(System.Decimal)~Crestron.SimplSharp.Ssh.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Decimal"/> object to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Addition(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Adds the values of two specified <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> objects.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>
            The sum of left and right.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Subtraction(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Subtracts a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value from another <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>
            The result of subtracting right from left.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Multiply(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Multiplies two specified <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value to multiply.</param>
            <param name="right">The second value to multiply.</param>
            <returns>
            The product of left and right.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Division(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Divides a specified <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value by another specified <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value by using integer division.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The integral result of the division.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Modulus(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the remainder that results from division with two specified <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> values.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The remainder that results from the division.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_UnaryNegation(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Negates a specified BigInteger value.
            </summary>
            <param name="value">The value to negate.</param>
            <returns>
            The result of the value parameter multiplied by negative one (-1).
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_UnaryPlus(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the value of the <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> operand. (The sign of the operand is unchanged.)
            </summary>
            <param name="value">An integer value.</param>
            <returns>
            The value of the value operand.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Increment(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Increments a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value by 1.
            </summary>
            <param name="value">The value to increment.</param>
            <returns>
            The value of the value parameter incremented by 1.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Decrement(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Decrements a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value by 1.
            </summary>
            <param name="value">The value to decrement.</param>
            <returns>
            The value of the value parameter decremented by 1.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_BitwiseAnd(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Performs a bitwise And operation on two <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise And operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_BitwiseOr(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Performs a bitwise Or operation on two <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise Or operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_ExclusiveOr(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Performs a bitwise exclusive Or (XOr) operation on two <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise Or operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_OnesComplement(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the bitwise one's complement of a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value.
            </summary>
            <param name="value">An integer value.</param>
            <returns>
            The bitwise one's complement of value.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LeftShift(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int32)">
            <summary>
            Shifts a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value a specified number of bits to the left.
            </summary>
            <param name="value">The value whose bits are to be shifted.</param>
            <param name="shift">The number of bits to shift value to the left.</param>
            <returns>
            A value that has been shifted to the left by the specified number of bits.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_RightShift(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int32)">
            <summary>
            Shifts a System.Numerics.BigInteger value a specified number of bits to the right.
            </summary>
            <param name="value">The value whose bits are to be shifted.</param>
            <param name="shift">The number of bits to shift value to the right.</param>
            <returns>
            A value that has been shifted to the right by the specified number of bits.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThan(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value is less than another <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThan(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value is less than a 64-bit signed integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThan(System.Int64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThan(Crestron.SimplSharp.Ssh.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value is less than a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThan(System.UInt64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThanOrEqual(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is less than or equal to another System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThanOrEqual(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is less than or equal to a 64-bit signed integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThanOrEqual(System.Int64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is less than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThanOrEqual(Crestron.SimplSharp.Ssh.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is less than or equal to a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_LessThanOrEqual(System.UInt64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThan(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than another System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThan(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger is greater than a 64-bit signed integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThan(System.Int64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is greater than a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThan(Crestron.SimplSharp.Ssh.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThan(System.UInt64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThanOrEqual(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than or equal to another System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal  right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThanOrEqual(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than or equal to a 64-bit signed integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThanOrEqual(System.Int64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThanOrEqual(Crestron.SimplSharp.Ssh.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than or equal to a 64-bit unsigned integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_GreaterThanOrEqual(System.UInt64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Equality(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether the values of two System.Numerics.BigInteger objects are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Equality(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value and a signed long integer value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Equality(System.Int64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a signed long integer value and a System.Numerics.BigInteger value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Equality(Crestron.SimplSharp.Ssh.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value and an unsigned long integer value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Equality(System.UInt64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether an unsigned long integer value and a System.Numerics.BigInteger value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Inequality(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether two <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> objects have different values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Inequality(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value and a 64-bit signed integer are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Inequality(System.Int64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Inequality(Crestron.SimplSharp.Ssh.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value and a 64-bit unsigned integer are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.op_Inequality(System.UInt64,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> value are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Abs(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Gets the absolute value of a System.Numerics.BigInteger object.
            </summary>
            <param name="value">A number.</param>
            <returns>The absolute value of value.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Add(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Adds two System.Numerics.BigInteger values and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.CompareTo(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Compares this instance to a second System.Numerics.BigInteger and returns 
            an integer that indicates whether the value of this instance is less than, 
            equal to, or greater than the value of the specified object.
            </summary>
            <param name="other">The object to compare.</param>
            <returns>
            A signed integer value that indicates the relationship of this instance to 
            other, as shown in the following table.Return valueDescriptionLess than zeroThe 
            current instance is less than other.ZeroThe current instance equals other.Greater 
            than zeroThe current instance is greater than other.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.CompareTo(System.UInt64)">
            <summary>
            Compares this instance to an unsigned 64-bit integer and returns an integer 
            that indicates whether the value of this instance is less than, equal to, 
            or greater than the value of the unsigned 64-bit integer.
            </summary>
            <param name="other">The unsigned 64-bit integer to compare.</param>
            <returns>A signed integer that indicates the relative value of this instance and other, 
            as shown in the following table.Return valueDescriptionLess than zeroThe 
            current instance is less than other.ZeroThe current instance equals other.Greater
            than zeroThe current instance is greater than other.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Random(System.Int32)">
            <summary>
            Generates random BigInteger number
            </summary>
            <param name="bitLength">Length of random number in bits.</param>
            <returns>Big random number.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Divide(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Divides one System.Numerics.BigInteger value by another and returns the result.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>The quotient of the division.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.DivRem(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger@)">
            <summary>
            Divides one System.Numerics.BigInteger value by another, returns the result, and returns the remainder in an output parameter.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <param name="remainder">When this method returns, contains a System.Numerics.BigInteger value that 
            represents the remainder from the division. This parameter is passed uninitialized.</param>
            <returns>The quotient of the division.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Equals(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether the current instance and a specified System.Numerics.BigInteger object have the same value.
            </summary>
            <param name="other">The object to compare.</param>
            <returns>
            true if this System.Numerics.BigInteger object and other have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Equals(System.Int64)">
            <summary>
            Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.
            </summary>
            <param name="other">The signed 64-bit integer value to compare.</param>
            <returns>true if the signed 64-bit integer and the current instance have the same value; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance and a specified object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
              <c>true</c> if the obj parameter is a System.Numerics.BigInteger object or a type
              capable of implicit conversion to a System.Numerics.BigInteger value, and
              its value is equal to the value of the current System.Numerics.BigInteger
              object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Equals(System.UInt64)">
            <summary>
            Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.
            </summary>
            <param name="other">The unsigned 64-bit integer to compare.</param>
            <returns>true if the current instance and the unsigned 64-bit integer have the same value; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.GetHashCode">
            <summary>
            Returns the hash code for the current System.Numerics.BigInteger object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.GreatestCommonDivisor(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Finds the greatest common divisor of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>The greatest common divisor of left and right.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Log(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Double)">
            <summary>
            Returns the logarithm of a specified number in a specified base.
            </summary>
            <param name="value">A number whose logarithm is to be found.</param>
            <param name="baseValue">The base of the logarithm.</param>
            <returns>The base baseValue logarithm of value, as shown in the table in the Remarks section.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Log(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the natural (base e) logarithm of a specified number.
            </summary>
            <param name="value">The number whose logarithm is to be found.</param>
            <returns>The natural (base e) logarithm of value, as shown in the table in the Remarks section.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Log10(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the base 10 logarithm of a specified number.
            </summary>
            <param name="value">A number whose logarithm is to be found.</param>
            <returns>The base 10 logarithm of value, as shown in the table in the Remarks section.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Max(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the larger of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>The left or right parameter, whichever is larger.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Min(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the smaller of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>The left or right parameter, whichever is smaller.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.ModPow(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Performs modulus division on a number raised to the power of another number.
            </summary>
            <param name="value">The number to raise to the exponent power.</param>
            <param name="exponent">The exponent to raise value by.</param>
            <param name="modulus">The value to divide valueexponent by.</param>
            <returns>The remainder after dividing valueexponent by modulus.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.ModInverse(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Mods the inverse.
            </summary>
            <param name="bi">The bi.</param>
            <param name="modulus">The modulus.</param>
            <returns>Modulus inverted number.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.PositiveMod(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns positive remainder that results from division with two specified <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> values.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            Positive remainder that results from the division.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Multiply(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Returns the product of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first number to multiply.</param>
            <param name="right">The second number to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Negate(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Negates a specified System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to negate.</param>
            <returns>The result of the value parameter multiplied by negative one (-1).</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="style">A bitwise combination of the enumeration values that specify the permitted format of value.</param>
            <param name="provider">An object that provides culture-specific formatting information about value.</param>
            <returns>Parsed <see cref="T:Crestron.SimplSharp.Ssh.Common.BigInteger"/> number</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number in a specified culture-specific format to its System.Numerics.BigInteger equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="provider">An object that provides culture-specific formatting information about value.</param>
            <returns>A value that is equivalent to the number specified in the value parameter.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
            <summary>
            Converts the string representation of a number in a specified style to its System.Numerics.BigInteger equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="style">A bitwise combination of the enumeration values that specify the permitted format of value.</param>
            <returns>A value that is equivalent to the number specified in the value parameter.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Pow(Crestron.SimplSharp.Ssh.Common.BigInteger,System.Int32)">
            <summary>
            Raises a System.Numerics.BigInteger value to the power of a specified value.
            </summary>
            <param name="value">The number to raise to the exponent power.</param>
            <param name="exponent">The exponent to raise value by.</param>
            <returns>The result of raising value to the exponent power.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Remainder(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Performs integer division on two System.Numerics.BigInteger values and returns the remainder.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>The remainder after dividing dividend by divisor.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Subtract(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Subtracts one System.Numerics.BigInteger value from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.ToByteArray">
            <summary>
            Converts a System.Numerics.BigInteger value to a byte array.
            </summary>
            <returns>The value of the current System.Numerics.BigInteger object converted to an array of bytes.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.ToString">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object to its equivalent string representation.
            </summary>
            <returns>
            The string representation of the current System.Numerics.BigInteger value.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.ToString(System.IFormatProvider)">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object 
            to its equivalent string representation by using the specified culture-specific 
            formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
            The string representation of the current System.Numerics.BigInteger value 
            in the format specified by the provider parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.ToString(System.String)">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object
            to its equivalent string representation by using the specified format.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>
            The string representation of the current System.Numerics.BigInteger value
            in the format specified by the format parameter.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object
            to its equivalent string representation by using the specified format and
            culture-specific format information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
            The string representation of the current System.Numerics.BigInteger value 
            as specified by the format and provider parameters.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.Globalization.CultureInfo,Crestron.SimplSharp.Ssh.Common.BigInteger@)">
            <summary>
            Tries to convert the string representation of a number in a specified style
            and culture-specific format to its System.Numerics.BigInteger equivalent,
            and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="value">The string representation of a number. The string is interpreted using the style specified by style.</param>
            <param name="style">A bitwise combination of enumeration values that indicates the style elements
            that can be present in value. A typical value to specify is System.Globalization.NumberStyles.Integer.</param>
            <param name="cultureInfo">An object that supplies culture-specific formatting information about value.</param>
            <param name="result">When this method returns, contains the System.Numerics.BigInteger equivalent
            to the number that is contained in value, or System.Numerics.BigInteger.Zero
            if the conversion failed. The conversion fails if the value parameter is
            null or is not in a format that is compliant with style. This parameter is
            passed uninitialized.</param>
            <returns>true if the value parameter was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.TryParse(System.String,Crestron.SimplSharp.Ssh.Common.BigInteger@)">
            <summary>
            Tries to convert the string representation of a number to its System.Numerics.BigInteger
            equivalent, and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="value">The string representation of a number.</param>
            <param name="result">When this method returns, contains the System.Numerics.BigInteger equivalent
            to the number that is contained in value, or zero (0) if the conversion fails.
            The conversion fails if the value parameter is null or is not of the correct
            format. This parameter is passed uninitialized.</param>
            <returns>true if value was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.CompareTo(System.Int64)">
            <summary>
            Compares this instance to a signed 64-bit integer and returns an integer 
            that indicates whether the value of this instance is less than, equal to, 
            or greater than the value of the signed 64-bit integer.
            </summary>
            <param name="other">The signed 64-bit integer to compare.</param>
            <returns>A signed integer value that indicates the relationship of this instance to 
            other, as shown in the following table.Return valueDescriptionLess than zeroThe 
            current instance is less than other.ZeroThe current instance equals other.Greater 
            than zero.The current instance is greater than other.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.Compare(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Compares two System.Numerics.BigInteger values and returns an integer that 
            indicates whether the first value is less than, equal to, or greater than the second value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>A signed integer that indicates the relative values of left and right, 
            as shown in the following table.ValueConditionLess than zeroleft is less than right.Zeroleft 
            equals right.Greater than zeroleft is greater than right.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.PopulationCount(System.UInt32)">
            <summary>
            Populations the count.
            </summary>
            <param name="x">The x.</param>
            <returns>Returns the number of bits set in x</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.BigInteger.BitScanBackward(System.UInt32)">
            <summary>
            Returns the 0-based index of the most significant set bit
            </summary>
            <param name="word">The word.</param>
            <returns>0 if no bit is set</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.BitLength">
            <summary>
            Gets number of bits used by the number.
            </summary>
            <value>
            The number of the bit used.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.IsEven">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is an even number.
            </summary>
            <value>
              <c>true</c> if the value of the System.Numerics.BigInteger object is an even number; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.IsOne">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is System.Numerics.BigInteger.One.
            </summary>
            <value>
              <c>true</c> if the value of the System.Numerics.BigInteger object is System.Numerics.BigInteger.One; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.IsPowerOfTwo">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is a power of two.
            </summary>
            <value>
            	<c>true</c> if the value of the System.Numerics.BigInteger object is a power of two; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.IsZero">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is System.Numerics.BigInteger.Zero.
            </summary>
            <value>
              <c>true</c> if the value of the System.Numerics.BigInteger object is System.Numerics.BigInteger.Zero; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.MinusOne">
            <summary>
            Gets a value that represents the number negative one (-1).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.One">
            <summary>
            Gets a value that represents the number one (1).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.Sign">
            <summary>
            Gets a number that indicates the sign (negative, positive, or zero) of the current System.Numerics.BigInteger object.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.BigInteger.Zero">
            <summary>
            Gets a value that represents the number 0 (zero).
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TcpServer">
            <summary>
            The TCPServer class is used to create a TCP (Transmission Control Protocol) server object.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Server">
            <summary>
            Server class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.#ctor">
            <summary>
            Creates a new instance of the Server class.
            The constructor checks the current platform capabilities and instantiates the appropriate IPv4 and IPv6 bindings.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.Dispose(System.Boolean)">
            <summary>
            Disposes of the current instance and releases all resources used by it.
            </summary>
            <param name="aDisposing">true to close socket.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.ShouldSerializePort">
            <summary>
            Returns true when the DefaultPort is not equal to the Port.
            </summary>
            <returns>true when the DefaultPort is not equal to the Port</returns>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Server.fActive">
            <summary>
            Server activity status
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.doPostConnectErrorChecking(System.Net.IPEndPoint,System.String)">
            <summary>
            Function to do basic postConnectErrorChecking
            </summary>
            <param name="remoteEndPoint"></param>
            <param name="addressToConnectTo"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.Open">
            <summary>
            This method causes the server to start listening for incoming connections.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.Close">
            <summary>
            This method causes the server to stop listening for incoming connections.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.GetWorkerClass">
            <summary>
            Returns the type of the class that is used internally to serve incoming connections.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Server.Dispose">
            <summary>
            Disposes the Server Connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.Bindings">
            <summary>
            Gets the current ServerBindings instance. This instance is not used by the Server class itself.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.Binding">
            <summary>
            Gets the ServerBinding instance.
            In most cases, the IPv4 ServerBinding instance is returned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.BindingV4">
            <summary>
            Gets the IPv4 ServerBinding instance.
            The returned instance can be used to fine-tune the IPv4 server endpoint.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.BindingV6">
            <summary>
            Gets the IPv6 ServerBinding instance.
            The returned instance can be used to fine-tune the IPv6 server endpoint.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.BindV6">
            <summary>
            Gets or sets the flag indicating whether the server should listen for IPv6 connections.
            Setting this flag doesn't have any immediate effect. Its value is used only when the server is opened 
            (either by setting the Active property to true or by directly calling the Open method).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.BindV4">
            <summary>
            Gets or sets the flag indicating whether the server should listen for IPv4 connections.
            Setting this flag doesn't have any immediate effect. It's value is used only when the server is opened 
            (either by setting the Active property to true or by directly calling the Open method).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.Port">
            <summary>
            Gets or sets the port number on which the server will listen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.CloseConnectionsOnShutdown">
            <summary>
            Gets or sets the flag indicating whether the currently open client connections should be appropriately closed on server shutdown.
            The default value is true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.EnableNagle">
            <summary>
            Gets or the sets flag indicating whether the Nagle's algorithm should be used.
            Setting this flag doesn't have any immediate effect. Its value is used only when the server is opened 
            (either by setting the Active property to true or by directly calling the Open method). 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.DefaultPort">
            <summary>
            Gets or sets the default port number.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.ConnectionClass">
            <summary>
            Gets or sets an alternative Connection class to be used for incoming data connections. The class described by the assigned Type must be a descendant of the Connection class, and will be used for all connections that are established after the property has been set.
            Existing connections are not affected by changing the property.
            If the ConnectionType property value is null (default), instances of the Connection base class will be used.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.ConnectionFactory">
            <summary>
            Gets or sets an alternative Connection factory instance to be used for incoming data connections. This factory will be used to create corresponding Connection instances for all connections that are established after the property has been set.
            Existing connections are not affected by changing the property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.Active">
             <summary>
             Gets or sets the flag defining whether the server is listening for incoming connections.
            Setting this property to true or false calls the Open or Close methods, accordingly.
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.EthernetAdapterToBindTo">
            <summary>
            Indicates if the user wants to bind to a specific adapter
            This is valid on systems which support multiple adapters. 
            Ignored on systems which do not support multiple adapters.
            Only valid if the address of the HTTP server is defined as 0.0.0.0 - Ignored otherwise
            Set to EthernetAdapterType.EthernetUnknownAdapter if no specific binding is required.
            On units which just have a single adapter - we can accept a connection from anywhere
                 - In this case this setting is ignored
            On units which have multiple adapters 
                 - If the user specified EthernetCSAdapter then accept connection from Control Subnet side only
                 - If the user specified EthernetLAN2Adapter then accept connection from LAN2 side only
                 - If the user specified EthernetLANAdapter, then accept connections from anywhere but from the Control subnet side and LAN2            
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.TimeoutEnabled">
            <summary>
            Gets or sets the default TimeoutEnabled value for all newly created Connections.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.Timeout">
            <summary>
            Gets or sets the default Timeout value for all newly created Connections.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.MaxLineLengthEnabled">
            <summary>
            Gets or sets the default MaxLineLengthEnabled value for all newly created Connections.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Server.MaxLineLength">
            <summary>
            Gets or sets the default MaxLineLength value for all newly created Connections.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TcpServer.#ctor">
            <summary>
            TCP Server base constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TcpServer.GetWorkerClass">
            <summary>
            Get Worker class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TcpServer.HandleTcpConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Handle the TCP Connection. 
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="E:Crestron.SimplSharp.Net.TcpServer.OnTcpConnection">
            <summary>
            Event to trigger on TCP Connection.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TcpWorker">
            <summary>
            TCPServer class is used to create a TCP (Transmission Control Protocol) server object.
            </summary>  
        </member>
        <member name="T:Crestron.SimplSharp.Net.Worker">
            <summary>
            Abstract base class for all synchronous workers which are used internally by the Server components to handle the individual connections.
            They are created by the Listener whenever a new connection comes in.
            </summary>   
        </member>
        <member name="T:Crestron.SimplSharp.Net.IWorker">
            <summary>
            Represents an interface for Worker class.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.IOwned">
            <summary>
            The IOwned base interface for IListener, IWorker and IAsyncWorker represents an object that is owned by a particular server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.IOwned.Owner">
            <summary>
            The server that owns the object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.IWorker.Work">
            <summary>
            Work for the IWorker instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.IWorker.DataConnection">
            <summary>
            Represents a connection property of the heritable class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.IWorker.Thread">
            <summary>
            Represents the thread to execute the Work method of the heritable class.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.IWorker.Done">
            <summary>
            Done Event Handler
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Worker.#ctor">
            <summary>
            Default constructor for the Worker class.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Worker.fThread">
            <summary>
            Gets or sets the thread to execute the Work method that is provided by IWorker interface.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Worker.DoWork">
            <summary>
            When overridden in a derived class, processes the client connection, catches exceptions and closes the connection after client disconnecting.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Worker.Work">
            <summary>
            Do Work for the respective Worker instance
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Worker.DataConnection">
            <summary>
            Gets or sets the connection to the owner server listening socket.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Worker.Thread">
            <summary>
            Gets or sets the thread to execute the Work method that is provided by IWorker interface.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Worker.Owner">
            <summary>
            Gets the Server object which is owner of this Worker.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Worker.Done">
            <summary>
            This event is fired after client connection being closed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TcpWorker.#ctor">
            <summary>
            TCPWorker default constructor 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TcpWorker.DoWork">
            <summary>
            When overridden in a derived class, Handles the TCP connection, catches exceptions and closes the connection after disconnecting.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.TcpWorker.Owner">
            <summary>
            Get or set the Worker Owner for this TCP Server instance.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.OnTcpConnectionHandler">
            <summary>
            OnTcpConnectionHandler delegate handler
            </summary>
            <param name="aSender">An object representing the sender of the event</param>
            <param name="ea">A <see cref="T:Crestron.SimplSharp.Net.OnTcpConnectionArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.OnTcpConnectionArgs">
            <summary>
            OnTcpConnectionArgs class
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ConnectionEventArgs">
            <summary>
            ConnectionEventArgs Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionEventArgs.#ctor(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Creates an instance of the ConnectionEventArgs Class.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionEventArgs.Connection">
            <summary>
            Gets the Connection for this ConnectionEventArgs instance 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.OnTcpConnectionArgs.#ctor(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Creates an instance of the OnTcpConnectionArgs Class
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsClientStreamType">
            <summary>
            Types of streams Implemented in the HTTPs Streams
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClientStreamType.NullStream">
            <summary>
            Bit bucket Stream
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClientStreamType.MemoryStream">
            <summary>
            Normal Stream
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClientStreamType.StreamInterface">
            <summary>
            Used for the Async Begin/End Stream
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.AsyncStreamStateEnum">
            <summary>
            The Async Stream States
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.AsyncStreamStateEnum.NewRequest">
            <summary>
            Async Request has not been initiated
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.AsyncStreamStateEnum.BeginRequest">
            <summary>
            Async Request has been initiated
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.AsyncStreamStateEnum.EndRequest">
            <summary>
            Connection made waiting for data
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.AsyncStreamStateEnum.BeginResponse">
            <summary>
            Initiated response
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.AsyncStreamStateEnum.EndResponse">
            <summary>
            StopReceiving Data
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.AsyncStreamStateEnum.Complete">
            <summary>
            Task Completed
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.AsyncStatus.AsyncState">
            <summary>
            Information to describe why the event was triggered.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsRequestResponse">
            <summary>
            Abstract base class representing an HTTPs message. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.#ctor">
            <summary>
            Creates an instance of the HttpsRequestResponse Class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.#ctor(Crestron.SimplSharp.Net.Https.HttpsHeaders)">
            <summary>
            Creates an instance of the HttpsRequestResponse Class with HTTPs Header parameter.
            </summary>
            <param name="aHeader">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpHeaders"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.CloneEvents(Crestron.SimplSharp.Net.Https.HttpsRequestResponse)">
            <summary>
            Clones the events of the HTTPs Request Response.
            </summary>
            <param name="aRequestOrResponse">A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsRequestResponse"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.TriggerOnTransferStart(Crestron.SimplSharp.Net.TransferDirection,System.Int64)">
            <summary>
            Trigger the OnTransferStart Event Handler
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
            <param name="aTotal">Total byte count.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.TriggerOnTransferEnd(Crestron.SimplSharp.Net.TransferDirection)">
            <summary>
            Trigger the OnTransferEnd Event Handler
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.TriggerOnTransferProgress(Crestron.SimplSharp.Net.TransferDirection,System.Int64)">
            <summary>
            Trigger the OnTransferProgress Event Handler 
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
            <param name="aCurrent">The current byte count transfered.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.Header">
            <summary>
            Get or set the HTTPs Response Header
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.Encoding">
            <summary>
            Determines the Encoding for the HTTPs Request Response
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.Client">
            <summary>
             Gets the Client property status for the HTTPsRequestResponse.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.Server">
            <summary>
            Gets the Server property status for the HTTPsRequestResponse.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.OnTransferStart">
            <summary>
            OnTransferStart Event handler
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.OnTransferEnd">
            <summary>
            OnTransferEnd Event Handler
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.OnTransferProgress">
            <summary>
            OnTransferProgress Event Handler
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.HasOnTransferProgress">
            <summary>
            Determines whether the current HTTPsRequest Response has an OnTransferProgress event handler.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.AsyncState">
            <summary>
            contains information about an asynchronous operation.
            </summary>
            <return> returns information about an asynchronous operation.</return>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <return> true if the operation is complete; otherwise, false.</return>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsRequestResponse.ThisClient">
            <summary>
            Gets the Client that is host to this request
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse">
            <summary>
             Base class representing an incoming HTTPs message - a response received by the HttpsClient. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.BUFFER_SIZE">
            <summary>
            Gets the Data Connection for the HttpsIncomingRequestResponse instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.#ctor(Crestron.SimplSharp.CrestronFileTransferClient,Crestron.SimplSharp.Net.Https.HttpsClientStreamType)">
            <summary>
            Creates an instance of the HttpsIncomingRequestResponse Class
            </summary>
            <param name="client">The connection</param>
            <param name="type">type of Stream used</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.FlushContent">
            <summary>
            Flush the content of the HTTPs Incoming Stream.
            </summary>
            <returns>true if the operation succeeds; otherwise, false </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.ResetContent">
            <summary>
            Clear the content of the HTTPs Incoming Stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.Validate">
            <summary>
            Validate the HTTPs Header RequestVersion.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.ContentBytes">
             <summary>
             Returns the HTTPs body in form of a byte array.
             <remarks>Retrieving the content of a response from a server reads all of the data and is a mutually exclusive operation, therefore calling ContentBytes or ContentString after retrieving the ContentStream and reading its contents will yield an empty response.</remarks>
             </summary>
            <returns>Bytes in content or null</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.ContentStream">
            <summary>
            Returns a Stream object with the HTTPs body of the received request (server) or response (client).
            Because ContentStream provides you with direct access to the underlying Connection Stream, 
            it is the fastest and most efficient way to access the response (as opposed to ContentString and ContentBytes, 
            both of which involve copying the entire data from the stream into a memory buffer).
            <remarks>Retrieving the content of a response from a server reads all of the data and is a mutually exclusive operation, therefore attempting to read from the ContentStream after retrieving the ContentBytes or ContentString will yield an empty response body.</remarks>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.HeaderStream">
            <summary>
            Returns a Stream object with the HTTPs header of the received request (server) or response (client).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.ContentString">
            <summary>
            Returns the HTTPs body in form of a String object.
            <remarks>Retrieving the content of a response from a server reads all of the data and is a mutually exclusive operation, therefore calling ContentBytes or ContentString after retrieving the ContentStream and reading its contents will yield an empty response.</remarks>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.HasContentLength">
            <summary>
            Specifies whether the HTTPs header provides a ContentLength field or a transfer-encoding of chunked.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.ContentLength">
            <summary>
            Contains the ContentLength header value received from the remote side. 
            If the remote did not provide a length (for example in HTTP 1.0 scenarios, or if Keep-Alive is not supported), accessing the property will raise an exception.
            Use the HasContentLength property to determine if a valid ContentLength has been received.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.KeepAlive">
            <summary>
            Keeps the HTTPs Request Response connection alive.
            If enabled (true) , once a request is made and a connection is established, this connection is kept open and used for future requests. 
            If disabled, the connection is closed, and a new connection is created for future requests.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsIncomingRequestResponse.Chunked">
            <summary>
            Determines whether data being transferred will be chunked or not.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Stream">
            <summary>
            Provides a generic view of a sequence of bytes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Stream.Null">
            <summary>
            A Stream with no backing store.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.#ctor">
            <summary>
             Initializes a new instance of the CrestronIO class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.Close">
            <summary>
             Closes the current stream and releases any resources (such as sockets and
             file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.Dispose">
            <summary>
             Releases all resources used by the Crestron.SimplSharp.CrestronStream.Stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and
            causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"> An I/O error occurs.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
             <summary>
            When overridden in a derived class, reads a sequence of bytes from the current
            stream and advances the position within the stream by the number of bytes
            read.
             </summary>
             <param name="buffer"> An array of bytes. When this method returns, the buffer contains the specified
             byte array with the values between offset and (offset + count - 1) replaced
             by the bytes read from the current source.</param>
             <param name="offset"> The zero-based byte offset in buffer at which to begin storing the data read
             from the current stream.</param>
             <param name="count">The maximum number of bytes to be read from the current stream.</param>
             <returns> The total number of bytes read into the buffer. This can be less than the
             number of bytes requested if that many bytes are not currently available,
             or zero (0) if the end of the stream has been reached.</returns>
             <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length.</exception>
             <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative</exception>
             <exception cref="T:System.NotSupportedException">The stream does not support reading.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
             <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.ReadByte">
            <summary>
             Reads a byte from the stream and advances the position within the stream
                by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns> The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
            <exception cref="T:System.NotSupportedException">The stream does not support reading.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
             When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type CrestronIO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed
            from a pipe or console output.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.SetLength(System.Int64)">
            <summary>
             When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value"> The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current
            stream and advances the current position within this stream by the number
            of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current
            stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the
            current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative.</exception>
            <exception cref="T:System.ArgumentNullException"> buffer is null.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.Dispose(System.Boolean)">
            <summary>
             Releases the unmanaged resources used by the Stream and optionally releases the managed resources.
            </summary>
            <param name="disposing"> true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.WriteByte(System.Byte)">
            <summary>
             Writes a byte to the current position in the stream and advances the position
             within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer"> The buffer to read the data into.</param>
            <param name="offset"> The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count"> The maximum number of bytes to read.</param>
            <param name="callback"> An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state"> A user-provided object that distinguishes this particular asynchronous read
            request from other requests.</param>
            <returns> An IAsyncResult that represents the asynchronous read, which could
            still be pending.</returns>
            <exception cref="T:System.ArgumentException">One or more of the arguments is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.NotSupportedException">The current Stream implementation does not support the read operation.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Attempted an asynchronous read past the end of the stream, or a disk error
            occurs.</exception> 
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
                Begins an asynchronous write operation.
            </summary>
            <param name="buffer">
                The buffer to write data from.
            </param>
            <param name="offset">
                The byte offset in buffer from which to begin writing.
            </param>
            <param name="count">
                The maximum number of bytes to write.
            </param>
            <param name="callback">
                An optional asynchronous callback, to be called when the write is complete.
            </param>
            <param name="state">
                A user-provided object that distinguishes this particular asynchronous write
                request from other requests.
            </param>
            <returns>
                An IAsyncResult that represents the asynchronous write, which could still
                be pending. 
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                Attempted an asynchronous write past the end of the stream, or a disk error
                occurs.
            </exception>
            <exception cref="T:System.ArgumentException">
                One or more of the arguments is invalid.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                Methods were called after the stream was closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                The current Stream implementation does not support the write operation.            
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.EndRead(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
             <summary>
                 Waits for the pending asynchronous read to complete.
             </summary>
             <param name="asyncResult">
                 The reference to the pending asynchronous request to finish.
            </param>
             <returns>
                 The number of bytes read from the stream, between zero (0) and the number
                 of bytes you requested. Streams return zero (0) only at the end of the stream,
                 otherwise, they should block until at least one byte is available.
             </returns>
             <exception cref="T:System.ArgumentNullException">
                 asyncResult is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 asyncResult did not originate from a CrestronIO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
                 method on the current stream.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 The stream is closed or an internal error has occurred.
             </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Stream.EndWrite(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
             <summary>
                 Ends an asynchronous write operation.
            </summary>
             <param name="asyncResult">
                 A reference to the outstanding asynchronous I/O request.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 asyncResult is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 asyncResult did not originate from a CrestronIO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
                 method on the current stream.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 The stream is closed or an internal error has occurred.
                 </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current
            stream supports reading.
            </summary>
            <returns> true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.CanSeek">
            <summary>
             When overridden in a derived class, gets a value indicating whether the current
             stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.CanTimeout">
            <summary>
             Gets a value that determines whether the current stream can time out.
            </summary>
            <returns> A value that determines whether the current stream can time out.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.CanWrite">
            <summary>
             When overridden in a derived class, gets a value indicating whether the current
             stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns> A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking.</exception>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns> The current position within the stream.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking.</exception>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.ReadTimeout">
            <summary>
            Gets or sets a value, in milliseconds, that determines how long the stream
            will attempt to read before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to read before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">The CrestronIO.Stream.ReadTimeout method always throws an System.InvalidOperationException.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Stream.WriteTimeout">
            <summary>
             Gets or sets a value, in milliseconds, that determines how long the stream 
             will attempt to write before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to write before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">The CrestronIO.Stream.WriteTimeout method always throws an System.InvalidOperationException.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.Flush">
            <summary>
            Clears all buffers for this stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aCount">Count of bytes to use in the byte array</param>
            <returns></returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.ReadByte">
            <summary>
            Reads a byte from the current stream and advances the position within the stream by one.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="aOffset">irrelevant</param>
            <param name="aOrigin">irrelevant</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="aLength">irrelevant</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="aBuffer">array of Byte buffer</param>
            <param name="aOffset">offset</param>
            <param name="aCount">Size</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse">
            <summary>
            The Abstract Base Class represents an outgoing HTTPs message - either a request to be sent from the HttpsClient, or a response to be sent from the HttpsServer. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.#ctor">
            <summary>
            HttpsOutgoingRequestResponse base constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.#ctor(Crestron.SimplSharp.Net.Https.HttpsHeaders)">
            <summary>
            HttpsOutgoingRequestResponse with custom HTTPs Header parameter
            </summary>
            <param name="aHeader">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpHeaders"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.FinalizeHeader">
            <summary>
            Sets the Header Value for the "Content-Length" in the Content Source.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.WriteToConnection(Crestron.SimplSharp.CrestronFileTransferClient)">
            <summary>
            Writes the Header and Body to the Connection instance. 
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.WriteToConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Writes the Header and Body to the Connection instance. 
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.WriteHeaderToConnection(Crestron.SimplSharp.CrestronFileTransferClient)">
            <summary>
            Write the Header to the Connection instance.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.WriteHeaderToConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Write the Header to the Connection instance.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.WriteBodyToConnection(Crestron.SimplSharp.CrestronFileTransferClient)">
            <summary>
            Write the Header to the Connection instance.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.WriteBodyToConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Write the Header to the Connection instance.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.ContentSource">
            <summary>
            Defines which property (ContentBytes, ContentStream or ContentString) will be used to send the body of the response. 
            Assigning any of these three properties will automatically set the ContentSource property so that the content will always be sent from the appropriate source.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.ContentBytes">
            <summary>
            Assigns a byte array to send back as the HTTPs body to this property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.ContentStream">
            <summary>
            Assigns a stream to send back as HTTPs body to this property. When assigned (and ContentSource is set to ContentStream),
            you can use the CloseStream property to determine if the stream should be closed automatically after sending it to the connection (true) or not (false).
            </summary>
            <remarks>NOTE: This stream is limited to 2Gb</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.ContentString">
            <summary>
            Assigns a string to send back as HTTPs body to this property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.CloseStream">
            <summary>
            When ContentSource is set to ContentStream (and a ContentStream is assigned), 
            this property determines if the stream should be closed automatically after sending it to the connection (true) or not (false).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsOutgoingRequestResponse.KeepAlive">
            <summary>
            Determines the keep alive status of the HTTPs Outgoing Request Response. 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsClientRequest">
            <summary>
            The HttpsClientRequest class represents an HTTPS request from the client to the server. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClientRequest.#ctor">
            <summary>
            Creates an instance of the HttpsClientRequest Class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClientRequest.FinalizeHeader">
            <summary>
            Sets the HTTPs headers of the request.
            </summary>
            <remarks> It is not necessary for the user to call this function, as it is already completed internally on the headers specified.
            In addition, this action is not recommended if you are using the ProxySettings class to connect through a proxy server using the HttpsClient. Unexpected behavior may occur.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientRequest.Client">
            <summary>
            Gets a flag indicating whether this class is used in a client application.
            The value of this class is always true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientRequest.Server">
            <summary>
            Gets a flag indicating whether this class is used in a server application.
            The value of this class is always false.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientRequest.Url">
            <summary>
            Gets or sets the target URL for the HTTPs request.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientRequest.RequestType">
            <summary>
            Gets or sets the type of the HTTPs request.
            Possible values are:
            RequestType.Get
            RequestType.Post
            RequestType.Put
            RequestType.Delete
            RequestType.Head
            RequestType.Patch
            The default value of this class is RequestType.Get.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsClientResponse">
            <summary>
            The HttpsClientResponse class represents an HTTP response received by the client from the server. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClientResponse.#ctor(Crestron.SimplSharp.CrestronFileTransferClient,Crestron.SimplSharp.Net.Https.HttpsClientStreamType)">
            <summary>
            Creates a new instance of the HttpsClientResponse class.
            </summary>
            <param name="client">Crestron File Transfer Client</param>
            <param name="type">The type of Stream used</param>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClientResponse.fCode">
            <summary>
            Validate the HTTPs Client Response.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientResponse.Client">
            <summary>
            Gets a flag indicating whether this class is used in a client application.
            The value of this property is always true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientResponse.Server">
            <summary>
            Gets a flag indicating whether this class is used in a server application.
            The value of this class is always false.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientResponse.Code">
            <summary>
            Gets the HTTPs Result code received from the server.
            HTTPs codes of 300 and above usually indicate a redirect or error on the server side (such as 404 "File not Found")
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClientResponse.ResponseUrl">
            <summary>
            Gets the URL of the Internet resource that responded to the request.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsDataStream">
            <summary>
            Implements an incoming stream of HTTPs message (HttpsIncomingRequestResponse).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsDataStream.#ctor(System.IO.Stream)">
            <summary>
            Creates an instance of the HttpsIncomingStream Class.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsDataStream.Flush">
            <summary>
            Clears all buffers for this stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsDataStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsDataStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aCount">Count of bytes to use in the byte array</param>
            <returns></returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsDataStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="aOffset">irrelevant</param>
            <param name="aOrigin">irrelevant</param>
            <returns>Action is not supported. Always throws exception.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsDataStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="aLength">Total byte count.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsDataStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="aBuffer">array of Byte buffer</param>
            <param name="aOffset">offset</param>
            <param name="aCount">Size</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsDataStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsDataStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsDataStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsDataStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsDataStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.ContentSource">
            <summary>
            Defines which type of the HTTPs body will be used - array of bytes, stream or string.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.ContentSource.ContentNone">
            <summary>
            N/A
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.ContentSource.ContentBytes">
            <summary>
            Array of bytes content
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.ContentSource.ContentStream">
            <summary>
            Stream content
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.ContentSource.ContentString">
            <summary>
            String content
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.RequestType">
            <summary>
            This enumeration defines the common values for the HTTPs methods used to make a request.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.RequestType.Get">
            <summary>
            GET request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.RequestType.Post">
            <summary>
            POST request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.RequestType.Put">
            <summary>
            Put request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.RequestType.Delete">
            <summary>
            Delete Request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.RequestType.Head">
            <summary>
            Head Request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.RequestType.Patch">
            <summary>
            Patch Request
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.QueryString">
            <summary>
            QueryString represents a collection of key/value pairs which is used to store parameters from the HTTPs path (the tail from symbol "?" to the end).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.QueryString.#ctor(System.String)">
            <summary>
            QueryString constructor with query parameter which stores parameters from the HTTPs path (the tail from symbol "?" to the end).
            </summary>
            <param name="aQuery">Query string with parameter in HTTPs path</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.QueryString.ToString">
            <summary>
            ToString that returns the Query String.
            </summary>
            <returns>the Query String</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.QueryString.Item(System.Object)">
            <summary>
            Returns Query string using Key as index.
            </summary>
            <param name="aKey">Query name to look up</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsRequestInvalidException">
            <summary>
            HttpsRequestInvalidException class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestInvalidException.#ctor(System.Int32,System.String)">
            <summary>
            Constructor for an exception of the HTTPs Request Response with ErrorCode and Error Message.
            </summary>
            <param name="aErrorCode">Integer error code to return for this request.</param>
            <param name="aErrorMessage">String with error message text to return for this request.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsRequestInvalidException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            Constructor for an exception with Error Code, message, and inner Exception. 
            </summary>
            <param name="aErrorCode">Integer error code to return for this request.</param>
            <param name="aErrorMessage">String with error message text to return for this request.</param>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.StringCollection">
            <summary>
            String Collection class
            </summary>   
        </member>
        <member name="M:Crestron.SimplSharp.Net.StringCollection.#ctor">
            <summary>
            String Collection default constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.StringCollection.Add(System.String)">
            <summary>
            Add string to the String Collection
            </summary>
            <param name="aString">String to add.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.StringCollection.Item(System.Int32)">
            <summary>
            Get or set the string at the index provided.
            </summary>
            <param name="aIndex">Index to get or set.</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.IntHelper">
            <summary>
            IntHelper Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.IntHelper.TryParse(System.String,System.Int32@)">
            <summary>
            Parse the Text in the input string text and return true if successful, false otherwise.
            </summary>
            <param name="text">String to parse</param>
            <param name="value">Int to receive the value</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.LongHelper">
            <summary>
            LongHelper Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.LongHelper.TryParse(System.String,System.Int64@)">
            <summary>
            Parse the Text in the input string text and return true if successful, false otherwise.
            </summary>
            <param name="text">String to parse</param>
            <param name="value">Long to receive the value</param>
            <returns>true if successful, false otherwise</returns>
        </member>
        <member name="T:CrestronSharp.CrestronXmlQualifiedName">
            <summary>
            Represents an XML qualified name.
            </summary>
        </member>
        <member name="M:CrestronSharp.CrestronXmlQualifiedName.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> class.
            </summary>
        </member>
        <member name="M:CrestronSharp.CrestronXmlQualifiedName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> class with the specified name.
            </summary>
            <param name="paramName">The local name to use as the name of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> object.</param>
            <remarks>The object created does not have a namespace defined.</remarks>
        </member>
        <member name="M:CrestronSharp.CrestronXmlQualifiedName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> class with the specified name and namespace.
            </summary>
            <param name="paramName">The local name to use as the name of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> object.</param>
            <param name="paramNamespace">The namespace for the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> object.</param>
        </member>
        <member name="M:CrestronSharp.CrestronXmlQualifiedName.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> object is equal to the current <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> object.
            </summary>
            <param name="paramOther">The <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> to compare.</param>
            <returns>true if the two are the same instance object; otherwise, false.</returns>
        </member>
        <member name="M:CrestronSharp.CrestronXmlQualifiedName.GetHashCode">
            <summary>
            Returns the hash code for the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/>.
            </summary>
            <returns>A hash code for this object.</returns>
        </member>
        <member name="M:CrestronSharp.CrestronXmlQualifiedName.ToString">
            <summary>
            Returns the string value of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/>.
            </summary>
            <returns>The string value of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> in the format of namespace:localname. If 
            the object does not have a namespace defined, this method returns just the local name.</returns>
        </member>
        <member name="M:CrestronSharp.CrestronXmlQualifiedName.ToString(System.String,System.String)">
            <summary>
            Returns the string value of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/>.
            </summary>
            <param name="paramName">The name of the object.</param>
            <param name="paramNs">The namespace of the object.</param>
            <returns>The string value of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> in the format of namespace:localname. If the object does 
            not have a namespace defined, this method returns just the local name.</returns>
        </member>
        <member name="P:CrestronSharp.CrestronXmlQualifiedName.IsEmpty">
            <summary>
            Gets a value indicating whether the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/> is empty.
            </summary>
        </member>
        <member name="P:CrestronSharp.CrestronXmlQualifiedName.Name">
            <summary>
            Gets a string representation of the qualified name of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/>.
            </summary>
        </member>
        <member name="P:CrestronSharp.CrestronXmlQualifiedName.Namespace">
            <summary>
            Gets a string representation of the namespace of the <see cref="T:CrestronSharp.CrestronXmlQualifiedName"/>.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ReadOnlyDictionary`2">
            <summary>
            Wrapper for a dictionary that is read only. 
            </summary>
            <typeparam name="TKey">Type of key objects stored in this dictionary.</typeparam>
            <typeparam name="TValue">Type of values stored in this dictionary.</typeparam>
        </member>
        <member name="F:Crestron.SimplSharp.ReadOnlyDictionary`2._internalDictionary">
            <summary>
            Internal storage of the objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
            <summary>
            Constructor to create a new read only dictionary that wraps a specific dictionary.
            </summary>
            <param name="dictionaryToWrap">Dictionary to wrap.</param>
            <exception cref="T:System.ArgumentNullException">Specified dictionary is 'null'</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.GetEnumerator">
            <summary>
            Enumerator for the read only dictionary.
            </summary>
            <returns>IEnumerator class for the specified read only dictionary</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumerator for the dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.Contains(`0)">
            <summary>
            Determines if this dictionary contains the specified key.
            </summary>
            <param name="paramKey">Specified key to search for in the collection.</param>
            <returns>True, if the collection contains the key specified; false, otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            Determines if this dictionary contains the specified key.
            </summary>
            <param name="paramKey">Specified key to search for in the dictionary.</param>
            <returns>True, if the dictionary contains the key specified; false, otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.ContainsValue(`1)">
            <summary>
            Determines if the dictionary contains the specified value/
            </summary>
            <param name="paramValue">Specified value to search for in the dictionary.</param>
            <returns>True, if the dictionary contains the key specified; false, otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.GetObject(`0)">
            <summary>
            Method to get the value at the specified key.
            </summary>
            <param name="paramKey">Index number to find in the internal collection.</param>
            <returns>Object at the specified index.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Get the value associated with the specified key.
            </summary>
            <param name="paramKey">Specified key of the value to get.</param>
            <param name="paramValue">Value of the associated key, if the key is found in the collection. If the key is not found the default value is returned.</param>
            <returns>True, if the collection contains a value for the specified key; false, otherwise.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.ReadOnlyDictionary`2.Count">
            <summary>
            Gets the number of objects in the dictionary.        
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ReadOnlyDictionary`2.Item(`0)">
            <summary>
            Get the object at the specified key.
            </summary>
            <param name="paramKey">The key of the value to get.</param>
            <returns>Object of type TValue at the specified key.</returns>
            <exception cref="T:System.IndexOutOfRangeException">Invalid key specified.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.ReadOnlyDictionary`2.Values">
            <summary>
            Get the values associated with this dictionary.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ReadOnlyDictionary`2.Keys">
            <summary>
            Get the keys associated with this dictionary.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.EX_SERVICE_DATA_MSG">
            <summary>
            Internal Extended Service message going between the Backend and Extended Service Device.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EX_SERVICE_DATA_MSG.messageType">
            <summary>
            Message Type.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EX_SERVICE_DATA_MSG.serviceType">
            <summary>
            Extended Service Type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EX_SERVICE_DATA_MSG.channel">
            <summary>
            Extended Service channel number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EX_SERVICE_DATA_MSG.status">
            <summary>
            Extended Service status.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EX_SERVICE_DATA_MSG.data">
            <summary>
            Extended Service Data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EX_SERVICE_DATA_MSG.dataEncoding">
            <summary>
            Extended Service Data Encoding Type.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CresnetTypes">
            <summary>
            Cresnet packet type supported for the service
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CresnetTypes.PKT_TYPE_CRESNET_SERIAL_34">
            <summary>
            Cresnet serial packer type 34.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.eCrestronExtendedService">
            <summary>
            Crestron Extended Service enumeration.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eCrestronExtendedService.CRPCPacketToUserModule">
            <summary>
            This service allows remote devices to exchange
            Crestron Remote Procedure Call packet directly with
            user program or program module.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eCrestronExtendedService.NoServiceRegistered">
            <summary>
            No service registered with the system yet.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceDevice">
            <summary>
            Extended Service Device class is used to send and receive out-of-band information such as extended data service from Crestron Ethernet devices. 
            <para>If the device or the control system does not support this form of communication, it will never come online.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.Connect(Crestron.SimplSharp.eCrestronExtendedService)">
            <summary>
            Method to connect to the application's framework service channel for this device.
            <para>The device needs to be registered with the control system and to support the Extended Service information protocol. 
            If the protocol is not supported by the device the <see cref="P:Crestron.SimplSharp.ExtendedServiceDevice.IsOnline"/> member will remain false and the service asked for is unavailable.</para>
            </summary>
            <param name="serviceAsked">The service asked for which is represented as enumeration <see cref="T:Crestron.SimplSharp.eCrestronExtendedService"/>. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">If the serviceAsked is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">If the service is already registered or connected, or the device is disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.UserNotify(Crestron.SimplSharp.ExtendedServiceEventArgs)">
            <summary>
            Notify the end user of incoming service data or status.
            </summary>
            <param name="arg">Extended service event argument.</param>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.getBytes(System.String,Crestron.SimplSharp.CrestronStringEncoding)">
            <summary>
            Convert the string to byte array.
            </summary>
            <param name="str">String to convert.</param>
            <param name="encoding">Outbound string encoding format.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.SendString(System.UInt32,System.String,Crestron.SimplSharp.CrestronStringEncoding)">
            <summary>
            Method to send a string value to the device.
            </summary>
            <param name="channel">The channel (join) number to set this value to. This is a zero based number from 0 to 65535.</param>
            <param name="value">New string value to send to the device. This string can only be a maximum length of 65535 bytes.</param>
            <param name="encoding">Outbound string encoding format.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If channel number, value length or encoding type is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">If the device is disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.SendBool(System.UInt32,System.Boolean)">
            <summary>
            Method to send a bool value to the device and this is not supported for now.
            </summary>
            <param name="channel">The channel (join) number to set this value to. This is a zero based number from 0 to 65535.</param>
            <param name="value">New bool value to send to the device.</param>
            <exception cref="T:System.NotSupportedException">The method is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.SendUShort(System.UInt32,System.UInt16)">
            <summary>
            Method to send a ushort value to the device and this is not supported for now.
            </summary>
            <param name="channel">The channel (join) number to set this value to. This is a zero based number from 0 to 65535.</param>
            <param name="value">New ushort (analog) value to send to the device.</param>
            <exception cref="T:System.NotSupportedException">The method is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.#ctor(System.UInt32)">
            <summary>
            Constructor to instantiate a new Extended Service Device class.
            </summary>
            <param name="paramID">The IP ID of the device that the programmer assigned for this application.</param>
            <remarks>The user of extended service should instantiate the extended service device as soon as the module initialization is done
            or as soon as the remote device for the service is registered in the program.</remarks>
            <example>
            The following example will show basic usage of the Extended Service Device in SIMPLE# module of 3 Series control system. 
            <code>
            public class ExtendedServiceDeviceTest
            {
                ExtendedServiceDevice myDevice;
                
                //The user should start up the extended service as soon as the module initialization is done.
                public void StartUpExtendedService(uint paramID)
                { 
                    //Instantiate the extended service device with the proper IP ID.
                    myDevice = new ExtendedServiceDevice(paramID);
                    //Subscribe to the  receive event handler.
                    myDevice.ReceiveEvent += ReceiveEventHandler;
                    //Connect to a supported service.
                    myDevice.Connect(eCrestronExtendedService.CRPCPacketToUserModule);
                }
                //Once receive device online event, the user should start the next phase operation like
                //CRPC registration..
                public void SendCRPCRegistrationPacketToDevice()
                {
                  string CRPCPacketString = "This is a CRPC registration packet in required format";
                  uint channelNoToUse = 1;
                  
                 if(myDevice.IsOnline) 
                    myDevice.SendString(channelNoToUse,CRPCPacketString,CrestronStringEncoding.eEncodingUTF16);
                }
                //Receive Event Handler
                void ReceiveEventHandler(object sender, ExtendedServiceEventArgs args)
                {
                    switch (args.Type)
                    {
                        case eExtendedServiceEventType.Online:
                            ErrorLog.Notice(String.Format("Extended service device online status {0}.\r\n",myDevice.IsOnline));
                            break;
                        case eExtendedServiceEventType.String:
                            ErrorLog.Notice(String.Format("Ex-service device gets incoming string in format {0}: {1}.\r\n", args.IncomingStringEncoding.ToString(),args.StringValue));
                            break;
                        default:
                            break;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevice.Dispose">
            <summary>
            Dispose Extended Service Device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceDevice.ID">
            <summary>
            IP ID of the device. 
            This ID is an 8-bit value representation of the device symbol in the SIMPL Windows/SIMPL# Pro application.    
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceDevice.Service">
            <summary>
            Service ID that associates with the extended service which is requested for.
            This ID is represented with the enumeration <see cref="T:Crestron.SimplSharp.eCrestronExtendedService"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceDevice.IsOnline">
            <summary>
            Get the current online state for the device. 
            <para>When the property is true, the service requested is connected and the 
            extended service device is ready for the next phase operation.</para>
            <para>When the property is false, the service requested is not available.</para>
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.ExtendedServiceDevice.ReceiveEvent">
            <summary>
            Information received from the Service Device will trigger this event. 
            <para>This includes changes to the <see cref="P:Crestron.SimplSharp.ExtendedServiceDevice.IsOnline"/> property and when a string, bool, or ushort value are received.</para>
            <para>Currently only string value is supported.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceReceiveEventHandler">
            <summary>
            Delegate to define the event method signature when information is received from an Extended Service Device.
            </summary>
            <param name="sender">Extended Service Device that the information was received from. Cast to <see cref="T:Crestron.SimplSharp.ExtendedServiceDevice"/> as needed.</param>
            <param name="args">Event arguments to describe what was received.</param>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceEventArgs">
            <summary>
            Extended Service Event Argument class to describe the information received from the device. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceEventArgs.#ctor(Crestron.SimplSharp.eExtendedServiceEventType,Crestron.SimplSharp.eCrestronExtendedService,System.UInt32,System.String,System.Boolean,System.UInt32,Crestron.SimplSharp.CrestronStringEncoding)">
            <summary>
            Constructor for the extended service event arguments.
            </summary>
            <param name="type">extended service event type.</param>
            <param name="service">extended service type.</param>
            <param name="channel">extended service channel number.</param>
            <param name="stringVal">extended service string data.</param>
            <param name="boolVal">extended service boolean data</param>
            <param name="ushortVal">extended service unsigned integer data.</param>
            <param name="stringEncoding">incoming string encoding format.</param>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceEventArgs.Service">
            <summary>
            Service ID of the service that the information is received for.
            <para>This ID is represented by the enumeration <see cref="T:Crestron.SimplSharp.eCrestronExtendedService"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceEventArgs.Type">
            <summary>
            Type of change this is. Use this property to determine if the Online state has changed or if a new string/bool/ushort value was received.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceEventArgs.Channel">
            <summary>
            The channel id specified by the device this information is for. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceEventArgs.BoolValue">
            <summary>
            New bool value received from the device. Read this if the <see cref="P:Crestron.SimplSharp.ExtendedServiceEventArgs.Type"/> member is set to <see cref="F:Crestron.SimplSharp.eExtendedServiceEventType.Bool"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceEventArgs.StringValue">
            <summary>
            New string value received from the device. Read this if the <see cref="P:Crestron.SimplSharp.ExtendedServiceEventArgs.Type"/> member is set to <see cref="F:Crestron.SimplSharp.eExtendedServiceEventType.String"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceEventArgs.UShortValue">
            <summary>
            New ushort value received from the device. Read this if the <see cref="P:Crestron.SimplSharp.ExtendedServiceEventArgs.Type"/> member is set to <see cref="F:Crestron.SimplSharp.eExtendedServiceEventType.Ushort"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceEventArgs.IncomingStringEncoding">
            <summary>
            Incoming string encoding type of the new string value received. 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.eExtendedServiceEventType">
            <summary>
            Enumeration to describe the various types of information an Extended Service Device can receive.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eExtendedServiceEventType.NA">
            <summary>
            No information.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eExtendedServiceEventType.Online">
            <summary>
            The value of the <see cref="P:Crestron.SimplSharp.ExtendedServiceDevice.IsOnline"/> member has changed for this device.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eExtendedServiceEventType.String">
            <summary>
            A new string value has been received. Read the <see cref="P:Crestron.SimplSharp.ExtendedServiceEventArgs.StringValue"/> member.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eExtendedServiceEventType.Ushort">
            <summary>
            A new ushort value has been received. Read the <see cref="P:Crestron.SimplSharp.ExtendedServiceEventArgs.UShortValue"/> member.
            <para>This type currently is not supported.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eExtendedServiceEventType.Bool">
            <summary>
            A new bool value has been received. Read the <see cref="P:Crestron.SimplSharp.ExtendedServiceEventArgs.BoolValue"/> member.
            <para>This type currently is not supported.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceDevGroup">
            <summary>
            Class of Extended Service Device Group
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.#ctor(System.UInt32)">
            <summary>
            Extended Service Device Group Constructor.
            </summary>
            <param name="paramID">ID of this device group.</param>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.AddExServiceDevice(Crestron.SimplSharp.ExtendedServiceDevice)">
            <summary>
            Add an extended service device to the entry.
            </summary>
            <param name="dev"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.RemoveExServiceDevice(Crestron.SimplSharp.ExtendedServiceDevice)">
            <summary>
            Remove an extended service device.
            </summary>
            <param name="dev"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.Find1stDeviceByServiceType(Crestron.SimplSharp.eCrestronExtendedService)">
            <summary>
            Find first device by the service type in device group.
            </summary>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.NotifyDevicesByServiceType(Crestron.SimplSharp.eCrestronExtendedService,Crestron.SimplSharp.ExtendedServiceEventArgs,System.Boolean)">
            <summary>
            Notify the devices which registered with this service in the device group.
            </summary>
            <param name="serviceType"></param>
            <param name="arg"></param>
            <param name="online"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.SetDevicesOffline">
            <summary>
            Set the device in the group offline.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.Shutdown">
            <summary>
             Method to shutdown and cleanup
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.PostIncomingDataMsg(Crestron.SimplSharp.EX_SERVICE_DATA_MSG)">
            <summary>
            Post the incoming service data message to the user device group receiving queue.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.AssembleFullDataMsgAndPostIt(System.UInt32,System.Byte[])">
            <summary>
            Assemble a full end-user message to post it to the user device group.
            </summary>
            <param name="serviceType">This is the agreed upon service number to include in the ExService device packet. </param>
            <param name="cresdata">A cresnet packet data array.</param>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.SetString(System.Byte[],System.UInt32,System.UInt32,Crestron.SimplSharp.ExtendedServiceDevGroup.eStringEncodingFlags)">
            <summary>
            Creates a string based on the data and encoding from the packet.
            </summary>
            <param name="data">The byte array that contains the string data.</param>
            <param name="index">The index in the array for starting decoding.</param>
            <param name="Length">Length of the string in the data array to be decoded.</param>
            <param name="encodingFlags">Encoding flags as specified by the packet.</param>
            <returns>Decoded string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.DataPumpThreadFunction">
            <summary>
            Running on a receive thread and pump the incoming data to the devices with the same IPID
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceDevGroup.eventForDevice(Crestron.SimplSharp.EX_SERVICE_DATA_MSG,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="serviceData"></param>
            <param name="online"></param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceDevGroup.eStringEncodingFlags">
            <summary>
            String encoding flags for a type 15h/34h packet: xxx###xx
            This is defined in SimplSharpPro. But we cannont use it here.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceDevGroup.eStringEncodingFlags.eEncodingASCII">
            <summary>
            ASCII (Single Byte) encoding in a packet has flags of xxx000xx
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceDevGroup.eStringEncodingFlags.eEncodingUTF16">
            <summary>
            UTF-16 encoding in a packet has flags of xxx001xx
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceDevGroup.eStringEncodingFlags.eEncodingUTF8">
            <summary>
            UTF-8 encoding in a packet has flags of xxx010xx
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceDevGroup.eInboundTextModes">
            <summary>
            Enum for the inbound text modes in type 0x34 packet, from the flags byte of the packet:  xxxxxx##
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceDevGroup.eInboundTextModes.e_InboundTextModeAppendToBuffer">
            <summary>
            Append incoming data to the buffer
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceDevGroup.eInboundTextModes.e_InboundTextModeClear">
            <summary>
            Clear any previous data - start of new data
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceDevGroup.eInboundTextModes.e_InboundTextModeEnd">
            <summary>
            Append incoming data to the buffer but the end bit is set
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceDevGroup.eInboundTextModes.e_InboundTextModeClearAndEnd">
            <summary>
            Clear any previous data - this is the whole data
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceBackend">
            <summary>
            Class to allow user subscrib Extended Service via ExService Device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.Initialize">
            <summary>
            Initialize the extended service backend class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.Shutdown">
            <summary>
            Shut down the extended service backend.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.CrestronEnvironment_ProgramStatusEventHandler(Crestron.SimplSharp.eProgramStatusEventType)">
            <summary>
            Stop the Ex-service backend when the program stops.
            </summary>
            <param name="programEventType"></param>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.ConvertPointerToCIPDataMsg">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.ConvertPointerToCIPRequestMsg">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.ConvertPointerToCIPStatusMsg">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.Start(System.UInt32)">
            <summary>
            Start the ex-service backend (set up R/W msg queues) by the user device once initialized.
            And tell CIP we support ex-service.
            </summary>
            <param name="ipID">IPID of the device starts the backend.</param>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.SaveToActiveServiceList(Crestron.Infrastructure.EX_SERVICE_REQUEST)">
            <summary>
            Save the service request which is granted for the service from
            application.
            </summary>
            <param name="requestGranted">An request which is granted to be served by the application.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.RemoveFromActiveServiceList(System.UInt32,System.UInt32)">
            <summary>
            Remove a service with given IPID and service type from the active list.
            </summary>
            <param name="ipID"></param>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.FindServiceFromActiveServiceList(System.UInt32,System.UInt32)">
            <summary>
            Find a service with given IPID and service type from the active list and return
            a "true" if find it.
            </summary>
            <param name="ipID"></param>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.AddDeviceByID(Crestron.SimplSharp.ExtendedServiceDevice,System.UInt32)">
            <summary>
            Add an extended service device with given IPID.
            </summary>
            <param name="dev"></param>
            <param name="ipID"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.FindDeviceGroupByID(System.UInt32)">
            <summary>
            Find a device group by a given IPID.
            </summary>
            <param name="ipID"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.GetDataArrayFromDataMsg(Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_DATA_MESSAGE_STRUCT)">
            <summary>
            Get the data packet array from extended service interface data message.
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.ServiceSupported(System.UInt32)">
            <summary>
            Check it the requested service is supported.
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.RequestValid(Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_REQUEST_MESSAGE_STRUCT)">
            <summary>
            Check if the remote device's request is valid.
            The CIP layer could do some preliminary check on the request but
            the application will make the final decision here.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.ServiceResponseField(System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="ipId"></param>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.SendData(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Byte[],Crestron.SimplSharp.CrestronStringEncoding)">
            <summary>
            Send data to remote service provider via CIP layer.
            </summary>
            <param name="ipID">remote device's IPID</param>
            <param name="msgType">message type</param>
            <param name="serviceType">service type</param>
            <param name="channel">channel number</param>
            <param name="dataToSend">data to send</param>
            <param name="encoding">Outbound string encoding format</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.SendResponse(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Send response message to CIP.
            </summary>
            <param name="ipID"></param>
            <param name="serviceType"></param>
            <param name="responseField"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.SendStatus(System.UInt32,System.UInt32,Crestron.Infrastructure.EX_SERVICE_INTERFACE_STATUS_TYPES)">
            <summary>
            Send a status message to CIP layer.
            </summary>
            <param name="ipID"></param>
            <param name="serviceType"></param>
            <param name="statusType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.ExtendedServiceBackend.BuildSend_34hPacketToCIP(System.UInt32,System.UInt32,System.UInt32,System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronStringEncoding,System.Byte)">
            <summary>
            Build an internal type 0x34 cresnet packet and send it to CIP as an ex-service data message.
            </summary>
            <param name="ipID">Device IPID.</param>
            <param name="serviceType">service type</param>
            <param name="channel">channel number</param>
            <param name="dataToSend">the whole user message to send in byte array.</param>
            <param name="offset">the offset in the byte array to send with the current cresnet packet.</param>
            <param name="count">the count of bytes to send with the current cresnet packet.</param>
            <param name="encoding">Outbound string encoding format.</param>
            <param name="TextAppendModeFlags">the text append mode flag of current cresnet packet.</param>
            <returns></returns>
        </member>
        <member name="P:Crestron.SimplSharp.ExtendedServiceBackend.ApplicationId">
            <summary>
            The property to report application Id.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceBackend.eStringEncodingFlags">
            <summary>
            String encoding flags for a type 15h/34h packet: xxx###xx
            This is defined in SimplSharpPro. But we cannont use it here.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eStringEncodingFlags.eEncodingASCII">
            <summary>
            ASCII (Single Byte) encoding in a packet has flags of xxx000xx
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eStringEncodingFlags.eEncodingUTF16">
            <summary>
            UTF-16 encoding in a packet has flags of xxx001xx
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eStringEncodingFlags.eEncodingUTF8">
            <summary>
            UTF-8 encoding in a packet has flags of xxx010xx
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModeBits">
            <summary>
            Bits for manipulating the flags byte of a type 15h or 34h packet.
            This is defined in SimplSharpPro. But we cannont use it here.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModeBits.e_TextAppendNone">
            <summary>
            No append mode
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModeBits.e_TextAppendStartOfField">
            <summary>
            Bit (lsb) high if Start of field.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModeBits.e_TextAppendEndOfField">
            <summary>
            Bit 1 high if End of field.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModes">
            <summary>
            Modes for specifying how text should be appended.
            *** If we ever want to let users split strings up manaully, this needs to be exposed as public.
            This is defined in SimplSharpPro. But we cannont use it here.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModes.e_FirstString">
            <summary>
            Used when someone wants to send multiple strings (at least 2) and this is the first one.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModes.e_ContinueOnCurrentLine">
            <summary>
            Used to continue on the current line, when this is the 2nd string of at least 3 strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModes.e_ContinueOnNextLine">
            <summary>
            Used to continue on the next line, when this is the 2nd string of at least 3 strings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModes.e_LastStringOnCurrentLine">
            <summary>
            Used to send the last string in a sequence of at least 2 strings.  The string will appear appended
            to the end of the previously sent string.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModes.e_LastStringOnNextLine">
            <summary>
            Used to send the last string in a sequence of at least 2 strings.  The string will appear on the next line.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ExtendedServiceBackend.eOutboundTextModes.e_SingleString">
            <summary>
            This is used to send an entire string in one shot.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.SshCommand">
            <summary>
            Represents SSH command that can be executed.
            </summary>
            <summary>
            Represents SSH command that can be executed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.#ctor(Crestron.SimplSharp.Ssh.Session,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="commandText">The command text.</param>
            <exception cref="T:System.ArgumentNullException">Either <paramref name="session"/>, <paramref name="commandText"/> or <paramref name="encoding"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.BeginExecute">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">Invalid operation.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">Operation has timed out.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.BeginExecute(System.AsyncCallback)">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">Invalid operation.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">Operation has timed out.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.BeginExecute(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">Invalid operation.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">Operation has timed out.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.BeginExecute(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous command execution. 22
            </summary>
            <param name="commandText">The command text.</param>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.EndExecute(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous command execution to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>Command execution result.</returns>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.Execute">
            <summary>
            Executes command specified by <see cref="P:Crestron.SimplSharp.Ssh.SshCommand.CommandText"/> property.
            </summary>
            <returns>Command execution result</returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.CancelAsync">
            <summary>
            Cancels command execution in asynchronous scenarios. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.Execute(System.String)">
            <summary>
            Executes the specified command text.
            </summary>
            <param name="commandText">The command text.</param>
            <returns>Command execution result</returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.WaitHandle(System.Threading.WaitHandle)">
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">Command '{0}' has timed out.</exception>
            <remarks>The actual command will be included in the exception message.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshCommand.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshCommand.CommandText">
            <summary>
            Gets the command text.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshCommand.CommandTimeout">
            <summary>
            Gets or sets the command timeout.
            </summary>
            <value>
            The command timeout.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshCommand.ExitStatus">
            <summary>
            Gets the command exit status.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshCommand.OutputStream">
            <summary>
            Gets the output stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshCommand.ExtendedOutputStream">
            <summary>
            Gets the extended output stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshCommand.Result">
            <summary>
            Gets the command execution result.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshCommand.Error">
            <summary>
            Gets the command execution error.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpListDirectoryAsyncResult">
            <summary>
            Encapsulates the results of an asynchronous directory list operation.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.AsyncResult`1">
            <summary>
            Base class to encapsulates the results of an asynchronous operation that returns result.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.AsyncResult">
            <summary>
            Base class to encapsulates the results of an asynchronous operation.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.IAsyncResult">
            <summary>
            Represents the status of an asynchronous operation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.IAsyncResult.InnerObject">
            <summary>
            Inner object of the IAsyncResult
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.IAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.IAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a Crestron.SimplSharp.CrestronIO.CEvent that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.IAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.IAsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AsyncResult.#ctor(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.AsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)">
            <summary>
            Marks asynchronous operation as completed.
            </summary>
            <param name="exception">The exception.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AsyncResult.EndInvoke">
            <summary>
            Waits until the asynchronous operation completes, and then returns. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AsyncResult.InnerObject">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AsyncResult.EndInvokeCalled">
            <summary>
            Gets or sets a value indicating whether EndInvoke has been called on the current AsyncResult.
            </summary>
            <value>
            	<c>true</c> if EndInvoke has been called on the current AsyncResult; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AsyncResult`1.#ctor(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.AsyncResult`1"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AsyncResult`1.SetAsCompleted(`0,System.Boolean)">
            <summary>
            Marks asynchronous operation as completed.
            </summary>
            <param name="result">The result.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AsyncResult`1.EndInvoke">
            <summary>
            Waits until the asynchronous operation completes, and then returns the value generated by the asynchronous operation. 
            </summary>
            <returns>Invocation result</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpListDirectoryAsyncResult.#ctor(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpListDirectoryAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpListDirectoryAsyncResult.Update(System.Int32)">
            <summary>
            Updates asynchronous operation status information.
            </summary>
            <param name="filesRead">The files read.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpListDirectoryAsyncResult.FilesRead">
            <summary>
            Gets the number of files read so far.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.RsaKey">
            <summary>
            Contains RSA private and public key
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.RsaKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.RsaKey"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.RsaKey.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.RsaKey"/> class.
            </summary>
            <param name="data">DER encoded private key data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.RsaKey.#ctor(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.RsaKey"/> class.
            </summary>
            <param name="modulus">The modulus.</param>
            <param name="exponent">The exponent.</param>
            <param name="d">The d.</param>
            <param name="p">The p.</param>
            <param name="q">The q.</param>
            <param name="inverseQ">The inverse Q.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.RsaKey.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.RsaKey.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.Modulus">
            <summary>
            Gets the modulus.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.Exponent">
            <summary>
            Gets the exponent.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.D">
            <summary>
            Gets the D.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.P">
            <summary>
            Gets the P.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.Q">
            <summary>
            Gets the Q.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.DP">
            <summary>
            Gets the DP.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.DQ">
            <summary>
            Gets the DQ.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.InverseQ">
            <summary>
            Gets the inverse Q.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.KeyLength">
            <summary>
            Gets the length of the key.
            </summary>
            <value>
            The length of the key.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.DigitalSignature">
            <summary>
            Gets the digital signature.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.RsaKey.Public">
            <summary>
            Gets or sets the public.
            </summary>
            <value>
            The public.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo">
            <summary>
            Provides connection information when private key authentication method is used
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="keyFiles">Connection key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="keyFiles">Connection key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.PrivateKeyConnectionInfo.KeyFiles">
            <summary>
            Gets the key files used for authentication.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.ServiceName">
            <summary>
            Specifies list of supported services
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.ServiceName.UserAuthentication">
            <summary>
            ssh-userauth
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.ServiceName.Connection">
            <summary>
            ssh-connection
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo">
            <summary>
            Represents "xon-xoff" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo.NAME">
            <summary>
            Channel request type
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.XonXoffRequestInfo.ClientCanDo">
            <summary>
            Gets or sets a value indicating whether client can do.
            </summary>
            <value>
              <c>true</c> if client can do; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo">
            <summary>
            Represents "x11-req" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.#ctor(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> it is a single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.IsSingleConnection">
            <summary>
            Gets or sets a value indicating whether it is a single connection.
            </summary>
            <value>
            	<c>true</c> if it is a single connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.AuthenticationProtocol">
            <summary>
            Gets or sets the authentication protocol.
            </summary>
            <value>
            The authentication protocol.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.AuthenticationCookie">
            <summary>
            Gets or sets the authentication cookie.
            </summary>
            <value>
            The authentication cookie.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.X11ForwardingRequestInfo.ScreenNumber">
            <summary>
            Gets or sets the screen number.
            </summary>
            <value>
            The screen number.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo">
            <summary>
            Represents "pty-req" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.#ctor(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32})">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.EnvironmentVariable">
            <summary>
            Gets or sets the environment variable.
            </summary>
            <value>
            The environment variable.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.Columns">
            <summary>
            Gets or sets the columns.
            </summary>
            <value>
            The columns.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.Rows">
            <summary>
            Gets or sets the rows.
            </summary>
            <value>
            The rows.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.PixelWidth">
            <summary>
            Gets or sets the width of the pixel.
            </summary>
            <value>
            The width of the pixel.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.PixelHeight">
            <summary>
            Gets or sets the height of the pixel.
            </summary>
            <value>
            The height of the pixel.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.PseudoTerminalRequestInfo.TerminalModeValues">
            <summary>
            Gets or sets the terminal mode.
            </summary>
            <value>
            The terminal mode.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.SessionChannelOpenInfo">
            <summary>
            Used to open "session" channel type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.SessionChannelOpenInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.SessionChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_BANNER message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage.Message">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod">
            <summary>
            Provides functionality to perform keyboard interactive authentication.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.AuthenticationMethod">
            <summary>
            Base class for all supported authentication methods
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.AuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.AuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.AuthenticationMethod.Authenticate(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>Result of authentication  process.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.AuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.AuthenticationMethod.Username">
            <summary>
            Gets connection username.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.AuthenticationMethod.ErrorMessage">
            <summary>
            Gets the authentication error message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.AuthenticationMethod.AllowedAuthentications">
            <summary>
            Gets list of allowed authentications.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod.Authenticate(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>Result of authentication  process.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.KeyboardInteractiveAuthenticationMethod.AuthenticationPrompt">
            <summary>
            Occurs when server prompts for more authentication information.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ScpUploadEventArgs">
            <summary>
            Provides data for the Uploading event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ScpUploadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpUploadEventArgs"/> class.
            </summary>
            <param name="filename">The uploaded filename.</param>
            <param name="size">The the uploaded file size.</param>
            <param name="uploaded">The number of uploaded bytes so far.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ScpUploadEventArgs.Filename">
            <summary>
            Gets the uploaded filename.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ScpUploadEventArgs.Size">
            <summary>
            Gets the uploaded file size.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ScpUploadEventArgs.Uploaded">
            <summary>
            Gets number of uploaded bytes so far.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs">
            <summary>
            Provides data for the HostKeyReceived event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs.#ctor(Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs"/> class.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs.CanTrust">
            <summary>
            Gets or sets a value indicating whether host key can be trusted.
            </summary>
            <value>
              <c>true</c> if host key can be trusted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs.HostKey">
            <summary>
            Gets the host key.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs.HostKeyName">
            <summary>
            Gets the host key name.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs.FingerPrint">
            <summary>
            Gets the finger print.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.HostKeyEventArgs.KeyLength">
            <summary>
            Gets the length of the key in bits.
            </summary>
            <value>
            The length of the key in bits.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Channels.Channel">
            <summary>
            Represents base class for SSH channel implementations.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Channels.Channel"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.Initialize(Crestron.SimplSharp.Ssh.Session,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes the channel.
            </summary>
            <param name="session">The session.</param>
            <param name="serverChannelNumber">The server channel number.</param>
            <param name="windowSize">Size of the window.</param>
            <param name="packetSize">Size of the packet.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.SendEof">
            <summary>
            Sends the SSH_MSG_CHANNEL_EOF message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.Close">
            <summary>
            Closes the channel.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnOpen(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenInfo)">
            <summary>
            Called when channel need to be open on the client.
            </summary>
            <param name="info">Channel open information.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnWindowAdjust(System.UInt32)">
            <summary>
            Called when channel window need to be adjust.
            </summary>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnExtendedData(System.Byte[],System.UInt32)">
            <summary>
            Called when channel extended data is received.
            </summary>
            <param name="data">The data.</param>
            <param name="dataTypeCode">The data type code.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnClose">
            <summary>
            Called when channel is closed by the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnRequest(Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo)">
            <summary>
            Called when channel request received.
            </summary>
            <param name="info">Channel request information.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.SendMessage(Crestron.SimplSharp.Ssh.Messages.Message)">
            <summary>
            Sends SSH message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.SendMessage(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage)">
            <summary>
            Send message to open a channel.
            </summary>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.SendMessage(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage)">
            <summary>
            Sends close channel message to the server
            </summary>
            <param name="message">Message to send.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.SendMessage(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage)">
            <summary>
            Sends channel data message to the servers.
            </summary>
            <remarks>This method takes care of managing the window size.</remarks>
            <param name="message">Channel data message.</param>        
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.SendMessage(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage)">
            <summary>
            Sends channel extended data message to the servers.
            </summary>
            <remarks>This method takes care of managing the window size.</remarks>
            <param name="message">Channel data message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for the handle to be signaled or for an error to occurs.
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.Channel.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.Channels.Channel"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.LocalChannelNumber">
            <summary>
            Gets the local channel number.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.RemoteChannelNumber">
            <summary>
            Gets the remote channel number assigned by the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.LocalWindowSize">
            <summary>
            Gets the size of the local window.
            </summary>
            <value>
            The size of the local window.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.ServerWindowSize">
            <summary>
            Gets or sets the size of the server window.
            </summary>
            <value>
            The size of the server window.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.PacketSize">
            <summary>
            Gets the size of the packet.
            </summary>
            <value>
            The size of the packet.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.IsOpen">
            <summary>
            Gets a value indicating whether this channel is open.
            </summary>
            <value>
              <c>true</c> if this channel is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.OpenFailed">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.DataReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.ExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.EndOfData">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.Closed">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.RequestReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.RequestSuccessed">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Channels.Channel.RequestFailed">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage"/> message received
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.IsConnected">
            <summary>
            Gets a value indicating whether the session is connected.
            </summary>
            <value>
            	<c>true</c> if the session is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.Channel.SessionSemaphore">
            <summary>
            Gets the session semaphore to control number of session channels
            </summary>
            <value>The session semaphore.</value>
        </member>
        <member name="T:Crestron.SimplSharp.JsonDb">
            <summary>
            Provides an interface to the control system's JSON Database.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.#cctor">
            <summary>
            Creates an interface to the native JsonDb for this process.
            </summary>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.SetLoggingLevel(Crestron.SimplSharp.JsonDb.eLoggingLevel)">
            <summary>
            Set the logging level of libraries this class interfaces with. 
            </summary>
            <param name="loggingLevel">Logging level to set for the internal libraries this class consumes.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Logging level parameter is not one of the levels defined in <see cref="T:Crestron.SimplSharp.JsonDb.eLoggingLevel"/>.</exception>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.Set(System.String)">
            <summary>
            Set the value of a JSON object in the database.
            <para>The is the same as calling <see cref="M:Crestron.SimplSharp.JsonDb.Set(System.String,System.Boolean,Crestron.SimplSharp.JsonDb.eSaveType)"/>, with partial set to true and <see cref="F:Crestron.SimplSharp.JsonDb.eSaveType.DataStored"/> as parameters.</para>
            </summary>
            <param name="json">JSON object to be stored.</param> 
            <returns>See <see cref="T:Crestron.SimplSharp.JsonDb.eJsonDbResult"/></returns>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.Set(System.String,System.Boolean,Crestron.SimplSharp.JsonDb.eSaveType)">
            <summary>
            Set the value of a JSON object in the database.
            </summary>
            <param name="json">JSON object to be stored.</param>
            <param name="partial">false: entire JSON object will be written, overwriting any existing values;
            <para> true: update existing object with members in the JSON being written. (typical)</para>
            </param>
            <param name="save">Indicates if the json should be stored non-volatilely. Typically set to <see cref="F:Crestron.SimplSharp.JsonDb.eSaveType.DataStored"/>.</param>
            <returns>See <see cref="T:Crestron.SimplSharp.JsonDb.eJsonDbResult"/></returns>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.StringToHGlobalUTF8(System.String,System.IntPtr@)">
            <summary>
            Takes a string and converts it to UTF-8 and copies it to an IntPtr w/null termination.
            </summary>
            <param name="s"></param>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.Get(System.String,Crestron.SimplSharp.JsonDb.eJsonDbResult@)">
            <summary>
            Retrieve a data item from the database.
            <para>This would be the same as calling <see cref="M:Crestron.SimplSharp.JsonDb.Get(System.String,System.Boolean,Crestron.SimplSharp.JsonDb.eJsonDbResult@)"/> with a false for the second parameter.</para>
            </summary>
            <param name="jsonObj">JSON which specifies which item to get.</param>
            <param name="result">The return code for the request.</param>
            <returns>The JSON of the data item requested, if it was found.</returns>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.Get(System.String,System.Boolean,Crestron.SimplSharp.JsonDb.eJsonDbResult@)">
            <summary>
             Retrieve a data item from the database.
            </summary>
            <param name="jsonObj">JSON which specifies which item to get.</param>
            <param name="partial">When set false, the entire json object (full hierarchy) will be retrieved; otherwise only the matching sub-object will be returned.</param>
            <param name="result">The return code for the request.</param>
            <returns>The JSON of the data item requested. On failure, <see cref="F:System.String.Empty"/> is returned.</returns>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.Subscribe(System.String,Crestron.SimplSharp.JsonDb.JsonDbCallback)">
            <summary>
            Method to allow for subscriptions to changes made to JSON objects in the database.
            <para>Adjust the setting <see cref="M:Crestron.SimplSharp.JsonDb.IgnoreOwnSets(System.Boolean)"/> as needed for this process.</para>
            </summary>
            <param name="subscription">JSON object to subscribe to in the database.</param>
            <param name="callback">Callback that will be triggered when a change is received from the database.</param>
            <returns>See <see cref="T:Crestron.SimplSharp.JsonDb.eJsonDbResult"/></returns>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.Unsubscribe(System.String)">
            <summary>
            Method to remove the subscription for object changes in the database.
            </summary>
            <param name="json">JSON object to unsubscribe from.</param>
            <returns>See <see cref="T:Crestron.SimplSharp.JsonDb.eJsonDbResult"/></returns>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.IgnoreOwnSets(System.Boolean)">
            <summary>
            Method to set the database to not trigger subscriptions for objects when the set comes from this process.
            </summary>
            <param name="ignore">false: Trigger callback methods for sets issued from this process;
            <para> true:  Ignore sets to database objects made from this process.</para></param>
            <returns>See <see cref="T:Crestron.SimplSharp.JsonDb.eJsonDbResult"/></returns>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.JsonDb.Shutdown">
            <summary>
            Method to force close the JsonDb connection for this process. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.JsonDb.Supported">
            <summary>
            Returns True if JsonDb is supported on this firmware.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.JsonDb.JsonDbCallback">
            <summary>
            Delegate for subscribing to data item updates
            </summary>
            <param name="json">The new value</param>
        </member>
        <member name="T:Crestron.SimplSharp.JsonDb.eSaveType">
            <summary>
            Used in <see cref="M:Crestron.SimplSharp.JsonDb.Set(System.String,System.Boolean,Crestron.SimplSharp.JsonDb.eSaveType)"/> to make data persistant or not
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eSaveType.NotStored">
            <summary>
            New value will be published to subscribers but not stored
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eSaveType.DataStored">
            <summary>
            New value will be published to subscribers and stored non-volatilely
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.JsonDb.eJsonDbResult">
            <summary>
            Dstabase operation results enumeration.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureUnspecified">
            <summary>
            General error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureInvalidKey">
            <summary>
            Key is invalid or Multiple Subscriptions to the same JSON object attempted.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureValueTooBig">
            <summary>
            Buffer is not big enough
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureInvalidJson">
            <summary>
            Invalid JSON
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureTimeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureNotImplemented">
            <summary>
            Feature not implemented
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureNotConnected">
            <summary>
            Not connected. The system will attempt to reconnect to the database. 
            <para>After receiving this error, re-subscribe to JsonDb all prior subscriptions.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureSetProxyError">
            <summary>
            Set proxy error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureJsonSet">
            <summary>
            Json set failed.  The system will attempt to reconnect to the database. 
            <para>After receiving this error, re-subscribe to JsonDb all prior subscriptions.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureJsonPublish">
            <summary>
            Json publish failed.  The system will attempt to reconnect to the database. 
            <para>After receiving this error, re-subscribe to JsonDb all prior subscriptions.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureNullReply">
            <summary>
            No response from the database.  The system will attempt to reconnect to the database. 
            <para>After receiving this error, re-subscribe to JsonDb all prior subscriptions.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureErrorReply">
            <summary>
            Error reply
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureUnexpectedReplyType">
            <summary>
            Unexpected reply type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureNullObject">
            <summary>
            Null object
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eJsonDbResult.FailureGetProxyError">
            <summary>
            Get proxy error
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.JsonDb.eLoggingLevel">
            <summary>
            Enumeration to define the supported logging levels of the database.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eLoggingLevel.Error">
            <summary>
            Show error messages.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eLoggingLevel.Warning">
            <summary>
            Show waring and error messages.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eLoggingLevel.Notice">
            <summary>
            Show error, warning, and notice messages.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eLoggingLevel.Info">
            <summary>
            Show error, warning, notice, and info messages.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.JsonDb.eLoggingLevel.Ok">
            <summary>
            Show all error types.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.OnHttpStreamDataHandler">
            <summary>
            OnHttpRequestHandler Delegate 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsClient">
            <summary>
            The HttpsClient class represents a client connection to an HTTPS Server.
            HttpsClient will automatically follow redirects. 
            Automatic redirects are configurable via the AllowAutoRedirect property.
            To specify the maximum number of redirects, change the MaximumAutomaticRedirections property to the desired value.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.#ctor">
            <summary>
            Creates a new instance of the HttpsClient class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Finalize">
            <summary>
            Destructs the HTTPS client and frees unmanaged resourses
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.TryProcessBusy">
            <summary>
            Checks if process is busy and locks it if it is not
            </summary>
            <returns>true if the process is already busy (failed to lock it). 
            false on success setting <see cref="P:Crestron.SimplSharp.Net.Https.HttpsClient.ProcessBusy"/> to true</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.SetClientCertificate(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Sets Client Security Certificate associated with this object.
            </summary>
            <param name="cert">The client x509 certificate object</param>
            <exception cref="T:System.NotSupportedException">This method is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
            <remarks>
            <see cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate"/> object does not contain the corresponding private key so it must be provided using a SetClientPrivateKey method.
            This method requires firmware version 1.011.xxxx or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.SetClientCertificate(System.Byte[])">
            <summary>
            Sets Client Security Certificate associated with this object.
            </summary>
            <param name="cert">The client certificate in binary (DER) format</param>
            <exception cref="T:System.NotSupportedException">This method is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
            <remarks>
            The client certificate in binary (DER) format does not contain the corresponding private key so that it must be provided using a SetClientPrivateKey method.
            This method requires firmware version 1.011.xxxx or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.SetClientPrivateKey(System.Byte[])">
            <summary>
            Sets the Private Key corresponding to the Client Certificate
            </summary>
            <param name="key">The private key in binary (DER) format</param>
            <exception cref="T:System.NotSupportedException">This method is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
            <remarks>
            This method requires firmware version 1.011.xxxx or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.SetClientCertificate(System.String,System.String,Crestron.SimplSharp.Net.Https.HttpsClient.ClientCertificateType)">
            <summary>
            Sets Client Security Certificate associated with this object.
            </summary>
            <param name="filepath">Path to the certificate file. If null or empty, the Machine certificate will be used and type is ignored.</param>
            <param name="pass">Password if the certificate is encrypted</param>
            <param name="type">The type (format) of the file</param>
            <exception cref="T:System.NotSupportedException">This method is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.SetClientPrivateKey(System.String,System.String,Crestron.SimplSharp.Net.Https.HttpsClient.ClientKeyType)">
            <summary>
            Sets the Private Key corresponding to the Client Certificate provided
            </summary>
            <param name="filepath">Path to the Private Key file.
            If the path is null or empty, type parameter is ignored and the Machine certificate's private key will be used.
            The latter requires firmware version 1.011.xxxx or later.
            </param>
            <param name="pass">Password if the key is encrypted</param>
            <param name="type">The type (format) of the file</param>
            <exception cref="T:System.NotSupportedException">This method is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
            Error while processing P12-type file.
            </exception>
            <remarks>
            If type is <see cref="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientKeyType.P12"/>, this method requires firmware version 1.011.xxxx or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Get(System.String)">
            <summary>
            Retrieves an HTTPS document (as a string) from the provided URL using the GET HTTPS command.
            </summary>
            <param name="aUrl">URL as String</param>
            <returns>HTTPs document as String</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetAsync(System.String,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallback)">
            <summary>
            Retrieves an HTTPS document from the provided URL using the GET HTTPS command.
            </summary>
            <param name="aUrl">Url</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetAsyncEx(System.String,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallbackEx,System.Object)">
            <summary>
            Retrieves an HTTPS document from the provided URL using the GET HTTPS command.
            </summary>
            <param name="aUrl">Url</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.RemoveThread(System.Threading.Thread)">
            <summary>
            Remove Thread from active list
            </summary>
            <param name="t">The thread to remove</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.AddThread(System.Threading.Thread)">
            <summary>
            Add Thread to active list
            </summary>
            <param name="t">The thread to add</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Get(System.String,System.Text.Encoding)">
            <summary>
            Retrieves an HTTPS document (as a string) in the specified encoding from the provided URL using the GET HTTPs command.
            </summary>
            <param name="aUrl">URL as String</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <returns>HTTPS document as string </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetAsync(System.String,System.Text.Encoding,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallback)">
            <summary>
            get(url) with callback
            </summary>
            <param name="aUrl">String containing the URL of the resource to get</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetAsyncEx(System.String,System.Text.Encoding,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallbackEx,System.Object)">
            <summary>
            get(url) with callback
            </summary>
            <param name="aUrl">String containing the URL of the resource to get</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetBytes(System.String)">
            <summary>
            Retrieves binary data from the provided URL.
            </summary>
            <param name="aUrl">URL as String</param>
            <returns>byte array of binary data or null</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetBytesAsync(System.String,Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallback)">
            <summary>
            GetBytes with callback
            </summary>
            <param name="aUrl">String containing the URL of the resource to get</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR"/> code.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetBytesAsyncEx(System.String,Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallbackEx,System.Object)">
            <summary>
            GetBytes with callback
            </summary>
            <param name="aUrl">String containing the URL of the resource to get</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <param name="paramUserObject">User specified object</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR"/> code.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetResponse(System.String)">
            <summary>
            This method is used internally by all other Get* methods of this class. 
            It creates and sends a GET HTTPs request to the server and returns a response.
            </summary>
            <param name="aUrl">URL as String</param>
            <returns>HttpsClient Response</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetResponseAsync(System.String,Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallback)">
            <summary>
             It creates and sends a GET HTTPs request to the server and the callback returns a response.
            </summary>
            <param name="aUrl">Url</param>
            <param name="OnTransferResponse">HTTPSClientResponseCallback</param>
            <returns>DISPATCHASYNC_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetResponseAsyncEx(System.String,Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallbackEx,System.Object)">
            <summary>
             It creates and sends a GET HTTPs request to the server and the callback returns a response.
            </summary>
            <param name="aUrl">Url</param>
            <param name="OnTransferResponse">HTTPSClientResponseCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.FgetFile(System.String,System.String)">
            <summary>
            Gets the file from the server and writes the data to lpath
            </summary>
            <param name="url">file source </param>
            <param name="lpath">file dest. </param>
            <returns>returns 0 if success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.FputFile(System.String,System.String)">
            <summary>
            Puts the file data to the server from the local machine
            </summary>
            <param name="url">file dest </param>
            <param name="lpath">file source. </param>
            <returns>returns 0 if success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.FpostFile(System.String,System.String)">
            <summary>
            Posts the file data to the server from the local machine
            </summary>
            <param name="url">file dest.</param>
            <param name="lpath">file source.</param>
            <returns>returns 0 if success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Post(System.String,System.Byte[])">
            <summary>
            Retrieves an HTTPs document (as a string) from the provided URL using the POST HTTPs command.
            </summary>
            <param name="aUrl">URL as String</param>
            <param name="aContent">string(UrlEncoded)</param>
            <returns>An HTTPS Document as a string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.PostAsync(System.String,System.Byte[],Crestron.SimplSharp.Net.Https.HTTPSClientStringCallback)">
            <summary>
            Retrieves an HTTPs document from the provided URL using the POST HTTPs command.
            </summary>
            <param name="aUrl">Url</param>
            <param name="aContent">byte array(UrlEncoded)</param>
            <param name="OnTransferResponse">HTTPSClientStringCallback</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR"/> code.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.PostAsyncEx(System.String,System.Byte[],Crestron.SimplSharp.Net.Https.HTTPSClientStringCallbackEx,System.Object)">
            <summary>
            Retrieves an HTTPs document from the provided URL using the POST HTTPs command.
            </summary>
            <param name="aUrl">Url</param>
            <param name="aContent">byte array(UrlEncoded)</param>
            <param name="OnTransferResponse">HTTPSClientStringCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR"/> code.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Post(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Retrieves an HTTPS document (as a string) from the provided Url using the POST HTTPs command.
            </summary>
            <param name="aUrl">URL as string(UrlEncoded)</param>
            <param name="aContent">Content Stream</param>
            <returns>An HTTPS Document as a string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.PostAsync(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallback)">
            <summary>
            Retrieves an HTTPS document from the provided Url using the POST HTTPs command.
            </summary>
            <param name="aUrl">Url</param>
            <param name="aContent">Crestron.SimplSharp.CrestronIO.Stream(UrlEncoded)</param>
            <param name="OnTransferResponse">HTTPSClientResponseCallback</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR"/> code.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.PostAsyncEx(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallbackEx,System.Object)">
            <summary>
            Retrieves an HTTPS document from the provided Url using the POST HTTPs command.
            </summary>
            <param name="aUrl">Url</param>
            <param name="aContent">Crestron.SimplSharp.CrestronIO.Stream(UrlEncoded)</param>
            <param name="OnTransferResponse">HTTPSClientResponseCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR"/> code.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Abort">
            <summary>
            Closes the currently open connection (if present).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.TryDispatch(Crestron.SimplSharp.Net.Https.HttpsClientRequest)">
            <summary>
            The core method of the HttpsClient class. 
            This method uses the HttpsClientRequest class to send messages to the server and the HttpsClientResponse to receive a server answer.
            </summary>
            <param name="aRequest">HttpsClient Request</param>
            <returns>HttpsClient Response</returns>
            <exception cref="T:Crestron.SimplSharp.Net.Https.HttpsException">Thrown if a HttpsClient exception occurs</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.TryDispatch(Crestron.SimplSharp.Net.Https.HttpsClientRequest,System.Boolean)">
            <summary>
            Internal logic to do the TryDispatch. Called by the 1 argument version, and internally called if redirect occurs with true for internalDispatch
            </summary>
            <param name="aRequest"></param>
            <param name="internalDispatch"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.GetNewHttpConnection(System.String)">
            <remarks>This method is not supported on Crestron server platform.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.BeginGetRequestStream(Crestron.SimplSharp.Net.Https.HttpsStreamRequestCallbackEx,Crestron.SimplSharp.Net.Https.HttpsClientRequest,System.Object)">
            <summary>
            Begins an asynchronous request for a Stream object to use to write data.
            </summary>
            <param name="callback">The AsyncCallback delegate</param>
            <param name="aRequest">The state object for this request</param>
            <param name="user">User defined object</param>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">Invalid operation</exception>
            <returns>updated request</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">Request must be in new request state</exception>
            <note>Your application cannot mix synchronous and asynchronous methods for a particular request.</note>
            <remarks>NOTE: This member function requires the use of facilities only available in firmware version 1.11 and higher.</remarks>
            <example>
               // Open an HTTP client
              HttpsClient client = new HttpsClient();
              // Make a CEevent to wait on.
              StreamAsync_Test allDone = new StreamAsync_Test();
              allDone.wait_for_response.Reset();
              // Create a new HttpsRequest object.
              HttpsRequest request = new HttpsRequest("https://www.contoso.com/example.aspx");
              request.ContentType = "application/x-www-form-urlencoded";
              // Set the Method property to 'POST' to post data to the URI.
              request.Method = "POST";
              // start the asynchronous operation
              request.BeginGetRequestStream(new HttpsStreamRequestCallbackEx(GetRequestStreamCallback), request, (object)allDone);
              // Keep the main thread from continuing while the asynchronous 
              // operation completes. A real world application 
              // could do something useful such as updating its user interface. 
              if (allDone.wait_for_response.Wait(30000))
                   ErrorLog.Notice("Received response");
              else
                   ErrorLog.Notice("No response");
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.EndGetRequestStream(Crestron.SimplSharp.Net.Https.HttpsClientRequest)">
            <summary>
            Supply the stream interface
            </summary>
            <param name="aRequest">The Http request object</param>
            <returns>The Input Stream</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">No BeginRequest</exception>
            <remarks>NOTE: This member function requires the use of facilities only available in firmware version 1.11 and higher.</remarks>
            <remarks>You must set the value of the ContentLength property before EndGetRequestStream.</remarks>
            <remarks>You must call the Stream.Close method to close the stream and release the connection for reuse. 
            Failure to close the stream causes your application to run out of connections.</remarks>
            <example> 
                           Example Request Handler CallBack
                           
            private static void GetRequestStreamCallback(HttpsClientRequest asynchronousResult, HTTPS_CALLBACK_ERROR error, object status)
               {
                   HttpsRequest request = asynchronousResult;
                   Console.WriteLine("Please enter the input data to be posted:");
                   string postData = Console.ReadLine();
                   // Convert the string into a byte array. 
                   byte[] byteArray = Encoding.UTF8.GetBytes(postData);
                   //Last chance for headers going out
                   request.Header.ContentType = "text/html";
                   request.Header.AddHeader(new HttpsHeader("Content-Length", postData.Length.ToString()));
                   // End the request operation
                   Stream postStream = request..ThisClient.EndGetRequestStream(asynchronousResult);
                   // Write to the request stream. 
                   postStream.Write(byteArray, 0, postData.Length); 
                   postStream.Close();
                   // Start the asynchronous operation to get the response.
                   request.BeginGetResponse(new HttpsStreamResponseCallbackEx(GetResponseCallback), request, status); 
               }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.BeginGetResponseStream(Crestron.SimplSharp.Net.Https.HttpsStreamResponseCallbackEx,Crestron.SimplSharp.Net.Https.HttpsClientRequest,System.Object)">
            <summary>
            Begins an asynchronous response for a Stream object to use to read data.
            </summary>
            <param name="callback">The AsyncCallback delegate</param>
            <param name="aRequest">The state object for this request</param>
            <param name="user">User defined object</param>
            <returns>An asynchronous request for a response.</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">No BeginRequest</exception>
            <remarks>NOTE: This member function requires the use of facilities only available in firmware version 1.11 and higher.</remarks>
            <remarks>The BeginGetResponse method starts an asynchronous request for a response from the Internet resource. 
            The asynchronous callback method uses the EndGetResponse method to return the actual WebResponse.</remarks>
            <example>
            // Start the asynchronous operation to get the response
            request.ThisClient.BeginGetResponseStream(new HttpsStreamResponseCallbackEx(GetResponseCallback), request, status);
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.EndGetResponseStream(Crestron.SimplSharp.Net.Https.HttpsClientRequest)">
            <summary>
            Ends an asynchronous request to an Internet resource
            </summary>
            <param name="aRequest">The AsyncCallback delegate</param>
            <returns>A WebResponse that contains the response from the Internet resource.</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">No BeginRequest</exception>
            <remarks>NOTE: This member function requires the use of facilities only available in firmware version 1.11 and higher.</remarks>
            <remarks>The EndGetResponse method completes an asynchronous request for an Internet resource that was started by calling the 
            BeginGetResponse method.
            Note: You must call the Close method to close the stream and release the connection. 
            Failure to do so may cause your application to run out of connections.
            </remarks>
            <example>
                           Example Response Handler CallBack
                            
            private static void GetResponseCallback(HttpsClientRequest asynchronousResult,HTTPS_CALLBACK_ERROR error, object status)
            {
            StreamReader streamRead;
            string responseString;
            Stream streamResponse;
            HttpsClientRequest request = asynchronousResult;
            
            // End the response
            HttpsClientResponse response = request.ThisClient.EndGetResponseStream(request);
            if (response.HasContentLength)
                {
                streamResponse = response.ContentStream;
                streamRead = new StreamReader(streamResponse);
                responseString = streamRead.ReadToEnd();
                Console.WriteLine(responseString);
                // Close the stream object
                streamResponse.Close();
                streamRead.Close();
                }
               // Release the HttpsResponse
               response.Dispose();
            }
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Dispatch(Crestron.SimplSharp.Net.Https.HttpsClientRequest)">
            <summary>
            One of the core methods of the HttpsClient class. This method uses the HttpsClientRequest class to send messages to the server and the HttpsClientResponse to receive server answers.
            Uses the TryDispatch method to send data and raises an HttpsException exception if any errors occurs.
            </summary>
            <param name="aRequest">HttpsClient Request</param>
            <returns>HttpsClient Response / null if no response</returns>
            <exception cref="T:Crestron.SimplSharp.Net.Https.HttpsException">Thrown if an HttpsClient exception occurs</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.DispatchAsync(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallback)">
            <summary>
            Launches a separate thread to make the request
            </summary>
            <param name="aRequest">HttpsClientRequest</param>
            <param name="OnTransferResponse">HTTPSClientResponseCallback</param>
            <returns>error status</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.DispatchAsyncEx(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallbackEx,System.Object)">
            <summary>
            Launches a separate thread to make the request
            </summary>
            <param name="aRequest">HttpsClientRequest</param>
            <param name="OnTransferResponse">HTTPSClientResponseCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>error status</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.DispatchStringAsync(Crestron.SimplSharp.Net.Https.HttpsClientRequest,System.Text.Encoding,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallback)">
            <summary>
            Launches the request that returns a string
            </summary>
            <param name="aRequest">client request</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value used to process the response.</param>
            <param name="OnTransferResponse">Callback Function</param>
            <returns>error status</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.DispatchStringAsyncEx(Crestron.SimplSharp.Net.Https.HttpsClientRequest,System.Text.Encoding,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallbackEx,System.Object)">
            <summary>
            Launches the request that returns a string
            </summary>
            <param name="aRequest">client request</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value used to process the response.</param>
            <param name="OnTransferResponse">Callback Function</param>
            <param name="paramUserObject">User specified object</param>
            <returns>error status</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.DispatchBytesAsync(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallback)">
            <summary>
            Launches the request that returns a byte array
            </summary>
            <param name="aRequest">client request</param>
            <param name="OnTransferResponse">callback function</param>
            <returns>error status</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.DispatchBytesAsyncEx(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallbackEx,System.Object)">
            <summary>
            Launches the request that returns a byte array
            </summary>
            <param name="aRequest">client request</param>
            <param name="OnTransferResponse">callback function</param>
            <param name="paramUserObject">User specified object</param>
            <returns>error status</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.ProcessInternalError(Crestron.SimplSharp.Net.Https.HttpsClientResponse)">
            <summary>
            Throws a HttpsException with the error message associated with the last client error code
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Dispose">
            <summary>
            Disposes the HttpsClient Connection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsClient.Dispose(System.Boolean)">
            <summary>
            Disposes of the current instance and releases all resources used by it.
            </summary>
            <param name="aDisposing">close connection</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.Version">
            <summary>
            Gets or sets the version identifier of the UserAgent. Can be used to mimic particular browsers like Internet Explorer 6.0
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.Url">
            <summary>
            Gets or sets the URL of the remote server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.Verbose">
            <summary>
            Set Logging to Verbose on/off
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.ProcessBusy">
            <summary>
            if using commands with callbacks check this busy flag before using another command.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.PeerVerification">
            <summary>
            Set Peer Verification on/off
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.HostVerification">
            <summary>
            Set Host Verification on/off
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.IncludeHeaders">
            <summary>
            Set IncludeHeaders in Response true/false
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.KeepAlive">
            <summary>
            Controls whether to use HTTPS Keep-Alive to reuse the connection Id. 
            If enabled (true) , will reused the connection ID for future requests. 
            If disabled, will create a new id for each request.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.UserObject">
            <summary>
            Gets the last user specified Object for the Async operations on this HTTP Client instance.
            The return value will evaluate to null if Async operations with the object parameter are not utilized.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.UserAgent">
            <summary>
            Gets or sets the identifier of the software being used to retrieve data via the URL. 
            Some custom HTTPS servers check this HTTPS header to provide content optimized for particular HTTPS browsers. 
            Default Value: Crestron SimplSharp HTTPS Client
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.Accept">
            <summary>
            Gets or sets content types that are acceptable for the response. 
            The default value is "text/html, image/gif, image/jpeg, image/png".
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.Timeout">
            <summary>
            Gets or sets the maximum amount of time (in seconds) that a client will wait for a server response within a single request. 
                The default value is 60 seconds (1 minute).
                The timeout handling can be activated via the TimeoutEnabled property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.TimeoutEnabled">
            <summary>
            This property controls whether the request operation will do an automatic timeout checking. 
            If timeout handling is turned on (i.e. this property is set to true) and a request takes longer than Timeout, it will be terminated.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.UserName">
            <summary>
            Name that will be inserted into the Authorization HTTPS header in the request to the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.Password">
            <summary>
            Password that will be inserted into the Authorization HTTPS header in the request to the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.AllowAutoRedirect">
            <summary>
            Gets or sets a value that indicates whether the request should follow redirection responses. 
            Default Value: true
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.MaximumAutomaticRedirections">
            <summary>
            Gets or sets the maximum number of redirects that the request follows.
            Default Value: 20
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.Proxy">
            <summary>
            Sets or gets proxy settings for the request. This property can be set to null.
            Default is null.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsClient.AuthenticationMethod">
            <summary>
            Sets or gets the server authentication method to be used instead of the default one.
            </summary>
            <remarks>
            This is a bitmask, to tell the client which HTTP authentication method(s) you want it to use for your server authentication.
            If more than one bit is set, the client will first query the site to see what authentication methods it supports and then pick the best one you allow it to use.
            </remarks>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR">
            <summary>
            ERROR definitions for launching Async operations 
            </summary>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR"/> code.</returns>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR.PENDING">
            <summary>
            Successful launch of worker thread
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR.NULL_CALLBACK">
            <summary>
            Null CallBackParameter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR.NULL_REQUEST">
            <summary>
             Null Request parameter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR.THREAD_ERROR">
            <summary>
            Thread failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.DISPATCHASYNC_ERROR.PROCESS_BUSY">
            <summary>
            Current process is not complete
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsClient.ClientCertificateType">
            <summary>
            Defines the types (formats) of Client Certificate
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientCertificateType.UNKNOWN">
            <summary>
            Unknown/Undefined type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientCertificateType.PEM">
            <summary>
            PEM format
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientCertificateType.DER">
            <summary>
            DER (binary) format
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientCertificateType.P12">
            <summary>
            PKCS#12 format
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsClient.ClientKeyType">
            <summary>
            Defines the types (formats) of Client Private Key
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientKeyType.UNKNOWN">
            <summary>
            Unknown/Undefined type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientKeyType.PEM">
            <summary>
            PEM format
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientKeyType.DER">
            <summary>
            DER (binary) format
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HttpsClient.ClientKeyType.P12">
            <summary>
            PKCS#12 format
            </summary>
            <remarks>
            Requires firmware version 1.011.xxxx or later
            </remarks>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HTTPS_CALLBACK_ERROR">
            <summary>
            ERROR Definitions returned from an async operation
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HTTPS_CALLBACK_ERROR.COMPLETED">
            <summary>
            Sucessful completion
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HTTPS_CALLBACK_ERROR.INVALID_PARAM">
            <summary>
            Some invalid parameters
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Https.HTTPS_CALLBACK_ERROR.UNKNOWN_ERROR">
            <summary>
            failed to complete the request
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallback">
            <summary>
            Crestron ClientResponse Callback function
            </summary>
            <param name="userobj">The callback routine expecting a response</param>
            <param name="error">error status enum</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallbackEx">
            <summary>
            Crestron ClientResponse Callback function
            </summary>
            <param name="userobj">The callback routine expecting a response</param>
            <param name="error">error status enum</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HTTPSClientStringCallback">
            <summary>
            Crestron ClientString Callback
            </summary>
            <param name="userobj">The callback routine expecting a string</param>
            <param name="error">error status enum</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HTTPSClientStringCallbackEx">
            <summary>
            Crestron ClientString Callback
            </summary>
            <param name="userobj">The callback routine expecting a string</param>
            <param name="error">error status enum</param>
            <param name="paramUserObject">User specified object</param> 
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallback">
            <summary>
            Crestron ClientBytes Callback
            </summary>
            <param name="userobj">The callback routine expecting byte[]</param>
            <param name="error">error status enum</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallbackEx">
            <summary>
            Crestron ClientBytes Callback
            </summary>
            <param name="userobj">The callback routine expecting byte[]</param>
            <param name="error">error status enum</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsStreamRequestCallbackEx">
            <summary>
            Crestron StreamRequestCallback
            </summary>
            <param name="userobj">Client Bytes</param>
            <param name="error">error status enum</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsStreamResponseCallbackEx">
            <summary>
            Crestron StreamResponseCallback
            </summary>
            <param name="userobj">The HttpsClient Request</param>
            <param name="error">error status enum</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.AsyncResponseToBytes">
            <summary>
             AsyncDispatch that returns a Byte Array
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncResponseToBytes.#ctor(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HttpsClient,Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallback)">
            <summary>
            AsyncDispatch Constructor that returns a Byte Array
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">The requesting client process</param>
            <param name="callbackFunction">a callback function accepting a byte array type response</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncResponseToBytes.#ctor(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HttpsClient,Crestron.SimplSharp.Net.Https.HTTPSClientBytesCallbackEx,System.Object)">
            <summary>
            AsyncDispatch Constructor that returns a Byte Array
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">The requesting client process</param>
            <param name="callbackFunction">a callback function accepting a byte array type response</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncResponseToBytes.ex">
            <summary>
            Returns byte array from dispatch response
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.AsyncResponseToString">
            <summary>
            AsyncDispatch that returns a String
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncResponseToString.#ctor(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HttpsClient,System.Text.Encoding,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallback)">
            <summary>
            AsyncDispatch Constructor that returns a String
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">The requesting client process</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value used for the return string.</param>
            <param name="callbackFunction">a callback function accepting string type response</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncResponseToString.#ctor(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HttpsClient,System.Text.Encoding,Crestron.SimplSharp.Net.Https.HTTPSClientStringCallbackEx,System.Object)">
            <summary>
            AsyncDispatch Constructor that returns a String
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">The requesting client process</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value used for the return string.</param>
            <param name="callbackFunction">a callback function accepting string type response</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncResponseToString.ex">
            <summary>
            Dispatch request and route the response string to the user supplied callback.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.AsyncDispatch">
            <summary>
            AsyncClient class for the Crestron Simpl#
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncDispatch.CallbackFunction(Crestron.SimplSharp.Net.Https.HTTPS_CALLBACK_ERROR)">
            <summary>
            Calls the user back
            </summary>
            <param name="error">error result</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncDispatch.InitializeAsyncDispatch(Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallback,Crestron.SimplSharp.Net.Https.HttpsClientResponse,Crestron.SimplSharp.Net.Https.HttpsClient,Crestron.SimplSharp.Net.Https.HttpsClientRequest)">
            <summary>
            Initialise the Thread environment
            </summary>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="callbackObject">A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClientResponse"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClientRequest"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncDispatch.InitializeAsyncDispatch(Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallbackEx,Crestron.SimplSharp.Net.Https.HttpsClientResponse,Crestron.SimplSharp.Net.Https.HttpsClient,Crestron.SimplSharp.Net.Https.HttpsClientRequest,System.Object)">
            <summary>
            Initialise the Thread environment
            </summary>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="callbackObject">A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClientResponse"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClient"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Https.HttpsClientRequest"/> object.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncDispatch.#ctor(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HttpsClient,Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallback)">
            <summary>
            AsyncDispatch Constructor
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">requesting manager</param>
            <param name="callbackFunction">a callback function accepting HTTPSClientResponse type</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncDispatch.#ctor(Crestron.SimplSharp.Net.Https.HttpsClientRequest,Crestron.SimplSharp.Net.Https.HttpsClient,Crestron.SimplSharp.Net.Https.HTTPSClientResponseCallbackEx,System.Object)">
            <summary>
            AsyncDispatch Constructor
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">requesting manager</param>
            <param name="callbackFunction">a callback function accepting HTTPSClientResponse type</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncDispatch.ex">
            <summary>
            Dispatch request and route the response to the user supplied callback.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.AsyncRequestStream">
            <summary>
            AsyncClient Request Stream
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncRequestStream.ex">
            <summary>
            The Async Request Stream manager
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.AsyncExecuteStream">
            <summary>
            AsyncClient Request Stream
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.AsyncExecuteStream.ex">
            <summary>
            The Async Request Stream manager
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.AsyncResponseStream">
            <summary>
            AsyncClient Response Stream
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsException">
            <summary>
            An Exception object that contains errors returned from an HTTPs call when the server returned any error >=400.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsException.#ctor(Crestron.SimplSharp.Net.Https.HttpsClientResponse)">
            <summary>
            Creates and instance of the HTTPs Exception Class.
            </summary>
            <param name="aHttpResponse">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsException.#ctor(System.String,Crestron.SimplSharp.Net.Https.HttpsClientResponse)">
            <summary>
            Creates and instance of the HTTPS Exception Class with custom message parameter.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="aHttpResponse">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsException.#ctor(System.String,Crestron.SimplSharp.Net.Https.HttpsClientResponse,System.Exception)">
            <summary>
            Creates and instance of the HTTPS Exception Class with custom message, and Exception parameters.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="aHttpResponse">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsException.Response">
            <summary>
            The specific Content returned from the server when the error occurred.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpClient">
            <summary>
            The HttpClient class represents a client connection to an HTTP Server.
            HttpClient will automatically follow redirects. 
            Automatic redirects are configurable via the AllowAutoRedirect property.
            To specify the maximum number of redirects, change the MaximumAutomaticRedirections property to the desired value.
            </summary>
            <example>
            This method uses an HttpClient to dispatch an HTTP DELETE request to a URL, then reads the response code
            <code>
            // Send a DELETE request to the specified URL
            public void SendDelete(string urlString)
            {
            	try
            	{
            		HttpClient client = new HttpClient();
            		HttpClientRequest req = new HttpClientRequest();
            		UrlParser url = new UrlParser(urlString);
            		req.Url = url;
            		req.RequestType = RequestType.Delete;
            		
            		HttpClientResponse res = client.Dispatch(req);
            
            		if (res.Code == 204) // Expecting a "Not Found" response to show that the DELETE succeeded
            		{
            			CrestronConsole.PrintLine("DELETE request succeeded");
            		}
            		else
            		{
            			CrestronConsole.PrintLine("DELETE request returned unexpected response code: {0}", res.Code);
            		}
            		res.Dispose();
            		client.Dispose();
            	}
            	catch (Exception e)
            	{
            		CrestronConsole.PrintLine("Error in SendDelete(): " + e);
            	}
            }
            </code>
            </example>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Client">
            <summary>
            Abstract client component, the base for all other clients.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.#ctor">
            <summary>
            Client default constructor. Sets Binding and DNS resolve type.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.ResolveHostNameIfNeeded">
            <summary>
            Determines whether it is necessary to resolve the host name based on the Host Address and DNS resolve type, and then resolves the host name accordingly.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.ResolveHostName">
            <summary>
            Resolves the host name. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.TriggerOnResolveHostName(System.String@)">
            <summary>
            Triggers the Resolve 
            </summary>
            <param name="hostName">The host name to match which will raise event.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.TriggerOnResolvedHostName(System.String,System.Net.IPAddress)">
            <summary>
            Trigger the OnResolvedHostName.
            </summary>
            <param name="hostName">The matching host name that raised event.</param>
            <param name="ipAddress">IP address of host name.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.TriggerOnResolvedHostName(System.String,System.String)">
            <summary>
            Trigger the OnResolvedHostName.
            </summary>
            <param name="hostName">The matching host name that raised event.</param>
            <param name="ipAddress">IP address of host name.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.Connect">
            <summary>
            Connect the client to a remote network host.
            </summary>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.Connect(System.String,System.Int32)">
            <summary>
            Connect to the host address at the specified port.
            </summary>
            <param name="aHost">String with the host address</param>
            <param name="aPort">Port Number</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.Connect(System.Net.IPAddress,System.Int32)">
            <summary>
            
            </summary>
            <param name="aHost">String with the host address</param>
            <param name="aPort">Port Number</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.ConnectNew(System.String,System.Int32)">
            <summary>
            Overloaded. Opens and returns new connection with specified host and port.
            </summary>
            <param name="aHost">String with the host address</param>
            <param name="aPort">Port Number</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.ConnectNew(System.Net.IPAddress,System.Int32)">
            <summary>
            Overloaded. Opens and returns new connection with specified IP address and port.
            </summary>
            <param name="aHost">String with the host address</param>
            <param name="aPort">Port Number</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.GetConnection(System.Net.IPAddress,System.Int32)">
            <summary>
            Get the Connection using the IP address and port for this Client instance.
            </summary>
            <param name="aHost">String with the host address</param>
            <param name="aPort">Port Number</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.NewConnection(Crestron.SimplSharp.Net.Binding)">
            <summary>
            Creates a New Client Connection with the specified binding.
            </summary>
            <param name="aBinding">A <see cref="P:Crestron.SimplSharp.Net.Client.Binding"/> object.</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.Connect(System.String,System.Int32,Crestron.SimplSharp.Net.Binding)">
            <summary>
            Overloaded. Use to connect the client to a remote network host using the specified host name (HostName) or IP address (HostAddress) and port number (Port) and/or Binding (BindingV4 or BindingV6).
            </summary>
            <param name="aHost">String with the host address</param>
            <param name="aPort">Port Number</param>
            <param name="aBinding">A <see cref="P:Crestron.SimplSharp.Net.Client.Binding"/> object.</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.Connect(System.Net.IPAddress,System.Int32,Crestron.SimplSharp.Net.Binding)">
            <summary>
            Overloaded. Use to connect the client to a remote network host using the specified host name (HostName) or IP address (HostAddress) and port number (Port) and/or Binding (BindingV4 or BindingV6).
            </summary>
            <param name="aHost">String with the host address</param>
            <param name="aPort">Port Number</param>
            <param name="aBinding">A <see cref="P:Crestron.SimplSharp.Net.Client.Binding"/> object.</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.ReleaseConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Releases the Connection for the specified connection in the Connection Pool.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.Dispose">
            <summary>
            Disposes the Client Connection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Client.Dispose(System.Boolean)">
            <summary>
            Disposes of the current instance and releases all resources used by it.
            </summary>
            <param name="aDisposing">true to close socket.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.DnsResolveType">
            <summary>
            Determines if the specified HostName should be looked up only:
            Once per application run (if you establish multiple connections to the server, the subsequent connections will use the cached IPAddress) or 
            Always, for each connect (the Hostname will be resolved again for each subsequent connect).
            You'll usually only change this setting off the default (Once) if you anticipate the IPAddress of the target host to change frequently.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.Binding">
            <summary>
            Obsolete - Please use BindingV4 and BindingV6 instead.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.BindingV4">
            <summary>
            Gets the binding which provides properties and methods such as address family, IPv4 address, port number etc for client to connect to the host network.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.BindingV6">
            <summary>
            Gets the binding which provides properties and methods such as address family, IPv6 address, port number etc for client to connect to the host network.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.Port">
            <summary>
            The server Port that you intend the client to connect to.
            <remarks>If you do not assign a port number on this property, the port number in the parsed URL will be used. </remarks>
            <remarks>If a port number is assigned in the parsed URL, it will take precedence over this property. </remarks>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.HostName">
            <summary>
            The server host name or IP address that you intend the client to connect to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.Host_Address">
            <summary>
            Gets or sets a Client Host Address.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.HostAddress">
            <summary>
            Gets or sets a Client Host IP Address as a string.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.ConnectionClass">
            <summary>
            Use the ConnectionClass property to specify an alternative Connection class to be used for out coming data connections. 
            Existing connections are not affected by changing the property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.ConnectionFactory">
            <summary>
            Represents an interface for a connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.ConnectionPool">
            <summary>
            Get or set the Connection Pool for this Client Instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.EnableNagle">
            <summary>
            Set the property value to true to enable the Nagle algorithm for send coalescing.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Client.OnResolveHostName">
            <summary>
            This event is fired before the Client attempts to resolve the specified HostName to an IP address. 
            It provides you with an option to perform the resolution yourself, obtain the IP address from an internal cache you're maintaining, or do some other processing (such as for example changing the hostname to look up).
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Client.OnResolvedHostName">
            <summary>
            This event is fired after the hostname has been successfully resolved.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Client.OnResolveHostNameHandler">
            <summary>
            Handler for the event that is fired after the hostname has been successfully resolved.
            </summary>
            <param name="sender">An object representing the sender of the event</param>
            <param name="e">An <see cref="T:Crestron.SimplSharp.Net.Client.OnResolveHostNameArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Client.OnResolveHostNameArgs">
            <summary>
            OnResolveHostNameArgs class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.OnResolveHostNameArgs.HostName">
            <summary>
            Get or set the Host name. 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Client.OnResolvedHostNameHandler">
            <summary>
            Delegate for ResolvedHostNameHandler
            </summary>
            <param name="sender">An object representing the sender of the event</param>
            <param name="e">An <see cref="T:Crestron.SimplSharp.Net.Client.OnResolvedHostNameArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Client.OnResolvedHostNameArgs">
            <summary>
            OnResolvedHostNameHandler class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.OnResolvedHostNameArgs.HostName">
            <summary>
            Get or set the Host Name for this ResolvedHostNameHandler instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.OnResolvedHostNameArgs.IPAddress">
            <summary>
            Get or set the IP address for this Client instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Client.OnResolvedHostNameArgs.IP_Address">
            <summary>
            Get or set the IP address for this Client instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.#ctor">
            <summary>
            Creates a new instance of the HttpClient class. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.Get(System.String)">
            <summary>
            Retrieves an HTTP document (as a string) from the provided URL using the GET HTTP command.
            </summary>
            <param name="aUrl">URL as String</param>
            <returns>HTTP document as String</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetEncodingFromContentType(System.String)">
            <summary>
            GetEncodingFromContentType
            </summary>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.RemoveThread(System.Threading.Thread)">
            <summary>
            Remove Thread from active list
            </summary>
            <param name="t">The thread to remove</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.Get(System.String,System.Text.Encoding)">
            <summary>
            Retrieves an HTTP document (as a string) in the specified encoding from the provided URL using the GET HTTP command.
            </summary>
            <param name="aUrl">URL as String</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <returns>HTTP document as string </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetAsync(System.String,Crestron.SimplSharp.Net.Http.HTTPClientStringCallback)">
            <summary>
            Asynchronously retrieves an HTTP document from the provided URL using the GET HTTP command.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetAsyncEx(System.String,Crestron.SimplSharp.Net.Http.HTTPClientStringCallbackEx,System.Object)">
            <summary>
            Asynchronously retrieves an HTTP document from the provided URL using the GET HTTP command.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetAsync(System.String,System.Text.Encoding,Crestron.SimplSharp.Net.Http.HTTPClientStringCallback)">
            <summary>
            Asynchronously retrieves an HTTP document using a callback in the specified encoding from the provided URL using the GET HTTP command.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String </param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetAsyncEx(System.String,System.Text.Encoding,Crestron.SimplSharp.Net.Http.HTTPClientStringCallbackEx,System.Object)">
            <summary>
            Asynchronously retrieves an HTTP document using a callback in the specified encoding from the provided URL using the GET HTTP command.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="OnTransferResponse">Callback function that will handle the returned Content String </param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetBytes(System.String)">
            <summary>
            Retrieves binary data from the provided URL.
            </summary>
            <param name="aUrl">URL as String</param>
            <returns>byte array of binary data. Returned byte array is null if there is already a request initiated</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetBytesAsync(System.String,Crestron.SimplSharp.Net.Http.HTTPClientBytesCallback)">
            <summary>
            Asynchronously retrieves binary data from the provided URL using a callback.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="OnTransferResponse">Callback function that will handle the returned content </param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetBytesAsyncEx(System.String,Crestron.SimplSharp.Net.Http.HTTPClientBytesCallbackEx,System.Object)">
            <summary>
            Asynchronously retrieves binary data from the provided URL using a callback.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="OnTransferResponse">Callback function that will handle the returned content </param>.
            <param name="paramUserObject">User specified ObjectObject </param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetResponse(System.String)">
            <summary>
            This method is used internally by all other Get* methods of this class. 
            It creates and sends a GET HTTP request to the server and returns a response.
            </summary>
            <param name="aUrl">URL as String</param>
            <returns>HttpClient Response</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetResponseAsync(System.String,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallback)">
            <summary>
            Asynchronously creates and sends a GET HTTP request to the server using the callback. A Response is returned.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="OnTransferResponse">HttpClientResponseCallback</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetResponseAsyncEx(System.String,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallbackEx,System.Object)">
            <summary>
            Asynchronously creates and sends a GET HTTP request to the server using the callback. A Response is returned.
            </summary>
            <param name="aUrl">Url as string (including "http://")</param>
            <param name="OnTransferResponse">HttpClientResponseCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.FgetFile(System.String,System.String)">
            <summary>
            Gets the file from the server and writes the data to lpath
            </summary>
            <param name="url">file source </param>
            <param name="lpath">file destination </param>
            <returns>return 0 if success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.FputFile(System.String,System.String)">
            <summary>
            Puts the file data to the server from the local machine
            </summary>
            <param name="url">file dest </param>
            <param name="lpath">file source. </param>
            <returns>return 0 if success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.FpostFile(System.String,System.String)">
            <summary>
            Posts the file data to the server from the local machine
            </summary>
            <param name="url">file dest.</param>
            <param name="lpath">file source.</param>
            <returns>returns 0 if success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.Post(System.String,System.Byte[])">
            <summary>
            Retrieves an HTTP document (as a string) from the provided URL using the POST HTTP command.
            </summary>
            <param name="aUrl">URL as String</param>
            <param name="aContent">Body of the post as byte array.</param>
            <returns>String containing a response from the POST operation</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.Post(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Retrieves an HTTP document (as a string) from the provided Url using the POST HTTP command.
            </summary>
            <param name="aUrl">URL as string</param>
            <param name="aContent">Content Stream to POST</param>
            <returns>Result of the requested POST as a string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.PostAsync(System.String,System.Byte[],Crestron.SimplSharp.Net.Http.HTTPClientStringCallback)">
            <summary>
            Asynchronously retrieves an HTTP document (as a string) from the provided Url using the POST HTTP command.
            </summary>
            <param name="aUrl">URL as string</param>
            <param name="aContent">Byte array of content to POST</param>
            <param name="OnTransferResponse">HTTPClientResponseCallback</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.PostAsync(System.String,System.Byte[],Crestron.SimplSharp.Net.Http.HTTPClientStringCallbackEx,System.Object)">
            <summary>
            Asynchronously retrieves an HTTP document (as a string) from the provided Url using the POST HTTP command.
            </summary>
            <param name="aUrl">URL as string</param>
            <param name="aContent">Byte array of content to POST</param>
            <param name="OnTransferResponse">HTTPClientResponseCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.PostAsync(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallback)">
            <summary>
            Asynchronously retrieves an HTTP document (as a string) from the provided Url using the POST HTTP command.
            </summary>
            <param name="aUrl">URL as string</param>
            <param name="aContent">Content Stream</param>
            <param name="OnTransferResponse">HTTPClientResponseCallback</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.PostAsyncEx(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallbackEx,System.Object)">
            <summary>
            Asynchronously retrieves an HTTP document (as a string) from the provided Url using the POST HTTP command.
            </summary>
            <param name="aUrl">URL as string</param>
            <param name="aContent">Content Stream</param>
            <param name="OnTransferResponse">HTTPClientResponseCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.Abort">
            <summary>
            Closes the currently open connection (if present).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.Dispose(System.Boolean)">
            <summary>
            Disposes of the current instance and releases all resources used by it.
            </summary>
            <param name="aDisposing">true to close socket.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.TryDispatch(Crestron.SimplSharp.Net.Http.HttpClientRequest)">
            <summary>
            The core method of the HttpClient class. 
            This method uses the HttpClientRequest class to send messages to the server and the HttpClientResponse to receive a server answer.
            </summary>
            <param name="aRequest">HttpClient Request</param>
            <returns>HttpClient Response</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.BeginGetRequestStream(Crestron.SimplSharp.Net.Http.HTTPStreamRequestCallbackEx,Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Object)">
            <summary>
            Begins an asynchronous request for a Stream object to use to write data.
            </summary>
            <param name="callback">The HTTPStreamRequestCallbackEx delegate</param>
            <param name="aRequest">The state object for this request</param>
            <param name="user">User defined status object</param>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">Invalid operation</exception>
            <returns>updated request</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">Request must be in new request state</exception>
            <exception cref="T:System.NotSupportedException">SSL (HTTPS) is not supported</exception>
            <remarks>The BeginGetRequestStream method requires some synchronous setup tasks to complete 
            (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous. 
            As a result, this method should never be called on a user interface (UI) thread because it might take considerable time 
            (up to several minutes depending on network settings) to complete the initial synchronous setup tasks 
            before an exception for an error is thrown or the method succeeds.</remarks>
            <note>Your application cannot mix synchronous and asynchronous methods for a particular request. 
            If you call the BeginGetRequestStream method, you must use the BeginGetResponse method to retrieve the response.</note>
            <example>
              // Open an HTTP client
              HttpClient client = new HttpClient();
              // Make a CEevent to wait on.
              StreamAsync_Test allDone = new StreamAsync_Test();
              allDone.wait_for_response.Reset();
              // Create a new HttpRequest object.
              HttpRequest request = new HttpRequest("http://www.contoso.com/example.aspx");
              request.ContentType = "application/x-www-form-urlencoded";
              // Set the Method property to 'POST' to post data to the URI.
              request.Method = "POST";
              // start the asynchronous operation
              request.BeginGetRequestStream(new HTTPStreamRequestCallbackEx(GetRequestStreamCallback), request, (object)allDone);
              // Keep the main thread from continuing while the asynchronous 
              // operation completes. A real world application 
              // could do something useful such as updating its user interface. 
              if (allDone.wait_for_response.Wait(30000))
                   ErrorLog.Notice("Received response");
              else
                   ErrorLog.Notice("No response");
                   
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.EndGetRequestStream(Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Object)">
            <summary>
            Supply the stream interface
            </summary>
            <param name="aRequest">The Http request object</param>
            <param name="user">User defined object</param>
            <returns>The Input Stream</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">No BeginRequest</exception>
            <remarks>You must set the value of the ContentLength property before EndGetRequestStream.</remarks>
            <remarks>You must call the Stream.Close method to close the stream and release the connection for reuse. 
            Failure to close the stream causes your application to run out of connections.</remarks>
            <example>
                           Example Request Handler CallBack
                           
            private static void GetRequestStreamCallback(HttpClientRequest asynchronousResult, HTTP_CALLBACK_ERROR error, object status)
               {
                   HttpRequest request = asynchronousResult;
                   Console.WriteLine("Please enter the input data to be posted:");
                   string postData = Console.ReadLine();
                   // Convert the string into a byte array. 
                   byte[] byteArray = Encoding.UTF8.GetBytes(postData);
                   //Last chance for headers going out
                   request.Header.ContentType = "text/html";
                   request.Header.AddHeader(new HttpHeader("Content-Length", postData.Length.ToString()));
                   // End the request operation
                   Stream postStream = request..ThisClient.EndGetRequestStream(asynchronousResult);
                   // Write to the request stream. 
                   postStream.Write(byteArray, 0, postData.Length); 
                   postStream.Close();
                   // Start the asynchronous operation to get the response.
                   request.BeginGetResponse(new HTTPStreamResponseCallbackEx(GetResponseCallback), request, status); 
               }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.BeginGetResponseStream(Crestron.SimplSharp.Net.Http.HTTPStreamResponseCallbackEx,Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Object)">
            <summary>
            Begins an asynchronous response for a Stream object to use to read data.
            </summary>
            <param name="callback">The HTTPStreamResponseCallbackEx delegate</param>
            <param name="aRequest">The state object for this request</param>
            <param name="user">The user defined status object</param>
            <returns>The asynchronous request for a response.</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">No BeginRequest</exception>
            <remarks>The BeginGetResponse method starts an asynchronous request for a response from the Internet resource. 
            The asynchronous callback method uses the EndGetResponse method to return the actual WebResponse.</remarks>
            <example>
            // Start the asynchronous operation to get the response
            request.ThisClient.BeginGetResponseStream(new HTTPStreamResponseCallbackEx(GetResponseCallback), request, status);
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.EndGetResponseStream(Crestron.SimplSharp.Net.Http.HttpClientRequest)">
            <summary>
            Ends an asynchronous request to an Internet resource
            </summary>
            <param name="aRequest">HttpClientRequest</param>
            <returns>A WebResponse that contains the response from the Internet resource.</returns>
            <exception cref="T:System.ArgumentNullException">aRequest is NULL</exception>
            <exception cref="T:System.InvalidOperationException">No BeginRequest</exception>
            <remarks>The EndGetResponse method completes an asynchronous request for an Internet resource that was started by calling the 
            BeginGetResponse method.
            Note: You must call the Close method to close the stream and release the connection. 
            Failure to do so may cause your application to run out of connections.
            </remarks>
            <example>
            <code>                
            // Example Response Handler CallBack
            private static void GetResponseCallback(HttpClientRequest asynchronousResult,HTTP_CALLBACK_ERROR error, object status)
            {
                StreamReader streamRead;
                string responseString;
                Stream streamResponse;
                HttpClientRequest request = asynchronousResult;
            
                // End the response
                HttpClientResponse response = request.ThisClient.EndGetResponseStream(request);
                if (response.HasContentLength)
                {
                    streamResponse = response.ContentStream;
                    streamRead = new StreamReader(streamResponse);
                    responseString = streamRead.ReadToEnd();
                    Console.WriteLine(responseString);
                    // Close the stream object
                    streamResponse.Close();
                    streamRead.Close();
                }
               // Release the HttpResponse
               response.Dispose();
            }
            </code>
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.Dispatch(Crestron.SimplSharp.Net.Http.HttpClientRequest)">
            <summary>
            One of the core methods of the HttpClient class. This method uses the HttpClientRequest class to send messages to the server and the HttpClientResponse to receive server answers.
            Uses the TryDispatch method to send data and raises an HttpException exception if any errors occurs.
            </summary>
            <param name="aRequest">HttpClient Request</param>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">Thrown if any Http errors occur</exception>
            <exception cref="T:System.Exception">Thrown if an unexpected error occurs</exception>
            <exception cref="T:System.NotSupportedException">SSL (HTTPS) is not supported</exception>
            <returns>HttpClient Response</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.DispatchAsync(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallback)">
            <summary>
            Asynchronously dispatch a request and return a response to the specified callback function
            </summary>
            <param name="aRequest">HttpClientRequest</param>
            <param name="OnTransferResponse">HttpClientResponseCallback</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.DispatchAsyncEx(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallbackEx,System.Object)">
            <summary>
            Asynchronously dispatch a request and return a response to the specified callback function
            </summary>
            <param name="aRequest">HttpClientRequest</param>
            <param name="OnTransferResponse">HttpClientResponseCallback</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.DispatchStringAsync(Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Text.Encoding,Crestron.SimplSharp.Net.Http.HTTPClientStringCallback)">
            <summary>
            Asynchronously launches the request that returns a string
            </summary>
            <param name="aRequest">HttpClientRequest object</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="OnTransferResponse">Callback function</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.DispatchStringAsyncEx(Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Text.Encoding,Crestron.SimplSharp.Net.Http.HTTPClientStringCallbackEx,System.Object)">
            <summary>
            Asynchronously launches the request that returns a string
            </summary>
            <param name="aRequest">HttpClientRequest object</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="OnTransferResponse">Callback function</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.DispatchBytesAsync(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HTTPClientBytesCallback)">
            <summary>
            Asynchronously launches the request that returns a byte array
            </summary>
            <param name="aRequest">HttpClientRequest</param>
            <param name="OnTransferResponse">Callback function</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.DispatchBytesAsyncEx(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HTTPClientBytesCallbackEx,System.Object)">
            <summary>
            Asynchronously launches the request that returns a byte array
            </summary>
            <param name="aRequest">HttpClientRequest</param>
            <param name="OnTransferResponse">Callback function</param>
            <param name="paramUserObject">User specified object</param>
            <returns>DISPATCHASYNC_ERROR Status for launching of the request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.RequestDone(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Request is done being processed.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClient.GetHttpConnection(System.Boolean,System.String,System.Int32)">
            <summary>
            This method is used internally to acquire (either create or retrieve from the pool) an HTTP connection with the provided parameters.
            </summary>
            <param name="aSecure">true to use SSL.</param>
            <param name="aHost">Host as String</param>
            <param name="aPort">Port as integer</param>
            <exception cref="T:System.NotSupportedException">SSL (HTTPS) is not supported</exception>
            <returns>A Connection object</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.Version">
            <summary>
            Gets or sets the version identifier of the UserAgent. Can be used to mimic particular browsers like Internet Explorer 6.0
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.Url">
            <summary>
            Gets or sets the URL of the remote server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.Verbose">
            <summary>
            Set Logging to Verbose on/off
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.UserObject">
            <summary>
            Gets the last user specified Object for the Async operations on this HTTP Client instance.
            The return value will evaluate to null if Async operations with the object parameter are not utilized.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.KeepAlive">
            <summary>
            Controls whether to use HTTP Keep-Alive to keep the connection alive between requests. 
            If enabled (true) , once a request is made and a connection is established, this connection is kept open and used for future requests. 
            If disabled, the connection is closed, and a new connection is created for future requests.
            </summary>
            <remarks>Default value is true.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.ProcessBusy">
            <summary>
            If using commands with callbacks, check this busy flag before using another command (Dispatch, Get, Post, etc.)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.CustomConnectionPool">
            <summary>
            Gets or sets the custom connection pool. This property is inherited from the Client class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.UseConnectionPooling">
            <summary>
            Enables or disables connection pooling.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.UserAgent">
            <summary>
            Gets or sets the identifier of the software being used to retrieve data via the URL. 
            Some custom HTTP servers check this HTTP header to provide content optimized for particular HTTP browsers. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.Accept">
            <summary>
            Gets or sets content types that are acceptable for the response. 
            The default value is "text/html, image/gif, image/jpeg, image/png, */*".
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.Timeout">
            <summary>
            Gets or sets the maximum amount of time (in seconds) that a client will wait for a server response within a single request. 
                The default value is 60 seconds (1 minute).
                The timeout handling can be activated via the TimeoutEnabled property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.TimeoutEnabled">
            <summary>
            This property controls whether the request operation will do an automatic timeout checking. 
            If timeout handling is turned on (i.e. this property is set to true) and a request takes longer than Timeout, it will be terminated.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.UserName">
            <summary>
            Name that will be inserted into the Authorization HTTP header in the request to the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.Password">
            <summary>
            Password that will be inserted into the Authorization HTTP header in the request to the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.AllowAutoRedirect">
            <summary>
            Gets or sets a value that indicates whether the request should follow redirection responses (HTTP codes from 300 to 399). 
            Default Value: true
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClient.MaximumAutomaticRedirections">
            <summary>
            Gets or sets the maximum number of redirects that the request follows.
            Default Value: 20
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpClient.DISPATCHASYNC_ERROR">
            <summary>
            ERROR definitions for launching Async operations 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HttpClient.DISPATCHASYNC_ERROR.PENDING">
            <summary>
            Successful launch of worker thread
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HttpClient.DISPATCHASYNC_ERROR.NULL_CALLBACK">
            <summary>
            Null CallBack Parameter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HttpClient.DISPATCHASYNC_ERROR.NULL_REQUEST">
            <summary>
             Null Request parameter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HttpClient.DISPATCHASYNC_ERROR.THREAD_ERROR">
            <summary>
            Thread failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HttpClient.DISPATCHASYNC_ERROR.PROCESS_BUSY">
            <summary>
            Current process is not complete
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR">
            <summary>
            ERROR definitions returned from an asynchronous callback operation
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR.COMPLETED">
            <summary>
            Successful completion
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR.INVALID_PARAM">
            <summary>
            Invalid parameters specified
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR.UNKNOWN_ERROR">
            <summary>
            Failed to complete the request
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPClientResponseCallback">
            <summary>
            Crestron ClientResponse Callback
            </summary>
            <param name="userobj">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPClientResponseCallbackEx">
            <summary>
            Crestron ClientResponse Callback
            </summary>
            <param name="userobj">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPClientStringCallback">
            <summary>
            Crestron ClientString Callback
            </summary>
            <param name="userobj">Client String</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPClientStringCallbackEx">
            <summary>
            Crestron ClientString Callback with an additional user object
            </summary>
            <param name="userString">Client String</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPClientBytesCallback">
            <summary>
            Crestron ClientBytes Callback
            </summary>
            <param name="userobj">Client Bytes</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPClientBytesCallbackEx">
            <summary>
            Crestron ClientBytes Callback
            </summary>
            <param name="userobj">Client Bytes</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPStreamRequestCallbackEx">
            <summary>
            Crestron StreamRequestCallback
            </summary>
            <param name="userobj">Client Bytes</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HTTPStreamResponseCallbackEx">
            <summary>
            Crestron StreamResponseCallback delegate
            </summary>
            <param name="userobj">Client Bytes</param>
            <param name="error">A <see cref="T:Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR"/> value.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.AsyncResponseToBytes">
            <summary>
             AsyncDispatch that returns a Byte Array
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToBytes.#ctor(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HTTPClientBytesCallback)">
            <summary>
            AsyncDispatch Constructor that returns byte array
            </summary>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="callbackFunction">Callback function to be invoked.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToBytes.#ctor(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HTTPClientBytesCallbackEx,System.Object)">
            <summary>
            AsyncDispatch Constructor that returns byte array
            </summary>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToBytes.ex">
            <summary>
            Returns byte array from dispatch response
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.AsyncResponseToString">
            <summary>
            AsyncDispatch that returns a String
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToString.InitializeAsyncToString(Crestron.SimplSharp.Net.Http.HTTPClientStringCallback,System.String,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Text.Encoding)">
            <summary>
            InitializeAsyncToString
            </summary>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="callbackObject">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToString.InitializeAsyncToString(Crestron.SimplSharp.Net.Http.HTTPClientStringCallbackEx,System.String,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Text.Encoding,System.Object)">
            <summary>
            InitializeAsyncToString
            </summary>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="callbackObject">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToString.#ctor(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HttpClient,System.Text.Encoding,Crestron.SimplSharp.Net.Http.HTTPClientStringCallback)">
            <summary>
            AsyncDispatch Constructor that returns a String
            </summary>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="callbackFunction">Callback function to be invoked.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToString.#ctor(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HttpClient,System.Text.Encoding,Crestron.SimplSharp.Net.Http.HTTPClientStringCallbackEx,System.Object)">
            <summary>
            AsyncDispatch Constructor that returns a String
            </summary>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="aEncoding">An <see cref="T:System.Text.Encoding"/> value.</param>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncResponseToString.ex">
            <summary>
            Returns string from the dispatch response.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.AsyncDispatch">
            <summary>
            AsyncClient Dispatch class for Simpl#
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncDispatch.CallbackFunction(Crestron.SimplSharp.Net.Http.HTTP_CALLBACK_ERROR)">
            <summary>
            Calls the user back
            </summary>
            <param name="error">error result</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncDispatch.InitializeAsyncDispatch(Crestron.SimplSharp.Net.Http.HTTPClientResponseCallback,Crestron.SimplSharp.Net.Http.HttpClientResponse,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HttpClientRequest)">
            <summary>
            Initialize the Thread environment
            </summary>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="callbackObject">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncDispatch.InitializeAsyncDispatch(Crestron.SimplSharp.Net.Http.HTTPClientResponseCallbackEx,Crestron.SimplSharp.Net.Http.HttpClientResponse,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HttpClientRequest,System.Object)">
            <summary>
            Initialize the Thread environment
            </summary>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="callbackObject">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="client">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClient"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncDispatch.#ctor(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallback)">
            <summary>
            AsyncDispatch Constructor
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">requesting manager client</param>
            <param name="callbackFunction">if aEncoding specified response is of string type
                                            else HttpClientResponse type</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncDispatch.#ctor(Crestron.SimplSharp.Net.Http.HttpClientRequest,Crestron.SimplSharp.Net.Http.HttpClient,Crestron.SimplSharp.Net.Http.HTTPClientResponseCallbackEx,System.Object)">
            <summary>
            AsyncDispatch Constructor
            </summary>
            <param name="aRequest">The request data</param>
            <param name="client">requesting manager client</param>
            <param name="callbackFunction">if aEncoding specified response is of string type
                                            else HttpClientResponse type</param>
            <param name="paramUserObject">User specified object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncDispatch.ex">
            <summary>
            Thread code
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.AsyncRequestStream">
            <summary>
            AsyncClient Request Stream
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.AsyncRequestStream.ex">
            <summary>
            The Async Request Stream manager
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.AsyncResponseStream">
            <summary>
            Async response stream
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpException">
            <summary>
            An Exception object that contains errors returned from an HTTP call when the server returned any error >=400.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpException.#ctor(Crestron.SimplSharp.Net.Http.HttpClientResponse)">
            <summary>
            Creates an instance of the HTTP Exception Class.
            </summary>
            <param name="aHttpResponse">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpException.#ctor(System.String,Crestron.SimplSharp.Net.Http.HttpClientResponse)">
            <summary>
            Creates an instance of the HTTP Exception Class with custom message parameter.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="aHttpResponse">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpException.#ctor(System.String,Crestron.SimplSharp.Net.Http.HttpClientResponse,System.Exception)">
            <summary>
            Creates an instance of the HTTP Exception Class with custom message, and Exception parameters.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="aHttpResponse">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientResponse"/> object.</param>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpException.Response">
            <summary>
            The specific Content returned from the server when the error occurred.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.HttpUtility">
            <summary>
            Provides methods for encoding and decoding URLs when processing Web requests. This class cannot be inherited. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncode(System.Byte[])">
            <summary>
            Converts a byte array into an encoded URL string.
            </summary>
            <param name="bytes">The array of bytes to encode.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncode(System.String)">
            <summary>
            Encodes a URL string.
            </summary>
            <param name="str">The text to encode.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
            Encodes a URL string using the specified encoding object.
            </summary>
            <param name="str">The text to encode.</param>
            <param name="e">The Encoding object that specifies the encoding scheme.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte array into a URL-encoded string, starting at the specified position in the array and continuing for the specified number of bytes.
            </summary>
            <param name="bytes">The array of bytes to encode.</param>
            <param name="offset">The position in the byte array at which to begin encoding. </param>
            <param name="count">The number of bytes to encode. </param>
            <returns>An encoded string.</returns>
            <exception cref="T:System.ArgumentNullException">bytes is null, but count does not equal 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset is less than 0 or greater than the length of the bytes array.
            - or - count is less than 0, or count + offset is greater than the length of the bytes array </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncodeToBytes(System.String)">
            <summary>
            Converts a string into a URL-encoded array of bytes.
            </summary>
            <param name="str">The string to encode. </param>
            <returns>An encoded array of bytes.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncodeToBytes(System.Byte[])">
            <summary>
            Converts an array of bytes into a URL-encoded array of bytes.
            </summary>
            <param name="bytes">The array of bytes to encode.</param>
            <returns>An encoded array of bytes.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)">
            <summary>
            Converts a string into a URL-encoded array of bytes using the specified encoding object.
            </summary>
            <param name="str">The string to encode</param>
            <param name="e">An encoded array of bytes</param>
            <returns>An encoded array of bytes.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts an array of bytes into a URL-encoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.
            </summary>
            <param name="bytes">The array of bytes to encode.</param>
            <param name="offset">The position in the byte array at which to begin encoding</param>
            <param name="count">The number of bytes to encode</param>
            <returns>An encoded array of bytes</returns>
            <exception cref="T:System.ArgumentNullException">bytes is null, but count does not equal 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset is less than 0 or greater than the length of the bytes array.
            - or - count is less than 0, or count + offset is greater than the length of the bytes array </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlEncodeUnicodeToBytes(System.String)">
            <summary>
            Converts a Unicode string into an array of bytes.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.HtmlAttributeEncode(System.String,Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
            Minimally converts a string into an HTML-encoded string and sends the encoded string to a TextWriter output stream.
            </summary>
            <param name="str">The string to encode</param>
            <param name="output">A TextWriter output stream.</param>
            <remarks>The HtmlAttributeEncode method converts only quotation marks ("), ampersands, and left angle brackets to equivalent character entities. It is considerably faster than the HtmlEncode method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.HtmlAttributeEncode(System.String)">
            <summary>
            Minimally converts a string to an HTML-encoded string.
            </summary>
            <param name="str">The string to encode</param>
            <returns>An encoded string</returns>
            <remarks>The HtmlAttributeEncode method converts only quotation marks ("), ampersands, and left angle brackets to equivalent character entities. It is considerably faster than the HtmlEncode method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.HtmlEncode(System.String)">
            <summary>
            HTML-encodes a string and returns the encoded string.
            </summary>
            <param name="str">The text string to encode. </param>
            <returns>The HTML-encoded text.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.HtmlEncode(System.String,Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
            HTML-encodes a string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="str">The string to encode. </param>
            <param name="output">The TextWriter output stream containing the encoded string. </param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.HtmlDecode(System.String,Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
            Decodes an HTML-encoded string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="str">The HTML string to decode</param>
            <param name="output">The TextWriter output stream containing the decoded string. </param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.HtmlDecode(System.String)">
            <summary>
            Decodes an HTML-encoded string and returns the decoded string.
            </summary>
            <param name="str">The HTML string to decode. </param>
            <returns>The decoded text.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlPathEncode(System.String)">
            <summary>
            Encodes the path portion of a URL string for reliable HTTP transmission from the Web server to a client.
            </summary>
            <param name="str">The text to URL-encode.</param>
            <returns>The URL-encoded text.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecode(System.String)">
            <summary>
            Converts a string that has been encoded for transmission in a URL into a decoded string.
            </summary>
            <param name="str">The string to decode. </param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)">
            <summary>
            Converts a URL-encoded byte array into a decoded string using the specified decoding object.
            </summary>
            <param name="bytes">The array of bytes to decode. </param>
            <param name="e">The Encoding that specifies the decoding scheme.</param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecode(System.String,System.Text.Encoding)">
            <summary>
            Converts a URL-encoded string into a decoded string, using the specified encoding object.
            </summary>
            <param name="str">The string to decode. </param>
            <param name="e">The Encoding that specifies the decoding scheme. </param>
            <returns>A decoded string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            Converts a URL-encoded byte array into a decoded string using the specified encoding object, 
            starting at the specified position in the array, and continuing for the specified number of bytes.
            </summary>
            <param name="bytes">The array of bytes to decode</param>
            <param name="offset">The position in the byte to begin decoding.</param>
            <param name="count">The number of bytes to decode. </param>
            <param name="e">A <see cref="T:System.Text.Encoding"/> object.</param>
            <returns>A decoded string.</returns>
            <exception cref="T:System.ArgumentNullException">bytes is null, but count does not equal 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset is less than 0 or greater than the length of the bytes array.
            - or - count is less than 0, or count + offset is greater than the length of the bytes array </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecodeToBytes(System.Byte[])">
            <summary>
            Converts a URL-encoded array of bytes into a decoded array of bytes.
            </summary>
            <param name="bytes">The array of bytes to decode.</param>
            <returns>A decoded array of bytes</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecodeToBytes(System.String)">
            <summary>
            Converts a URL-encoded string into a decoded array of bytes.
            </summary>
            <param name="str">The string to decode. </param>
            <returns>A decoded array of bytes.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)">
            <summary>
            Converts a URL-encoded string into a decoded array of bytes using the specified decoding object.
            </summary>
            <param name="str">The string to decode. </param>
            <param name="e">The Encoding object that specifies the decoding scheme.</param>
            <returns>A decoded array of bytes.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a URL-encoded array of bytes into a decoded array of bytes, 
            starting at the specified position in the array and continuing for the specified number of bytes.
            </summary>
            <param name="bytes">The array of bytes to decode.</param>
            <param name="offset">The position in the byte array at which to begin decoding.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>A decoded array of bytes</returns>
            <exception cref="T:System.ArgumentNullException">bytes is null, but count does not equal 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset is less than 0 or greater than the length of the bytes array.
            - or - count is less than 0, or count + offset is greater than the length of the bytes array </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.ParseQueryString(System.String)">
            <summary>
            Parses the query string of a url and returns a NameValueCollection with the parameters in the query string.
            </summary>
            <param name="query">Query string to parse.</param>
            <returns>Returns a NameValueCollection with the parameters in the query string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)">
            <summary>
            Parses the query string of a url and returns a NameValueCollection with the parameters in the query string.
            </summary>
            <param name="query">Query string to parse</param>
            <param name="encoding">Encoding to use</param>
            <returns>Returns a NameValueCollection with the parameters in the query string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.HttpUtility.ParseQueryString(System.String,System.Text.Encoding,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Parses the query string of a url and returns a NameValueCollection with the parameters in the query string.
            </summary>
            <param name="query">Query string to parse</param>
            <param name="encoding">Encoding to use</param>
            <param name="result">Returns a NameValueCollection with the parameters in the query string.</param>
        </member>
        <member name="T:Crestron.SimplSharp.eProgramStatusEventType">
            <summary>
            Enum for the Program Event Types
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eProgramStatusEventType.Stopping">
            <summary>
            Program is stopping
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eProgramStatusEventType.Paused">
            <summary>
            Program is paused
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eProgramStatusEventType.Resumed">
            <summary>
            Program is resumed
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.eEthernetEventType">
            <summary>
            Enum for the Ethernet Event Types
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eEthernetEventType.LinkDown">
            <summary>
            Ethernet link down
            Look at the EthernetAdapterType to see which adapter is affected
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eEthernetEventType.LinkUp">
            <summary>
            Ethernet link up
            Look at the EthernetAdapterType to see which adapter is affected
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.eSystemEventType">
            <summary>
            Enum for the system events
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eSystemEventType.Rebooting">
            <summary>
            System reboot
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eSystemEventType.DiskInserted">
            <summary>
            Removable media inserted
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eSystemEventType.DiskRemoved">
            <summary>
            Removable media removed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eSystemEventType.TimeChange">
            <summary>
            Time/Timezone Changed event
            Use <see cref="M:Crestron.SimplSharp.CrestronEnvironment.GetLocalTime"/> to get the updated time and <see cref="O:Crestron.SimplSharp.CrestronEnvironment.GetTimeZone"/> to get the updated timezone.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eSystemEventType.AuthenticationStateChange">
            <summary>
            Event to indicate that the Authentication State has changed. Please use the <see cref="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.Enabled"/> to get the current state.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SystemEventHandler">
            <summary>
            Delegate for the system event handler
            </summary>
            <param name="systemEventType"> Indicates the system event</param>
        </member>
        <member name="T:Crestron.SimplSharp.ProgramStatusEventHandler">
            <summary>
            Delegate for the program status event handler
            </summary>
            <param name="programEventType"> Indicates the program status event</param>
        </member>
        <member name="T:Crestron.SimplSharp.EthernetEventHandler">
            <summary>
            Delegate for the Ethernet Event Handler
            </summary>
            <param name="ethernetEventArgs"> Args which indicate the ethernet specific event and the adapter on which the event occurs</param>
        </member>
        <member name="T:Crestron.SimplSharp.EthernetEventArgs">
            <summary>
            Class for the Ethernet event args. This is what is passed on to the user
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetEventArgs.#ctor(Crestron.SimplSharp.eEthernetEventType,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the Ethernet event args
            </summary>
            <param name="ethernetEvent"> Indicates which Ethernet specific event is occurring</param>
            <param name="ethernetAdapter"> Event specific data. Indicates the adapter. </param>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetEventArgs.EthernetEventType">
            <summary>
            Indicates the system event type
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetEventArgs.EthernetAdapter">
            <summary>
            Indicates the system event type specific argument
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpSynchronizeDirectoriesAsyncResult">
            <summary>
            Encapsulates the results of an asynchronous directory synchronization operation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSynchronizeDirectoriesAsyncResult.#ctor(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpListDirectoryAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSynchronizeDirectoriesAsyncResult.Update(System.Int32)">
            <summary>
            Updates asynchronous operation status information.
            </summary>
            <param name="filesRead">The files read.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpSynchronizeDirectoriesAsyncResult.FilesRead">
            <summary>
            Gets the number of files read so far.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes">
            <summary>
            Contains SFTP file attributes.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.SetPermissions(System.Int16)">
            <summary>
            Sets the permissions.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.Size">
            <summary>
            Gets or sets the size, in bytes, of the current file.
            </summary>
            <value>
            The size of the current file in bytes.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.UserId">
            <summary>
            Gets or sets file user id.
            </summary>
            <value>
            File user id.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.GroupId">
            <summary>
            Gets or sets file group id.
            </summary>
            <value>
            File group id.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.IsSocket">
            <summary>
            Gets a value indicating whether file represents a socket.
            </summary>
            <value>
              <c>true</c> if file represents a socket; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.IsSymbolicLink">
            <summary>
            Gets a value indicating whether file represents a symbolic link.
            </summary>
            <value>
            	<c>true</c> if file represents a symbolic link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.IsRegularFile">
            <summary>
            Gets a value indicating whether file represents a regular file.
            </summary>
            <value>
            	<c>true</c> if file represents a regular file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.IsBlockDevice">
            <summary>
            Gets a value indicating whether file represents a block device.
            </summary>
            <value>
            	<c>true</c> if file represents a block device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.IsDirectory">
            <summary>
            Gets a value indicating whether file represents a directory.
            </summary>
            <value>
            	<c>true</c> if file represents a directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.IsCharacterDevice">
            <summary>
            Gets a value indicating whether file represents a character device.
            </summary>
            <value>
            	<c>true</c> if file represents a character device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.IsNamedPipe">
            <summary>
            Gets a value indicating whether file represents a named pipe.
            </summary>
            <value>
            	<c>true</c> if file represents a named pipe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.OwnerCanRead">
            <summary>
            Gets a value indicating whether the owner can read from this file.
            </summary>
            <value>
              <c>true</c> if owner can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.OwnerCanWrite">
            <summary>
            Gets a value indicating whether the owner can write into this file.
            </summary>
            <value>
              <c>true</c> if owner can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.OwnerCanExecute">
            <summary>
            Gets a value indicating whether the owner can execute this file.
            </summary>
            <value>
              <c>true</c> if owner can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.GroupCanRead">
            <summary>
            Gets a value indicating whether the group members can read from this file.
            </summary>
            <value>
              <c>true</c> if group members can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.GroupCanWrite">
            <summary>
            Gets a value indicating whether the group members can write into this file.
            </summary>
            <value>
              <c>true</c> if group members can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.GroupCanExecute">
            <summary>
            Gets a value indicating whether the group members can execute this file.
            </summary>
            <value>
              <c>true</c> if group members can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.OthersCanRead">
            <summary>
            Gets a value indicating whether the others can read from this file.
            </summary>
            <value>
              <c>true</c> if others can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.OthersCanWrite">
            <summary>
            Gets a value indicating whether the others can write into this file.
            </summary>
            <value>
              <c>true</c> if others can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.OthersCanExecute">
            <summary>
            Gets a value indicating whether the others can execute this file.
            </summary>
            <value>
              <c>true</c> if others can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes.Extensions">
            <summary>
            Gets or sets the extensions.
            </summary>
            <value>
            The extensions.
            </value>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.Flags.Read">
            <summary>
            SSH_FXF_READ
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.Flags.Write">
            <summary>
            SSH_FXF_WRITE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.Flags.Append">
            <summary>
            SSH_FXF_APPEND
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.Flags.CreateNewOrOpen">
            <summary>
            SSH_FXF_CREAT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.Flags.Truncate">
            <summary>
            SSH_FXF_TRUNC
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.Flags.CreateNew">
            <summary>
            SSH_FXF_EXCL
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Session">
            <summary>
            Provides functionality to connect and interact with SSH server.
            </summary>
            <summary>
            Provides functionality to connect and interact with SSH server.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session.MAXIMUM_PACKET_SIZE">
            <summary>
            Specifies maximum packet size defined by the protocol.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session.MAXIMUM_PAYLOAD_SIZE">
            <summary>
            Specifies maximum payload size defined by the protocol.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.SocketRead(System.Int32,System.Byte[]@)">
            <summary>
            Function to read <paramref name="length"/> amount of data before returning, or throwing an exception.
            </summary>
            <param name="length">The amount wanted.</param>
            <param name="buffer">The buffer to read to.</param>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Happens when the socket is closed.</exception>
            <exception cref="T:System.Exception">Unhandled exception.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.HandleMessageCore(Crestron.SimplSharp.Ssh.Messages.Message)">
            <summary>
            Handles SSH messages.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._authenticationConnection">
            <summary>
            Controls how many authentication attempts can take place at the same time.
            </summary>
            <remarks>
            Some server may restrict number to prevent authentication attacks
            </remarks>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._messagesMetadata">
            <summary>
            Holds metada about session messages
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._socket">
            <summary>
            Holds connection socket.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._socketLock">
            <summary>
            Holds locker object for the socket
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._messageListenerCompleted">
            <summary>
            Holds reference to task that listens for incoming messages
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._outboundPacketSequence">
            <summary>
            Specifies outbound packet number
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._inboundPacketSequence">
            <summary>
            Specifies incoming packet number
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._serviceAccepted">
            <summary>
            WaitHandle to signal that last service request was accepted
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._exceptionWaitHandle">
            <summary>
            WaitHandle to signal that exception was thrown by another thread.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._keyExchangeCompletedWaitHandle">
            <summary>
            WaitHandle to signal that key exchange was completed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._keyExchangeInProgress">
            <summary>
            WaitHandle to signal that key exchange is in progress.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._exception">
            <summary>
            Exception that need to be thrown by waiting thread
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._isAuthenticated">
            <summary>
            Specifies whether connection is authenticated
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._isDisconnecting">
            <summary>
            Specifies whether user issued Disconnect command or not
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._bytesReadFromSocket">
            <summary>
            WaitHandle to signal that bytes have been read from the socket.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Session._socketReadLock">
            <summary>
            Holds the lock object to ensure read access to the socket is synchronized.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.#ctor(Crestron.SimplSharp.Ssh.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Session"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.Connect">
            <summary>
            Connects to the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.Disconnect">
            <summary>
            Disconnects from the server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.SendKeepAlive">
            <summary>
            Sends "keep alive" message to keep connection alive.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for handle to signal while checking other handles as well including timeout check to prevent waiting for ever
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.SendMessage(Crestron.SimplSharp.Ssh.Messages.Message)">
            <summary>
            Sends packet message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.ReceiveMessage">
            <summary>
            Receives the message from the server.
            </summary>
            <returns>Incoming SSH message.</returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.HandleMessage``1(``0)">
            <summary>
            Handles the message.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnDisconnectReceived(Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage"/> received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnIgnoreReceived(Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage"/> received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnUnimplementedReceived(Crestron.SimplSharp.Ssh.Messages.Transport.UnimplementedMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.UnimplementedMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.UnimplementedMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnDebugReceived(Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnServiceRequestReceived(Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnServiceAcceptReceived(Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnKeyExchangeInitReceived(Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnNewKeysReceived(Crestron.SimplSharp.Ssh.Messages.Transport.NewKeysMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.NewKeysMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.NewKeysMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnUserAuthenticationRequestReceived(Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnUserAuthenticationFailureReceived(Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnUserAuthenticationSuccessReceived(Crestron.SimplSharp.Ssh.Messages.Authentication.SuccessMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.SuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.SuccessMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnUserAuthenticationBannerReceived(Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnGlobalRequestReceived(Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnRequestSuccessReceived(Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnRequestFailureReceived(Crestron.SimplSharp.Ssh.Messages.Connection.RequestFailureMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestFailureMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelOpenReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelOpenConfirmationReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelOpenFailureReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelWindowAdjustReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelDataReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelExtendedDataReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelEofReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelCloseReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelRequestReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelSuccessReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnChannelFailureReceived(Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.OnMessageReceived(Crestron.SimplSharp.Ssh.Messages.Message)">
            <summary>
            Called when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Message"/> message received.
            </summary>
            <param name="message"><see cref="T:Crestron.SimplSharp.Ssh.Messages.Message"/> message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.Read(System.Int32)">
            <summary>
            Reads the specified length of bytes from the server
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.RegisterMessage(System.String)">
            <summary>
            Registers SSH Message with the session.
            </summary>
            <param name="messageName">Name of the message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.UnRegisterMessage(System.String)">
            <summary>
            Removes SSH message from the session
            </summary>
            <param name="messageName">Name of the message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.LoadMessage(System.Byte[])">
            <summary>
            Loads the message.
            </summary>
            <param name="data">Message data.</param>
            <returns>New message</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.MessageListener">
            <summary>
            Listens for incoming message from the server and handles them. This method run as a task on separate thread.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.RaiseError(System.Exception)">
            <summary>
            Raises the <see cref="E:Crestron.SimplSharp.Ssh.Session.ErrorOccurred"/> event.
            </summary>
            <param name="exp">The exp.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Session.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.Session"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.SessionSemaphore">
            <summary>
            Gets the session semaphore that controls session channels.
            </summary>
            <value>The session semaphore.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.NextChannelNumber">
            <summary>
            Gets the next channel number.
            </summary>
            <value>The next channel number.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.IsConnected">
            <summary>
            Gets a value indicating whether socket connected.
            </summary>
            <value>
            	<c>true</c> if socket connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.SessionId">
            <summary>
            Gets or sets the session id.
            </summary>
            <value>The session id.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.ClientInitMessage">
            <summary>
            Gets the client init message.
            </summary>
            <value>The client init message.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.ServerVersion">
            <summary>
            Gets or sets the server version string.
            </summary>
            <value>The server version.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.ClientVersion">
            <summary>
            Gets or sets the client version string.
            </summary>
            <value>The client version.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Session.ConnectionInfo">
            <summary>
            Gets or sets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.Disconnected">
            <summary>
            Occurs when session has been disconnected form the server.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.DisconnectReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.IgnoreReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.UnimplementedReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.UnimplementedMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.DebugReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ServiceRequestReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ServiceAcceptReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.KeyExchangeInitReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.NewKeysReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.NewKeysMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.UserAuthenticationRequestReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.UserAuthenticationFailureReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.UserAuthenticationSuccessReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.SuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.UserAuthenticationBannerReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.BannerMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.GlobalRequestReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage"/> message received
            </summary>        
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.RequestSuccessReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.RequestFailureReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelOpenReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelOpenConfirmationReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelOpenFailureReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelWindowAdjustReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelDataReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelExtendedDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelEofReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelCloseReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelRequestReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelSuccessReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.ChannelFailureReceived">
            <summary>
            Occurs when <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Session.MessageReceived">
            <summary>
            Occurs when message received and is not handled by any of the event handlers
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TripleDesCipher">
            <summary>
            Implements 3DES cipher algorithm.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher">
            <summary>
            Implements DES cipher algorithm.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher.#ctor(System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher.GenerateWorkingKey(System.Boolean,System.Byte[])">
            <summary>
            Generates the working key.
            </summary>
            <param name="encrypting">if set to <c>true</c> [encrypting].</param>
            <param name="key">The key.</param>
            <returns>Generated working key.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher.ValidateKey">
            <summary>
            Validates the key.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.DesCipher.DesFunc(System.Int32[],System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Performs DES function.
            </summary>
            <param name="wKey">The w key.</param>
            <param name="input">The input.</param>
            <param name="inOff">The in off.</param>
            <param name="outBytes">The out bytes.</param>
            <param name="outOff">The out off.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TripleDesCipher.#ctor(System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TripleDesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TripleDesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TripleDesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TripleDesCipher.ValidateKey">
            <summary>
            Validates the key.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.CertificateHostAlgorithm">
            <summary>
            Implements certificate support for host algorithm.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.HostAlgorithm">
            <summary>
            Base class for SSH host algorithms.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.HostAlgorithm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.HostAlgorithm"/> class.
            </summary>
            <param name="name">The host key name.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.HostAlgorithm.Sign(System.Byte[])">
            <summary>
            Signs the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Signed data.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.HostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data.</param>
            <param name="signature">The signature.</param>
            <returns><c>True</c> is signature was successfully verifies; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.HostAlgorithm.Name">
            <summary>
            Gets the host key name.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.HostAlgorithm.Data">
            <summary>
            Gets the host key data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.CertificateHostAlgorithm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.CertificateHostAlgorithm"/> class.
            </summary>
            <param name="name">The host key name.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.CertificateHostAlgorithm.Sign(System.Byte[])">
            <summary>
            Signs the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Signed data.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.CertificateHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data.</param>
            <param name="signature">The signature.</param>
            <returns><c>True</c> if signature was successfully verified; otherwise <c>false</c>.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.CertificateHostAlgorithm.Data">
            <summary>
            Gets the host key data.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ScpClient">
            <summary>
            Provides SCP client functionality.
            </summary>
            <summary>
            Provides SCP client functionality.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.BaseClient">
            <summary>
            Serves as base class for client implementations, provides common client functionality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.#ctor(Crestron.SimplSharp.Ssh.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.BaseClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.Connect">
            <summary>
            Connects client to the server.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"> Connect failed</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.Disconnect">
            <summary>
            Disconnects client from the server.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Indicates SSH disconnect failed</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.SendKeepAlive">
            <summary>
            Sends keep-alive message to the server.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"> Indicates connection is not active</exception>
            <exception cref="T:System.InvalidOperationException"> Invalid operation was attempted</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.OnConnecting">
            <summary>
            Called when client is connecting to the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.OnDisconnected">
            <summary>
            Called when client is disconnected from the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.BaseClient.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.BaseClient"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.BaseClient.Session">
            <summary>
            Gets current session.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.BaseClient.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.BaseClient.IsConnected">
            <summary>
            Gets a value indicating whether this client is connected to the server.
            </summary>
            <value>
            	<c>true</c> if this client is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.BaseClient.KeepAliveInterval">
            <summary>
            Gets or sets the keep alive interval in seconds.
            </summary>
            <value>
            The keep alive interval in seconds.
            </value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.BaseClient.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.BaseClient.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.#ctor(Crestron.SimplSharp.Ssh.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Upload(Crestron.SimplSharp.CrestronIO.Stream,System.String)">
            <summary>
            Uploads the specified stream to the remote host.
            </summary>
            <param name="source">Stream to upload.</param>
            <param name="path">Remote host file name.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Upload(Crestron.SimplSharp.CrestronIO.Stream,System.String,System.Boolean)">
            <summary>
            Uploads the specified stream to the remote host.
            </summary>
            <param name="source">Stream to upload.</param>
            <param name="path">Remote host file name.</param>
            <param name="noQuotes">Use no quotes in SCP request</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Download(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Downloads the specified file from the remote host to the stream.
            </summary>
            <param name="filename">Remote host file name.</param>
            <param name="destination">The stream where to download remote file.</param>
            <exception cref="T:System.ArgumentException"><paramref name="filename"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="destination"/> is null.</exception>
            <remarks>Method calls made by this method to <paramref name="destination"/>, may under certain conditions result in exceptions thrown by the stream.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Download(System.String,Crestron.SimplSharp.CrestronIO.Stream,System.Boolean)">
            <summary>
            Downloads the specified file from the remote host to the stream.
            </summary>
            <param name="filename">Remote host file name.</param>
            <param name="destination">The stream where to download remote file.</param>
            <param name="noQuotes">Use no quotes in SCP request</param>
            <exception cref="T:System.ArgumentException"><paramref name="filename"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="destination"/> is null.</exception>
            <remarks>Method calls made by this method to <paramref name="destination"/>, may under certain conditions result in exceptions thrown by the stream.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.CheckReturnCode(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Checks the return code.
            </summary>
            <param name="input">The output stream.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Upload(Crestron.SimplSharp.CrestronIO.FileInfo,System.String)">
            <summary>
            Uploads the specified file to the remote host.
            </summary>
            <param name="fileInfo">The file system info.</param>
            <param name="path">The path.</param>
            <exception cref="T:System.ArgumentNullException">fileSystemInfo</exception>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileInfo"/> or <paramref name="filename"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Upload(Crestron.SimplSharp.CrestronIO.DirectoryInfo,System.String)">
            <summary>
            Uploads the specified directory to the remote host.
            </summary>
            <param name="directoryInfo">The directory info.</param>
            <param name="path">The path.</param>
            <exception cref="T:System.ArgumentNullException">fileSystemInfo</exception>
            <exception cref="T:System.ArgumentException">path</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Download(System.String,Crestron.SimplSharp.CrestronIO.FileInfo)">
            <summary>
            Downloads the specified file from the remote host to local file.
            </summary>
            <param name="filename">Remote host file name.</param>
            <param name="fileInfo">Local file information.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileInfo"/> or <paramref name="filename"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ScpClient.Download(System.String,Crestron.SimplSharp.CrestronIO.DirectoryInfo)">
            <summary>
            Downloads the specified directory from the remote host to local directory.
            </summary>
            <param name="directoryName">Remote host directory name.</param>
            <param name="directoryInfo">Local directory information.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="directoryInfo"/> or <paramref name="directoryName"/> is null.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ScpClient.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>The operation timeout.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ScpClient.BufferSize">
            <summary>
            Gets or sets the size of the buffer.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.ScpClient.Downloading">
            <summary>
            Occurs when downloading file.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.ScpClient.Uploading">
            <summary>
            Occurs when uploading file.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ProxyTypes">
            <summary>
            Specifies the type of proxy client will use to connect to server.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.ProxyTypes.None">
            <summary>No proxy server.</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.ProxyTypes.Socks4">
            <summary>A SOCKS4 proxy server.</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.ProxyTypes.Socks5">
            <summary>A SOCKS5 proxy server.</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.ProxyTypes.Http">
            <summary>A HTTP proxy server.</summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.NewKeysMessage">
            <summary>
            Represents SSH_MSG_KEXINIT message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.NewKeysMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.NewKeysMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeInit">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_INIT message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeInit.#ctor(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeInit"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeInit.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeInit.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeInit.E">
            <summary>
            Gets the E value.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestFailureMessage">
            <summary>
            Represents SSH_MSG_REQUEST_FAILURE message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_DATA message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="data">Message data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelDataMessage.Data">
            <summary>
            Gets or sets message data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationResponseMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_RESPONSE message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationResponseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationResponseMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationResponseMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationResponseMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationResponseMessage.Responses">
            <summary>
            Gets authentication responses.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo">
            <summary>
            Provides connection information when keyboard interactive authentication method is used
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.AuthenticationPrompt">
            <summary>
            Occurs when server prompts for more authentication information.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SshException">
            <summary>
            The exception that is thrown when SSH exception occurs.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ScpException">
            <summary>
            The exception that is thrown when SCP error occurred.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ScpException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ScpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ScpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ChannelDataEventArgs">
            <summary>
            Provides data for <see cref="E:Crestron.SimplSharp.Ssh.Channels.Channel.DataReceived"/> event and <see cref="E:Crestron.SimplSharp.Ssh.Channels.Channel.ExtendedDataReceived"/> events.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ChannelDataEventArgs.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ChannelDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ChannelDataEventArgs.#ctor(System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ChannelDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
            <param name="dataTypeCode">Channel data type code.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ChannelDataEventArgs.Data">
            <summary>
            Gets channel data.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ChannelDataEventArgs.DataTypeCode">
            <summary>
            Gets the data type code.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient">
            <summary>
            Crestron WebSocket Client class
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_DEF_HTTP_PORT">
            <summary>
            Websocket default HTTP port 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_DEF_SSL_SECURE_PORT">
            <summary>
            Websocket default SSL secure port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLIENT_HANDLE_INVALID">
            <summary>
            Invalid handle 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.SetClientCertificate(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Sets Client Security Certificate associated with this object.
            </summary>
            <param name="cert">The client x509 certificate object</param>
            <exception cref="T:System.NotSupportedException">This method is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
            <remarks>
            <see cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate"/> object does not contain the corresponding private key so it must be provided using a SetClientPrivateKey method.
            This method requires firmware version 1.011.xxxx or later
            </remarks>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.pWebSocketConnectAsyncCB">
            <summary>
            Websocket client asynchronous connect callback method pointer
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.pWebSocketReceiveAsyncCB">
            <summary>
            Websocket client asynchronous data receive callback method pointer
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.pWebSocketSendAsyncCB">
            <summary>
            Websocket client asynchronous data send callback method pointer
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient._Origin">
            <summary>
            Stores origin string value private variable
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSession(System.UInt32,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,System.IntPtr)">
            <summary>
            This method opens websocket session websocket server 
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy URL or ip address </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pHandle"> connection handle </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionWithHost(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,System.IntPtr)">
            <summary>
            This method opens websocket session websocket server 
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy URL or ip address </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pHandle"> connection handle </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionWithHostAndKeepAlive(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,System.IntPtr)">
            <summary>
            This method opens websocket session websocket server 
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="keepalive"> Includes "Keep-Alive" in the "Connection" header of the websocket handshake.</param>
            <param name="ProxyIpAddr"> Proxy URL or ip address </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pHandle"> connection handle </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionEx(System.UInt32,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,System.IntPtr,System.String,System.String,System.String)">
            <summary>
            This method opens websocket session websocket server 
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy URL or ip address </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pHandle"> Connection handle </param>
            <param name="Origin"> Origin URL </param>
            <param name="Protocol"> Protocol type </param>
            <param name="AddOnHeader"> Additional WebSocket header settings </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionExWithHost(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,System.IntPtr,System.String,System.String,System.String)">
            <summary>
            This method opens websocket session websocket server 
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy URL or ip address </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pHandle"> Connection handle </param>
            <param name="Origin"> Origin URL </param>
            <param name="Protocol"> Protocol type </param>
            <param name="AddOnHeader"> Additional WebSocket header settings </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionExWithHostAndKeepAlive(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,System.IntPtr,System.String,System.String,System.String)">
            <summary>
            This method opens websocket session websocket server 
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="keepalive"> Includes "Keep-Alive" in the "Connection" header of the websocket handshake.</param>
            <param name="ProxyIpAddr"> Proxy URL or ip address </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pHandle"> Connection handle </param>
            <param name="Origin"> Origin URL </param>
            <param name="Protocol"> Protocol type </param>
            <param name="AddOnHeader"> Additional WebSocket header settings </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionAsync(System.UInt32,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientConnectCallback)">
            <summary>
            This method opens asyncrouns websocket connection. The callback method returns the connection status and handle
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy ip address or URL </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pCallBack"> reference to connection callback method </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionAsyncWithHost(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientConnectCallback)">
            <summary>
            This method opens asyncrouns websocket connection. The callback method returns the connection status and handle
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy ip address or URL </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pCallBack"> reference to connection callback method </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionAsyncWithHostAndKeepAlive(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientConnectCallback)">
            <summary>
            This method opens asyncrouns websocket connection. The callback method returns the connection status and handle
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="keepalive"> Includes "Keep-Alive" in the "Connection" header of the websocket handshake.</param>
            <param name="ProxyIpAddr"> Proxy ip address or URL </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pCallBack"> reference to connection callback method </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionAsyncEx(System.UInt32,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientConnectCallback,System.String,System.String,System.String)">
            <summary>
            This method opens asyncrouns websocket connection. The callback method returns the connection status and handle
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy ip address or URL </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pCallBack"> reference to connection callback method </param>
            <param name="Origin"> Origin URL or ip address </param>
            <param name="Protocol"> Websocket protocol type </param>
            <param name="AddOnHeader"> Additional WebSocket header settings </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionAsyncExWithHost(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientConnectCallback,System.String,System.String,System.String)">
            <summary>
            This method opens asyncrouns websocket connection. The callback method returns the connection status and handle
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="ProxyIpAddr"> Proxy ip address or URL </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pCallBack"> reference to connection callback method </param>
            <param name="Origin"> Origin URL or ip address </param>
            <param name="Protocol"> Websocket protocol type </param>
            <param name="AddOnHeader"> Additional WebSocket header settings </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientOpenSessionAsyncExWithHostAndKeepAlive(System.UInt32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.UInt32,System.String,System.String,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientConnectCallback,System.String,System.String,System.String)">
            <summary>
            This method opens asyncrouns websocket connection. The callback method returns the connection status and handle
            </summary>
            <param name="port"> the server port number </param>
            <param name="URL"> the server connection URL address </param>
            <param name="Host"> The host of the server. </param>
            <param name="ssl_support"> ssl supported (true=ssl supported) </param>
            <param name="verifyservercert"> verify server certificate (true= verification on) </param>
            <param name="keepalive"> Includes "Keep-Alive" in the "Connection" header of the websocket handshake.</param>
            <param name="ProxyIpAddr"> Proxy ip address or URL </param>
            <param name="ProxyPort"> Proxy port number </param>
            <param name="ProxyUserName"> Proxy username for authentication </param>
            <param name="ProxyPassword"> Proxy password for authentication </param>
            <param name="pCallBack"> reference to connection callback method </param>
            <param name="Origin"> Origin URL or ip address </param>
            <param name="Protocol"> Websocket protocol type </param>
            <param name="AddOnHeader"> Additional WebSocket header settings </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientRead(System.UInt32,System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            This method reads websocket data
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pRdData"> received data array </param>
            <param name="RdDataMaxLen"> received data array length </param>
            <param name="pPacketLen"> received packet length </param>
            <param name="pOpcode"> received packet type </param>
            <param name="blocking"> if true returns when either data is received or if error occurs </param>
            <returns> returns number of bytes received or error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientReadAsync(System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientReceiveCallback)">
            <summary>
            This method sets up the async read call back
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pReadCallBack"> reference to callback method which is called when data is received </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientWrite(System.UInt32,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            This method sends data to websocket server
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pWrtData"> data to send </param>
            <param name="WrtDataLen"> data length </param>
            <param name="pOpcode"> packet type being sent </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientWriteSegment(System.UInt32,System.IntPtr,System.UInt32,System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL)">
            <summary>
            This method sends segmented data to websocket server, large packet are sent in 3 or more packets 
            Segmented packets are sent as LWS_WS_OPCODE_07__CONTINUATION packet type. 
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pWrtData"> data to send </param>
            <param name="WrtDataLen"> data length </param>
            <param name="pOpcode"> packet type being sent </param>
            <param name="Segment">  packet segment control e.g. first segment, middle segment(s), last segment enums </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientWriteAsync(System.UInt32,System.IntPtr,System.UInt32,System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientSendCallback)">
            <summary>
            This method sends asynchronous data to websocket server
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pWrtData"> data to send </param>
            <param name="WrtDataLen"> data length </param>
            <param name="pOpcode"> packet type being sent </param>
            <param name="pWriteCallBack"> reference to callback method which is called after data is sent </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientWriteAsyncSegment(System.UInt32,System.IntPtr,System.UInt32,System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientSendCallback,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL)">
            <summary>
            This method writes segmented asynchronous data to websocket server
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pWrtData"> data to send </param>
            <param name="WrtDataLen"> data length </param>
            <param name="pOpcode"> packet type being sent </param>
            <param name="pWriteCallBack"> reference to callback method which is called after data is sent </param>
            <param name="Segment">  packet segment control e.g. first segment, middle segment(s), last segment enums </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientCloseSession(System.UInt32,System.UInt32)">
            <summary>
            This method closes the websocket connection 
            </summary>
            <param name="handle"> connection handle </param>
            <param name="ClosingReason"> reason for closing connection </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if call was successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientSetCert(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            This method sets the client cert
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pRdData"> received data array </param>
            <param name="RdDataMaxLen"> received data array length </param>
            <returns> returns number of bytes received or error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientClearCert(System.UInt32)">
            <summary>
            This method clears the client cert
            </summary>
            <param name="handle"> connection handle </param>
            <returns> returns number of bytes received or error </returns>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.gch_WebSocketConnectAsyncCallBack">
            <summary>
            Global handle for asynchronous connection callbacks
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.gch_pWebSocketReceiveAsyncCallBack">
            <summary>
             Global handle for asynchronous packet receive callback  
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.gch_pWebSocketSendAsyncCallBack">
            <summary>
            Global handle for asynchronous packet send callback
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient._webSockets">
            <summary>
            Dictionary to translate between a socket handle and the target websocket client
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient._webSocketLookupLock">
            <summary>
            A lock to be able to operate safely on the above dictionary
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.#cctor">
            <summary>
            Static constructor is used to setup 1-time static callback methods.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.#ctor">
            <summary>
            Class constructor, default parameters 
            </summary>
            <remarks>
            Note: Crestron defaults KeepAlive to true.  We have noticed some servers do not handle this correctly.  
            Please check with your server and try setting KeepAlive to false when encountering issues connecting.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Finalize">
            <summary>
            Class destructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Connect">
            <summary>
            This method establishes connection to websocket server.
            Note: If Origin, Protocol, and AddOnHeader are needed please use ConnectEx() instead.
            </summary>
            <returns> it returns WEBSOCKET_CLIENT_SUCCESS if connection was established </returns>
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ConnectEx">
            <summary>
            This method establishes connection to websocket server. Same as Connect(), with the following additional parameters: Origin, Protocol, AddOnHeader.
            If Origin and Protocol are defined and not null they will passed on to the server.  Some servers require the Origin be defined to block unauthorized access.
            The AddOnHeader is used for custom HTTP header which must comply with HTTP header specification RFC 2616 and Websocket specification RFC6455, 
            for example "Protocol: Chat V3.0".
            This method requires minimum firmware version 1.012.0007.
            </summary>
            <returns> it returns WEBSOCKET_CLIENT_SUCCESS if connection was established </returns>
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ConnectAsyncCB(System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES)">
            <summary>
            This method is called by the websocket library after the websocket connection process is ended
            </summary>
            <param name="handle"> connection handle </param>
            <param name="error"> error code is set to WEBSOCKET_CLIENT_SUCCESS if connection was successful </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS on success </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ConnectAsync">
            <summary>
            This method posts a request for connection to websocket server. When the server connection is established the callback method gets called.
            </summary>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS on success </returns>
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ConnectAsyncEx">
            <summary>
            This method posts a request for connection to websocket server. When the server connection is established the callback method gets called.
            This method supports the Websocket header commands Origin, Protocol and additional user defined header commands.
            This method requires minimum firmware version 1.012.0007.
            </summary>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS on success </returns>
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Receive(System.Byte[]@,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES@)">
            <summary>
            This method receives data from websocket server 
            </summary>
            <param name="data"> received data </param>
            <param name="opcode"> received packet type </param>
            <returns> returns result codes </returns> 
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientAsyncReceiveCB(System.UInt32,System.IntPtr,System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES)">
            <summary>
            This asynchronous callback method is called when data is received from the websocket server
            </summary>
            <param name="handle"> connection handle </param>
            <param name="data"> received data </param>
            <param name="datalen"> received data length </param>
            <param name="opcode"> received packet type </param>
            <param name="error"> error code types, returns  </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS on successful call </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ProcessReceiveAsyncResult(System.IntPtr,System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES)">
            <summary>
            Instance handler for the above static callback
            </summary>
            <param name="data"> received data </param>
            <param name="datalen"> received data length </param>
            <param name="opcode"> received packet type </param>
            <param name="error"> error code types, returns  </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS on successful call </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ReceiveAsync">
            <summary>
            This method is used to setup for asynchronous data packet reception from the websocket server  
            </summary>
            <returns> if successful WEBSOCKET_CLIENT_PENDING result code is returned </returns>
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Send(System.Byte[],System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES)">
            <summary>
            This method sends websocket packets to the websocket server
            </summary>
            <param name="data"> data packet to be sent </param>
            <param name="datalen"> data length </param>
            <param name="opcode"> packet type e.g. LWS_WS_OPCODE_07__TEXT_FRAME or LWS_WS_OPCODE_07__BINARY_FRAME etc.. </param>
            <returns> if packet was successfully sent the WEBSOCKET_CLIENT_SUCCESS is returned </returns>           
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Send(System.Byte[],System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL)">
            <summary>
            This method sends websocket packets to the websocket server
            </summary>
            <param name="data"> data packet to be sent </param>
            <param name="datalen"> data length </param>
            <param name="opcode"> packet type e.g. LWS_WS_OPCODE_07__TEXT_FRAME or LWS_WS_OPCODE_07__BINARY_FRAME etc.. </param>
            <param name="segment"> packet segment control e.g. first segment, middle segment(s) or last segment </param>
            <returns> if packet was successfully sent the WEBSOCKET_CLIENT_SUCCESS is returned </returns>           
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientAsyncSendCB(System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES)">
            <summary>
            This method is called after the asynchronous data has been transmitted 
            </summary>
            <param name="handle"> connection handle </param>
            <param name="error"> error code, returns WEBSOCKET_CLIENT_SUCCESS if data was transmitetd successfully </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS on successful execution </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ProcessSendAsyncResult(Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES)">
            <summary>
            Instance item handler method for the above static callback
            </summary>
            <param name="error"> error code, returns WEBSOCKET_CLIENT_SUCCESS if data was transmitetd successfully </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS on successful execution </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.SendAsync(System.Byte[],System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES)">
            <summary>
            This method sends packet to the websocket server asynchronously, the callback method is called after the data has been transmitted
            </summary>
            <param name="data"> data packet to be transmitted </param>
            <param name="data_len"> data packet length </param>
            <param name="opcode"> packet type e.g. LWS_WS_OPCODE_07__TEXT_FRAME or LWS_WS_OPCODE_07__BINARY_FRAME etc.. </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if successful </returns>  
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.SendAsync(System.Byte[],System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL)">
            <summary>
            This method sends packet to the websocket server asynchronously, the callback method is called after the data has been transmitted
            </summary>
            <param name="data"> data packet to be transmitted </param>
            <param name="data_len"> data packet length </param>
            <param name="opcode"> packet type e.g. LWS_WS_OPCODE_07__TEXT_FRAME or LWS_WS_OPCODE_07__BINARY_FRAME etc.. </param>
            <param name="segment"> packet segment first segment, middle segment(s) or last segment </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if successful </returns>  
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Disconnect">
            <summary>
            This method closes websocket connection
            </summary>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if successful </returns>
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.DisconnectAsync(System.Object)">
            <summary>
            This method closes websocket connection asynchronously.  The DisconnectCallBack will be called once the disconnect is complete.
            </summary>
            <param name="obj"> User specified object passed to the callback.</param>
            <returns> 
            Returns WEBSOCKET_CLIENT_PENDING if successful and we are waiting for completion. 
            </returns>
            <exception cref="T:System.ObjectDisposedException">Object has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientReadData(System.UInt32,System.Byte[]@,System.UInt32@)">
            <summary>
            This method reads data from the websocket library
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pRdData"> received data buffer </param>
            <param name="pOpcode"> packet type received TEXT, BINARY etc </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientWriteData(System.UInt32,System.Byte[],System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL)">
            <summary>
            This method writes data to the websocket library
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pdata"> data to write </param>
            <param name="datalen"> data length </param>
            <param name="opcode"> packet type </param>
            <param name="segment"> </param>
            <returns> it return WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientWriteAsyncData(System.UInt32,System.Byte[],System.UInt32,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL,Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientSendCallback)">
            <summary>
            This method post data for writing to websocket server. When the data is written the result is returned in the callback method 
            </summary>
            <param name="handle"> connection handle </param>
            <param name="pdata"> data to write </param>
            <param name="datalen"> data length </param>
            <param name="opcode"> packet type </param>
            <param name="segment"> segment control </param>
            <param name="pCallBack"> callback method called when data has been transmitted </param>
            <returns> returns WEBSOCKET_CLIENT_SUCCESS if successful </returns>       
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Dispose">
            <summary>
            Dispose releases all resources used by WebSocketClient.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Dispose(System.Boolean)">
            <summary>
            Dispose releases all resources used by WebSocketClient.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Connectpending">
            <summary>
            Set/Get asynchronous websocket connection progress flag 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.PortToUse">
            <summary>
            Returns the port from _URL if _Port is null.  If both are null then return WEBSOCKET_DEF_HTTP_PORT.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Port">
            <summary>
            Set/Get websocket server port number.  If set to null the default port for the URL's schema will be used.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.SSL">
            <summary>
            Set/Get websocket SSL option
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.VerifyServerCertificate">
            <summary>
            Get/Set Verify server certificate option on secure SSL connection
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.KeepAlive">
            <summary>
            Setting to true will include the "Keep-Alive" token in the "Connection" header of the websocket handshake.
            Otherwise will not include the token.
            </summary>
            <remarks>
            Note: Crestron defaults KeepAlive to true.  We have noticed some servers do not handle this correctly.  
            Please check with your server and try setting KeepAlive to false when encountering issues connecting.
            This property is only supported in Firmware Version v1.501.0035 or above.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.URL">
            <summary>
            Get/Set URL address string, do not add carriage return and line feed
            </summary>
            <exception cref="T:System.ArgumentException"> This exception is thrown if URL has invalid value </exception>   
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Host">
            <summary>
            Set/Get Host is used in the Host field of the WebSocket handshake header.  Do not add carriage return and line feed.
            </summary>
            <remarks>Host is only supported in Firmware Version v1.501.0035 or above.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ProxyPort">
            <summary>
            Set/Get Proxy connection Port number   
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ProxyIpAddr">
            <summary>
            Set/Get Proxy connection IP Address string, do not add carriage return and line feed 
            </summary>
            <exception cref="T:System.ArgumentException"> This exception is thrown if ProxyIpAddr is invalid </exception>  
            <exception cref="T:System.ArgumentNullException"> This exception is thrown if proxy ip address is null </exception> 
            <exception cref="T:System.FormatException"> This exception is thrown if proxy ip address is invalid </exception>             
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ProxyUsername">
            <summary>
            Set/Get Proxy authentication user name string, do not add carriage return and line feed  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ProxyPassword">
            <summary>
            Set/Get Proxy authentication password string, do not add carriage return and line feed 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Protocol">
            <summary>
            Set/Get WebSocket protocol string, optional header, do not add carriage return and line feed 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Origin">
            <summary>
            Set/Get WebSocket origin string, optional header, do not add carriage return and line feed
            </summary>
            <exception cref="T:System.ArgumentException"> This exception is thrown if Origin has invalid value or is not set </exception>   
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.AddOnHeader">
             <summary>
             Set/Get Add Websocket header string, must include proper websocket command settings. Each command must be followed by a colon, value 
             and ended with carriage return line feed.  The last command must NOT end with carriage return line feed.
            
             Example:
                    Origin: HTTP://www.test.com \r\n 
                    Protocol: SuperChat 
                    
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ConnectionCallBack">
            <summary>
            Set/Get Reference to asynchronous connection callback method 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.DisconnectCallBack">
            <summary>
            Set/Get Reference to asynchronous Disconnect callback method 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.ReceiveCallBack">
            <summary>
            Set/Get Reference to asynchronous receive callback method 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.SendCallBack">
            <summary>
            Set/Get Reference to asynchronous send callback method 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Handle">
            <summary>
            Get/Set handle of websocket connection
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.Connected">
            <summary>
            Returns websocket connection status 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.EthernetAdapter">
            <summary>
            Returns the Ethernet adapter on which the socket resides
            EthernetAdapterType.EthernetLANAdapter indicates that the socket is on the LAN Adapter
            EthernetAdapterType.EthernetCSAdapter indicates the Control Subnet side (for a system with a router)
            EthernetAdapterType.EthernetUnknownAdapter indicates that the socket is not initialized as yet
            EthernetAdapterType.EthernetLAN2Adapter indicates the second LAN Adapter
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS">
            <summary>
             Enumerations of possible reasons for closing the websocket 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_NORMAL_CLOSE">
            <summary>
            1000 indicates a normal closure, meaning that the purpose for which the connection was established has been fulfilled. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_SERVER_OR_BORWSER_GOINGAWAY">
            <summary>
            1001 indicates that an endpoint is "going away", such as a server going down or a browser having navigated away from a page.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_PROTOCOL_ERROR">
            <summary>
            1002 indicates that an endpoint is terminating the connection due to a protocol error.  
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_ON_INVALID_DATA">
            <summary>
            1003 indicates that an endpoint is terminating the connection
            because it has received a type of data it cannot accept (e.g., an
            endpoint that understands only text data MAY send this if it
            receives a binary message).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_FUTURE">
            <summary>
            1004 Reserved. The specific meaning might be defined in the future.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_NOSTATUS_CODE_PRESENT">
            <summary>
            1005 is a reserved value and MUST NOT be set as a status code in a
            Close control frame by an endpoint. It is designated for use in
            applications expecting a status code to indicate that no status code was actually present.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_ABNORMAL_CONNECTION_CLOSING">
            <summary>
            1006 is a reserved value and MUST NOT be set as a status code in a
            Close control frame by an endpoint. It is designated for use in
            applications expecting a status code to indicate that the
            connection was closed abnormally, e.g., without sending or receiving a Close control frame.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_INCONSISTENT_MESSAGE_RCVED">
            <summary>
            1007 indicates that an endpoint is terminating the connection because it has received data within a message that was not
            consistent with the type of the message (e.g., non-UTF-8 [RFC3629] data within a text message).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_MSG_RCVED_VIOLATING_POLICY">
            <summary>
            1008 indicates that an endpoint is terminating the connection because it has received a message that violates its policy. This
            is a generic status code that can be returned when there is no other more suitable status code (e.g., 1003 or 1009) or if there 
            is a need to hide specific details about the policy.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_BIG_MSG_RCVED">
            <summary>
            1009 indicates that an endpoint is terminating the connection because it has received a message that is too big for it to process.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_PROPER_EXTENSION_REPLY_NOT_RCVED">
            <summary>
            1010 indicates that an endpoint (client) is terminating the connection because it has expected the server to negotiate one or
            more extension, but the server didn’t return them in the response message of the WebSocket handshake. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_ENCOUNTERED_UNEXPECTED_CONDITION">
            <summary>
            1011 indicates that a server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_CLOSE_REASONS.WEBSOCKET_CLOSING_TLS_HANDSHAKE_ERROR">
            <summary>
            1015 is a reserved value and MUST NOT be set as a status code in a Close control frame by an endpoint. It is designated for use in
             applications expecting a status code to indicate that the connection was closed due to a failure to perform a TLS handshake 
             (e.g., the server certificate can’t be verified). 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES">
            <summary>
             Enumerations of websocket packet types 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES.LWS_WS_OPCODE_07__CONTINUATION">
            <summary>
            continuation packet
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES.LWS_WS_OPCODE_07__TEXT_FRAME">
            <summary>
            text packet type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES.LWS_WS_OPCODE_07__BINARY_FRAME">
            <summary>
            binary packet type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES.LWS_WS_OPCODE_07__NOSPEC__MUX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES.LWS_WS_OPCODE_07__CLOSE">
            <summary>
            packet close control opcode 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES.LWS_WS_OPCODE_07__PING">
            <summary>
            ping control packet
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_TYPES.LWS_WS_OPCODE_07__PONG">
            <summary>
            pong control packet
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES">
            <summary>
            Enumerations of Websocket library method return codes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_ALREADY_CONNECTED">
            <summary>
            websocket client connection is already open
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_PENDING">
            <summary>
            websocket waiting for activity to finish
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SUCCESS">
            <summary>
            websocket success
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_ERROR">
            <summary>
            websocket client read or write error 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_READ_BUFFER_SIZE_INVALID">
            <summary>
            invalid websocket client read buffer size 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_POINTER">
            <summary>
            invalid pointer passed 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_MEMORY_ALLOC_ERROR">
            <summary>
            memory allocation error
            </summary>   
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_IPADDR">
            <summary>
            invalid ip address
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_PATH">
            <summary>
            invalid path in URL string
            </summary>	
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_HOSTNAME">
            <summary>
            invalid hostname in URL string
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_URL">
            <summary>
            invalid URL string
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INSUFFICIENT_BUFFER">
            <summary>
            Insufficient buffer size
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_HOSTNAME_LOOKUP_BY_IPADDR_FAILED">
            <summary>
            hostname lookup by ipaddr failed
            </summary>    	
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_IPADDR_LOOKUP_BY_HOSTNAME_FAILED">
            <summary>
            ip-addr by hostname lookup failed
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_IPADDR_FAMILY_NOT_SUPPORTED">
            <summary> 
            ip-addr family setting not supported 
            </summary>	
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_HOSTNAME_AND_IPADDR">
            <summary>
            invalid ipaddr and hostname
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_PROXY_IPADDR">
            <summary>
            invalid proxy ip address
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_PROXY_HOSTNAME_LOOKUP_BY_IPADDR_FAILED">
            <summary>
            proxy hostname lookup by ipaddr failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_PROXY_IPADDR_LOOKUP_BY_HOSTNAME_FAILED">
            <summary>
            proxy ipaddr lookup by hostname failed
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SOCKET_CREATION_FAILED">
            <summary>
            socket creation failed
            </summary>	
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SOCKET_CONNECTION_FAILED">
            <summary>
            socket connection failed 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_TCP_SOCKET_SEND_ERROR">
            <summary>
            websocket transmission error 
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SSL_RECEIVE_ERROR">
            <summary>
            websocket ssl reception error 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SOCKET_RECEIVE_ERROR">
            <summary>
            websocket tcp socket reception error 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SSL_LIBRARY_INIT_FAILED">
            <summary>
            websocket ssl library initialization failed
            </summary>   
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SSL_CONTEXT_ALLOC_FAILED">
            <summary>
            websocket ssl context allocation failed
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SSL_OPTION_SETTING_FAILED">
            <summary>
            websocket ssl option configuration failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SERVER_CERTIFICATE_FAILED">
            <summary>
            websocket server certificate check failed
            </summary>	
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SSL_CONNECTION_FAILED">
            <summary>
            websocket ssl connection failed
            </summary>		
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SSL_SOCKET_SEND_ERROR">
            <summary>
            websocket ssl socket transmission error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_HTTP_HANDSHAKE_TOKEN_ERROR">
            <summary>
            websocket http handshake token error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_HTTP_HANDSHAKE_SECURITY_KEY_ERROR">
            <summary>
            websocket http handshake security key error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_HTTP_HANDSHAKE_RESPONSE_ERROR">
            <summary>
            websocket http handshake response error 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_LINKLIST_INSERT_FAILED">
            <summary>
            websocket could not add entry to the link list 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_LINKLIST_OBTAIN_HANDLE_FAILED">
            <summary>
            websocket client could not get free handle
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_ASYNC_READ_CB_ALREADY_SET">
            <summary>
            websocket client async call is already set
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_SOCKET_SELECT_ERROR">
            <summary>
            websocket client socket poll error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_ASYNC_WRITE_BUSY_SENDING">
            <summary>
            websocket client async writer is busy sending error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_HANDLE">
            <summary>
            websocket client async could not find handle
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_PACKET_CTLFLAG">
            <summary>
            websocket client invalid packet control flag 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_INVALID_PACKET_OPCODE_CTLFLAG">
            <summary>
            websocket client invalid packet control flag and or opcode pair
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_RESULT_CODES.WEBSOCKET_CLIENT_CLOSE_IN_PROGRESS">
            <summary>
            websocket client in the process of clossing
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL">
            <summary>
             Enumerations websocket packet segment control code 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL.WEBSOCKET_CLIENT_PACKET_BEGIN">
            <summary>
            control code used for sending first segment of LWS_WS_OPCODE_07__CONTINUATION packet type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL.WEBSOCKET_CLIENT_PACKET_MIDDLE">
            <summary>
            control code used for sending 2nd, 3rd, .. segment of LWS_WS_OPCODE_07__CONTINUATION packet type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WEBSOCKET_PACKET_SEGMENT_CONTROL.WEBSOCKET_CLIENT_PACKET_END">
            <summary>
            control code used for sending last segment of LWS_WS_OPCODE_07__CONTINUATION packet type
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientAsyncConnectCallback">
            <summary>
            Delegate for asynchronous connect callback method 
            </summary>
            <param name="error"> error code returned on callback </param>
            <returns> return WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientAsyncDisconnectCallback">
            <summary>
            Delegate for asynchronous disconnect callback method 
            </summary>
            <param name="error"> error code returned on callback </param>
            <param name="obj">User object that was passed in from calling DisconnectAsync.</param>
            <returns> return WEBSOCKET_CLIENT_SUCCESS if successful </returns>                                             
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientConnectCallback">
            <summary>
            Delegate for asynchronous connect callback method  
            </summary>
            <param name="handle"> connection handle used for reading data, writing data and closing connections </param>
            <param name="error"> error code returned on callback </param>
            <returns> return WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientAsyncReceiveCallback">
            <summary>
            Callback delegate for asynchronous data receive method for user application
            </summary>
            <param name="data"> received data </param>
            <param name="datalen"> length of received data </param>
            <param name="opcode"> opcode of packet type received </param>
            <param name="error"> error code returned on callback </param>
            <returns> return WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientReceiveCallback">
            <summary>
            Delegate for asynchronous data receive callback method  
            </summary>
            <param name="handle"> connection handle </param>
            <param name="data"> received data </param>
            <param name="datalen"> length of received data </param>
            <param name="opcode"> opcode of packet type received </param>
            <param name="error"> error code returned on callback </param>
            <returns> return WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientAsyncSendCallback">
            <summary>
            Delegate for asynchronous data send callback method for user application
            </summary>
            <param name="error"> error code returned on callback </param>
            <returns> return WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronWebSocketClient.WebSocketClient.WebSocketClientSendCallback">
            <summary>
             Delegate for asynchronous data transmit callback method 
            </summary>
            <param name="handle"> connection handle </param>
            <param name="error"> error code returned on callback </param>
            <returns> return WEBSOCKET_CLIENT_SUCCESS if successful </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronQueue">
            <summary>
            Fixed-size queue that supports concurrent access and blocking for specified amounts of time while performing operations
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronQueue`1">
            <summary>
            Fixed-size generic type queue that supports concurrent access and blocking for specified amounts of time while performing operations
            </summary>
            <typeparam name="T">The element type of the queue</typeparam>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronQueue`1._criticalSection">
            <summary>
            Critical section used to provide threading protection of the internal queue
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.#ctor(System.Int32)">
            <summary>
            Create a new queue of a fixed size
            </summary>
            <param name="capacity">Capacity of the queue (stays constant)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the specified capacity of the queue is less than 1</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.#ctor">
            <summary>
            Create a new queue of the default size (5 elements maximum)
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Contains(`0)">
            <summary>
            Determines whether an element is currently in the queue
            </summary>
            <param name="element">The element to be located in the queue</param>
            <returns>Whether the element is currently in the queue</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Peek">
            <summary>
            Returns the element at the beginning of the queue without removing it
            </summary>
            <returns>Element at the beginning of the queue, null if the queue is empty</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Enqueue(`0)">
            <summary>
            Add an element to the end of the queue and block indefinitely until the element can be added.
            </summary>
            <param name="element">Element to be added to the queue</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Enqueue(`0,System.UInt32)">
            <summary>
            Add an element to the end of the queue, but only block for the specified amount of time
            The addition will be continuously attempted until the end of the specified amount of time
            Enqueue(element, 0) is equivalent to TryToEnqueue(element)
            </summary>
            <param name="element">Element to be added to the queue</param>
            <param name="time_out">Time out in milliseconds</param>
            <returns>Whether the addition was successful or not successful and whether it happened within the time period</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Dequeue">
            <summary>
            Remove an object from the queue and block indefinitely until an object can be removed
            </summary>
            <returns>Object from the queue</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Dequeue(`0@)">
            <summary>
            Remove an object from the queue and block indefinitely until an object can be removed
            </summary>
            <param name="objectDequeued">Returns the element which was dequeued. This element could be null</param>
            <returns> A boolean indicating whether we were successfully able to dequeue an element from the queue or not</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Dequeue(System.UInt32)">
            <summary>
            Remove an object  from the queue, but only block for the specified amount of time
            Dequeue(0) is equivalent to TryToDequeue()
            </summary>
            <param name="time_out">Time out in milliseconds</param>
            <returns>First object of the queue, when the removal was successful and it happened within the time period, or null, when the removal was not and it did not happen within the time period</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Dequeue(System.UInt32,`0@)">
            <summary>
            Remove an object from the queue, but only block for the specified amount of time
            Dequeue with a timeout of 0 is equivalent to TryToDequeue()
            </summary>
            <param name="time_out">Time out in milliseconds</param>
            <param name="objectDequeued">Returns the element which was dequeued. This element could be null</param>
            <returns> A boolean indicating whether we were successfully able to dequeue an element from the queue or not</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.TryToEnqueue(`0)">
            <summary>
            Attempt to add an element to the end of the queue and do not block
            </summary>
            <param name="element">Element to be added, if successful</param>
            <returns>Whether the addition was successful or not successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.TryToDequeue(`0@)">
            <summary>
            Attempt to remove an element from the queue and do not block
            </summary>
            <param name="dequeuedElement"> Returns the element which was dequeued. This element could be a null</param>
            <returns> true if we were successfully able to dequeue an element. false if we were unable to dequeue an element</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.TryToDequeue">
            <summary>
            Attempt to remove an element from the queue and do not block
            </summary>
            <returns>First object of the queue, when the removal was successful, or null, when the removal was not</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.GetEnumerator">
            <summary>
            Returns a generic enumerator that iterates through the queue.
            </summary>
            <returns>Returns an enumerator that iterates through a collection.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the Queue's elements to an existing one-dimensional array, starting at the specified array index.
            </summary>
            <param name="array">Destination of the elements.</param>
            <param name="index">Index at which copying begins</param>
            <exception cref="T:System.ArgumentNullException">Destination array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is less than zero.</exception>
            <exception cref="T:System.ArgumentException">Index is equal to or greater than the length of the destination array.  -or- The number of 
            elements in the source Queue is greater than the available space from index to the end of the destination array.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Clear">
            <summary>
            Remove all elements from the CrestronQueue.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.Dispose">
            <summary>
            Clean up of unmanaged resources
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Return the queue class's enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronQueue`1.Size">
            <summary>
            Get the size of the queue
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronQueue`1.IsEmpty">
            <summary>
            Whether the queue is empty (all the slots are not taken)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronQueue`1.IsFull">
            <summary>
            Whether the queue is full (there are no slots remaining)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronQueue`1.Count">
            <summary>
            Number of elements currently in the queue
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronQueue`1.Disposed">
            <summary>
            Property to determine if this object has been disposed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue.#ctor(System.Int32)">
            <summary>
            Create a new queue of a fixed size
            </summary>
            <param name="capacity">Capacity of the queue (stays constant)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the specified capacity of the queue is less than 1</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronQueue.#ctor">
            <summary>
            Create a new queue of the default size (5 elements maximum)
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ShellStream">
            <summary>
            Contains operation for working with SSH Shell.
            </summary>
            <summary>
            Represents instance of the SSH shell object
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Finalize">
            <summary>
            Destructor for ShellStream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            This method is not supported.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.SetLength(System.Int64)">
            <summary>
            This method is not supported.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Expect(Crestron.SimplSharp.Ssh.ExpectAction[])">
            <summary>
            Expects the specified expression and performs action when one is found.
            </summary>
            <param name="expectActions">The expected expressions and actions to perform.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Expect(System.TimeSpan,Crestron.SimplSharp.Ssh.ExpectAction[])">
            <summary>
            Expects the specified expression and performs action when one is found.
            </summary>
            <param name="timeout">Time to wait for input.</param>
            <param name="expectActions">The expected expressions and actions to perform, if the specified time elapsed and expected condition have not met, that method will exit without executing any action.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.BeginExpect(Crestron.SimplSharp.Ssh.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.BeginExpect(Crestron.SimplSharp.CrestronIO.AsyncCallback,Crestron.SimplSharp.Ssh.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="callback">The callback.</param>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.BeginExpect(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object,Crestron.SimplSharp.Ssh.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.BeginExpect(System.TimeSpan,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object,Crestron.SimplSharp.Ssh.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.EndExpect(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
            <summary>
            Ends the execute.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>Returns the value generated by the async operation</returns>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Expect(System.String)">
            <summary>
            Expects the expression specified by text.
            </summary>
            <param name="text">The text to expect.</param>
            <returns>
            Text available in the shell that ends with expected text.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Expect(System.String,System.TimeSpan)">
            <summary>
            Expects the expression specified by text.
            </summary>
            <param name="text">The text to expect.</param>
            <param name="timeout">Time to wait for input.</param>
            <returns>
            Text available in the shell that ends with expected text, if the specified time elapsed returns null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Expect(System.Text.RegularExpressions.Regex)">
            <summary>
            Expects the expression specified by regular expression.
            </summary>
            <param name="regex">The regular expression to expect.</param>
            <returns>Text available in the shell that contains all the text that ends with expected expression.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Expect(System.Text.RegularExpressions.Regex,System.TimeSpan)">
            <summary>
            Expects the expression specified by regular expression.
            </summary>
            <param name="regex">The regular expression to expect.</param>
            <param name="timeout">Time to wait for input.</param>
            <returns>
            Text available in the shell that contains all the text that ends with expected expression, if the specified time elapsed returns null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.ReadLine">
            <summary>
            Reads the line from the shell. If line is not available it will block the execution and will wait for new line.
            </summary>
            <returns>The line read from the shell.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.ReadLine(System.TimeSpan)">
            <summary>
            Reads the line from the shell. If line is not available it will block the execution and will wait for new line.
            </summary>
            <param name="timeout">Time to wait for input.</param>
            <returns>
            The line read from the shell, if the specified time elapsed returns null.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Read">
            <summary>
            Reads text available in the shell.
            </summary>
            <returns>The text available in the shell.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Write(System.String)">
            <summary>
            Writes the specified text to the shell.
            </summary>
            <param name="text">The text to be written to the shell.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.WriteLine(System.String)">
            <summary>
            Writes the line to the shell.
            </summary>
            <param name="line">The line to be written to the shell.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ShellStream.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for the handle to be signaled or for an error to occurs.
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.ShellStream.DataReceived">
            <summary>
            Occurs when data was received.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.ShellStream.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ShellStream.DataAvailable">
            <summary>
            Gets a value that indicates whether data is available on the <see cref="T:Crestron.SimplSharp.Ssh.ShellStream"/> to be read.
            </summary>
            <value>
              <c>true</c> if data is available to be read; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ShellStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ShellStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ShellStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ShellStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
              
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ShellStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <returns>The current position within the stream.</returns>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Shell">
            <summary>
            Represents instance of the SSH shell object
            </summary>
            <summary>
            Represents instance of the SSH shell object
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Shell.#ctor(Crestron.SimplSharp.Ssh.Session,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Shell"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal mode.</param>
            <param name="bufferSize">Size of the buffer for output stream.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Shell.Start">
            <summary>
            Starts this shell.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">Shell is started.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Shell.Stop">
            <summary>
            Stops this shell.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">Shell is not started.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Shell.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Shell.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Shell.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.Session"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Shell.IsStarted">
            <summary>
            Gets a value indicating whether this shell is started.
            </summary>
            <value>
            	<c>true</c> if started is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Shell.Starting">
            <summary>
            Occurs when shell is starting.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Shell.Started">
            <summary>
            Occurs when shell is started.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Shell.Stopping">
            <summary>
            Occurs when shell is stopping.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Shell.Stopped">
            <summary>
            Occurs when shell is stopped.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.Shell.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.Requests.SftpLinkRequest.#ctor(System.UInt32,System.UInt32,System.String,System.String,System.Boolean,System.Action{Crestron.SimplSharp.Ssh.Sftp.Responses.SftpStatusResponse})">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.Requests.SftpLinkRequest"/> class.
            </summary>
            <param name="protocolVersion">The protocol version.</param>
            <param name="requestId">The request id.</param>
            <param name="newLinkPath">Specifies the path name of the new link to create.</param>
            <param name="existingPath">Specifies the path of a target object to which the newly created link will refer.  In the case of a symbolic link, this path may not exist.</param>
            <param name="isSymLink">if set to <c>false</c> the link should be a hard link, or a second directory entry referring to the same file or directory object.</param>
            <param name="statusAction">The status action.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA2HashBase">
            <summary>
            SHA256 algorithm implementation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA2HashBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA512Hash"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA2HashBase.AdjustByteCounts">
            <summary>
            Adjust the byte counts so that byteCount2 represents the upper long (less 3 bits) word of the byte count.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA2HashBase.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA2HashBase.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA512Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA512Hash.InputBlockSize">
            <summary>
            When overridden in a derived class, gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA512Hash.OutputBlockSize">
            <summary>
            When overridden in a derived class, gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash">
            <summary>
            SHA1 algorithm implementation
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Routes data written to the object into the hash algorithm for computing the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="ibStart">The offset into the byte array from which to begin using data.</param>
            <param name="cbSize">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA1Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash">
            <summary>
            
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.InternalInitialize">
            <summary>
            Reset the chaining variables to the IV values.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.F1(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rounds 0-15
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.F2(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rounds 16-31
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.F3(System.Int32,System.Int32,System.Int32)">
            <summary>
            ounds 32-47
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.F4(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rounds 48-63
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.F5(System.Int32,System.Int32,System.Int32)">
            <summary>
            ounds 64-79
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.RIPEMD160Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding">
            <summary>
            Base class for cipher padding implementations
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding.Pad(System.Int32,System.Byte[])">
            <summary>
            Pads specified input to match block size.
            </summary>
            <param name="blockSize">Size of the block.</param>
            <param name="input">The input.</param>
            <returns>Padded data array.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest"/> class.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="preferred">The preferred.</param>
            <param name="maximum">The maximum.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Minimum">
            <summary>
            Gets or sets the minimal size in bits of an acceptable group.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Preferred">
            <summary>
            Gets or sets the preferred size in bits of the group the server will send.
            </summary>
            <value>
            The preferred.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Maximum">
            <summary>
            Gets or sets the maximal size in bits of an acceptable group.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage">
            <summary>
            Represents SSH_MSG_DISCONNECT message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage.#ctor(Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage"/> class.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage.ReasonCode">
            <summary>
            Gets disconnect reason code.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage.Description">
            <summary>
            Gets disconnect description.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_FAILURE message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_CLOSE message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ExpectAction">
            <summary>
            Specifies behavior for expected expression
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ExpectAction.#ctor(System.Text.RegularExpressions.Regex,System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ExpectAction"/> class.
            </summary>
            <param name="expect">The expect regular expression.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="expect"/> or <paramref name="action"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ExpectAction.#ctor(System.String,System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ExpectAction"/> class.
            </summary>
            <param name="expect">The expect expression.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="expect"/> or <paramref name="action"/> is null.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ExpectAction.Expect">
            <summary>
            Gets the expected regular expression.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ExpectAction.Action">
            <summary>
            Gets the action to perform when expected expression is found.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Channels.ChannelForwardedTcpip">
            <summary>
            Implements "forwarded-tcpip" SSH channel.
            </summary>
            <summary>
            Implements "forwarded-tcpip" SSH channel.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelForwardedTcpip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Channels.ChannelForwardedTcpip"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelForwardedTcpip.Bind(System.Net.IPAddress,System.UInt32)">
            <summary>
            Binds channel to specified connected host.
            </summary>
            <param name="connectedHost">The connected host.</param>
            <param name="connectedPort">The connected port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelForwardedTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelForwardedTcpip.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.ChannelForwardedTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.AsyncCallback">
            <summary>
            References a method to be called when a corresponding asynchronous operation completes.
            </summary>
            <param name="ar">The result of the asynchronous operation.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.MemoryStream">
            <summary>
             Creates a stream whose backing store is memory.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.#ctor">
            <summary>
                Initializes a new instance of the CrestronIO.MemoryStream class with an expandable
                capacity initialized to zero.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.#ctor(System.Byte[])">
             <summary>
                 Initializes a new non-resizable instance of the CrestronIO.MemoryStream class
                 based on the specified byte array.
                 </summary>
             <param name="buffer">
                 The array of unsigned bytes from which to create the current stream.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.#ctor(System.Int32)">
             <summary>
                 Initializes a new instance of the CrestronIO.MemoryStream class with an expandable
                 capacity initialized as specified.
                 </summary>
             <param name="capacity">
                 The initial size of the internal array in bytes.
            </param>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 capacity is negative.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
             <summary>
                 Initializes a new non-resizable instance of the CrestronIO.MemoryStream class
                 based on the specified byte array with the CrestronIO.MemoryStream.CanWrite
                 property set as specified.
                 </summary>
             <param name="buffer">
                 The array of unsigned bytes from which to create this stream.
            </param>
             <param name="writable">
                 The setting of the CrestronIO.MemoryStream.CanWrite property, which determines
                 whether the stream supports writing.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Initializes a new non-resizable instance of the CrestronIO.MemoryStream class
                 based on the specified region (index) of a byte array.
            </summary>
             <param name="buffer">
                 The array of unsigned bytes from which to create this stream.
            </param>
             <param name="index">
                 The index into buffer at which the stream begins.
            </param>
             <param name="count">
                 The length of the stream in bytes.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is less than zero.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The sum of index and count is greater than the length of buffer.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
             <summary>
                 Initializes a new non-resizable instance of the CrestronIO.MemoryStream class
                based on the specified region of a byte array, with the CrestronIO.MemoryStream.CanWrite
                 property set as specified.
                 </summary>
             <param name="buffer">
                 The array of unsigned bytes from which to create this stream.
            </param>
             <param name="index">
                 The index in buffer at which the stream begins.
            </param>
             <param name="count">
                 The length of the stream in bytes.
            </param>
             <param name="writable">
                 The setting of the CrestronIO.MemoryStream.CanWrite property, which determines
                 whether the stream supports writing.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count are negative.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The sum of index and count is greater than the length of buffer.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
                 Initializes a new instance of the CrestronIO.MemoryStream class based on the
                 specified region of a byte array, with the CrestronIO.MemoryStream.CanWrite
                 property set as specified, and the ability to call CrestronIO.MemoryStream.GetBuffer()
                 set as specified.
                 </summary>
             <param name="buffer">
                 The array of unsigned bytes from which to create this stream.
            </param>
             <param name="index">
                 The index into buffer at which the stream begins.
            </param>
             <param name="count">
                 The length of the stream in bytes.
            </param>
             <param name="writable">
                 The setting of the CrestronIO.MemoryStream.CanWrite property, which determines
                 whether the stream supports writing.
            </param>
             <param name="publiclyVisible">
                 true to enable CrestronIO.MemoryStream.GetBuffer(), which returns the unsigned
                 byte array from which the stream was created; otherwise, false.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.Finalize">
            <summary>
            Destructor for MemoryStream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.Dispose(System.Boolean)">
             <summary>
                 Releases the unmanaged resources used by the CrestronIO.MemoryStream class
                 and optionally releases the managed resources.
                 </summary>
             <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.Flush">
            <summary>
                Overrides CrestronIO.Stream.Flush() so that no action is performed.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.GetBuffer">
            <summary>
                Returns the array of unsigned bytes from which this stream was created.
                </summary>
            <returns>
                The byte array from which this stream was created, or the underlying array
                if a byte array was not provided to the CrestronIO.MemoryStream constructor
                during construction of the current instance.
                </returns>
            <exception cref="T:System.UnauthorizedAccessException">
                The MemoryStream instance was not created with a publicly visible buffer.
                </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
             <summary>
                 Reads a block of bytes from the current stream and writes the data to buffer.
                 </summary>
             <param name="buffer">
                 When this method returns, contains the specified byte array with the values
                 between offset and (offset + count - 1) replaced by the characters read from
                 the current stream.
            </param>
             <param name="offset">
                 The byte offset in buffer at which to begin reading.
            </param>
             <param name="count">
                 The maximum number of bytes to read.
            </param>
             <returns>
                 The total number of bytes written into the buffer. This can be less than
                 the number of bytes requested if that number of bytes are not currently available,
                 or zero if the end of the stream is reached before any bytes are read.
                 </returns>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 offset or count is negative.
            </exception>
             <exception cref="T:System.ArgumentException">
                 offset subtracted from the buffer length is less than count.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The current stream instance is closed.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.ReadByte">
            <summary>
                Reads a byte from the current stream.
                </summary>
            <returns>
                The byte cast to a System.Int32, or -1 if the end of the stream has been
                reached.
                </returns>
            <exception cref="T:System.ObjectDisposedException">
                The current stream instance is closed.
                </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
             <summary>
                 Sets the position within the current stream to the specified value.
                 </summary>
             <param name="offset">
                 The new position within the stream. This is relative to the loc parameter,
                 and can be positive or negative.
            </param>
             <param name="loc">
                 A value of type CrestronIO.SeekOrigin, which acts as the seek reference point.
            </param>
             <returns>
                 The new position within the stream, calculated by combining the initial reference
                 point and the offset.
                 </returns>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 Seeking is attempted before the beginning of the stream.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 offset is greater than System.Int32.MaxValue.
            </exception>
             <exception cref="T:System.ArgumentException">
                 There is an invalid SeekOrigin.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The current stream instance is closed.
             </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.SetLength(System.Int64)">
             <summary>
                 Sets the length of the current stream to the specified value.
                 </summary>
             <param name="value">
                 The value at which to set the length.
            </param>
             <exception cref="T:System.NotSupportedException">
                 The current stream is not resizable and value is larger than the current
                 capacity.-or- The current stream does not support writing.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 value is negative or is greater than the maximum length of the CrestronIO.MemoryStream,
                 where the maximum length is(System.Int32.MaxValue - origin), and origin is
                 the index into the underlying buffer at which the stream starts.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.ToArray">
            <summary>
                Writes the stream contents to a byte array, regardless of the CrestronIO.MemoryStream.Position
                property.
                </summary>
            <returns>
                A new byte array.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
             <summary>
                 Writes a block of bytes to the current stream using data read from buffer.
                 </summary>
             <param name="buffer">
                 The buffer to write data from.
            </param>
             <param name="offset">
                 The byte offset in buffer at which to begin writing from.
            </param>
             <param name="count">
                 The maximum number of bytes to write.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 The stream does not support writing. For additional information see CrestronIO.Stream.CanWrite.-or-
                 The current position is closer than count bytes to the end of the stream,
                 and the capacity cannot be modified.
            </exception>
             <exception cref="T:System.ArgumentException">
                 offset subtracted from the buffer length is less than count.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 offset or count are negative.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The current stream instance is closed.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.WriteByte(System.Byte)">
             <summary>
                 Writes a byte to the current stream at the current position.
                 </summary>
             <param name="value">
                 The byte to write.
            </param>
             <exception cref="T:System.NotSupportedException">
                 The stream does not support writing. For additional information see CrestronIO.Stream.CanWrite.-or-
                 The current position is at the end of the stream, and the capacity cannot
                 be modified.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The current stream is closed.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.MemoryStream.WriteTo(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
                 Writes the entire contents of this memory stream to another stream.
            </summary>
             <param name="stream">
                 The stream to write this memory stream to.
            </param>
             <exception cref="T:System.ArgumentNullException">
                stream is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                The current or target stream is closed.
                </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.CanRead">
            <summary>
               Gets a value indicating whether the current stream supports reading.
                </summary>
            <returns>
                true if the stream is open.
                </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.CanSeek">
            <summary>
                Gets a value indicating whether the current stream supports seeking.
                </summary>
            <returns>
                true if the stream is open.
                </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.CanWrite">
             <summary>
                 Gets a value indicating whether the current stream supports writing.
                 </summary>
            
             <returns>
                 true if the stream supports writing; otherwise, false.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.Capacity">
             <summary>
                 Gets or sets the number of bytes allocated for this stream.
                 </summary>
             <returns>
                 The length of the usable portion of the buffer for the stream.
                 </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 A capacity is set that is negative or less than the current length of the
                 stream.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The current stream is closed.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 set is invoked on a stream whose capacity cannot be modified.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.Length">
             <summary>
                 Gets the length of the stream in bytes.
                 </summary>
             <returns>
                 The length of the stream in bytes.
             </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.Position">
             <summary>
                 Gets or sets the current position within the stream.
                 </summary>
             <returns>
                 The current position within the stream.
                 </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The position is set to a negative value or a value greater than System.Int32.MaxValue.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.ReadTimeout">
            <summary>
            Gets or sets a value, in milliseconds, that determines how long the stream
            will attempt to read before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to read before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">The CrestronIO.Stream.ReadTimeout method always throws an System.InvalidOperationException.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.WriteTimeout">
            <summary>
             Gets or sets a value, in milliseconds, that determines how long the stream 
             will attempt to write before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to write before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">The CrestronIO.Stream.WriteTimeout method always throws an System.InvalidOperationException.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.MemoryStream.CanTimeout">
            <summary>
             Gets a value that determines whether the current stream can time out.
            </summary>
            <returns> A value that determines whether the current stream can time out.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Compression.CompressionMode">
            <summary>
                 Specifies whether to compress or decompress the underlying stream.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Compression.CompressionMode.Decompress">
            <summary>
                 Decompresses the underlying stream.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Compression.CompressionMode.Compress">
            <summary>
                 Compresses the underlying stream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Compression.GZipStream">
            <summary>
                 Provides methods and properties used to compress and decompress streams.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Compression.CompressionMode)">
            <summary>
                 Initializes a new instance of the System.IO.Compression.GZipStream class
                 using the specified stream and System.IO.Compression.CompressionMode value.
            </summary>
            <param name="stream">
                 The stream to compress or decompress.
            </param>
            <param name="mode">
                 One of the System.IO.Compression.CompressionMode values that indicates the
                 action to take.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 stream is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 stream access right is ReadOnly and mode value is Compress.
            </exception>
            <exception cref="T:System.ArgumentException">
                 mode is not a valid System.IO.Compression.CompressionMode enumeration value.-or-System.IO.Compression.CompressionMode
                 is System.IO.Compression.CompressionMode.Compress and System.IO.Stream.CanWrite
                 is false.-or-System.IO.Compression.CompressionMode is System.IO.Compression.CompressionMode.Decompress
                 and System.IO.Stream.CanRead is false.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Compression.CompressionMode,System.Boolean)">
            <summary>
                 Initializes a new instance of the System.IO.Compression.GZipStream class
                 using the specified stream and System.IO.Compression.CompressionMode value,
                 and a value that specifies whether to leave the stream open.
            </summary>
            <param name="stream">
                 The stream to compress or decompress.
            </param>
            <param name="mode">
                 One of the System.IO.Compression.CompressionMode values that indicates the
                 action to take.
            </param>
            <param name="leaveOpen">
                 true to leave the stream open; otherwise, false.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 stream is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 stream access right is ReadOnly and mode value is Compress.
            </exception>
            <exception cref="T:System.ArgumentException">
                 mode is not a valid System.IO.Compression.CompressionMode value.-or-System.IO.Compression.CompressionMode
                 is System.IO.Compression.CompressionMode.Compress and System.IO.Stream.CanWrite
                 is false.-or-System.IO.Compression.CompressionMode is System.IO.Compression.CompressionMode.Decompress
                 and System.IO.Stream.CanRead is false.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Finalize">
            <summary>
            Destructor for GZipStream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Dispose(System.Boolean)">
            <summary>
                 Releases the unmanaged resources used by the System.IO.Compression.GZipStream
                 and optionally releases the managed resources.
            </summary>
            <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Flush">
            <summary>
                 Flushes the contents of the internal buffer of the current System.IO.Compression.GZipStream
                 object to the underlying stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads a number of decompressed bytes into the specified byte array.
            </summary>
            <param name="array">
                 The array used to store decompressed bytes.
            </param>
            <param name="offset">
                 The location in the array to begin reading.
            </param>
            <param name="count">
                 The number of bytes decompressed.
            </param>
            <returns>
                 The number of bytes that were decompressed into the byte array. If the end
                 of the stream has been reached, zero or the number of bytes read is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 array is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The System.IO.Compression.CompressionMode value was Compress when the object
                 was created.- or -The underlying stream does not support reading.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 offset or count is less than zero.-or-array length minus the index starting
                 point is less than count.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
                 The data is in an invalid format.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
                 This property is not supported and always throws a System.NotSupportedException.
            </summary>
            <param name="offset">
                 The location in the stream.
            </param>
            <param name="origin">
                 One of the System.IO.SeekOrigin values.
            </param>
            <returns>
                 A long value.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.SetLength(System.Int64)">
            <summary>
                 This property is not supported and always throws a System.NotSupportedException.
            </summary>
            <param name="value">
                 The length of the stream.
            </param>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Writes compressed bytes to the underlying stream from the specified byte
                 array.
            </summary>
            <param name="array">
                 The array used to store compressed bytes.
            </param>
            <param name="offset">
                 The location in the array to begin reading.
            </param>
            <param name="count">
                 The number of bytes compressed.
            </param>
            <exception cref="T:System.ObjectDisposedException">
                 The write operation cannot be performed because the stream is closed.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.BaseStream">
            <summary>
                 Gets a reference to the underlying stream.
            </summary>
            <returns>
                 A stream object that represents the underlying stream.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
                 The underlying stream is closed.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.CanRead">
            <summary>
                 Gets a value indicating whether the stream supports reading while decompressing
                 a file.
            </summary>
            <returns>
                 true if the System.IO.Compression.CompressionMode value is Decompress, and
                 the underlying stream supports reading and is not closed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.CanSeek">
            <summary>
                 Gets a value indicating whether the stream supports seeking.
            </summary>
            <returns>
                 false in all cases.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.CanWrite">
            <summary>
                 Gets a value indicating whether the stream supports writing.
            </summary>
            <returns>
                 true if the System.IO.Compression.CompressionMode value is Compress, and
                 the underlying stream supports writing and is not closed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Length">
            <summary>
                 This property is not supported and always throws a System.NotSupportedException.
            </summary>
            <returns>
                 A long value.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.GZipStream.Position">
            <summary>
                 This property is not supported and always throws a System.NotSupportedException.
            </summary>
            <returns>
                 A long value.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream">
            <summary>
                 Provides methods and properties for compressing and decompressing streams
                 using the Deflate algorithm.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Compression.CompressionMode)">
            <summary>
                 Initializes a new instance of the System.IO.Compression.DeflateStream class
                 using the specified stream and System.IO.Compression.CompressionMode value.
            </summary>
            <param name="stream">
                 The stream to compress or decompress.
            </param>
            <param name="mode">
                 One of the System.IO.Compression.CompressionMode values that indicates the
                 action to take.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 stream is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 stream access right is ReadOnly and mode value is Compress.
            </exception>
            <exception cref="T:System.ArgumentException">
                 mode is not a valid System.IO.Compression.CompressionMode value.-or-System.IO.Compression.CompressionMode
                 is System.IO.Compression.CompressionMode.Compress and System.IO.Stream.CanWrite
                 is false.-or-System.IO.Compression.CompressionMode is System.IO.Compression.CompressionMode.Decompress
                 and System.IO.Stream.CanRead is false.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Compression.CompressionMode,System.Boolean)">
            <summary>
                 Initializes a new instance of the System.IO.Compression.DeflateStream class
                 using the specified stream and System.IO.Compression.CompressionMode value,
                 and a value that specifies whether to leave the stream open.
            </summary>
            <param name="stream">
                 The stream to compress or decompress.
            </param>
            <param name="mode">
                 One of the System.IO.Compression.CompressionMode values that indicates the
                 action to take.
            </param>
            <param name="leaveOpen">
                 true to leave the stream open; otherwise, false.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 stream is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 stream access right is ReadOnly and mode value is Compress.
            </exception>
            <exception cref="T:System.ArgumentException">
                 mode is not a valid System.IO.Compression.CompressionMode value.-or-System.IO.Compression.CompressionMode
                 is System.IO.Compression.CompressionMode.Compress and System.IO.Stream.CanWrite
                 is false.-or-System.IO.Compression.CompressionMode is System.IO.Compression.CompressionMode.Decompress
                 and System.IO.Stream.CanRead is false.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Finalize">
            <summary>
            Destructor for DeflateStream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Dispose(System.Boolean)">
            <summary>
                 Releases the unmanaged resources used by the System.IO.Compression.DeflateStream
                 and optionally releases the managed resources.
            </summary>
            <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Flush">
            <summary>
                 Flushes the contents of the internal buffer of the current stream object
                 to the underlying stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads a number of decompressed bytes into the specified byte array.
            </summary>
            <param name="array">
                 The array used to store decompressed bytes.
            </param>
            <param name="offset">
                 The location in the array to begin reading.
            </param>
            <param name="count">
                 The number of decompressed bytes to read.
            </param>
            <returns>
                 The number of bytes that were decompressed into the byte array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 array is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                 The System.IO.Compression.CompressionMode value was Compress when the object
                 was created.- or - The underlying stream does not support reading.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 offset or count is less than zero.-or-array length minus the index starting
                 point is less than count.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
                 The data is in an invalid format.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
                 This operation is not supported and always throws a System.NotSupportedException.
            </summary>
            <param name="offset">
                 The location in the stream.
            </param>
            <param name="origin">
                 One of the System.IO.SeekOrigin values.
            </param>
            <returns>
                 A long value.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.SetLength(System.Int64)">
            <summary>
                 This operation is not supported and always throws a System.NotSupportedException.
            </summary>
            <param name="value">
                 The length of the stream.
            </param>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Writes compressed bytes to the underlying stream from the specified byte
                 array.
            </summary>
            <param name="array">
                 The array used to store compressed bytes.
            </param>
            <param name="offset">
                 The location in the array to begin reading.
            </param>
            <param name="count">
                 The number of bytes to compress.
            </param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.BaseStream">
            <summary>
                 Gets a reference to the underlying stream.
            </summary>
            <returns>
                 A stream object that represents the underlying stream.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
                 The underlying stream is closed.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.CanRead">
            <summary>
                 Gets a value indicating whether the stream supports reading while decompressing
                 a file.
            </summary>
            <returns>
                 true if the System.IO.Compression.CompressionMode value is Decompress, and
                 the underlying stream is opened and supports reading; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.CanSeek">
            <summary>
                 Gets a value indicating whether the stream supports seeking.
            </summary>
            <returns>
                 false in all cases.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.CanWrite">
            <summary>
                 Gets a value indicating whether the stream supports writing.
            </summary>
            <returns>
                 true if the System.IO.Compression.CompressionMode value is Compress, and
                 the underlying stream supports writing and is not closed; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Length">
            <summary>
                 This property is not supported and always throws a System.NotSupportedException.
            </summary>
            <returns>
                 A long value.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.Compression.DeflateStream.Position">
            <summary>
                 This property is not supported and always throws a System.NotSupportedException.
            </summary>
            <returns>
                 A long value.
            </returns>
            <exception cref="T:System.NotSupportedException">
                 This property is not supported on this stream.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronLogger.LoggerModeEnum">
            <summary>
            Enumeration of the Logger Modes available for the Crestron Logger. Logical OR'ing of the modes is allowed. 
            (e.g.) - To Print to the console as well as log to the RM at the same time, assign the following to LoggerMode: "CONSOLE | RM" 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLogger.LoggerModeEnum.DEFAULT">
            <summary>
            This mode is the default mode for the Logger. If RM is present, logging will take place on the RM. If RM is not available, messages will be printed to the console. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLogger.LoggerModeEnum.CONSOLE">
            <summary>
            Print messages only to the console.  Not supported for <see cref="F:Crestron.SimplSharp.eDevicePlatform.Server"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLogger.LoggerModeEnum.RM">
            <summary>
            Log the messages only to the RM. Available for RM capable devices only.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronLogger.CrestronLogger">
            <summary>
            SimplSharp.CrestronLogger Logger Instance
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.Initialize(System.UInt32)">
            <summary>
            Initialize the CrestronLogger to the specified debug level.
            </summary>
            <param name="paramDebugLevel">Desired Debug Logger Level. Range from 1 to 10.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.Initialize(System.UInt32,System.Boolean)">
            <summary>
            Initialize the CrestronLogger to the specified debug level with option to log only one specified level.  
            </summary>
            <param name="paramDebugLevel">Desired Debug Logger Level to Initialize to. Range from 0 to 10.</param>
            <param name="logOnlyThisLevel">Log only the specified debug level</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.Initialize(System.UInt32,System.Boolean,Crestron.SimplSharp.CrestronLogger.LoggerModeEnum)">
            <summary>
            Initialize the CrestronLogger to the specified debug level with option to log only one specified level and also for LoggerModes.   
            </summary>
            <param name="paramDebugLevel">Desired Debug Logger Level to Initialize to. Range from 0 to 10.</param>
            <param name="logOnlyThisLevel">Log only the specified debug level</param>
            <param name="loggerMode">Logger Modes;</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.Initialize(System.UInt32,Crestron.SimplSharp.CrestronLogger.LoggerModeEnum)">
            <summary>
            Initialize the CrestronLogger to the specified debug level with option to log only one specified level and also for LoggerModes.   
            </summary>
            <param name="paramDebugLevel">Desired Debug Logger Level to Initialize to. Range from 0 to 10.</param>
            <param name="loggerMode">Logger Modes;</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.MainInitialize(System.UInt32)">
            <summary>
            Main Initialize for the CrestronLogger to the specified debug level. Called from all the other Logger Initializers
            </summary>
            <param name="paramDebugLevel">Desired Debug Logger Level. Range from 1 to 10.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.ShutdownLogger">
            <summary>
            Shutdown the Logger. This automatically occurs when the program is stopped. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.IsRMPresent">
            <summary>
            Returns if Removable media is present in the device or not and initializes Logger files.
            This function is called once every time the Initialize routine is run for the logger.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.IsRMCapable">
            <summary>
            Returns if Removable media is supported in device or not
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.IsRMCurrentlyPluggedIn">
            <summary>
            Returns true if RM is Currently plugged into the device
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.ForceFlush">
            <summary>
            Function to flush the buffered log entries to the log file
            </summary>
            <returns>True if ForceFlush was successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.WriteToLog(System.String,System.UInt32)">
            <summary>
            Function to write to the log
            </summary>
            <param name="message">Message details</param>
            <param name="cmdLevel">Command's Level</param>
            <returns>True if WriteToLog operation was successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.LevelCheck(System.UInt32)">
            <summary>
            Function to determine if the Logging Level and the Command Access level match.
            </summary>
            <param name="cmdAccessLevel">Desired access level to check</param>
            <returns>True if level checks out</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.AddToQueue(System.String)">
            <summary>
            Function to add a Log entry to the internal memory. If the internal memory reaches a certain limit, flush to file.
            </summary>
            <param name="buffer">Line of data to write</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.Flush">
            <summary>
            Internal function to write the internal buffer to a log file
            </summary>
            <returns>True if Flush operation was successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.Clear(System.Boolean)">
            <summary>
            Function to clear the Log
            </summary>
            <param name="clearAllLogs">Clear main log, and all backup logs</param>
            <returns>True if File cleared or already cleared</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.PrintTheLog(System.Boolean)">
            <summary>
            Function to return the logs as a List of strings
            </summary>
            <param name="printAllLogs">Set to true to print all logs, false to print most recent messages</param>
            <returns>List of strings containing Log messages</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLogger.CrestronLogger.ClearFunction(System.Boolean)">
            <summary>
            Function to clear the Log and buffer
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.DebugLevel">
            <summary>
            Property to get or set the current Logger Debug Level
            </summary>
            <exception cref="T:System.InvalidOperationException">Logger is not initialized; can not set the Debug Level</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.LoggerBufferSize">
            <summary>
            Property to get and set the Logger Buffer Size in KB 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.LoggerNumBackupLogs">
            <summary>
            Property to get and set the number of backup logs desired. One backup log is used if this property is not set.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.MaxBufferSizeInKB">
            <summary>
            Constant Value of the Maximum Allowed Buffer Size
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.MaxNumBackupLogs">
            <summary>
            Constant Value of the Maximum allowed number of Backup logs. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.LogOnlyCurrentDebugLevel">
            <summary>
            Property to specify whether the Logger should log only the current Debug Level. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.LoggerInitialized">
            <summary>
            Property to read the initialization status of the Logger.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLogger.CrestronLogger.Mode">
            <summary>
            Property to specify the Logger Mode(s) desired. 
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Invalid mode specified</exception>
            <exception cref="T:System.NotSupportedException"><see cref="F:Crestron.SimplSharp.CrestronLogger.LoggerModeEnum.CONSOLE"/> is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpUploadAsyncResult">
            <summary>
            Encapsulates the results of an asynchronous upload operation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpUploadAsyncResult.#ctor(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpUploadAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpUploadAsyncResult.Update(System.UInt64)">
            <summary>
            Updates asynchronous operation status information.
            </summary>
            <param name="uploadedBytes">Number of uploaded bytes.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpUploadAsyncResult.IsUploadCanceled">
            <summary>
            Gets or sets a value indicating whether to cancel asynchronous upload operation
            </summary>
            <value>
            <c>true</c> if upload operation to be canceled; otherwise, <c>false</c>.
            </value>
            <remarks>
            Upload operation will be canceled after finishing uploading current buffer.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpUploadAsyncResult.UploadedBytes">
            <summary>
            Gets the number of uploaded bytes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Init">
            <summary>
            SSH_FXP_INIT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Version">
            <summary>
            SSH_FXP_VERSION
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Open">
            <summary>
            SSH_FXP_OPEN
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Close">
            <summary>
            SSH_FXP_CLOSE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Read">
            <summary>
            SSH_FXP_READ
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Write">
            <summary>
            SSH_FXP_WRITE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.LStat">
            <summary>
            SSH_FXP_LSTAT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.FStat">
            <summary>
            SSH_FXP_FSTAT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.SetStat">
            <summary>
            SSH_FXP_SETSTAT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.FSetStat">
            <summary>
            SSH_FXP_FSETSTAT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.OpenDir">
            <summary>
            SSH_FXP_OPENDIR
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.ReadDir">
            <summary>
            SSH_FXP_READDIR
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Remove">
            <summary>
            SSH_FXP_REMOVE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.MkDir">
            <summary>
            SSH_FXP_MKDIR
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.RmDir">
            <summary>
            SSH_FXP_RMDIR
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.RealPath">
            <summary>
            SSH_FXP_REALPATH
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Stat">
            <summary>
            SSH_FXP_STAT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Rename">
            <summary>
            SSH_FXP_RENAME
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.ReadLink">
            <summary>
            SSH_FXP_READLINK
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.SymLink">
            <summary>
            SSH_FXP_SYMLINK
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Link">
            <summary>
            SSH_FXP_LINK
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Block">
            <summary>
            SSH_FXP_BLOCK
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Unblock">
            <summary>
            SSH_FXP_UNBLOCK
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Status">
            <summary>
            SSH_FXP_STATUS
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Handle">
            <summary>
            SSH_FXP_HANDLE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Data">
            <summary>
            SSH_FXP_DATA
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Name">
            <summary>
            SSH_FXP_NAME
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Attrs">
            <summary>
            SSH_FXP_ATTRS
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.Extended">
            <summary>
            SSH_FXP_EXTENDED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.SftpMessageTypes.ExtendedReply">
            <summary>
            SSH_FXP_EXTENDED_REPLY
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpFile">
            <summary>
            Represents SFTP file information
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFile.#ctor(Crestron.SimplSharp.Ssh.Sftp.SftpSession,System.String,Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFile"/> class.
            </summary>
            <param name="sftpSession">The SFTP session.</param>
            <param name="fullName">Full path of the directory or file.</param>
            <param name="attributes">Attributes of the directory or file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="sftpSession"/> or <paramref name="fullName"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFile.SetPermissions(System.Int16)">
            <summary>
            Sets file  permissions.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFile.Delete">
            <summary>
            Permanently deletes a file on remote machine.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFile.MoveTo(System.String)">
            <summary>
            Moves a specified file to a new location on remote machine, providing the option to specify a new file name.
            </summary>
            <param name="destFileName">The path to move the file to, which can specify a different file name.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="destFileName"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFile.UpdateStatus">
            <summary>
            Updates file status on the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFile.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.Attributes">
            <summary>
            Gets the file attributes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.FullName">
            <summary>
            Gets the full path of the directory or file.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.Name">
            <summary>
            For files, gets the name of the file. For directories, gets the name of the last directory in the hierarchy if a hierarchy exists. 
            Otherwise, the Name property gets the name of the directory.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.LastAccessTimeUtc">
            <summary>
            Gets or sets the time, in coordinated universal time (UTC), the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.LastWriteTimeUtc">
            <summary>
            Gets or sets the time, in coordinated universal time (UTC), when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.Length">
            <summary>
            Gets or sets the size, in bytes, of the current file.
            </summary>
            <value>
            The size of the current file in bytes.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.UserId">
            <summary>
            Gets or sets file user id.
            </summary>
            <value>
            File user id.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.GroupId">
            <summary>
            Gets or sets file group id.
            </summary>
            <value>
            File group id.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.IsSocket">
            <summary>
            Gets a value indicating whether file represents a socket.
            </summary>
            <value>
              <c>true</c> if file represents a socket; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.IsSymbolicLink">
            <summary>
            Gets a value indicating whether file represents a symbolic link.
            </summary>
            <value>
            	<c>true</c> if file represents a symbolic link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.IsRegularFile">
            <summary>
            Gets a value indicating whether file represents a regular file.
            </summary>
            <value>
            	<c>true</c> if file represents a regular file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.IsBlockDevice">
            <summary>
            Gets a value indicating whether file represents a block device.
            </summary>
            <value>
            	<c>true</c> if file represents a block device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.IsDirectory">
            <summary>
            Gets a value indicating whether file represents a directory.
            </summary>
            <value>
            	<c>true</c> if file represents a directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.IsCharacterDevice">
            <summary>
            Gets a value indicating whether file represents a character device.
            </summary>
            <value>
            	<c>true</c> if file represents a character device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.IsNamedPipe">
            <summary>
            Gets a value indicating whether file represents a named pipe.
            </summary>
            <value>
            	<c>true</c> if file represents a named pipe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.OwnerCanRead">
            <summary>
            Gets or sets a value indicating whether the owner can read from this file.
            </summary>
            <value>
              <c>true</c> if owner can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.OwnerCanWrite">
            <summary>
            Gets or sets a value indicating whether the owner can write into this file.
            </summary>
            <value>
              <c>true</c> if owner can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.OwnerCanExecute">
            <summary>
            Gets or sets a value indicating whether the owner can execute this file.
            </summary>
            <value>
              <c>true</c> if owner can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.GroupCanRead">
            <summary>
            Gets or sets a value indicating whether the group members can read from this file.
            </summary>
            <value>
              <c>true</c> if group members can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.GroupCanWrite">
            <summary>
            Gets or sets a value indicating whether the group members can write into this file.
            </summary>
            <value>
              <c>true</c> if group members can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.GroupCanExecute">
            <summary>
            Gets or sets a value indicating whether the group members can execute this file.
            </summary>
            <value>
              <c>true</c> if group members can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.OthersCanRead">
            <summary>
            Gets or sets a value indicating whether the others can read from this file.
            </summary>
            <value>
              <c>true</c> if others can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.OthersCanWrite">
            <summary>
            Gets or sets a value indicating whether the others can write into this file.
            </summary>
            <value>
              <c>true</c> if others can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.OthersCanExecute">
            <summary>
            Gets or sets a value indicating whether the others can execute this file.
            </summary>
            <value>
              <c>true</c> if others can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFile.Extensions">
            <summary>
            Gets the extension part of the file.
            </summary>
            <value>
            File extensions.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage">
            <summary>
            Represents SSH_MSG_SERVICE_ACCEPT message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceAcceptMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage">
            <summary>
            Represents SSH_MSG_KEXINIT message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.Cookie">
            <summary>
            Gets session cookie.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.KeyExchangeAlgorithms">
            <summary>
            Gets or sets supported key exchange algorithms.
            </summary>
            <value>
            Supported key exchange algorithms.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.ServerHostKeyAlgorithms">
            <summary>
            Gets or sets supported server host key algorithms.
            </summary>
            <value>
            Supported server host key algorithms.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsClientToServer">
            <summary>
            Gets or sets supported encryption algorithms client to server.
            </summary>
            <value>
            Supported encryption algorithms client to server.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsServerToClient">
            <summary>
            Gets or sets supported encryption algorithms server to client.
            </summary>
            <value>
            Supported encryption algorithms server to client.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsClientToServer">
            <summary>
            Gets or sets supported hash algorithms client to server.
            </summary>
            <value>
            Supported hash algorithms client to server.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsServerToClient">
            <summary>
            Gets or sets supported hash algorithms server to client.
            </summary>
            <value>
            Supported hash algorithms server to client.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsClientToServer">
            <summary>
            Gets or sets supported compression algorithms client to server.
            </summary>
            <value>
            Supported compression algorithms client to server.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsServerToClient">
            <summary>
            Gets or sets supported compression algorithms server to client.
            </summary>
            <value>
            Supported compression algorithms server to client.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.LanguagesClientToServer">
            <summary>
            Gets or sets supported languages client to server.
            </summary>
            <value>
            Supported languages client to server.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.LanguagesServerToClient">
            <summary>
            Gets or sets supported languages server to client.
            </summary>
            <value>
            The languages server to client.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.FirstKexPacketFollows">
            <summary>
            Gets or sets a value indicating whether first key exchange packet follows.
            </summary>
            <value>
            	<c>true</c> if first key exchange packet follows; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage.Reserved">
            <summary>
            Gets or sets the reserved value.
            </summary>
            <value>
            The reserved value.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage">
            <summary>
            Represents SSH_MSG_DEBUG message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage.IsAlwaysDisplay">
            <summary>
            Gets a value indicating whether the message to be always displayed.
            </summary>
            <value>
            	<c>true</c> if the message always to be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage.Message">
            <summary>
            Gets debug message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.DebugMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo">
            <summary>
            Represents "signal" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo.NAME">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.SignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Compression.ZlibStream">
            <summary>
            Implements Zlib compression algorithm.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.ZlibStream.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.Ssh.Compression.CompressionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Compression.ZlibStream"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.ZlibStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.TerminalModes">
            <summary>
            Specifies the initial assignments of the opcode values that are used in the 'encoded terminal modes' value
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.TTY_OP_END">
            <summary>
            Indicates end of options.
            </summary> 
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VINTR">
            <summary>
            Interrupt character; 255 if none.  Similarly for the other characters.  Not all of these characters are supported on all systems.
            </summary> 
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VQUIT">
            <summary>
            The quit character (sends SIGQUIT signal on POSIX systems).
            </summary> 
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VERASE">
            <summary>
            Erase the character to left of the cursor. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VKILL">
            <summary>
            Kill the current input line.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VEOF">
            <summary>
            End-of-file character (sends EOF from the terminal).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VEOL">
            <summary>
            End-of-line character in addition to carriage return and/or linefeed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VEOL2">
            <summary>
            Additional end-of-line character.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VSTART">
            <summary>
            Continues paused output (normally control-Q).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VSTOP">
            <summary>
            Pauses output (normally control-S).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VSUSP">
            <summary>
            Suspends the current program.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VDSUSP">
            <summary>
            Another suspend character.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VREPRINT">
            <summary>
            Reprints the current input line.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VWERASE">
            <summary>
            Erases a word left of cursor.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VLNEXT">
            <summary>
            Enter the next character typed literally, even if it is a special character
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VFLUSH">
            <summary>
            Character to flush output.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VSWTCH">
            <summary>
            Switch to a different shell layer.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VSTATUS">
            <summary>
            Prints system status line (load, command, pid, etc).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.VDISCARD">
            <summary>
            Toggles the flushing of terminal output.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IGNPAR">
            <summary>
            The ignore parity flag.  The parameter SHOULD be 0 if this flag is FALSE, and 1 if it is TRUE.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.PARMRK">
            <summary>
            Mark parity and framing errors.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.INPCK">
            <summary>
            Enable checking of parity errors.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ISTRIP">
            <summary>
            Strip 8th bit off characters.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.INLCR">
            <summary>
            Map NL into CR on input.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IGNCR">
            <summary>
            Ignore CR on input.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ICRNL">
            <summary>
            Map CR to NL on input.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IUCLC">
            <summary>
            Translate uppercase characters to lowercase.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IXON">
            <summary>
            Enable output flow control.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IXANY">
            <summary>
            Any char will restart after stop.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IXOFF">
            <summary>
            Enable input flow control.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IMAXBEL">
            <summary>
            Ring bell on input queue full.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ISIG">
            <summary>
            Enable signals INTR, QUIT, [D]SUSP.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ICANON">
            <summary>
            Canonicalize input lines.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.XCASE">
            <summary>
            Enable input and output of uppercase characters by preceding their lowercase equivalents with "\".
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ECHO">
            <summary>
            Enable echoing.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ECHOE">
            <summary>
            Visually erase chars.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ECHOK">
            <summary>
            Kill character discards current line.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ECHONL">
            <summary>
            Echo NL even if ECHO is off.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.NOFLSH">
            <summary>
            Don't flush after interrupt.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.TOSTOP">
            <summary>
            Stop background jobs from output.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.IEXTEN">
            <summary>
            Enable extensions.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ECHOCTL">
            <summary>
            Echo control characters as ^(Char).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ECHOKE">
            <summary>
            Visual erase for line kill.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.PENDIN">
            <summary>
            Retype pending input.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.OPOST">
            <summary>
            Enable output processing.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.OLCUC">
            <summary>
            Convert lowercase to uppercase.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ONLCR">
            <summary>
            Map NL to CR-NL.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.OCRNL">
            <summary>
            Translate carriage return to newline (output).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ONOCR">
            <summary>
            Translate newline to carriage return-newline (output).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.ONLRET">
            <summary>
            Newline performs a carriage return (output).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.CS7">
            <summary>
            7 bit mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.CS8">
            <summary>
            8 bit mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.PARENB">
            <summary>
            Parity enable.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.PARODD">
            <summary>
            Odd parity, else even.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.TTY_OP_ISPEED">
            <summary>
            Specifies the input baud rate in bits per second.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.TerminalModes.TTY_OP_OSPEED">
            <summary>
            Specifies the output baud rate in bits per second.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.AuthenticationPromptEventArgs">
            <summary>
            Provides data for <see cref="E:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> event.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.AuthenticationEventArgs">
            <summary>
            Base class for authentication events.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AuthenticationEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.AuthenticationEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationEventArgs.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AuthenticationPromptEventArgs.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt})">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.AuthenticationPromptEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="instruction">The instruction.</param>
            <param name="language">The language.</param>
            <param name="prompts">The information request prompts.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPromptEventArgs.Language">
            <summary>
            Gets prompt language.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPromptEventArgs.Instruction">
            <summary>
            Gets prompt instruction.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPromptEventArgs.Prompts">
            <summary>
            Gets server information request prompts.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CMonitor">
            <summary>
            Methods to provide synchronizes access to objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CMonitor.Enter(System.Object)">
            <summary>
            Acquire exclusive lock on the specified object.
            </summary>
            <param name="lockingObject">The object on which to acquire the monitor lock.</param>
            <exception cref="T:System.ArgumentNullException">lockingObject parameter is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CMonitor.Exit(System.Object)">
            <summary>
            Releases the exclusive lock on the specified object.
            </summary>
            <param name="lockingObject">The object on which to release the lock.</param>
            <exception cref="T:System.ArgumentNullException">lockingObject parameter is null.</exception>
            <exception cref="T:System.ArgumentException">The current thread does not own the lock for the specified object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CMonitor.TryEnter(System.Object)">
            <summary>
            Attempt to acquire the exclusive lock of the specified object.
            </summary>
            <param name="lockingObject">The object on which to acquire the monitor lock.</param>
            <returns>true if the current thread acquires the lock; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">lockingObject parameter is null.</exception>        
        </member>
        <member name="T:Crestron.Infrastructure.EX_SERVICE_TYPES">
            <summary>
            Extended Service Type Enumeration for internal use.
            </summary>
        </member>
        <member name="T:Crestron.Infrastructure.EX_SERVICE_INTERFACE_STATUS_TYPES">
            <summary>
            Extended Service Interface status types for
            Extended Service Status message.
            </summary>
        </member>
        <member name="T:Crestron.Infrastructure.ExServiceConfigBitField">
            <summary>
            Configuration bit field for Ex-Service Request/or Response.
            </summary>
        </member>
        <member name="T:Crestron.Infrastructure.EX_SERVICE_REQUEST">
            <summary>
            Extended Service Request.
            </summary>
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_REQUEST_MESSAGE_STRUCT.messageLength">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_REQUEST_MESSAGE_STRUCT.messageType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_REQUEST_MESSAGE_STRUCT.serviceType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_REQUEST_MESSAGE_STRUCT.cipId">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_REQUEST_MESSAGE_STRUCT.requestBitField">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_RESPONSE_MESSAGE_STRUCT.messageLength">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_RESPONSE_MESSAGE_STRUCT.messageType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_RESPONSE_MESSAGE_STRUCT.serviceType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_RESPONSE_MESSAGE_STRUCT.cipId">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_RESPONSE_MESSAGE_STRUCT.responseBitField">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_STATUS_MESSAGE_STRUCT.messageLength">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_STATUS_MESSAGE_STRUCT.messageType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_STATUS_MESSAGE_STRUCT.serviceType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_STATUS_MESSAGE_STRUCT.cipId">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_STATUS_MESSAGE_STRUCT.status">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_DATA_MESSAGE_STRUCT.messageLength">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_DATA_MESSAGE_STRUCT.messageType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_DATA_MESSAGE_STRUCT.serviceType">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_DATA_MESSAGE_STRUCT.cipId">
            unsigned int
        </member>
        <member name="F:Crestron.Infrastructure.EX_SERVICE_INTERFACE_SERVICE_DATA_MESSAGE_STRUCT.data">
            unsigned char[]
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature">
            <summary>
            Implements DSA digital signature algorithm.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature.#ctor(Crestron.SimplSharp.Ssh.Security.DsaKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature"/> class.
            </summary>
            <param name="key">The DSA key.</param>
            <exception cref="T:System.ArgumentNullException">key</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="input">The input.</param>
            <param name="signature">The signature.</param>
            <returns>
              <c>True</c> if signature was successfully verified; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Invalid signature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature.Sign(System.Byte[])">
            <summary>
            Creates the signature.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Signed input data.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">Invalid DSA key.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.DsaDigitalSignature.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CtrCipherMode">
            <summary>
            Implements CTR cipher mode
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode">
            <summary>
            Base class for cipher mode implementations
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode.Cipher">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode.IV">
            <summary>
            Gets the IV vector.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode._blockSize">
            <summary>
            Holds block size of the cipher.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode.Init(Crestron.SimplSharp.Ssh.Security.Cryptography.BlockCipher)">
            <summary>
            Initializes the specified cipher mode.
            </summary>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CtrCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CtrCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CtrCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CtrCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.AsymmetricCipher">
            <summary>
            Base class for asymmetric cipher implementations.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.PrivateKeyFile">
            <summary>
            Represents private key information
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PrivateKeyFile"/> class.
            </summary>
            <param name="privateKey">The private key.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PrivateKeyFile"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null or empty.</exception>
            <remarks>This method calls <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/> internally, this method does not catch exceptions from <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/>.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PrivateKeyFile"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="passPhrase">The pass phrase.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null or empty, or <paramref name="passPhrase"/> is null.</exception>
            <remarks>This method calls <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/> internally, this method does not catch exceptions from <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/>.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PrivateKeyFile"/> class.
            </summary>
            <param name="privateKey">The private key.</param>
            <param name="passPhrase">The pass phrase.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="privateKey"/> or <paramref name="passPhrase"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.Open(Crestron.SimplSharp.CrestronIO.Stream,System.String)">
            <summary>
            Opens the specified private key.
            </summary>
            <param name="privateKey">The private key.</param>
            <param name="passPhrase">The pass phrase.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.DecryptKey(Crestron.SimplSharp.Ssh.CipherInfo,System.Byte[],System.String,System.Byte[])">
            <summary>
            Decrypts encrypted private key file data.
            </summary>
            <param name="cipherInfo">The cipher info.</param>
            <param name="cipherData">Encrypted data.</param>
            <param name="passPhrase">Decryption pass phrase.</param>
            <param name="binarySalt">Decryption binary salt.</param>
            <returns>Decrypted byte array.</returns>
            <exception cref="T:System.ArgumentNullException">cipherInfo</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="cipherInfo"/>, <paramref name="cipherData"/>, <paramref name="passPhrase"/> or <paramref name="binarySalt"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.BaseClient"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.PrivateKeyFile.HostKey">
            <summary>
            Gets the host key.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyFile.SshDataReader.ReadBigIntWithBits">
            <summary>
            Reads next mpint data type from internal buffer where length specified in bits.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage">
            <summary>
            Represents SSH_MSG_IGNORE message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.IgnoreMessage.Data">
            <summary>
            Gets ignore message data if any.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo">
            <summary>
            Represents "exec" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="encoding">Encoding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.Command">
            <summary>
            Gets command to execute.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo.Encoding">
            <summary>
            Gets the encoding.
            </summary>
            <value>
            The encoding.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_FAILURE message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage.AllowedAuthentications">
            <summary>
            Gets or sets the allowed authentications if available.
            </summary>
            <value>
            The allowed authentications.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage.Message">
            <summary>
            Gets failure message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.FailureMessage.PartialSuccess">
            <summary>
            Gets a value indicating whether authentication is partially successful.
            </summary>
            <value>
              <c>true</c> if partially successful; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.PipeStream">
            <summary>
            PipeStream is a thread-safe read/write data stream for use between two threads in a 
            single-producer/single-consumer type problem.
            </summary>
            <version>2006/10/13 1.0</version>
            <remarks>Update on 2008/10/9 1.1 - uses Monitor instead of Manual Reset events for more elegant synchronicity.</remarks>
            <license>
            Copyright (c) 2006 James Kolpack (james dot kolpack at google mail)
            
            Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
            associated documentation files (the "Software"), to deal in the Software without restriction, 
            including without limitation the rights to use, copy, modify, merge, publish, distribute, 
            sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
            furnished to do so, subject to the following conditions:
            
            The above copyright notice and this permission notice shall be included in all copies or 
            substantial portions of the Software.
            
            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
            INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
            PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
            LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
            OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
            OTHER DEALINGS IN THE SOFTWARE.
            </license>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.PipeStream._buffer">
            <summary>
            Queue of bytes provides the datastructure for transmitting from an
            input stream to an output stream.
            </summary>
            <remarks>Possible more effecient ways to accomplish this.</remarks>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.PipeStream._isFlushed">
            <summary>
            Indicates that the input stream has been flushed and that
            all remaining data should be written to the output stream.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.PipeStream._maxBufferLength">
            <summary>
            Maximum number of bytes to store in the buffer.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Common.PipeStream._canBlockLastRead">
            <summary>
            Setting this to true will cause Read() to block if it appears
            that it will run out of data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.PipeStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.PipeStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <returns>
            The new position within the current stream.
            </returns>
            <param name="offset">A byte offset relative to the origin parameter. </param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position. </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.PipeStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. </param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream. </param>
            <param name="count">The maximum number of bytes to be read from the current stream. </param>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source. </param>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.PipeStream.ReadAvailable(System.Int32)">
            <summary>
            Returns true if there are
            </summary>
            <param name="count">The count.</param>
            <returns><c>True</c> if data available; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream. </param>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream. </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PipeStream.MaxBufferLength">
            <summary>
            Gets or sets the maximum number of bytes to store in the buffer.
            </summary>
            <value>The length of the max buffer.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PipeStream.BlockLastReadBuffer">
            <summary>
            Gets or sets a value indicating whether to block last read method before the buffer is empty.
            When true, Read() will block until it can fill the passed in buffer and count.
            When false, Read() will not block, returning all the available buffer data.
            </summary>
            <remarks>
            Setting to true will remove the possibility of ending a stream reader prematurely.
            </remarks>
            <value>
            	<c>true</c> if block last read method before the buffer is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PipeStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>
            true if the stream supports reading; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PipeStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>
            true if the stream supports seeking; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PipeStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>
            true if the stream supports writing; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PipeStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PipeStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.CipherInfo">
            <summary>
            Holds information about key size and cipher to use
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.CipherInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Cipher})">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.CipherInfo"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CipherInfo.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
            <value>
            The size of the key.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CipherInfo.Cipher">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.CommandAsyncResult">
            <summary>
            Provides additional information for asynchronous command execution
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.CommandAsyncResult._command">
            <summary>
            Gets or sets the command that async result was created for.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.CommandAsyncResult.#ctor(Crestron.SimplSharp.Ssh.SshCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.CommandAsyncResult"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CommandAsyncResult.BytesReceived">
            <summary>
            Gets or sets the bytes received. If SFTP only file bytes are counted.
            </summary>
            <value>Total bytes received.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CommandAsyncResult.BytesSent">
            <summary>
            Gets or sets the bytes sent by SFTP.
            </summary>
            <value>Total bytes sent.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CommandAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CommandAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CommandAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.CommandAsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpServer">
            <summary>
            HTTP Server
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HttpServer.sServerName">
            <summary>
            Default HTTP Server name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServer.#ctor">
            <summary>
            Creates a new instance of the HttpServer class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServer.#ctor(Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Creates a new instance of the HttpServer class and allows for providing the desired adapter to bind to
            </summary>
            <param name="AdapterToBindTo">Adapter To Bind To</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServer.#ctor(Crestron.SimplSharp.Net.Http.OnHttpRequestHandler)">
            <summary>
            Creates a new instance of the HttpServer class and registers the incoming parameter as a callback for this HTTP Server object
            </summary>
            <param name="HttpServerCallbackFunction">Function to be called when an HTTPRequest is handled</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServer.#ctor(Crestron.SimplSharp.Net.Http.OnHttpRequestHandler,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Creates a new instance of the HttpServer class and registers the incoming parameter as a callback for this HTTP Server object
            </summary>
            <param name="HttpServerCallbackFunction">Function to be called when an HTTPRequest is handled</param>
            <param name="AdapterToBindTo">Adapter To Bind To</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServer.GetWorkerClass">
            <summary>
            Get worker class type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServer.HandleHttpRequest(Crestron.SimplSharp.Net.Connection,Crestron.SimplSharp.Net.Http.HttpServerRequest,Crestron.SimplSharp.Net.Http.HttpServerResponse)">
            <summary>
            Handles the HTTP Request for the HTTP server for the specified Connection.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="aResponse">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpServerResponse"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServer.KeepAlive">
            <summary>
            Controls whether to use HTTP Keep-Alive to keep the connection alive between requests. 
            If enabled (true), once a request is made and a connection is established, this connection is kept open and used for future requests. 
            If disabled, the connection is closed, and a new connection is created for future requests.
            </summary>
            <remarks>Default value is true.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServer.ValidateRequests">
            <summary>
            Controls whether HTTP Requests are validated or not. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServer.ServerName">
            <summary>
            Get or Set the name of the HTTP Server Instance. Defaults to "SimplSharp HTTP Server"
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Http.HttpServer.OnHttpRequest">
            <summary>
            This event is fired whenever an HTTP request is received by the server.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpWorker">
            <summary>
            HttpWorker class determines all synchronous HTTP workers to handle the individual connections. 
            They are created by the Listener whenever a new connection comes in.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpWorker.#ctor">
            <summary>
            Creates an instance of the HTTPWorker Class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpWorker.DoWork">
            <summary>
            Process the Requests for this HTTP Worker
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpWorker.ProcessRequests">
            <summary>
            Processes HTTP requests.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpWorker.Owner">
            <summary>
            Gets the HttpServer object which is the owner of the HttpWorker.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.OnHttpRequestHandler">
            <summary>
            OnHttpRequestHandler Delegate 
            </summary>
            <param name="sender">An object representing the sender of the event</param>
            <param name="e">An <see cref="T:Crestron.SimplSharp.Net.Http.OnHttpRequestArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.OnHttpRequestArgs">
            <summary>
            OnHttpRequestArgs class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.OnHttpRequestArgs.#ctor(Crestron.SimplSharp.Net.Connection,Crestron.SimplSharp.Net.Http.HttpServerRequest,Crestron.SimplSharp.Net.Http.HttpServerResponse)">
            <summary>
            Creates an instance of the OnHttpRequestArgs class with Connection, Request, and Response parameters
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <param name="aRequest">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpClientRequest"/> object.</param>
            <param name="aResponse">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpServerResponse"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.OnHttpRequestArgs.Request">
            <summary>
            Gets the Request property of the OnHttpRequestArgs instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.OnHttpRequestArgs.Response">
            <summary>
            Gets the Response property of the OnHttpRequestArgs instance.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ConnectionPool">
            <summary>
            ConnectionPool class determines a connection pool which is used to represent outgoing connections,
            and is not used to represent incoming connections because they are not used for pooling.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.#ctor(Crestron.SimplSharp.Net.Binding,Crestron.SimplSharp.Net.Binding)">
            <summary>
            ConnectionPool constructor with V4 and V6 Binding parameters.
            </summary>
            <param name="aBindingV4">A <see cref="P:Crestron.SimplSharp.Net.ConnectionPool.Binding"/> object.</param>
            <param name="aBindingV6">A <see cref="P:Crestron.SimplSharp.Net.ConnectionPool.Binding"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.#ctor">
            <summary>
            Default ConnectionPool constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.Cleanup(System.Object)">
            <summary>
            Cleans up the ConnectionPool instances.
            </summary>
            <param name="state">Not used.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.GetConnection(System.Net.EndPoint)">
            <summary>
            Get the connection for the specified EndPoint.
            </summary>
            <param name="aEndPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.GetConnection(System.Net.EndPoint,System.Boolean)">
            <summary>
            Get the connection for the specified EndPoint.
            </summary>
            <param name="aEndPoint">The endpoint to connect to</param>
            <param name="connectAutomatically">TRUE to connect before returning the connection</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.GetNewConnection(System.Net.EndPoint)">
            <summary>
            Gets a new connection for the specified Endpoint.
            </summary>
            <param name="aEndPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.GetNewConnection(System.Net.EndPoint,System.Boolean)">
            <summary>
            Gets a new connection for the specified Endpoint.
            </summary>
            <param name="aEndPoint"></param>
            <param name="connectAutomatically">TRUE to connect before returning the connection</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.ReleaseConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Releases the Connection for the specified Connection parameter.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>c
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionPool.Dispose">
            <summary>
            Disposes of all the ConnectionPool object elements.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionPool.Binding">
            <summary>
            Obsolete - please use BindingV4 and BindingV6 instead.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionPool.BindingV4">
            <summary>
            IPv4 Binding support. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionPool.BindingV6">
            <summary>
            IPv6 Binding support. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionPool.MaxQueuePerHost">
            <summary>
            Represents the Maximum number of Queues per host in the Connection Pool.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionPool.Timeout">
            <summary>
            Represents the timeout for a Connection Pool.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionPool.ConnectionFactory">
             <summary>
            Gets or sets the Connection Factory in the ConnectionPool
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionPool.ConnectionClass">
            <summary>
            Get or set the Connection Class in the ConnectionPool
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronThreadPool">
            <summary>
            Replacement class of System.Threading.ThreadPool for Mono in 4-series
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronThreadPool.GetMaxThreads(System.Int32@,System.Int32@)">
            <summary>
                Retrieves the number of requests to the thread pool that can be active concurrently.
                All requests above that number remain queued until thread pool threads become
                available.
            </summary>
            <param name="workerThreads"></param>
            <param name="completionPortThreads"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
                Queues a method for execution. The method executes when a thread pool thread
                becomes available.
            </summary>
            <param name="callBack"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
                Queues a method for execution, and specifies an object containing data to
                be used by the method. The method executes when a thread pool thread becomes
                available.
            </summary>
            <param name="callBack"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronThreadPool.SetMaxThreads(System.Int32,System.Int32)">
            <summary>
                Sets the number of requests to the thread pool that can be active concurrently.
                All requests above that number remain queued until thread pool threads become
                available.
            </summary>
            <param name="workerThreads"></param>
            <param name="completionPortThreads"></param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.Extensions">
            <summary>
            Provides LINQ to XML extension methods for CrestronXmlLinq
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the ancestors of every node in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XNode"/></typeparam>
            <param name="source">The source collection</param>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> containing the ancestors of every node in the source collection </returns>
            <remarks>If multiple nodes in the source collection have the same ancestor, 
            the ancestor will be included multiple times in the result collection. 
            Avoid this using the Distinct method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Returns a filtered collection containing the ancestors of the nodes in the source collection 
            matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/>.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XNode"/></typeparam>
            <param name="source">The source collection</param>
            <param name="name">The <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XNode"/> to match</param>
            <returns>a filtered collection containing the ancestors of the nodes in the source collection 
            matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/></returns>
            <remarks>If multiple nodes in the source collection have the same ancestor, 
            the ancestor will be included multiple times in the result collection. 
            Avoid this using the Distinct method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XElement})">
            <summary>
            Returns a collection of elements that contains every element in the source collection including their ancestors.
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> to get the elements and ancestors for.</param>
            <returns>A collection of elements that contains every element in the source collection including their ancestors</returns>
            <remarks>If multiple nodes in the source collection have the same ancestor, 
            the ancestor will be included multiple times in the result collection. 
            Avoid this using the Distinct method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XElement},Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Returns a filtered collection of elements and their ancestors matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/>.
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> to get the elements and ancestors for.</param>
            <param name="name">The <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/> to match</param>
            <returns>A filtered collection of elements and their ancestors matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/>.</returns>
            <remarks>If multiple nodes in the source collection have the same ancestor, 
            the ancestor will be included multiple times in the result collection. 
            Avoid this using the Distinct method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Attributes(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XElement})">
            <summary>
            Returns a collection of the attributes of the <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> to get the attributes for.</param>
            <returns>A collection of the attributes of the elements in the source collection</returns>
            <remarks>Namespaces are also considered as attributes and will also be returned</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Attributes(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XElement},Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Returns a filtered collection of the attributes of the elements in the source collection matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/>.
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> to get the attributes for</param>
            <param name="name">The XName to match</param>
            <returns>A filtered collection of the attributes of the elements in the source collection matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/></returns>
            <remarks>Namespaces are also considered as attributes and will also be returned</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the descendant nodes of the document and elements in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/></typeparam>
            <param name="source">The collection to get the descendant nodes for.</param>
            <returns>The descendant nodes of the document and elements in the source collection</returns>
            <remarks>This method is used on <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XDocument"/> and <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/></remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XElement})">
            <summary>
            Returns all nodes and descendants of the source collection
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> to to get nodes and descendants for</param>
            <returns>A collection of all nodes and descendants of the source collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the descendants of the elements in the source collection
            </summary>
            <typeparam name="T">The type of objects in the source collection, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/></typeparam>
            <param name="source">The source collection of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/> to get descendants for.</param>
            <returns>The descendants of the elements in the source collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Returns a filtered collection of descendants of the elements in the source collection matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/> 
            </summary>
            <typeparam name="T">The type of objects in the source collection, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/></typeparam>
            <param name="source">The source collection of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/> to get descendants for.</param>
            <param name="name">The <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/> to match</param>
            <returns>The descendants of the elements in the source collection matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XElement})">
            <summary>
            Returns a collection of all the elements in the source collection and their descendants.
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> to get elements and descendants for</param>
            <returns>A collection of all the elements in the source collection and their descendants</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XElement},Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Returns a filtered collection of the elements in the source collection and their descendants matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/>.
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> to get elements and descendants for</param>
            <param name="name">The XName to match</param>
            <returns>A filtered collection of the elements in the source collection and their descendants matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Returns a filtered collection of child elements in the source collection matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/>
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/></typeparam>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> containing the source collection</param>
            <param name="name">The <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/> to match</param>
            <returns>A filtered collection of child elements in the source collection matching the specified <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XName"/></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of the child elements of every element and document in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/></typeparam>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XElement"/> containing the source collection</param>
            <returns>All child elements of every element and document in the source collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a sorted collection of the nodes in the source collection
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XNode"/></typeparam>
            <param name="source">The source collection of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XNode"/></param>
            <returns>A sorted collection of the nodes in the source collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the child nodes of all documents and elements in the source collection
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/></typeparam>
            <param name="source">The source collection of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer"/></param>
            <returns>All the child nodes of all documents and elements in the source collection</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Remove(System.Collections.Generic.IEnumerable{Crestron.SimplSharp.CrestronXmlLinq.XAttribute})">
            <summary>
            Removes every attribute in the source collection from its parent element
            </summary>
            <param name="source">The source collection of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XAttribute"/></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Removes every node in the source collection from its parent node
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XNode"/></typeparam>
            <param name="source">The source collection of <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.XNode"/></param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.LoadOptions">
            <summary>
            Specifies load options when parsing XML.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXmlLinq.LoadOptions.None">
            <summary>
                Does not preserve insignificant white space or load base URI and line information.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXmlLinq.LoadOptions.PreserveWhitespace">
            <summary>
            Preserves insignificant white space while parsing.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXmlLinq.LoadOptions.SetBaseUri">
            <summary>
            Requests the base URI information from the  XmlReader, and makes
            it available via the CrestronXmlLinq.XObject.BaseUri property.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXmlLinq.LoadOptions.SetLineInfo">
            <summary>
             Requests the line information from the  XmlReader and makes it
             available via properties on CrestronXmlLinq.XObject.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.SaveOptions">
            <summary>
            Specifies serialization options.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXmlLinq.SaveOptions.None">
             <summary>
            Format (indent) the XML while serializing.
             </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXmlLinq.SaveOptions.DisableFormatting">
            <summary>
             Preserve all insignificant white space while serializing.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XAttribute">
            <summary>
            Initializes a new instance of the XAttribute class from another XAttribute object.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XObject">
            <summary>
            Represents a node or an attribute in an XML tree.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.IXmlLineInfo">
            <summary>
            Provides an interface to enable a class to return line and position information.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.IXmlLineInfo.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>true if IXmlLineInfo.LineNumber and IXmlLineInfo.LinePosition
                can be provided; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.IXmlLineInfo.LineNumber">
            <summary>
             Gets the current line number.
            </summary>
            <returns>The current line number or 0 if no line information is available (for example,
                IXmlLineInfo.HasLineInfo() returns false).</returns> 
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.IXmlLineInfo.LinePosition">
             <summary>
                 Gets the current line position.
            
             Returns:
                 The current line position or 0 if no line information is available (for example,
                 IXmlLineInfo.HasLineInfo() returns false).
             </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.RemoveAnnotations``1">
            <summary>
             Removes the annotations of the specified type from this CrestronXmlLinq.XObject.
            </summary>
            <typeparam name="T">The type of annotations to remove.</typeparam>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.RemoveAnnotations(System.Type)">
            <summary>
             Removes the annotations of the specified type from this CrestronXmlLinq.XObject.
            </summary>
            <param name="type">The System.Type of annotations to remove.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.AddAnnotation(System.Object)">
            <summary>
             Adds an object to the annotation list of this CrestronXmlLinq.XObject.
            </summary>
            <param name="annotation"> An System.Object that contains the annotation to add.</param>
            <exception cref="T:System.ArgumentNullException">The annotation parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.Annotation``1">
            <summary>
              Get the first annotation object of the specified type from this CrestronXmlLinq.XObject.
            </summary>
            <typeparam name="T"> The type of the annotation to retrieve.</typeparam>
            <returns>  The first annotation object that matches the specified type, or null if no
                annotation is of the specified type.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.Annotation(System.Type)">
            <summary>
              Gets the first annotation object of the specified type from this CrestronXmlLinq.XObject.
            </summary>
            <param name="type"> The System.Type of the annotation to retrieve.</param>
            <returns> The System.Object that contains the first annotation object that matches the specified type, or null if no annotation is of the specified type. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.Annotations``1">
            <summary>
             Removes the annotations of the specified type from this CrestronXmlLinq.XObject.
            </summary>
            <typeparam name="T">The type of annotations to remove.</typeparam>
            <returns> A collection that contains the annotations that match the specified type for this  CrestronXmlLinq.XObject. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.Annotations(System.Type)">
            <summary>
             Gets a collection of annotations of the specified type for this CrestronXmlLinq.XObject.
            </summary>
            <param name="type"> The System.Type of the annotations to retrieve.</param>
            <returns> A collection that contains the annotations that match the specified type for this CrestronXmlLinq.XObject. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.HasLineInfo">
            <summary>
             Gets a value indicating whether the class can return line information.
            </summary>
            <returns> true if  IXmlLineInfo.LineNumber and  IXmlLineInfo.LinePosition
                can be provided; otherwise, false.</returns>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.op_Equality(Crestron.SimplSharp.CrestronXmlLinq.XObject,Crestron.SimplSharp.CrestronXmlLinq.XObject)">
            <summary>
            Checks for referential equality for two XObjects
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XObjects are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.op_Inequality(Crestron.SimplSharp.CrestronXmlLinq.XObject,Crestron.SimplSharp.CrestronXmlLinq.XObject)">
            <summary>
            Checks for referential inequality for two XObjects
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XObjects are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.GetHashCode">
            <summary>
            Gets the hash code for this XObject
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XObject.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XObject
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XObject; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XObject.BaseUri">
            <summary>
            Gets the base URI for this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XObject.Document">
            <summary>
            Gets the XDocument for this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XObject.NodeType">
            <summary>
            Gets the node type for this node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XObject.Parent">
            <summary>
            Gets the parent XElement of this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XObject.LineNumber">
             <summary>
            Gets the current line number.
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XObject.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XAttribute)">
            <summary>
            Initializes a new instance of the XAttribute class from another XAttribute object.
            </summary>
            <param name="other">XAttribute object</param>
            <exception cref="T:System.ArgumentNullException"> The other parameter is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName,System.Object)">
            <summary>
            Initializes a new instance of the XAttribute class from from the
             specified name and value.
            </summary>
            <param name="name">The CrestronXmlLinq.XName of the attribute.</param>
            <param name="value">An object containing the value of the attribute.</param>
            <exception cref="T:System.ArgumentNullException"> The name or value parameter is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.GetType">
             <summary>
            Gets the Type of the current instance.
             </summary>
             <returns> The System.Type instance that represents the exact runtime type of the current instance. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.Remove">
             <summary>
            Removes this attribute from its parent element.
             </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.SetValue(System.Object)">
             <summary>
            Sets the value of this attribute.
             </summary>
             <param name="value"> The value to assign to this attribute.</param>
             <exception cref="T:System.ArgumentNullException">
                 The value parameter is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.ToString">
            <summary>
            Converts the current CrestronXmlLinq.XAttribute object to a string representation.
            </summary>
            <returns> A System.String containing the XML text representation of an attribute and its value. </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.BaseUri">
            <summary>
            Gets the base URI for this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.Document">
            <summary>
            Gets the XDocument for this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.EmptySequence">
            <summary>
            Gets an empty collection of attributes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.IsNamespaceDeclaration">
            <summary>
            Determines if this attribute is a namespace declaration.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.Name">
            <summary>
            Gets the expanded name of this attribute.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.XName">
            <summary>
            Gets the expanded name of this attribute.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.NextAttribute">
            <summary>
            Gets the next attribute of the parent element.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.NodeType">
            <summary>
            Gets the node type for this node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.Parent">
            <summary>
            Gets the parent XElement of this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.PreviousAttribute">
            <summary>
            Gets the previous attribute of the parent element.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XAttribute.Value">
            <summary>
            Gets or sets the value of this attribute.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XCData">
            <summary>
            Represents a text node that contains CDATA.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XText">
            <summary>
             Represents a text node.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XNode">
            <summary>
            Represents the concept of a node (one of: element, comment, document
                type, processing instruction, or text node) in the XML tree.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.#ctor">
            <summary>
            Initializes a new instance of the XNode class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.GetType">
             <summary>
            Gets the Type of the current instance.
             </summary>
             <returns> The exact runtime type of the current instance. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.AddAfterSelf(System.Object)">
             <summary>
            Adds the specified content immediately after this node.
             </summary>
             <param name="content"> A content object that contains simple content or a collection of content
                 objects to be added after this node.</param>
                 <exception cref="T:System.InvalidOperationException"> The parent is null.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.AddAfterSelf(System.Object[])">
             <summary>
            Adds the specified content immediately after this node.
             </summary>
             <param name="content"> A parameter list of content objects.</param>
                 <exception cref="T:System.InvalidOperationException"> The parent is null.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.AddBeforeSelf(System.Object)">
            <summary>
             Adds the specified content immediately before this node
            </summary>
            <param name="content">A content object that contains simple content or a collection of content
                objects to be added before this node.
                </param>
                <exception cref="T:System.InvalidOperationException"> The parent is null.
                </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.AddBeforeSelf(System.Object[])">
            <summary>
             Adds the specified content immediately before this node.
            </summary>
            <param name="content"> A parameter list of content objects.
            </param>
            <exception cref="T:System.InvalidOperationException"> The parent is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.Ancestors">
            <summary>
             Returns a collection of the ancestor elements of this node.
            </summary>
            <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                of the ancestor elements of this node.</returns>
                
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.Ancestors(Crestron.SimplSharp.CrestronXmlLinq.XName)">
             <summary>
            Returns a filtered collection of the ancestor elements of this node. 
            Only elements that have a matching XName are included in the collection.
             </summary>
             <param name="name">The CrestronXmlLinq.XName to match.</param>
             <returns>
             An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
             of the ancestor elements of this node. Only elements that have a matching
             CrestronXmlLinq.XName are included in the collection.The nodes in the returned
             collection are in reverse document order.This method uses deferred execution.
             </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.CreateReader">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlReader for this node.
            </summary>
            <returns> An Crestron.SimplSharp.CrestronXml.XmlReader that can be used to read this node and its descendants.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ElementsAfterSelf">
            <summary>
             Returns a collection of the sibling elements after this node, in document
                order.
            </summary>
            <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                of the sibling elements after this node, in document order.    
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ElementsAfterSelf(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
             Returns a filtered collection of the sibling elements after this node, in
                document order. Only elements that have a matching CrestronXmlLinq.XName
                are included in the collection.
            </summary>
            <param name="name">The CrestronXmlLinq.XName to match.</param>
            <returns>An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                of the sibling elements after this node, in document order. Only elements
                that have a matching CrestronXmlLinq.XName are included in the collection.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ElementsBeforeSelf">
            <summary>
             Returns a collection of the sibling elements before this node, in document
                order.
            </summary>
            <returns>  An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                of the sibling elements before this node, in document order.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ElementsBeforeSelf(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
             Returns a filtered collection of the sibling elements before this node, in
                document order. Only elements that have a matching CrestronXmlLinq.XName
                are included in the collection.
            </summary>
            <param name="name">The CrestronXmlLinq.XName to match.</param>
            <returns>An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                of the sibling elements before this node, in document order. Only elements
                that have a matching CrestronXmlLinq.XName are included in the collection.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.IsAfter(Crestron.SimplSharp.CrestronXmlLinq.XNode)">
            <summary>
            Determines if the current node appears after a specified node in terms of
                document order.
            </summary>
            <param name="node">The CrestronXmlLinq.XNode to compare for document order.</param>
            <returns> true if this node appears after the specified node; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.IsBefore(Crestron.SimplSharp.CrestronXmlLinq.XNode)">
            <summary>
             Determines if the current node appears before a specified node in terms of
                document order.
            </summary>
            <param name="node"> The CrestronXmlLinq.XNode to compare for document order.</param>
            <returns> true if this node appears before the specified node; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.NodesAfterSelf">
            <summary>
             Returns a collection of the sibling nodes after this node, in document order.
            </summary>
            <returns>An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XNode of
                the sibling nodes after this node, in document order.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.NodesBeforeSelf">
            <summary>
             Returns a collection of the sibling nodes before this node, in document order.
            </summary>
            <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XNode of
                the sibling nodes before this node, in document order.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.Remove">
            <summary>
             Removes this node from its parent.
            </summary>
            <exception cref="T:System.InvalidOperationException">The parent is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ReplaceWith(System.Object)">
            <summary>
            Replaces this node with the specified content.
            </summary>
            <param name="content"> Content that replaces this node.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ReplaceWith(System.Object[])">
            <summary>
            Replaces this node with the specified content.
            </summary>
            <param name="content"> A parameter list of the new content.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ToString">
            <summary>
            Converts the current CrestronXmlLinq.XAttribute object to a string representation.
            </summary>
            <returns> Returns the XML for this node. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ToString(Crestron.SimplSharp.CrestronXmlLinq.SaveOptions)">
            <summary>
            Converts the current CrestronXmlLinq.XAttribute object to a string representation.
            </summary>
            <param name="options"> A <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.SaveOptions"/> value that specifies formatting behavior. </param>
            <returns> Returns the XML for this node, optionally disabling formatting. </returns>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
                 Writes this node to an XmlWriter.
            </summary>
             <param name="writer">
                 An XmlWriter into which this method will write.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.DeepEquals(Crestron.SimplSharp.CrestronXmlLinq.XNode,Crestron.SimplSharp.CrestronXmlLinq.XNode)">
            <summary>
            Compares the values of two nodes, including the values of all descendant nodes.
            </summary>
            <param name="n1"> The first XNode to compare</param>
            <param name="n2"> The second XNode to compare</param>
            <returns> true if the nodes are equal; otherwise false</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.CompareDocumentOrder(Crestron.SimplSharp.CrestronXmlLinq.XNode,Crestron.SimplSharp.CrestronXmlLinq.XNode)">
            <summary>
            Compares two nodes to determine their relative XML document order.
            </summary>
            <param name="n1"> The first XNode to compare</param>
            <param name="n2"> The second XNode to compare</param>
            <returns>An int containing 0 if the nodes are equal; -1 if n1 is before n2; 1 if n1 is after n2.</returns>
            <exception cref="T:System.InvalidOperationException"> The two nodes do not share a common ancestor.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.ReadFrom(Crestron.SimplSharp.CrestronXml.XmlReader)">
            <summary>
            Creates an XNode from an XmlReader.
            </summary>
            <param name="reader">A XmlReader positioned at the node to read into this XNode.</param>
            <returns> An XNode that contains the node and its descendant nodes
                that were read from the reader. The runtime type of the node is determined
                by the node type (XObject.NodeType) of the first node encountered
                in the reader.</returns>
            <exception cref="T:System.InvalidOperationException"> The XmlReader is not positioned on a recognized node type.</exception>
            <exception cref="T:System.Xml.XmlException"> The underlying XmlReader throws an exception.</exception>
            <exception cref="T:System.ArgumentNullException">The reader parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNode.RetrieveCorrectWrapper(System.Xml.Linq.XNode)">
            <summary>
            Returns the corresponding CrestronXmlLinq.XNode type for the specified System.Xml.Linq.XNode
            </summary>
            <param name="node">The System.Xml.Linq.XNode to wrap</param>
            <returns>The corresponding CrestronXmlLinq.XNode type</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNode.BaseUri">
            <summary>
            Gets the base URI for this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNode.NodeType">
            <summary>
            Gets the node type for this node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNode.Document">
            <summary>
            Gets the XDocument for this XObject.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNode.NextNode">
            <summary>
            Gets the next sibling node of this node.
            </summary>
            <returns>The CrestronXmlLinq.XNode that contains the next sibling node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNode.PreviousNode">
            <summary>
            Gets the previous sibling node of this node.
            </summary>
            <returns>The CrestronXmlLinq.XNode that contains the previous sibling node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNode.Parent">
            <summary>
            Gets the parent XElement of this XObject.
            This will return null if the parent is null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XText.#ctor">
            <summary>
             Represents a text node.
            </summary> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CrestronXmlLinq.XText class.
            </summary>
            <param name="value"> The System.String that contains the value of the Crestron.SimplSharp.CrestronXmlLinq.XText node.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XText.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XText)">
            <summary>
             Initializes a new instance of the Crestron.SimplSharp.CrestronXmlLinq.XText class from another
                CrestronXmlLinq.XText object.
            </summary>
            <param name="other">The Crestron.SimplSharp.CrestronXmlLinq.XText node to copy from.</param>
            <exception cref="T:System.ArgumentNullException">The other parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XText.Annotations(System.Type)">
             <summary>
            Gets a collection of annotations of the specified type for this XObject.
             </summary>
             <param name="type"> The System.Type of the annotations to retrieve. </param>
             <returns> A collection that contains the annotations that match the specified type for this text node. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XText.CreateReader(Crestron.SimplSharp.CrestronIO.FileStream)">
             <summary>
            Creates an XmlReader for this node. 
             </summary>
             <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.FileStream"/></param>
             <returns> new XmlReader instance for this node. </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XText.Value">
             <summary>  
            Gets the previous sibling node of this node.
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XText.Document">
            <summary>
            Gets the XDocument for this XObject.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XCData.#ctor(System.String)">
            <summary>
             Initializes a new instance of the Crestron.SimplSharp.CrestronXmlLinq.XCData class.
            </summary>
            <param name="value"> A string that contains the value of the CrestronXmlLinq.XCData node.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XCData.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XCData)">
            <summary>
            Initializes a new instance of the CrestronXmlLinq.XCData class.
            </summary>
            <param name="other">The Crestron.SimplSharp.CrestronXmlLinq.XCData node to copy from.</param>
            <exception cref="T:System.ArgumentNullException">The other parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XCData.AddAnnotation(System.Object)">
             <summary>
            Adds an object to the annotation list of this XObject.
             </summary>
             <param name="annotation"> An System.Object that contains the annotation to add. </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XCData.Annotation``1">
            <summary>
            Get the first annotation object of the specified type from this XObject.
            </summary>
            <typeparam name="T">The type of annotation to retrieve.</typeparam>
            <returns>The first annotation object of the specified type from this XObject</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XCData.Annotations(System.Type)">
             <summary>
            Gets a collection of annotations of the specified type for this XObject.
             </summary>
             <param name="type"> The System.Type of the annotations to retrieve. </param>
             <returns> A collection that contains the annotations that match the specified type for this XCData node. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XCData.Annotations``1">
             <summary>
            Gets a collection of annotations of the specified type for this XObject.
             </summary>
             <typeparam name="T">The type of annotations to retrieve.</typeparam>
             <returns> A collection that contains the annotations that match the specified type for this XCData node. </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XCData.Value">
             <summary>
            Gets the previous sibling node of this node.
             </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XElement">
            <summary>
            XElement
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XContainer">
            <summary>
             Represents a node that can contain other nodes.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Add(System.Object)">
             <summary>
              Adds the specified content as children of this CrestronXmlLinq.XContainer.
            
             </summary>
             <param name="content"> A content object containing simple content or a collection of content objects
                 to be added.
                 </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Add(System.Object[])">
             <summary>
            Adds the specified content immediately after this node.
             </summary>
             <param name="content"> A parameter list of content objects.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.AddFirst(System.Object)">
            <summary>
             Adds the specified content as the first children of this document or element.
            </summary>            
            <param name="content"> A content object containing simple content or a collection of content objects
            to be added.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.AddFirst(System.Object[])">
            <summary>
             Adds the specified content as the first children of this document or element.
            </summary>
            <param name="content">A parameter list of content objects.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.CreateWriter">
            <summary>
             Creates an  XmlWriter that can be used to add nodes to the CrestronXmlLinq.XContainer.
            </summary>
            <returns> An  XmlWriter that is ready to have content written to it.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Descendants">
            <summary>
                Returns a collection of the descendant elements for this document or element,
                in document order.
            </summary>
            <returns>
            An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
            containing the descendant elements of the CrestronXmlLinq.XContainer.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Descendants(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
              Returns a filtered collection of the descendant elements for this document
                or element, in document order. Only elements that have a matching CrestronXmlLinq.XName
                are included in the collection.
            </summary>
            <param name="name">The CrestronXmlLinq.XName to match.</param>
            <returns>   An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                containing the descendant elements of the CrestronXmlLinq.XContainer that
                match the specified CrestronXmlLinq.XName.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.DescendantNodes">
            <summary>
             Returns a collection of the descendant nodes for this document or element,
                in document order.
            </summary>
            <returns> An System.Collections.Generic.IEnumerable of Crestron.SimplSharp.CrestronXmlLinq.XNode containing
            the descendant nodes of the Crestron.SimplSharp.CrestronXmlLinq.XContainer, in document order.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Element(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
             Gets the first (in document order) child element with the specified  Linq.XName.
            </summary>
            <param name="name">The CrestronXmlLinq.XName to match.</param>
            <returns>  A CrestronXmlLinq.XElement that matches the specified CrestronXmlLinq.XName,
                or null.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Elements">
            <summary>
            Gets a collection of annotations of the specified type for this XObject.
            </summary>
            <returns>An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                containing the child elements of this CrestronXmlLinq.XContainer, in document
                order.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Elements(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Returns a filtered collection of the child elements of this element or document,
                in document order. Only elements that have a matching CrestronXmlLinq.XName
                are included in the collection.
            </summary>
            <param name="name"> The CrestronXmlLinq.XName to match.</param>
            <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                containing the children of the CrestronXmlLinq.XContainer that have a matching
                CrestronXmlLinq.XName, in document order.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.Nodes">
             <summary>
            Returns a filtered collection of the ancestor elements of this node. 
            Only elements that have a matching XName are included in the collection.
             </summary>
             <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XNode containing
                 the contents of this CrestronXmlLinq.XContainer, in document order.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.RemoveNodes">
            <summary>
             Removes the child nodes from this document or element.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.ReplaceNodes(System.Object)">
            <summary>
             Replaces the children nodes of this document or element with the specified
                content.
            </summary>
            <param name="content">A content object containing simple content or a collection of content objects
                that replace the children nodes.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XContainer.ReplaceNodes(System.Object[])">
            <summary>
            Replaces the children nodes of this document or element with the specified
                content.
            </summary>
            <param name="content">A parameter list of content objects.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XContainer.FirstNode">
            <summary>
             Get the first child node of this node.
            </summary>
            <returns> An Crestron.SimplSharp.CrestronXmlLinq.XNode containing the first child node of the CrestronXmlLinq.XContainer.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XContainer.LastNode">
            <summary>
            Get the last child node of this node.
            </summary>
            <returns>An XNode containing the last child node of the XContainer.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(System.Xml.Linq.XElement)">
             <summary>
             Initializes a new instance of the CrestronXmlLinq.XElement class from another
                 CrestronXmlLinq.XElement object.
             </summary>
             <param name="el">An CrestronXmlLinq.XElement object to copy from.</param>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XElement)">
            <summary>
            Initializes a new instance of the CrestronXmlLinq.XElement class from another
                CrestronXmlLinq.XElement object.
            </summary>
            <param name="other">An CrestronXmlLinq.XElement object to copy from.</param>
            <exception cref="T:System.ArgumentNullException">The other parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
            Initializes a new instance of the XAttribute class from another XAttribute object.
            </summary>
            <param name="name">CrestronXmlLinq.XName that contains the name of the element.</param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement)">
            <summary>
            Initializes a new instance of the CrestronXmlLinq.XElement class from an
                CrestronXmlLinq.XStreamingElement object.
            </summary>
            <param name="other"> An CrestronXmlLinq.XStreamingElement that contains unevaluated queries that
                will be iterated for the contents of this CrestronXmlLinq.XElement.</param>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.ArgumentNullException">The other parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName,Crestron.SimplSharp.CrestronXmlLinq.XComment)">
            <summary>
            Initializes a new instance of the CrestronXmlLinq.XElement class with the
                specified name and content.
            </summary>
            <param name="name"> An CrestronXmlLinq.XName that contains the element name.</param>
            <param name="content">The contents of the element.</param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName,Crestron.SimplSharp.CrestronXmlLinq.XElement[])">
            <summary>
             Initializes a new instance of the CrestronXmlLinq.XElement class with the
                specified name and content.
            </summary>
            <param name="name"> An CrestronXmlLinq.XName that contains the element name.</param>
            <param name="content">The initial content of the element.</param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName,System.Collections.Generic.List{Crestron.SimplSharp.CrestronXmlLinq.XElement})">
            <summary>
            Initializes a new instance of the XElement class from a list of elements.
            </summary>
            <param name="name">XName name</param>
            <param name="content">List of XElements</param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName,System.Object[])">
            <summary>
            Initializes a new instance of the CrestronXmlLinq.XElement class from another
                CrestronXmlLinq.XElement object.
            </summary>
            <param name="name"> An CrestronXmlLinq.XName that contains the element name.</param>
            <param name="content"> The initial content of the element.</param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.AncestorsAndSelf">
            <summary>
             Returns a collection of elements that contain this element, and the ancestors
                of this element.
            </summary>
            <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                of elements that contain this element, and the ancestors of this element.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.AncestorsAndSelf(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
               Returns a filtered collection of elements that contain this element, and
                the ancestors of this element. Only elements that have a matching CrestronXmlLinq.XName
                are included in the collection.
            </summary>
            <param name="name">The CrestronXmlLinq.XName to match.</param>
            <returns>  An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XElement
                that contain this element, and the ancestors of this element. Only elements
                that have a matching CrestronXmlLinq.XName are included in the collection.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Attribute(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
              Returns the CrestronXmlLinq.XAttribute of this CrestronXmlLinq.XElement that
                has the specified CrestronXmlLinq.XName.
            </summary>
            <param name="name">The CrestronXmlLinq.XName of the CrestronXmlLinq.XAttribute to get.</param>
            <returns> An CrestronXmlLinq.XAttribute that has the specified CrestronXmlLinq.XName;
            null if there is no attribute with the specified name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Attributes">
            <summary>
             Returns a collection of attributes of this element.
            </summary>
            <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XAttribute
                of attributes of this element.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Attributes(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
             Returns a filtered collection of attributes of this element. Only elements
                that have a matching CrestronXmlLinq.XName are included in the collection.
            </summary>
            <param name="name"> The CrestronXmlLinq.XName to match.</param>
            <returns>  An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XAttribute
                CrestronXmlLinq.XName are included in the collection.
                </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.DescendantNodesAndSelf">
            <summary>
             Returns a collection of the descendant nodes for this document or element,
                in document order.
            </summary>
            <returns> An System.Collections.Generic.IEnumerable T of CrestronXmlLinq.XNode containing
            the descendant nodes of the CrestronXmlLinq.XContainer, in document order.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.DescendantsAndSelf">
             <summary>
            Gets a collection of annotations of the specified type for this XObject.
             </summary>
             <returns> Returns a collection of elements that contain this element, and all descendant elements of this element, in document order. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.DescendantsAndSelf(Crestron.SimplSharp.CrestronXmlLinq.XName)">
             <summary>
            Gets a collection of annotations of the specified type for this XObject.
             </summary>
             <param name="name">Name to match.</param>
             <returns> Returns a collection of elements that contain this element, and all descendant elements of this element, in document order. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Load(Crestron.SimplSharp.CrestronXml.XmlReader)">
            <summary>
            Loads an CrestronXmlLinq.XElement from an  XmlReader.
            </summary>
            <param name="reader"> A XmlReader that will be read for the content of the CrestronXmlLinq.XElement.</param>
            <returns> An CrestronXmlLinq.XElement that contains the XML that was read from the
                specified XmlReader.
                </returns>
            <exception cref="T:System.ArgumentNullException">The reader parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Load(Crestron.SimplSharp.CrestronXml.XmlReader,Crestron.SimplSharp.CrestronXmlLinq.LoadOptions)">
            <summary>
             Loads an CrestronXmlLinq.XElement from an  XmlReader, optionally
                preserving white space, setting the base URI, and retaining line information.
            </summary>
            <param name="reader"> A  XmlReader that will be read for the content of the CrestronXmlLinq.XElement.</param>
            <param name="options"> A CrestronXmlLinq.LoadOptions that specifies white space behavior, and whether
                to load base URI and line information.</param>
            <returns>An CrestronXmlLinq.XElement that contains the XML that was read from the
                specified  XmlReader.
                </returns>
            <exception cref="T:System.ArgumentNullException">The reader parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Parse(System.String)">
            <summary>
            Load an CrestronXmlLinq.XElement from a string that contains XML.
            </summary>
            <param name="text">String that contains XML</param>
            <returns> An XElement populated from the string that contains XML. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Parse(System.String,Crestron.SimplSharp.CrestronXmlLinq.LoadOptions)">
            <summary>
             Load an CrestronXmlLinq.XElement from a string that contains XML, optionally
                preserving white space and retaining line information.
            </summary>
            <param name="text">String that contains XML</param>
            <param name="options">A <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.LoadOptions"/> that specifies white space behavior,
            and whether to load base URI and line information.</param>
            <returns> An XElement populated from the string that contains XML. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.RemoveAll">
            <summary>
             Removes nodes and attributes from this CrestronXmlLinq.XElement.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.RemoveAttributes">
            <summary>
             Removes the attributes of this CrestronXmlLinq.XElement.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.ReplaceAll(System.Object)">
            <summary>
             Replaces the child nodes and the attributes of this element with the specified
                content.
            </summary>
            <param name="content"> The content that will replace the child nodes and attributes of this element.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.ReplaceAll(System.Object[])">
            <summary>
            Replaces the child nodes and the attributes of this element with the specified
                content.
            </summary>
            <param name="content"> A parameter list of content objects.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.Save(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
             Serialize this element to a file.
            </summary>
            <param name="writer"> A  XmlWriter that the CrestronXmlLinq.XElement will be written
                to.</param>
            <exception cref="T:System.ArgumentNullException">The writer parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.SetAttributeValue(Crestron.SimplSharp.CrestronXmlLinq.XName,System.Object)">
            <summary>
             Sets the value of an attribute, adds an attribute, or removes an attribute.
            </summary>
            <param name="name">An CrestronXmlLinq.XName that contains the name of the attribute to change.</param>
            <param name="value">The value to assign to the attribute. The attribute is removed if the value
                is null. Otherwise, the value is converted to its string representation and
                assigned to the CrestronXmlLinq.XAttribute.Value property of the attribute.</param>
                
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.SetElementValue(Crestron.SimplSharp.CrestronXmlLinq.XName,System.Object)">
            <summary>
             Sets the value of a child element, adds a child element, or removes a child
                element.
            </summary>
            <param name="name">An CrestronXmlLinq.XName that contains the name of the child element to change.</param>
            <param name="value">The value to assign to the child element. The child element is removed if
                the value is null. Otherwise, the value is converted to its string representation
                and assigned to the CrestronXmlLinq.XElement.Value property of the child
                element.</param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.SetValue(System.Object)">
            <summary>
            Sets the value of this element.
            </summary>
            <param name="value"> The value to assign to this element. The value is converted to its string
                representation and assigned to the CrestronXmlLinq.XElement.Value property</param>
            <exception cref="T:System.ArgumentNullException">The value parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.ToString(Crestron.SimplSharp.CrestronXmlLinq.SaveOptions)">
            <summary>
            Converts the current CrestronXmlLinq.XAttribute object to a string representation.
            </summary>
            <param name="options"> A <see cref="T:Crestron.SimplSharp.CrestronXmlLinq.SaveOptions"/> value that specifies formatting behavior. </param>
            <returns> Returns the XML for this XElement, optionally disabling formatting. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Write this element to an  XmlWriter.
            </summary>
            <param name="writer"> An  XmlWriter into which this method will write.</param>
            <exception cref="T:System.ArgumentNullException">The writer parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.GetDefaultNamespace">
            <summary>
            Gets the default XNamespace of this XElement
            </summary>
            <returns>An XNamespace that contains the default namespace of this XElement</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.GetNamespaceOfPrefix(System.String)">
            <summary>
            Gets the namespace associated with a particular prefix for this XElement.  
            A null is returned if no namespace is associated with the prefix
            </summary>
            <param name="prefix">A string containing the namespace prefix to look up</param>
            <returns>An XNamespace for the namespace associated with the prefix for this XElement</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.GetPrefixOfNamespace(Crestron.SimplSharp.CrestronXmlLinq.XNamespace)">
            <summary>
            Gets the prefix associated with a namespace for this XElement
            </summary>
            <param name="ns">The XNamespace to look up</param>
            <returns>A String that contains the namespace prefix</returns>
            <exception cref="T:System.ArgumentNullException">The ns parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.ReplaceAttributes(System.Object)">
            <summary>
            Replaces the attributes of this element with the specified content
            </summary>
            <param name="content">The content that will replace the attributes of this element</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.ReplaceAttributes(System.Object[])">
            <summary>
            Replaces the attributes of this element with the specified content
            </summary>
            <param name="content">A parameter list of content objects</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Decimal">
            <summary>
            Cast the value of this XElement to a Decimal
            </summary>
            <param name="element">The XElement to cast to a Decimal</param>
            <returns>A Decimal that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Decimal value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.Decimal}">
            <summary>
            Cast the value of this XElement to a Nullable Decimal
            </summary>
            <param name="element">The XElement to cast to a Nullable Decimal</param>
            <returns>A Nullable Decimal that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Decimal value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.DateTime">
            <summary>
            Cast the value of this XElement to a DateTime
            </summary>
            <param name="element">The XElement to cast to a DateTime</param>
            <returns>A DateTime that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid DateTime value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.DateTime}">
            <summary>
            Cast the value of this XElement to a Nullable DateTime
            </summary>
            <param name="element">The XElement to cast to a Nullable DateTime</param>
            <returns>A Nullable DateTime that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">FormatException is thrown if the element does not contain a valid DateTime value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.TimeSpan">
            <summary>
            Cast the value of this XElement to a TimeSpan
            </summary>
            <param name="element">The XElement to cast to a TimeSpan</param>
            <returns>A TimeSpan that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid TimeSpan value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.TimeSpan}">
            <summary>
            Cast the value of this XElement to a Nullable TimeSpan
            </summary>
            <param name="element">The XElement to cast to a Nullable TimeSpan</param>
            <returns>A Nullable TimeSpan that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid TimeSpan value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Single">
            <summary>
            Cast the value of this XElement to a Single
            </summary>
            <param name="element">The XElement to cast to a Single</param>
            <returns>A Single that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Single value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.Single}">
            <summary>
            Cast the value of this XElement to a Nullable Single
            </summary>
            <param name="element">The XElement to cast to a Nullable Single</param>
            <returns>A Nullable Single that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Single value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Double">
            <summary>
            Cast the value of this XElement to a Double
            </summary>
            <param name="element">The XElement to cast to a Double</param>
            <returns>A Double that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Double value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.Double}">
            <summary>
            Cast the value of this XElement to a Nullable Double
            </summary>
            <param name="element">The XElement to cast to a Nullable Double</param>
            <returns>A Nullable Double that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Double value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Guid">
            <summary>
            Cast the value of this XElement to a Guid
            </summary>
            <param name="element">The XElement to cast to a Guid</param>
            <returns>A Guid that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Guid value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.Guid}">
            <summary>
            Cast the value of this XElement to a Nullable Guid
            </summary>
            <param name="element">The XElement to cast to a Nullable Guid</param>
            <returns>A Nullable Guid that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Guid value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Int32">
            <summary>
            Cast the value of this XElement to an Int32
            </summary>
            <param name="element">The XElement to cast to an Int32</param>
            <returns>An Int32 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Int32 value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.Int32}">
            <summary>
            Cast the value of this XElement to a Nullable Int32
            </summary>
            <param name="element">The XElement to cast to a Nullable Int32</param>
            <returns>A Nullable Int32 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Int32 value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Boolean">
            <summary>
            Cast the value of this XElement to a boolean
            </summary>
            <param name="element">The XElement to cast to a boolean</param>
            <returns>A boolean that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid boolean value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.Boolean}">
            <summary>
            Cast the value of this XElement to a Nullable boolean
            </summary>
            <param name="element">The XElement to cast to a Nullable boolean</param>
            <returns>A Nullable boolean that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid boolean value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.String">
            <summary>
            Cast the value of this XElement to a String
            </summary>
            <param name="element">The XElement to cast to a String</param>
            <returns>A String that contains the content of this XElement</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.UInt32">
            <summary>
            Cast the value of this XElement to a UInt32
            </summary>
            <param name="element">The XElement to cast to a UInt32</param>
            <returns>A UInt32 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid UInt32 value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.UInt32}">
            <summary>
            Cast the value of this XElement to a Nullable UInt32
            </summary>
            <param name="element">The XElement to cast to a Nullable UInt32</param>
            <returns>A Nullable UInt32 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid UInt32 value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.UInt64">
            <summary>
            Cast the value of this XElement to a UInt64
            </summary>
            <param name="element">The XElement to cast to a UInt64</param>
            <returns>A UInt64 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid UInt64 value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.UInt64}">
            <summary>
            Cast the value of this XElement to a Nullable UInt64
            </summary>
            <param name="element">The XElement to cast to a Nullable UInt64</param>
            <returns>A Nullable UInt64 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid UInt64 value</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Int64">
            <summary>
            Cast the value of this XElement to an Int64
            </summary>
            <param name="element">The XElement to cast to an Int64</param>
            <returns>An Int64 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Int64 value</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the element parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XElement.op_Explicit(Crestron.SimplSharp.CrestronXmlLinq.XElement)~System.Nullable{System.Int64}">
            <summary>
            Cast the value of this XElement to a Nullable Int64
            </summary>
            <param name="element">The XElement to cast to a Nullable Int64</param>
            <returns>A Nullable Int64 that contains the content of this XElement</returns>
            <exception cref="T:System.FormatException">This exception is thrown if the element does not contain a valid Int64 value</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.FirstAttribute">
            <summary>
            Gets the first attribute of this element.
            </summary>
            <returns>An CrestronXmlLinq.XAttribute that contains the first attribute of this element or null.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.HasAttributes">
            <summary>
            Gets a value indicating whether this element as at least one attribute.
            </summary>
            <returns>true if this element has at least one attribute; otherwise false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.HasElements">
            <summary>
            Gets a value indicating whether this element has at least one child element.
            </summary>
            <returns>true if this element has at least one child element; otherwise false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.IsEmpty">
            <summary>
            Gets a value indicating whether this element contains no content.
            </summary>
            <returns>true if this element contains no content; otherwise false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.LastAttribute">
            <summary>
             Gets the last attribute of this element.
            </summary>
            <returns>An CrestronXmlLinq.XAttribute that contains the last attribute of this element or null.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.Name">
             <summary>
            Gets the name of this element.
             </summary>
             <returns> The string that contains the name of this element.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.XName">
             <summary>
            Gets the name of this element.
             </summary>
             <returns> An CrestronXmlLinq.XName that contains the name of this element.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.NodeType">
            <summary>
             Gets the node type for this node.
            </summary>
            <returns>An CrestronXmlLinq.XAttribute that contains the last attribute of this element.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.Value">
             <summary>
            Gets the concatenated text contents of this element.
             </summary>
             <returns> A System.String that contains all of the text content of this element. If
                 there are multiple text nodes, they will be concatenated.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XElement.EmptySequence">
            <summary>
            Gets an empty collection of elements
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XComment">
            <summary>
            Represents an XML comment..
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XComment.#ctor(System.String)">
            <summary>
             Initializes a new instance of the CrestronXmlLinq.XComment class with the
                specified string content.
            </summary>
            <param name="value"> A string that contains the contents of the new CrestronXmlLinq.XComment object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XComment.Value">
            <summary>
             Gets or sets the string value of this comment.
            </summary>
            <returns> A System.String that contains the string value of this comment.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement">
            <summary>
            Initializes a new instance of the XAttribute class from another XAttribute object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
             Initializes a new instance of the CrestronXmlLinq.XElement class from the
                specified CrestronXmlLinq.XName.
            </summary>
            <param name="name"> An CrestronXmlLinq.XName that contains the name of the element.</param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName,System.Object[])">
            <summary>
            Initializes an XStreamingElement object with the specified XName and content
            </summary>
            <param name="name">An XName that contains the element name</param>
            <param name="content">The content to initialize the XStreamingElement with</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XName,System.Object)">
            <summary>
            Initializes an XStreamingElement object with the specified XName and content
            </summary>
            <param name="name">An XName that contains the element name</param>
            <param name="content">The content to initialize the XStreamingElement with</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.ToString">
            <summary>
            Returns the formatted (indented) XML for this streaming element
            </summary>
            <returns>A String containing the indented XML</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.ToString(Crestron.SimplSharp.CrestronXmlLinq.SaveOptions)">
            <summary>
            Returns the XML for this streaming element, optionally disabling formatting
            </summary>
            <param name="options">A SaveOptions that specifies formatting behavior</param>
            <returns>A String containing the XML</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.op_Equality(Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement,Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement)">
            <summary>
            Checks for referential equality for two XStreamingElements
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XStreamingElements are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.op_Inequality(Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement,Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement)">
            <summary>
            Checks for referential inequality between two XStreamingElements
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XStreamingElements are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.GetHashCode">
            <summary>
            Gets the hash code for this XStreamingElement
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XStreamingElement.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XStreamingElement
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XStreamingElement; false otherwise</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration">
            <summary>
             Initializes a new instance of the CrestronXmlLinq.XDeclaration class from
                another CrestronXmlLinq.XDeclaration object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.#ctor(System.String,System.String,System.String)">
            <summary>
             Initializes a new instance of the CrestronXmlLinq.XDeclaration class with
                the specified version, encoding, and standalone status.
            </summary>
            <param name="version">The version of the XML, usually "1.0".</param>
            <param name="encoding">The encoding for the XML document.</param>
            <param name="standalone">A string containing "yes" or "no" that specifies whether the XML is standalone
                or requires external entities to be resolved.</param>
                
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XDeclaration)">
             <summary>
              Initializes a new instance of the CrestronXmlLinq.XDeclaration class from
                 another CrestronXmlLinq.XDeclaration object.
             </summary>
             <param name="other"> The CrestronXmlLinq.XDeclaration used to initialize this CrestronXmlLinq.XDeclaration
                 object.</param>
            <exception cref="T:System.ArgumentNullException">The other parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
            <summary>
             Initializes a new instance of the CrestronXmlLinq.XDeclaration class from
                another CrestronXmlLinq.XDeclaration object.
            </summary>
            <param name="other"> The CrestronXmlLinq.XDeclaration used to initialize this CrestronXmlLinq.XDeclaration</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.ToString">
            <summary>
            Provides the declaration as a formatted string
            </summary>
            <returns>A string containing the formatted XML string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.op_Equality(Crestron.SimplSharp.CrestronXmlLinq.XDeclaration,Crestron.SimplSharp.CrestronXmlLinq.XDeclaration)">
            <summary>
            Checks for referential equality between two XDeclarations
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XDeclarations are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.op_Inequality(Crestron.SimplSharp.CrestronXmlLinq.XDeclaration,Crestron.SimplSharp.CrestronXmlLinq.XDeclaration)">
            <summary>
            Checks for referential inequality between two XDeclarations
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XDeclarations are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.GetHashCode">
            <summary>
            Gets the hash code for this XDeclaration
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XDeclaration
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XDeclaration; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.Encoding">
            <summary>
             Gets or sets the encoding for this document.
            </summary>
            <returns> A System.String containing the code page name for this document.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.Standalone">
            <summary>
             Gets or sets the standalone property for this document.
            </summary>
            <returns> A System.String containing the standalone property for this document.</returns>
            
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDeclaration.Version">
            <summary>
             Gets or sets the version property for this document.
            </summary>
            <returns> A System.String containing the version property for this document.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType">
            <summary>
             Represents an XML Document Type Definition (DTD).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
             Initializes an instance of the CrestronXmlLinq.XDocumentType class.
            </summary>
            <param name="name"> A System.String that contains the qualified name of the DTD, which is the
                same as the qualified name of the root element of the XML document.</param>
            <param name="publicId"> A System.String that contains the public identifier of an external public
                DTD.</param>
            <param name="systemId"> A System.String that contains the system identifier of an external private
                DTD.</param>
            <param name="internalSubset"> A System.String that contains the internal subset for an internal DTD.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XDocumentType)">
            <summary>
            Initializes an instance of the CrestronXmlLinq.XDocumentType class from another
                CrestronXmlLinq.XDocumentType object.
            </summary>
            <param name="other"> An CrestronXmlLinq.XDocumentType object to copy from.</param>
            <exception cref="T:System.ArgumentNullException">The other parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Writes this XDocumentType to an XmlWriter
            </summary>
            <param name="writer">An XmlWriter into which this method will write</param>
            <exception cref="T:System.ArgumentNullException">The specified writer is null</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.InternalSubset">
            <summary>
            Gets or sets the internal subset for this Document Type Definition
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.Name">
            <summary>
            Gets or sets the name for this Document Type Definition
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.NodeType">
            <summary>
            Gets the node type for this node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.PublicId">
            <summary>
            Gets or sets the public identifier for this Document Type Definition
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocumentType.SystemId">
            <summary>
            Gets or sets the system identifier for this Document Type Definition
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XDocument">
            <summary>
             Represents an XML document.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            For internal use
            </summary>
            <param name="doc">the System XDocument to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.#ctor">
            <summary>
            Initializes a new instance of the Crestron.SimplSharp.CrestronXmlLinq.XDocument class.
            </summary>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the Crestron.SimplSharp.CrestronXmlLinq.XDocument class with the
                specified content.
            </summary>
            <param name="content"> A parameter list of content objects to add to this document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XDocument)">
            <summary>
             Initializes a new instance of the Crestron.SimplSharp.CrestronXmlLinq.XDocument class from an
                existing Crestron.SimplSharp.CrestronXmlLinq.XDocument object.
            </summary>
            <param name="other"> The Crestron.SimplSharp.CrestronXmlLinq.XDocument object that will be copied.</param>
            <exception cref="T:System.ArgumentNullException">The other parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XDeclaration,System.Object[])">
            <summary>
             Initializes a new instance of the Crestron.SimplSharp.CrestronXmlLinq.XDocument class with the
                specified Crestron.SimplSharp.CrestronXml.XDeclaration and content.
            </summary>
            <param name="declaration">An Crestron.SimplSharp.CrestronXmlLinq.XDeclaration for the document.</param>
            <param name="content">The content of the document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Load(Crestron.SimplSharp.CrestronXml.XmlReader)">
            <summary>
            Creates a new Crestron.SimplSharp.CrestronXmlLinq.XDocument from an  XmlReader.
            </summary>
            <param name="reader"> A Crestron.SimplSharp.CrestronXml.XmlReader that contains the content 
            for the Crestron.SimplSharp.CrestronXmlLinq.XDocument.</param>
            <returns> An XDocument that contains the contents of the specified file. </returns>
            <exception cref="T:System.ArgumentNullException">The reader parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Load(Crestron.SimplSharp.CrestronXml.XmlReader,Crestron.SimplSharp.CrestronXmlLinq.LoadOptions)">
            <summary>
            Loads an CrestronXmlLinq.XElement from an Crestron.SimplSharp.CrestronXml.XmlReader, optionally
                setting the base URI, and retaining line information.
            </summary>
            <param name="reader"> Crestron.SimplSharp.CrestronXml.XmlReader that will be read for the content of the CrestronXmlLinq.XDocument.</param>
            <param name="options"> A Crestron.SimplSharp.CrestronXmlLinq.LoadOptions that specifies whether to load base URI and
                line information.</param>
            <returns> An XDocument that contains the contents of the specified file. </returns>
            <exception cref="T:System.ArgumentNullException">The reader parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Parse(System.String)">
            <summary>
            Creates a new Crestron.SimplSharp.CrestronXmlLinq.XDocument from a string.
            </summary>
            <param name="text">A string that contains XML.</param>
            <returns> An Crestron.SimplSharp.CrestronXmlLinq.XDocument populated from the string that contains XML.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Parse(System.String,Crestron.SimplSharp.CrestronXmlLinq.LoadOptions)">
            <summary>
            Creates a new Crestron.SimplSharp.CrestronXmlLinq.XDocument from a string, optionally preserving
                white space, setting the base URI, and retaining line information.
            </summary>
            <param name="text"> A string that contains XML.</param>
            <param name="options"> A Crestron.SimplSharp.CrestronXmlLinq.LoadOptions that specifies white space behavior, and whether
                to load base URI and line information.</param>
            <returns>An Crestron.SimplSharp.CrestronXmlLinq.XDocument populated from the string that contains XML.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Save(Crestron.SimplSharp.CrestronXml.XmlWriter)">
             <summary>
            Serialize this Crestron.SimplSharp.CrestronXmlLinq.XDocument to an  XmlWriter.
             </summary>
             <param name="writer"> A Crestron.SimplSharp.CrestronXml.XmlWriter that theCrestron.SimplSharp.CrestronXmlLinq.XDocument will be written
                 to.</param>
             <exception cref="T:System.ArgumentNullException">The writer parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Save(System.String)">
            <summary>
            Serialize this XDocument to a file.
            </summary>
            <param name="fileName"> A string that contains the name of the file</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Save(System.String,Crestron.SimplSharp.CrestronXmlLinq.SaveOptions)">
            <summary>
            Serialize this XDocument to a file, optionally disabling formatting.
            </summary>
            <param name="fileName"> A string that contains the name of the file</param>
            <param name="options">SaveOptions that specifies formatting behavior</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Save(Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
            Serialize this XDocument to a Crestron.SimplSharp.CrestronIO.TextWriter.
            </summary>
            <param name="textWriter"> A TextWriter that the XDocument will be written to.</param>
            <exception cref="T:System.ArgumentNullException">The textWriter parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Save(Crestron.SimplSharp.CrestronIO.TextWriter,Crestron.SimplSharp.CrestronXmlLinq.SaveOptions)">
            <summary>
            Serialize this XDocument to a Crestron.SimplSharp.CrestronIO.TextWriter, optionally disabling formatting.
            </summary>
            <param name="textWriter">A TextWriter that the XDocument will be written to</param>
            <param name="options">SaveOptions that specifies formatting behavior</param>
            <exception cref="T:System.ArgumentNullException">The textWriter parameter is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XDocument.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Write this document to an Crestron.SimplSharp.CrestronXml.XmlWriter. 
            </summary>
            <param name="writer"> An Crestron.SimplSharp.CrestronXml.XmlWriter into which this method will write.</param>
            <exception cref="T:System.ArgumentNullException">The writer parameter is null</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Declaration">
            <summary>
             Gets or sets the XML declaration for this document.
            </summary>
            <return>An Crestron.SimplSharp.CrestronXmlLinq.XDeclaration that contains the XML declaration for this
                document.</return>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocument.DocumentType">
             <summary>
            Gets the Document Type Definition (DTD) for this document.
             </summary>
             <return> A Crestron.SimplSharp.CrestronXmlLinq.XDocumentType that contains the DTD for this document.</return>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XDocument.Root">
            <summary>
             Gets the root element of the XML Tree for this document.
            </summary>
            <return> The root Crestron.SimplSharp.CrestronXmlLinq.XElement of the XML tree.</return>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction">
            <summary>
                 Represents an XML processing instruction.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
            <summary>
            Creates a CrestronXmlLinq.XProcessingInstruction from the specified XProcessingInstruction, for internal use
            </summary>
            <param name="processingInst">The System.Xml.XProcessingInstruction to wrap</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction.#ctor(Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction)">
            <summary>
                 Initializes a new instance of the XProcessingInstruction
                 class.
            </summary>
             <param name="other">
                 The XProcessingInstruction node to copy from.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction.#ctor(System.String,System.String)">
            <summary>
                 Initializes a new instance of the XProcessingInstruction
                 class.
            </summary>
             <param name="target">
                 A System.String containing the target application for this XProcessingInstruction.
            </param>
             <param name="data">
                 The string data for this XProcessingInstruction.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 The target or data parameter is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The target does not follow the constraints of an XML name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
                 Writes this processing instruction to an System.Xml.XmlWriter.
            </summary>
             <param name="writer">
                 The System.Xml.XmlWriter to write this processing instruction to.
            </param>
            <exception cref="T:System.ArgumentNullException">The writer parameter is null</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction.Data">
            <summary>
                 Gets or sets the string value of this processing instruction.
            </summary>
            <returns>
                 A System.String that contains the string value of this processing instruction.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 The string value is null.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction.NodeType">
            <summary>
                 Gets the node type for this node.
            </summary>
            <returns>
                 The node type. For XProcessingInstruction objects, this value
                 is System.Xml.XmlNodeType.ProcessingInstruction.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XProcessingInstruction.Target">
            <summary>
                 Gets or sets a string containing the target application for this processing
                 instruction.
            </summary>
            <returns>
                 A System.String containing the target application for this processing instruction.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 The string value is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The target does not follow the constraints of an XML name.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XName">
            <summary>
                 Represents a name of an XML element or attribute.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.op_Inequality(Crestron.SimplSharp.CrestronXmlLinq.XName,Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
                 Returns a value indicating whether two instances of System.Xml.Linq.XName
                 are not equal.
            </summary>
             <param name="left">
                 The first System.Xml.Linq.XName to compare.
            </param>
             <param name="right">
                 The second System.Xml.Linq.XName to compare.
            </param>
            <returns>
                 true if left and right are not equal; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.op_Equality(Crestron.SimplSharp.CrestronXmlLinq.XName,Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
                 Returns a value indicating whether two instances of System.Xml.Linq.XName
                 are equal.
            </summary>
             <param name="left">
                 The first System.Xml.Linq.XName to compare.
            </param>
             <param name="right">
                 The second System.Xml.Linq.XName to compare.
            </param>
            <returns>
                 true if left and right are equal; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.op_Implicit(System.String)~Crestron.SimplSharp.CrestronXmlLinq.XName">
            <summary>
                 Converts a string formatted as an expanded XML name (that is,{namespace}localname)
                 to an System.Xml.Linq.XName object.
            </summary>
             <param name="expandedName">
                 A string that contains an expanded XML name in the format {namespace}localname.
            </param>
            <returns>
                 An System.Xml.Linq.XName object constructed from the expanded name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.Equals(System.Object)">
            <summary>
                 Determines whether the specified System.Xml.Linq.XName is equal to this System.Xml.Linq.XName.
            </summary>
             <param name="obj">
                 The System.Xml.Linq.XName to compare to the current System.Xml.Linq.XName.
            </param>
            <returns>
                 true if the specified System.Xml.Linq.XName is equal to the current System.Xml.Linq.XName;
                 otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.System#IEquatable{Crestron#SimplSharp#CrestronXmlLinq#XName}#Equals(Crestron.SimplSharp.CrestronXmlLinq.XName)">
            <summary>
                 Determines whether the specified System.Xml.Linq.XName is equal to this System.Xml.Linq.XName.
            </summary>
             <param name="obj">
                 The System.Xml.Linq.XName to compare to the current System.Xml.Linq.XName.
            </param>
            <returns>
                 true if the specified System.Xml.Linq.XName is equal to the current System.Xml.Linq.XName;
                 otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.Get(System.String)">
            <summary>
                 Gets an System.Xml.Linq.XName object from an expanded name.
            </summary>
             <param name="expandedName">
                 A System.String that contains an expanded XML name in the format {namespace}localname.
            </param>
            <returns>
                 An System.Xml.Linq.XName object constructed from the expanded name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.Get(System.String,System.String)">
            <summary>
                 Gets an System.Xml.Linq.XName object from a local name and a namespace.
            </summary>
             <param name="localName">
                 A local (unqualified) name.
            </param>
             <param name="namespaceName">
                 An XML namespace.
            </param>
            <returns>
                 An System.Xml.Linq.XName object created from the specified local name and
                 namespace.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.GetHashCode">
            <summary>
                 Gets a hash code for this System.Xml.Linq.XName.
            </summary>
            <returns>
                 An System.Int32 that contains the hash code for the System.Xml.Linq.XName.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XName.ToString">
            <summary>
                 Returns the expanded XML name in the format {namespace}localname.
            </summary>
            <returns>
                 A System.String that contains the expanded XML name in the format {namespace}localname.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XName.LocalName">
            <summary>
                 Gets the local (unqualified) part of the name.
            </summary>
            <returns>
                 A System.String that contains the local (unqualified) part of the name.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XName.Namespace">
            <summary>
                 Gets the namespace part of the fully qualified name.
            </summary>
            <returns>
                 An System.Xml.Linq.XNamespace that contains the namespace part of the name.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XName.NamespaceName">
            <summary>
                 Returns the URI of the System.Xml.Linq.XNamespace for this System.Xml.Linq.XName.
            </summary>
            <returns>
                 The URI of the System.Xml.Linq.XNamespace for this System.Xml.Linq.XName.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XNamespace">
            <summary>
                 Represents an XML namespace. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.op_Inequality(Crestron.SimplSharp.CrestronXmlLinq.XNamespace,Crestron.SimplSharp.CrestronXmlLinq.XNamespace)">
            <summary>
                 Returns a value indicating whether two instances of System.Xml.Linq.XNamespace
                 are not equal.
            </summary>
             <param name="left">
                 The first System.Xml.Linq.XNamespace to compare.
            </param>
             <param name="right">
                 The second System.Xml.Linq.XNamespace to compare.
            </param>
            <returns>
                 A System.Boolean that indicates whether left and right are not equal.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.op_Addition(Crestron.SimplSharp.CrestronXmlLinq.XNamespace,System.String)">
            <summary>
                 Combines an System.Xml.Linq.XNamespace object with a local name to create
                 an System.Xml.Linq.XName.
            </summary>
             <param name="ns">
                 An System.Xml.Linq.XNamespace that contains the namespace.
            </param>
             <param name="localName">
                 A System.String that contains the local name.
            </param>
            <returns>
                 The new System.Xml.Linq.XName constructed from the namespace and local name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.op_Equality(Crestron.SimplSharp.CrestronXmlLinq.XNamespace,Crestron.SimplSharp.CrestronXmlLinq.XNamespace)">
            <summary>
                 Returns a value indicating whether two instances of System.Xml.Linq.XNamespace
                 are equal.
            </summary>
             <param name="left">
                 The first System.Xml.Linq.XNamespace to compare.
            </param>
             <param name="right">
                 The second System.Xml.Linq.XNamespace to compare.
            </param>
            <returns>
                 A System.Boolean that indicates whether left and right are equal.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.op_Implicit(System.String)~Crestron.SimplSharp.CrestronXmlLinq.XNamespace">
            <summary>
                 Converts a string containing a Uniform Resource Identifier (URI) to an System.Xml.Linq.XNamespace.
            </summary>
             <param name="namespaceName">
                 A System.String that contains the namespace URI.
            </param>
            <returns>
                 An System.Xml.Linq.XNamespace constructed from the URI string.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.Equals(System.Object)">
            <summary>
                 Determines whether the specified System.Xml.Linq.XNamespace is equal to the
                 current System.Xml.Linq.XNamespace.
            </summary>
             <param name="obj">
                 The System.Xml.Linq.XNamespace to compare to the current System.Xml.Linq.XNamespace.
            </param>
            <returns>
                 A System.Boolean that indicates whether the specified System.Xml.Linq.XNamespace
                 is equal to the current System.Xml.Linq.XNamespace.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.Get(System.String)">
            <summary>
                 Gets an System.Xml.Linq.XNamespace for the specified Uniform Resource Identifier
                 (URI).
            </summary>
             <param name="namespaceName">
                 A System.String that contains a namespace URI.
            </param>
            <returns>
                 An System.Xml.Linq.XNamespace created from the specified URI.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.GetHashCode">
            <summary>
                 Gets a hash code for this System.Xml.Linq.XNamespace.
            </summary>
            <returns>
                 An System.Int32 that contains the hash code for the System.Xml.Linq.XNamespace.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.GetName(System.String)">
            <summary>
                 Returns an System.Xml.Linq.XName object created from this System.Xml.Linq.XNamespace
                 and the specified local name.
            </summary>
             <param name="localName">
                 A System.String that contains a local name.
            </param>
            <returns>
                 An System.Xml.Linq.XName created from this System.Xml.Linq.XNamespace and
                 the specified local name.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.ToString">
            <summary>
                 Returns the URI of this System.Xml.Linq.XNamespace.
            </summary>
            <returns>
                 The URI of this System.Xml.Linq.XNamespace.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.NamespaceName">
            <summary>
                 Gets the Uniform Resource Identifier (URI) of this namespace.
            </summary>
            <returns>
                 A System.String that contains the URI of the namespace.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.None">
            <summary>
                 Gets the System.Xml.Linq.XNamespace object that corresponds to no namespace.
            </summary>
            <returns>
                 The System.Xml.Linq.XNamespace that corresponds to no namespace.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.Xml">
            <summary>
                 Gets the System.Xml.Linq.XNamespace object that corresponds to the XML URI
                 (http://www.w3.org/XML/1998/namespace).
            </summary>
            <returns>
                 The System.Xml.Linq.XNamespace that corresponds to the XML URI (http://www.w3.org/XML/1998/namespace).
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXmlLinq.XNamespace.Xmlns">
            <summary>
                 Gets the System.Xml.Linq.XNamespace object that corresponds to the xmlns
                 URI (http://www.w3.org/2000/xmlns/).
            </summary>
            <returns>
                 The System.Xml.Linq.XNamespace that corresponds to the xmlns URI (http://www.w3.org/2000/xmlns/).
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXmlLinq.XNodeEqualityComparer">
            <summary>
            Compares nodes to determine whether they are equal
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXmlLinq.XNodeEqualityComparer._nodeequalitycomparer">
            <summary>
            The underlying System XNodeEqualityComparer
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNodeEqualityComparer.#ctor">
            <summary>
            Initializes a new XNodeEqualityComparer instance
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNodeEqualityComparer.Equals(Crestron.SimplSharp.CrestronXmlLinq.XNode,Crestron.SimplSharp.CrestronXmlLinq.XNode)">
            <summary>
            Compares the values of two nodes
            </summary>
            <param name="x">The first XNode to compare</param>
            <param name="y">The second XNode to compare</param>
            <returns>true if the nodes are equal, false if otherwise</returns>
            <remarks>A null node is equal to another null node but unequal to a non-null node</remarks>
            <remarks>Two XNode objects of different types are never equal</remarks>
            <remarks>Two XText nodes are equal if they contain the same text</remarks>
            <remarks>Two XElement nodes are equal if they have the same tag name, the same set of attributes with the same values, 
            and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes</remarks>
            <remarks>Two XDocument objects are equal if their root nodes are equal</remarks>
            <remarks>Two XComment nodes are equal if they contain the same comment text</remarks>
            <remarks>Two XProcessingInstruction nodes are equal if they have the same target and data</remarks>
            <remarks>Two XDocumentType nodes are equal if the have the same name, public ID, system ID, and internal subset</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
            <summary>
            The IEqualityComparer implementation of Equals
            </summary>
            <param name="a">The first object to compare</param>
            <param name="b">The second object to compare</param>
            <returns>true if the objects are equal, false if otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNodeEqualityComparer.GetHashCode(Crestron.SimplSharp.CrestronXmlLinq.XNode)">
            <summary>
            Returns a hash code based on the specified XNode
            </summary>
            <param name="obj">The XNode to hash</param>
            <returns>An Int32 that contains the value-based hash for the XNode</returns>
            <remarks>The hash returned is based on the value of the node and all it's descendants</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXmlLinq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
            <summary>
            The IEqualityComparer implementation of GetHashCode
            </summary>
            <param name="o">The object to hash</param>
            <returns>The Int32 hash</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate">
            <summary>
                 Provides methods that help you use X.509 v.3 certificates.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])">
            <summary>
                 Initializes a new instance of the X509Certificate
                 class defined from a sequence of bytes representing an X.509v3 certificate.
            </summary>
            <param name="data">
                 A byte array containing data from an X.509 certificate.
            </param>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 An error with the certificate occurs. For example:The certificate file does
                 not exist.The certificate is invalid.The certificate's password is incorrect.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The rawData parameter is null.-or-The length of the rawData parameter is
                 0.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)">
            <summary>
                 Compares two X509Certificate
                 objects for equality.
            </summary>
            <param name="obj">
                 An X509Certificate object to
                 compare to the current object.
            </param>
            <returns>
                 true if the current X509Certificate
                 object is equal to the object specified by the other parameter; otherwise,
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.Equals(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
                 Compares two X509Certificate
                 objects for equality.
            </summary>
            <param name="other">
                 An X509Certificate object to
                 compare to the current object.
            </param>
            <returns>
                 true if the current X509Certificate
                 object is equal to the object specified by the other parameter; otherwise,
                 false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetCertHash">
            <summary>
                 Returns the hash value for the X.509v3 certificate as an array of bytes.
            </summary>
            <returns>
                 The hash value for the X.509 certificate.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetCertHashString">
            <summary>
                 Returns the hash value for the X.509v3 certificate as a hexadecimal string.
            </summary>
            <returns>
                 The hexadecimal string representation of the X.509 certificate hash value.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString">
            <summary>
                 Returns the effective date of this X.509v3 certificate.
            </summary>
            <returns>
                 The effective date for this X.509 certificate.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString">
            <summary>
                 Returns the expiration date of this X.509v3 certificate.
            </summary>
            <returns>
                 The expiration date for this X.509 certificate.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetFormat">
            <summary>
                 Returns the name of the format of this X.509v3 certificate.
            </summary>
            <returns>
                 The format of this X.509 certificate.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetHashCode">
            <summary>
                 Returns the hash code for the X.509v3 certificate as an integer.
            </summary>
            <returns>
                 The hash code for the X.509 certificate as an integer.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetIssuerName">
            <summary>
                 Returns the name of the certification authority that issued the X.509v3 certificate.
            </summary>
            <returns>
                 The name of the certification authority that issued the X.509 certificate.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 An error with the certificate occurs. For example:The certificate file does
                 not exist.The certificate is invalid.The certificate's password is incorrect.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm">
            <summary>
                 Returns the key algorithm information for this X.509v3 certificate.
            </summary>
            <returns>
                 The key algorithm information for this X.509 certificate as a string.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The certificate context is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters">
            <summary>
                 Returns the key algorithm parameters for the X.509v3 certificate.
            </summary>
            <returns>
                 The key algorithm parameters for the X.509 certificate as an array of bytes.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The certificate context is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString">
            <summary>
                 Returns the key algorithm parameters for the X.509v3 certificate.
            </summary>
            <returns>
                 The key algorithm parameters for the X.509 certificate as a hexadecimal string.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The certificate context is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetName">
            <summary>
                 Returns the name of the principal to which the certificate was issued.
            </summary>
            <returns>
                 The name of the principal to which the certificate was issued.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The certificate context is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetPublicKey">
            <summary>
                 Returns the public key for the X.509v3 certificate.
            </summary>
            <returns>
                 The public key for the X.509 certificate as an array of bytes.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The certificate context is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString">
            <summary>
                 Returns the public key for the X.509v3 certificate.
            </summary>
            <returns>
                 The public key for the X.509 certificate as a hexadecimal string.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetRawCertData">
            <summary>
                 Returns the raw data for the entire X.509v3 certificate.
            </summary>
            <returns>
                 A byte array containing the X.509 certificate data.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString">
            <summary>
                 Returns the raw data for the entire X.509v3 certificate.
            </summary>
            <returns>
                 The X.509 certificate data as a hexadecimal string.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetSerialNumber">
            <summary>
                 Returns the serial number of the X.509v3 certificate.
            </summary>
            <returns>
                 The serial number of the X.509 certificate as an array of bytes.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The certificate context is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString">
            <summary>
                 Returns the serial number of the X.509v3 certificate.
            </summary>
            <returns>
                 The serial number of the X.509 certificate as a hexadecimal string.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.Reset">
            <summary>
                 Resets the state of the X509Certificate2
                 object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.ToString">
            <summary>
                 Returns a string representation of the current X509Certificate
                 object.
            </summary>
            <returns>
                 A string representation of the current X509Certificate
                 object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)">
            <summary>
                 Returns a string representation of the current X509Certificate
                 object, with extra information, if specified.
            </summary>
            <param name="fVerbose">
                 true to produce the verbose form of the string representation; otherwise,
                 false.
            </param>
            <returns>
                 A string representation of the current X509Certificate
                 object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate.Handle">
            <summary>
                 Gets a handle to a Microsoft Cryptographic API certificate context described
                 by an unmanaged PCCERT_CONTEXT structure.
            </summary>
            <returns>
                 An System.IntPtr structure that represents an unmanaged PCCERT_CONTEXT structure.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2">
            <summary>
                 Represents an X.509 certificate. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])">
            <summary>
                 Initializes a new instance of the X509Certificate2
                 class using information from a byte array.
            </summary>
            <param name="rawData">
                 A byte array containing data from an X.509 certificate.
            </param>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 An error with the certificate occurs. For example:The certificate file does
                 not exist.The certificate is invalid.The certificate's password is incorrect.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)">
            <summary>
                 Initializes a new instance of the X509Certificate2
                 class using an unmanaged handle.
            </summary>
            <param name="handle">
                 A pointer to a certificate context in unmanaged code. The C structure is
                 called PCCERT_CONTEXT.
            </param>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 An error with the certificate occurs. For example:The certificate file does
                 not exist.The certificate is invalid.The certificate's password is incorrect.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2.ToString">
            <summary>
                 Displays an X.509 certificate in text format.
            </summary>
            <returns>
                 The certificate information.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)">
            <summary>
                 Displays an X.509 certificate in text format.
            </summary>
            <param name="verbose">
                 true to display the public key, private key, extensions, and so forth; false
                 to display information that is similar to the X509Certificate2
                 class, including thumbprint, serial number, subject and issuer names, and
                 so on.
            </param>
            <returns>
                 The certificate information.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2.Verify">
            <summary>
                 Performs a X.509 chain validation using basic validation policy.
            </summary>
            <returns>
                 true if the validation succeeds; false if the validation fails.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The certificate is unreadable.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
            <summary>
                 The exception that is thrown when an error occurs during a cryptographic
                 operation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException.#ctor">
            <summary>
                 Initializes a new instance of the CryptographicException
                 class with default properties.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException.#ctor(System.Int32)">
            <summary>
                 Initializes a new instance of the CryptographicException
                 class with the specified HRESULT error code.
            </summary>
            <param name="hr">
                 The HRESULT error code.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the CryptographicException
                 class with a specified error message.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the CryptographicException
                 class with a specified error message and a reference to the inner exception
                 that is the cause of this exception.
            </summary>
            <param name="message">
                 The error message that explains the reason for the exception.
            </param>
            <param name="inner">
                 The exception that is the cause of the current exception. If the inner parameter
                 is not null, the current exception is raised in a catch block that handles
                 the inner exception.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException.#ctor(System.String,System.String)">
            <summary>
                 Initializes a new instance of the CryptographicException
                 class with a specified error message in the specified format.
            </summary>
            <param name="format">
                 The format used to output the error message.
            </param>
            <param name="insert">
                 The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.StoreName">
            <summary>
                 Specifies the name of the X.509 certificate store to open.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.StoreName.CertificateAuthority">
            <summary>
                 The X.509 certificate store for intermediate certificate authorities (CAs).
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.StoreName.My">
            <summary>
                 The X.509 certificate store for personal certificates.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.StoreName.Root">
            <summary>
                 The X.509 certificate store for trusted root certificate authorities (CAs).
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.StoreLocation">
            <summary>
                 Specifies the location of the X.509 certificate store.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.StoreLocation.CurrentUser">
            <summary>
                 The X.509 certificate store used by the current user.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.StoreLocation.LocalMachine">
            <summary>
                 The X.509 certificate store assigned to the local machine.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.OpenFlags">
            <summary>
                 Specifies the way to open the X.509 certificate store.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.OpenFlags.ReadOnly">
            <summary>
                 Open the X.509 certificate store for reading only.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.OpenFlags.ReadWrite">
            <summary>
                 Open the X.509 certificate store for both reading and writing.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.OpenFlags.MaxAllowed">
            <summary>
                 Open the X.509 certificate store for the highest access allowed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly">
            <summary>
                 Opens only existing stores; if no store exists, the X509Store.Open(OpenFlags)
                 method will not create a new store.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.OpenFlags.IncludeArchived">
            <summary>
                 Open the X.509 certificate store and include archived certificates.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store">
            <summary>
                 Represents an X.509 store, which is a physical store where certificates are
                 persisted and managed. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.#ctor">
            <summary>
                 Initializes a new instance of the X509Store
                 class using the personal certificates of the current user store.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.#ctor(Crestron.SimplSharp.Cryptography.X509Certificates.StoreName,Crestron.SimplSharp.Cryptography.X509Certificates.StoreLocation)">
            <summary>
                 Initializes a new instance of the X509Store
                 class using the specified StoreName
                 and StoreLocation values.
            </summary>
            <param name="storeName">
                 One of the StoreName values.
            </param>
            <param name="storeLocation">
                 One of the StoreLocation values.
            </param>
            <exception cref="T:System.ArgumentException">
                 storeLocation is not a valid location or storeName is not a valid name.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.#ctor(System.String,Crestron.SimplSharp.Cryptography.X509Certificates.StoreLocation)">
            <summary>
                 Initializes a new instance of the X509Store
                 class using a string representing a value from the StoreName
                 enumeration and a value from the StoreLocation
                 enumeration.
            </summary>
            <param name="storeName">
                 A string representing a value from the StoreName
                 enumeration.
            </param>
            <param name="storeLocation">
                 One of the StoreLocation values.
            </param>
            <exception cref="T:System.ArgumentException">
                 storeLocation contains invalid values.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.Close">
            <summary>
                 Closes an X.509 certificate store.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.Open">
            <summary>
                 Opens an X.509 certificate store 
            </summary>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 The store is unreadable.
            </exception>
            <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
            <exception cref="T:System.ArgumentException">
                 The store contains invalid values.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.Certificates">
            <summary>
                 Returns a collection of certificates located in an X.509 certificate store.
            </summary>
            <returns>
                 An X509Certificate2Collection
                 object.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.Location">
            <summary>
                 Gets the location of the X.509 certificate store.
            </summary>
            <returns>
                 One of the StoreLocation values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Cryptography.X509Certificates.X509Store.Name">
            <summary>
                 Gets the name of the X.509 certificate store.
            </summary>
            <returns>
                 One of the StoreName values.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateEnumerator">
            <summary>
                 Enumerates the X509Certificate
                 objects in an X509CertificateCollection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateEnumerator.#ctor(Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary>
                 Initializes a new instance of the X509CertificateCollection.X509CertificateEnumerator
                 class for the specified X509CertificateCollection.
            </summary>
            <param name="mappings">
                 The X509CertificateCollection
                 to enumerate.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateEnumerator.MoveNext">
            <summary>
                 Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
                 true if the enumerator was successfully advanced to the next element; false
                 if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                 The collection was modified after the enumerator was instantiated.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateEnumerator.Reset">
            <summary>
                 Sets the enumerator to its initial position, which is before the first element
                 in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                 The collection is modified after the enumerator is instantiated.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509FindType">
            <summary>
                 Specifies the type of value searched for by the X509Certificate2Collection.Find(X509FindType,System.Object,System.Boolean)
                 method.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.X509FindType.FindByThumbprint">
            <summary>
                 The findValue parameter for the X509Certificate2Collection.Find(X509FindType,System.Object,System.Boolean)
                 method must be a string representing the thumbprint of the certificate.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Cryptography.X509Certificates.X509FindType.FindBySubjectName">
            <summary>
                 The findValue parameter for the X509Certificate2Collection.Find(X509FindType,System.Object,System.Boolean)
                 method must be a string representing the subject name of the certificate.
                 This is a less specific search than if you use the X509FindType.FindBySubjectDistinguishedName
                 enumeration value. Using the X509FindType.FindBySubjectName
                 value, the X509Certificate2Collection.Find(X509FindType,System.Object,System.Boolean)
                 method performs a case-insensitive string compare using the supplied value.
                 For example, if you pass "MyCert" to the X509Certificate2Collection.Find(X509FindType,System.Object,System.Boolean)
                 method, it will find all certificates with the subject name containing that
                 string, regardless of other subject values. Searching by distinguished name
                 is a more precise search.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection">
            <summary>
                 Defines a collection that stores X509Certificate
                 objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.#ctor">
            <summary>
                 Initializes a new instance of the X509CertificateCollection
                 class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.#ctor(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate[])">
            <summary>
                 Initializes a new instance of the X509CertificateCollection
                 class from an array of X509Certificate
                 objects.
            </summary>
            <param name="value">
                 The array of X509Certificate
                 objects with which to initialize the new object.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.#ctor(Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary>
                 Initializes a new instance of the X509CertificateCollection
                 class from another X509CertificateCollection.
            </summary>
            <param name="value">
                 The X509CertificateCollection
                 with which to initialize the new object.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.Add(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
                 Adds an X509Certificate with
                 the specified value to the current X509CertificateCollection.
            </summary>
            <param name="value">
                 The X509Certificate to add
                 to the current X509CertificateCollection.
            </param>
            <returns>
                 The index into the current X509CertificateCollection
                 at which the new X509Certificate
                 was inserted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.AddRange(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate[])">
            <summary>
                 Copies the elements of an array of type X509Certificate
                 to the end of the current X509CertificateCollection.
            </summary>
            <param name="value">
                 The array of type X509Certificate
                 containing the objects to add to the current X509CertificateCollection.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The value parameter is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.AddRange(Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary>
                 Copies the elements of the specified X509CertificateCollection
                 to the end of the current X509CertificateCollection.
            </summary>
            <param name="value">
                 The X509CertificateCollection
                 containing the objects to add to the collection.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 The value parameter is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.Contains(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
                 Gets a value indicating whether the current X509CertificateCollection
                 contains the specified X509Certificate.
            </summary>
            <param name="value">
                 The X509Certificate to locate.
            </param>
            <returns>
                 true if the X509Certificate
                 is contained in this collection; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate[],System.Int32)">
            <summary>
                 Copies the X509Certificate
                 values in the current X509CertificateCollection
                 to a one-dimensional System.Array instance at the specified index.
            </summary>
            <param name="array">
                 The one-dimensional System.Array that is the destination of the values copied
                 from X509CertificateCollection.
            </param>
            <param name="index">
                 The index into array to begin copying.
            </param>
            <exception cref="T:System.ArgumentException">
                 The array parameter is multidimensional.-or- The number of elements in the
                 X509CertificateCollection is
                 greater than the available space between arrayIndex and the end of array.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 The array parameter is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The arrayIndex parameter is less than the array parameter's lower bound.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.GetEnumerator">
            <summary>
                 Returns an enumerator that can iterate through the X509CertificateCollection.
            </summary>
            <returns>
                 An enumerator of the subelements of X509CertificateCollection
                 you can use to iterate through the collection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode">
            <summary>
                 Builds a hash value based on all values contained in the current X509CertificateCollection.
            </summary>
            <returns>
                 A hash value based on all values contained in the current X509CertificateCollection.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
                 Returns the index of the specified X509Certificate
                 in the current X509CertificateCollection.
            </summary>
            <param name="value">
                 The X509Certificate to locate.
            </param>
            <returns>
                 The index of the X509Certificate
                 specified by the value parameter in the X509CertificateCollection,
                 if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
                 Inserts a X509Certificate into
                 the current X509CertificateCollection
                 at the specified index.
            </summary>
            <param name="index">
                 The zero-based index where value should be inserted.
            </param>
            <param name="value">
                 The X509Certificate to insert.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.Remove(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
                 Removes a specific X509Certificate
                 from the current X509CertificateCollection.
            </summary>
            <param name="value">
                 The X509Certificate to remove
                 from the current X509CertificateCollection.
            </param>
            <exception cref="T:System.ArgumentException">
                 The X509Certificate specified
                 by the value parameter is not found in the current X509CertificateCollection.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)">
             <summary>
                 Removes the element at the specified index of the System.Collections.CollectionBase
                 instance. This method is not overridable.
             </summary>
             <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 index is less than zero.-or-index is equal to or greater than Collection
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.Clear">
            <summary>
                Removes all objects from the Collection instance.
                This method cannot be overridden.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.Item(System.Int32)">
            <summary>
                 Gets or sets the entry at the specified index of the current X509CertificateCollection.
            </summary>
            <param name="index">
                 The zero-based index of the entry to locate in the current X509CertificateCollection.
            </param>
            <returns>
                 The X509Certificate at the
                 specified index of the current X509CertificateCollection.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 The index parameter is outside the valid range of indexes for the collection.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Cryptography.X509Certificates.X509CertificateCollection.Count">
             <summary>
                 Gets the number of elements contained in the Collection
                 instance. This property cannot be overridden.
             </summary>
            <returns>
                 The number of elements contained in the Collection
                 instance.Retrieving the value of this property is an O(1) operation.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection">
            <summary>
                 Represents a collection of X509Certificate2
                 objects. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.#ctor">
            <summary>
                 Initializes a new instance of the X509Certificate2Collection
                 class without any X509Certificate2
                 information.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
                 Initializes a new instance of the X509Certificate2Collection
                 class using an X509Certificate2
                 object.
            </summary>
            <param name="certificate">
                 An X509Certificate2 object
                 to start the collection from.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
                 Initializes a new instance of the X509Certificate2Collection
                 class using an array of X509Certificate2
                 objects.
            </summary>
            <param name="certificates">
                 An array of X509Certificate2
                 objects.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>
                 Initializes a new instance of the X509Certificate2Collection
                 class using the specified certificate collection.
            </summary>
            <param name="certificates">
                 An X509Certificate2Collection
                 object.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.Add(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
                 Adds an object to the end of the X509Certificate2Collection.
            </summary>
            <param name="certificate">
                 An X.509 certificate represented as an X509Certificate2
                 object.
            </param>
            <returns>
                 The X509Certificate2Collection
                 index at which the certificate has been added.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 certificate is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
                 Adds multiple X509Certificate2
                 objects in an array to the X509Certificate2Collection
                 object.
            </summary>
            <param name="certificates">
                 An array of X509Certificate2
                 objects.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 certificates is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>
                 Adds multiple X509Certificate2
                 objects in an X509Certificate2Collection
                 object to another X509Certificate2Collection
                 object.
            </summary>
            <param name="certificates">
                 An X509Certificate2Collection
                 object.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 certificates is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.Contains(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
                 Determines whether the X509Certificate2Collection
                 object contains a specific certificate.
            </summary>
            <param name="certificate">
                 The X509Certificate2 object
                 to locate in the collection.
            </param>
            <returns>
                 true if the X509Certificate2Collection
                 contains the specified certificate; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                 certificate is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.Find(Crestron.SimplSharp.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)">
            <summary>
                 Searches an X509Certificate2Collection
                 object using the search criteria specified by the X509FindType
                 enumeration and the findValue object.
            </summary>
            <param name="findType">
                 One of the X509FindType values.
            </param>
            <param name="findValue">
                 The search criteria as an object.
            </param>
            <param name="validOnly">
                 true to allow only valid certificates to be returned from the search; otherwise,
                 false.
            </param>
            <returns>
                 An X509Certificate2Collection
                 object.
            </returns>
            <exception cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.CryptographicException">
                 findType is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
                 Inserts an object into the X509Certificate2Collection
                 object at the specified index.
            </summary>
            <param name="index">
                 The zero-based index at which to insert certificate.
            </param>
            <param name="certificate">
                 The X509Certificate2 object
                 to insert.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 index is less than zero.-or- index is greater than the System.Collections.CollectionBase.Count
                 property.
            </exception>
            <exception cref="T:System.NotSupportedException">
                 The collection is read-only.-or- The collection has a fixed size.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 certificate is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.Remove(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
                 Removes the first occurrence of a certificate from the X509Certificate2Collection
                 object.
            </summary>
            <param name="certificate">
                 The X509Certificate2 object
                 to be removed from the X509Certificate2Collection
                 object.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 certificate is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
                 Removes multiple X509Certificate2
                 objects in an array from an X509Certificate2Collection
                 object.
            </summary>
            <param name="certificates">
                 An array of X509Certificate2
                 objects.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 certificates is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>
                 Removes multiple X509Certificate2
                 objects in an X509Certificate2Collection
                 object from another X509Certificate2Collection
                 object.
            </summary>
            <param name="certificates">
                 An X509Certificate2Collection
                 object.
            </param>
            <exception cref="T:System.ArgumentNullException">
                 certificates is null.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)">
            <summary>
                 Gets or sets the element at the specified index.
            </summary>
            <param name="index">
                 The zero-based index of the element to get or set.
            </param>
            <returns>
                 The element at the specified index.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 index is less than zero.-or- index is equal to or greater than the System.Collections.CollectionBase.Count
                 property.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                 index is null.
            </exception>
        </member>
        <member name="M:Crestron.EnvironmentVariables.ReadVariable(System.String)">
            <summary>
            Method to read in an environment variables. 
            </summary>
            <param name="variable">Name of the variable.</param>
            <returns>The value of the environment variable specified by variable, or null if the environment variable is not found.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream">
            <summary>
            Exposes a System.IO.Stream around a remote SFTP file, supporting both synchronous and asynchronous read and write operations.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the file.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Stream is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.IO.IOException">Read operation failed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> must be greater than zero.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing, or the stream is already closed. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.FlushReadBuffer">
            <summary>
            Flushes the read data from the buffer.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.FlushWriteBuffer">
            <summary>
            Flush any buffered write data to the file.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.SetupRead">
            <summary>
            Setups the read.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.SetupWrite">
            <summary>
            Setups the write.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.IO.IOException">IO operation failed. </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <returns>The current position within the stream.</returns>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.IsAsync">
            <summary>
            Gets a value indicating whether the FileStream was opened asynchronously or synchronously.
            </summary>
            <value>
              <c>true</c> if this instance is async; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Name">
            <summary>
            Gets the name of the FileStream that was passed to the constructor.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Handle">
            <summary>
            Gets the operating system file handle for the file that the current SftpFileStream object encapsulates.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream.Timeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.SftpClient">
            <summary>
            Implementation of the SSH File Transfer Protocol (SFTP) over SSH.
            </summary>
            <summary>
            Implementation of the SSH File Transfer Protocol (SFTP) over SSH.
            </summary>
            <summary>
            Implementation of the SSH File Transfer Protocol (SFTP) over SSH.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.SynchronizeDirectories(System.String,System.String,System.String)">
            <summary>
            Synchronizes the directories.
            </summary>
            <param name="sourcePath">The source path.</param>
            <param name="destinationPath">The destination path.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns>List of uploaded files.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginSynchronizeDirectories(System.String,System.String,System.String,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Begins the synchronize directories.
            </summary>
            <param name="sourcePath">The source path.</param>
            <param name="destinationPath">The destination path.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous directory synchronization.
            </returns>
            <exception cref="T:System.ArgumentNullException">sourceDir</exception>
            <exception cref="T:System.ArgumentException">destDir</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.EndSynchronizeDirectories(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
            <summary>
            Ends the synchronize directories.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>List of uploaded files.</returns>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.SftpClient._sftpSession">
            <summary>
            Holds SftpSession instance that used to communicate to the SFTP server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.#ctor(Crestron.SimplSharp.Ssh.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is <b>null</b> contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is nu<b>null</b>ll or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is <b>null</b> or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ChangeDirectory(System.String)">
            <summary>
            Changes remote directory to path.
            </summary>
            <param name="path">New directory path.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to change directory denied by remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException">The path in <paramref name="path"/> was not found on the remote host.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ChangePermissions(System.String,System.Int16)">
            <summary>
            Changes permissions of file(s) to specified mode.
            </summary>
            <param name="path">File(s) path, may match multiple files.</param>
            <param name="mode">The mode.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to change permission on the path(s) was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException">The path in <paramref name="path"/> was not found on the remote host.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.CreateDirectory(System.String)">
            <summary>
            Creates remote directory specified by path.
            </summary>
            <param name="path">Directory path to create.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to create the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.DeleteDirectory(System.String)">
            <summary>
            Deletes remote directory specified by path.
            </summary>
            <param name="path">Directory to be deleted path.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to delete the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.DeleteFile(System.String)">
            <summary>
            Deletes remote file specified by path.
            </summary>
            <param name="path">File to be deleted path.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to delete the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.RenameFile(System.String,System.String)">
            <summary>
            Renames remote file from old path to new path.
            </summary>
            <param name="oldPath">Path to the old file location.</param>
            <param name="newPath">Path to the new file location.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="oldPath"/> is <b>null</b>. <para>-or-</para> or <paramref name="newPath"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to rename the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.RenameFile(System.String,System.String,System.Boolean)">
            <summary>
            Renames remote file from old path to new path.
            </summary>
            <param name="oldPath">Path to the old file location.</param>
            <param name="newPath">Path to the new file location.</param>
            <param name="isPosix">if set to <c>true</c> then perform a posix rename.</param>
            <exception cref="T:System.ArgumentNullException">oldPath</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="oldPath"/> is <b>null</b>. <para>-or-</para> or <paramref name="newPath"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to rename the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.SymbolicLink(System.String,System.String)">
            <summary>
            Creates a symbolic link from old path to new path.
            </summary>
            <param name="path">The old path.</param>
            <param name="linkPath">The new path.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="linkPath"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to create the symbolic link was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ListDirectory(System.String,System.Action{System.Int32})">
            <summary>
            Retrieves list of files in remote directory.
            </summary>
            <param name="path">The path.</param>
            <param name="listCallback">The list callback.</param>
            <returns>
            List of directory entries
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginListDirectory(System.String,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object,System.Action{System.Int32})">
            <summary>
            Begins an asynchronous operation of retrieving list of files in remote directory.
            </summary>
            <param name="path">The path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="listCallback">The list callback.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.EndListDirectory(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
            <summary>
            Ends an asynchronous operation of retrieving list of files in remote directory.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
            <returns>
            List of files
            </returns>
            <exception cref="T:System.ArgumentException">The IAsyncResult object (<paramref name="asyncResult"/>) did not come from the corresponding async method on this type. <para>-or-</para> EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Get(System.String)">
            <summary>
            Gets reference to remote file or directory.
            </summary>
            <param name="path">The path.</param>
            <returns>Reference to <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFile"/> file object.</returns>
            <exception cref="T:System.ArgumentNullException">path</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Exists(System.String)">
            <summary>
            Checks whether file pr directory exists;
            </summary>
            <param name="path">The path.</param>
            <returns><c>true</c> if directory or file exists; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.DownloadFile(System.String,Crestron.SimplSharp.CrestronIO.Stream,System.Action{System.UInt64})">
            <summary>
            Downloads remote file specified by the path into the stream.
            </summary>
            <param name="path">File to download.</param>
            <param name="output">Stream to write the file into.</param>
            <param name="downloadCallback">The download callback.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginDownloadFile(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Begins an asynchronous file downloading into the stream.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginDownloadFile(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.AsyncCallback)">
            <summary>
            Begins an asynchronous file downloading into the stream.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginDownloadFile(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object,System.Action{System.UInt64})">
            <summary>
            Begins an asynchronous file downloading into the stream.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="downloadCallback">The download callback.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.EndDownloadFile(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
            <summary>
            Ends an asynchronous file downloading into the stream.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
            <exception cref="T:System.ArgumentException">The IAsyncResult object (<paramref name="asyncResult"/>) did not come from the corresponding async method on this type. <para>-or-</para> EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.UploadFile(Crestron.SimplSharp.CrestronIO.Stream,System.String,System.Action{System.UInt64})">
            <summary>
            Uploads stream into remote file..
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="uploadCallback">The upload callback.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to upload the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.UploadFile(Crestron.SimplSharp.CrestronIO.Stream,System.String,System.Boolean,System.Action{System.UInt64})">
            <summary>
            Uploads stream into remote file..
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="canOverride">if set to <c>true</c> then existing file will be overwritten.</param>
            <param name="uploadCallback">The upload callback.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to upload the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginUploadFile(Crestron.SimplSharp.CrestronIO.Stream,System.String)">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginUploadFile(Crestron.SimplSharp.CrestronIO.Stream,System.String,Crestron.SimplSharp.CrestronIO.AsyncCallback)">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginUploadFile(Crestron.SimplSharp.CrestronIO.Stream,System.String,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object,System.Action{System.UInt64})">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="uploadCallback">The upload callback.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.BeginUploadFile(Crestron.SimplSharp.CrestronIO.Stream,System.String,System.Boolean,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object,System.Action{System.UInt64})">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="canOverride">if set to <c>true</c> then existing file will be overwritten.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="uploadCallback">The upload callback.</param>
            <returns>
            An <see cref="T:Crestron.SimplSharp.CrestronIO.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException">input</exception>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.EndUploadFile(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
            <summary>
            Ends an asynchronous uploading the steam into remote file.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
            <exception cref="T:System.ArgumentException">The IAsyncResult object (<paramref name="asyncResult"/>) did not come from the corresponding async method on this type. <para>-or-</para> EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.GetStatus(System.String)">
            <summary>
            Gets status using statvfs@openssh.com request.
            </summary>
            <param name="path">The path.</param>
            <returns>Reference to <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation"/> object that contains file status information.</returns>
            <exception cref="T:System.ArgumentNullException">path</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is<b>null</b> <para>-or-</para> <paramref name="contents"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="contents"/> is <b>null</b>. <para>-or-</para> <paramref name="encoding"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.AppendAllText(System.String,System.String)">
            <summary>
             Opens a file, appends the specified string to the file, and then closes the file. 
             If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="contents"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file.
            If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="contents"/> is <b>null</b>. <para>-or-</para> <paramref name="encoding"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.AppendText(System.String)">
            <summary>
            Creates a <see cref="T:System.IO.StreamWriter"/> that appends UTF-8 encoded text to an existing file.
            </summary>
            <param name="path">The path to the file to append to.</param>
            <returns>A StreamWriter that appends UTF-8 encoded text to an existing file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.AppendText(System.String,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.IO.StreamWriter"/> that appends UTF-8 encoded text to an existing file.
            </summary>
            <param name="path">The path to the file to append to.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>
            A StreamWriter that appends UTF-8 encoded text to an existing file.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="encoding"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Create(System.String)">
            <summary>
            Creates or overwrites a file in the specified path.
            </summary>
            <param name="path">The path and name of the file to create.</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> that provides read/write access to the file specified in path</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Create(System.String,System.Int32)">
            <summary>
            Creates or overwrites the specified file.
            </summary>
            <param name="path">The path and name of the file to create.</param>
            <param name="bufferSize">The number of bytes buffered for reads and writes to the file.</param>
            <returns>A <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> that provides read/write access to the file specified in path</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.CreateText(System.String)">
            <summary>
            Creates or opens a file for writing UTF-8 encoded text.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <returns>A <see cref="T:System.IO.StreamWriter"/> that writes to the specified file using UTF-8 encoding.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.CreateText(System.String,System.Text.Encoding)">
            <summary>
            Creates or opens a file for writing UTF-8 encoded text.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns> A <see cref="T:System.IO.StreamWriter"/> that writes to the specified file using UTF-8 encoding. </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Delete(System.String)">
            <summary>
            Deletes the specified file or directory. An exception is not thrown if the specified file does not exist.
            </summary>
            <param name="path">The name of the file or directory to be deleted. Wildcard characters are not supported.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.GetLastAccessTime(System.String)">
            <summary>
            Returns the date and time the specified file or directory was last accessed.
            </summary>
            <param name="path">The file or directory for which to obtain access date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.GetLastAccessTimeUtc(System.String)">
            <summary>
            Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.
            </summary>
            <param name="path">The file or directory for which to obtain access date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.GetLastWriteTime(System.String)">
            <summary>
            Returns the date and time the specified file or directory was last written to.
            </summary>
            <param name="path">The file or directory for which to obtain write date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.GetLastWriteTimeUtc(System.String)">
            <summary>
            Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.
            </summary>
            <param name="path">The file or directory for which to obtain write date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Open(System.String,Crestron.SimplSharp.CrestronIO.FileMode)">
            <summary>
            Opens a <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> on the specified path with read/write access.
            </summary>
            <param name="path">The file to open.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <returns>An unshared <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> that provides access to the specified file, with the specified mode and access.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Open(System.String,Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess)">
            <summary>
            Opens a <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> on the specified path, with the specified mode and access.
            </summary>
            <param name="path">The file to open.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"/> value that specifies the operations that can be performed on the file.</param>
            <returns>An unshared <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> that provides access to the specified file, with the specified mode and access.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.OpenRead(System.String)">
            <summary>
            Opens an existing file for reading.
            </summary>
            <param name="path">The file to be opened for reading.</param>
            <returns>A read-only System.IO.FileStream on the specified path.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.OpenText(System.String)">
            <summary>
            Opens an existing UTF-8 encoded text file for reading.
            </summary>
            <param name="path">The file to be opened for reading.</param>
            <returns>A <see cref="T:System.IO.StreamReader"/> on the specified path.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.OpenWrite(System.String)">
            <summary>
            Opens an existing file for writing.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <returns>An unshared <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileStream"/> object on the specified path with <see cref="F:System.IO.FileAccess.Write"/> access.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A byte array containing the contents of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ReadAllLines(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string array containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string array containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ReadLines(System.String)">
            <summary>
            Reads the lines of a file.
            </summary>
            <param name="path">The file to read.</param>
            <returns>The lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            Read the lines of a file that has a specified encoding.
            </summary>
            <param name="path">The file to read.</param>
            <param name="encoding">The encoding that is applied to the contents of the file.</param>
            <returns>The lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.SetLastAccessTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time the specified file was last accessed.
            </summary>
            <param name="path">The file for which to set the access date and time information.</param>
            <param name="lastAccessTime">A <see cref="T:System.DateTime"/> containing the value to set for the last access date and time of path. This value is expressed in local time.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.
            </summary>
            <param name="path">The file for which to set the access date and time information.</param>
            <param name="lastAccessTimeUtc">A <see cref="T:System.DateTime"/> containing the value to set for the last access date and time of path. This value is expressed in UTC time.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.SetLastWriteTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was last written to.
            </summary>
            <param name="path">The file for which to set the date and time information.</param>
            <param name="lastWriteTime">A System.DateTime containing the value to set for the last write date and time of path. This value is expressed in local time.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.
            </summary>
            <param name="path">The file for which to set the date and time information.</param>
            <param name="lastWriteTimeUtc">A System.DateTime containing the value to set for the last write date and time of path. This value is expressed in UTC time.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.WriteAllLines(System.String,System.String[])">
            <summary>
            Creates a new file, write the specified string array to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string array to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string array to the file by using the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string array to write to the file.</param>
            <param name="encoding">An <see cref="T:System.Text.Encoding"/> object that represents the character encoding applied to the string array.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.WriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.GetAttributes(System.String)">
            <summary>
            Gets the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes"/> of the file on the path.
            </summary>
            <param name="path">The path to the file.</param>
            <returns>The <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes"/> of the file on the path.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.SetAttributes(System.String,Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes)">
            <summary>
            Sets the specified <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes"/> of the file on the specified path.
            </summary>
            <param name="path">The path to the file.</param>
            <param name="fileAttributes">The desired <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.InternalListDirectory(System.String,System.Action{System.Int32})">
            <summary>
            Internals the list directory.
            </summary>
            <param name="path">The path.</param>
            <param name="listCallback">The list callback.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.InternalDownloadFile(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.Ssh.Sftp.SftpDownloadAsyncResult,System.Action{System.UInt64})">
            <summary>
            Internals the download file.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
            <param name="downloadCallback">The download callback.</param>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b> or contains whitespace.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.InternalUploadFile(Crestron.SimplSharp.CrestronIO.Stream,System.String,Crestron.SimplSharp.Ssh.Sftp.Flags,Crestron.SimplSharp.Ssh.Sftp.SftpUploadAsyncResult,System.Action{System.UInt64})">
            <summary>
            Internals the upload file.
            </summary>
            <param name="input">The input.</param>
            <param name="path">The path.</param>
            <param name="flags">The flags.</param>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
            <param name="uploadCallback">The upload callback.</param>
            <exception cref="T:System.ArgumentNullException">input</exception>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SftpClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SftpClient.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>The operation timeout.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SftpClient.BufferSize">
            <summary>
            Gets or sets the size of the buffer.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SftpClient.WorkingDirectory">
            <summary>
            Gets remote working directory.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SftpClient.ProtocolVersion">
            <summary>
            Gets sftp protocol version.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Paddings.PKCS5Padding">
            <summary>
            Implements PKCS5 cipher padding
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Paddings.PKCS5Padding.Pad(System.Int32,System.Byte[])">
            <summary>
            Transforms the specified input.
            </summary>
            <param name="blockSize">Size of the block.</param>
            <param name="input">The input.</param>
            <returns>
            Padded data array.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhReplyMessage">
            <summary>
            Represents SSH_MSG_KEXDH_REPLY message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhReplyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhReplyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhReplyMessage.HostKey">
            <summary>
            Gets server public host key and certificates
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhReplyMessage.F">
            <summary>
            Gets the F value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhReplyMessage.Signature">
            <summary>
            Gets the signature of H.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhInitMessage">
            <summary>
            Represents SSH_MSG_KEXDH_INIT message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhInitMessage.#ctor(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhInitMessage"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhInitMessage.E">
            <summary>
            Gets the E value.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestName">
            <summary>
            Specifies supported request names.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestName.TcpIpForward">
            <summary>
            tcpip-forward
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestName.CancelTcpIpForward">
            <summary>
            cancel-tcpip-forward
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage.#ctor(System.UInt32,Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
            <param name="localChannelName">Name of the local channel.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelRequestMessage.RequestData">
            <summary>
            Gets channel request data.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo">
            <summary>
            Represents "break" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
            <param name="breakLength">Length of the break.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.BreakRequestInfo.BreakLength">
            <summary>
            Gets break length in milliseconds.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenMessage.Info">
            <summary>
            Gets channel specific open information.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_CONFIRMATION message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="remoteChannelNumber">The remote channel number.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage.RemoteChannelNumber">
            <summary>
            Gets the remote channel number.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenConfirmationMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword">
            <summary>
            Represents "password" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <param name="newPassword">New authentication password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword.Password">
            <summary>
            Gets authentication password.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword.NewPassword">
            <summary>
            Gets new authentication password.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.HashInfo">
            <summary>
            Holds information about key size and cipher to use
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.HashInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Security.Cryptography.HashAlgorithm})">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.CipherInfo"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
            <param name="hash">Hash.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.HashInfo.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
            <value>
            The size of the key.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.HashInfo.HashAlgorithm">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ForwardedPortRemote">
            <summary>
            Provides functionality for remote port forwarding
            </summary>
            <summary>
            Provides functionality for remote port forwarding
            </summary>
            <summary>
            Provides functionality for remote port forwarding
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.#ctor(System.Net.IPAddress,System.UInt32,System.Net.IPAddress,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortRemote"/> class.
            </summary>
            <param name="boundHostAddress">The bound host address.</param>
            <param name="boundPort">The bound port.</param>
            <param name="hostAddress">The host address.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentNullException">boundHost</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">boundPort</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.Start">
            <summary>
            Starts remote port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.Stop">
            <summary>
            Stops remote port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortRemote"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortRemote"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortRemote.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortRemote"/> class.
            </summary>
            <param name="boundHost">The bound host.</param>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortRemote.BoundHostAddress">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortRemote.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortRemote.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortRemote.HostAddress">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortRemote.Host">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortRemote.Port">
            <summary>
            Gets the forwarded port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ProxyException">
            <summary>
            The exception that is thrown when SCP error occurred.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ProxyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ProxyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.AuthenticationBannerEventArgs">
            <summary>
            Provides data for <see cref="E:Crestron.SimplSharp.Ssh.ConnectionInfo.AuthenticationBanner"/> event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AuthenticationBannerEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.AuthenticationBannerEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="message">Banner message.</param>
            <param name="language">Banner language.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationBannerEventArgs.BannerMessage">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationBannerEventArgs.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.IConnectionTimeouts">
            <summary>
             IConnectionTimeouts timeout Interface.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.IConnectionTimeouts.Timeout">
            <summary>
            Represents the timeout of the Connection instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.IConnectionTimeouts.TimeoutEnabled">
            <summary>
            Represents whether the Timeout for the connection is enabled or not. 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Connection">
            <summary>
            The Stream based Connection class is the basis for all communications between clients and servers. 
            Clients can obtain a Connection object by calling one of the Connect methods of the Client component;
            Servers will obtain Connection objects for every incoming connection that gets established.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Creates an instance of the Connection class.
            </summary>
            <param name="aSocket">A <see cref="T:System.Net.Sockets.Socket"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.#ctor(Crestron.SimplSharp.Net.Binding)">
            <summary>
            Creates an instance of the Connection class with the specified binding.
            </summary>
            <param name="aBinding">A <see cref="P:Crestron.SimplSharp.Net.Connection.Binding"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Init(Crestron.SimplSharp.Net.Binding)">
            <param name="aBinding">A <see cref="P:Crestron.SimplSharp.Net.Connection.Binding"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Initialize">
            <summary>
            Initialize this Connection instance's timeout and maxLineLength.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ToString">
            <summary>
            ToString Method for this Connection instance.
            </summary>
            <returns> String describing this Connection instance. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.StartTimeoutTimer">
            <summary>
            Start the Timeout Timer for this Connection instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.StopTimeoutTimer">
            <summary>
            Stop the Timeout Timer for this Connection instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.InitializeServerConnection">
            <summary>
            Initializes the Server Connection for this instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BeginInitializeServerConnection(System.AsyncCallback,System.Object)">
            <summary>
            Begin the Initialization of the Server Connection for this instance.
            </summary>
            <param name="cb"></param>
            <param name="o"></param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.EndInitializeServerConnection(System.IAsyncResult)">
            <summary>
            End the Initialization of the Server Connection for this instance.
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketReceiveWhatsAvailable(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Receive as much data as is available from the Data Socket Connection.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to receive.</param>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketSendAsMuchAsPossible(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Send as much data as possible to the Data Socket Connection.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to send.</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketConnect(System.Net.EndPoint)">
            <summary>
            Connect to the Data Socket at the specified EndPoint.
            </summary>
            <param name="aEndPoint">EndPoint</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketInitializeServerConnection">
            <summary>
            Initialize Server Connection Data Socket.
            </summary> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Abort">
            <summary>
            Aborts the Connection and closes the socket.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketClose">
            <summary>
            If data socket is connected, close it.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketClose(System.Boolean)">
            <summary>
            If the Data Socket connection is open, shut it down and optionally close and dispose of it.
            </summary>
            <param name="aDispose">true to close socket.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketReceive(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Receive the specified number of bytes from the Data Socket Connection.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to receive.</param>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketSend(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Send data to the Data Socket Connection until the specified size is reached.
            </summary>
            <param name="aBuffer">System.Byte array of bytes to send.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to send.</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.DataSocketSend(System.Byte[])">
            <summary>
            Send data to the Data Socket Connection for the entire length of the buffer.
            </summary>
            <param name="aBuffer">System.Byte array of bytes to send.</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Connect(System.Net.EndPoint)">
            <summary>
            Opens a connection to the target remote system.
            </summary>
            <param name="aEndPoint"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Connect(System.Net.IPAddress,System.Int32)">
            <summary>
            Opens a connection to the target remote system using an IP address and port number.
            </summary>
            <param name="aIPAddress">IP Address</param>
            <param name="aPort">Port Number</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Connect(System.String,System.Int32)">
            <summary>
            Opens a connection to the target remote system using an IP address and port number.
            </summary>
            <param name="aIPAddress">IP Address</param>
            <param name="aPort">Port Number</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Disconnect">
            <summary>
            Closes the data connection to the remote and terminates any calls to Receive that might still be blocking.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Connection.fOriginalEndpoint">
            <summary>
            OriginalEndpoint type.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Receive(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Receive reads bytes from the connection with an offset and specified size.
            This function can be blocked to wait for additional incoming data.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to receive.</param>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ReceiveWhatsAvailable(System.Byte[],System.Int32,System.Int32)">
            <summary>
            ReceiveWhatsAvailable reads bytes from the connection to fill the passed byte[] buffer. 
            Unlike Receive, this function will not block to wait for additional incoming data, but return immediately with the data that was available.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to receive.</param>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Receive(System.Byte[])">
            <summary>
            Receive reads bytes from the connection. This function can be blocked to wait for additional incoming data.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ReceiveAllRemaining">
            <summary>
            Get data from connection until all bytes have been read
            (i.e., until Receive() returns 0). Uses a constant buffersize.
            </summary>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ReceiveAllRemaining(System.Int32)">
            <summary>
            Get data from connection until all bytes have been read
            (i.e., until Receive() returns 0). Uses a buffersize passed as a parameter.
            </summary>
            <param name="aBufferSize">Size of receive buffer used for each pass</param>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ReceiveToStream(System.IO.Stream)">
            <summary>
            Write the entire buffer to the Stream.
            </summary>
            <param name="aStream"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ReceiveToStream(System.IO.Stream,System.Int64)">
            <summary>
            Write a passed in buffer to the Stream utilizing a size.
            </summary>
            <param name="aStream"></param>
            <param name="aSize">The number of bytes to receive.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ReceiveToStream(System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Write a passed in buffer to the Stream for the Buffer Size provided.
            </summary>
            <param name="aStream"></param>
            <param name="aSize">The number of bytes to receive.</param>
            <param name="aBufferSize"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.SendFromStream(System.IO.Stream)">
            <summary>
            Send from Stream with specified Stream parameter.
            </summary>
            <param name="aStream"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.SendFromStream(System.IO.Stream,System.Int64)">
            <summary>
            Send from Stream with specified Stream and size parameters.
            </summary>
            <param name="aStream"></param>
            <param name="aSize">The number of bytes to send.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.SendFromStream(System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Send from Stream with specified Stream, size, and Buffer size parameters.
            </summary>
            <param name="aStream"></param>
            <param name="aSize">The number of bytes to send.</param>
            <param name="aBufferSize"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method sends a block of data to the remote side with specified Buffer, offset, and size.
            </summary>
            <param name="aBuffer">System.Byte array of bytes to send.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to send.</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Send(System.Byte[])">
            <summary>
            This method sends a block of data to the remote side.
            </summary>
            <param name="aBuffer">System.Byte array of bytes to send.</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.SkipBytes(System.Int32)">
            <summary>
            Skip the specified number of bytes to be read.
            </summary>
            <param name="aSize">The number of bytes to skip.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Flush">
            <summary>
            Flush for the Connection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Close">
            <summary>
            Closes the data connection to the remote and terminates any calls to Receive that might still be blocking.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Close(System.Boolean)">
            <summary>
            Closes the data connection to the remote and terminates any calls to Receive that might still be blocking with option to Dispose.
            </summary>
            <param name="aDispose">true to close socket.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            The Read method is provided for compatibility with the Stream base class; it behaves identically to Receive. 
            It will block until the entire buffer is filled or the connection has been closed.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aCount">Count of bytes to use in the byte array</param>
            <returns> Returns the number of bytes read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Seek for Connection instance.
            </summary>
            <param name="aOffset">irrelevant</param>
            <param name="aOrigin">irrelevant</param>
            <returns>Action is not supported. Always throws exception.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.SetLength(System.Int64)">
            <summary>
            Sets the length for Connection instance.
            </summary>
            <param name="aLength">irrelevant</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            The Write method is provided for compatibility with the Stream base class; it behaves identically to Send.
            </summary>
            <param name="aBuffer">System.Byte array of bytes to write.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aCount">Count of bytes to use in the byte array</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.TriggerAsyncDisconnect">
            <summary>
            Trigger an AsyncDisconnect for this Connection instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.TriggerAsyncHaveIncompleteData">
            <summary>
            Trigger an AsyncHaveIncompleteData for this Connection instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.IntBeginRead(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Begins the Read Operation for this Connection instance.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="asyncCallback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.IntEndRead(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
            <summary>
            Ends the Read Operation for this Connection instance.
            </summary>
            <param name="ar"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.IntEndWrite(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
            <summary>
            Ends the Write Sending Operation for this Connection instance.
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.IntBeginWrite(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Begins the Write Operation for this Connection instance.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns>IAsyncResult </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BufferReadLine">
            <summary>
            Returns null if there is nothing in the buffer; 
            Returns "" if it's an empty line, else the line in the buffer.
            </summary>
            <returns> Returns null if there is nothing in the buffer; String.Empty if it's an empty line, else the line in the buffer. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BeginReadLine(System.AsyncCallback,System.Object)">
            <summary>
            Begin Reading a line of this Connection instance.
            </summary>
            <param name="callback"></param>
            <param name="state"></param>
            <returns>IAsyncResult </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.EndReadLine(System.IAsyncResult)">
            <summary>
            End reading the Line for this Connection instance.
            </summary>
            <param name="ar"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BeginRead(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer"> The buffer to read the data into.</param>
            <param name="offset"> The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count"> The maximum number of bytes to read.</param>
            <param name="callback"> An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state"> A user-provided object that distinguishes this particular asynchronous read
            request from other requests.</param>
            <returns> An CrestronIO.IAsyncResult that represents the asynchronous read, which could
            still be pending.</returns>
            <exception cref="T:System.ArgumentException">One or more of the arguments is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.NotSupportedException">The current Stream implementation does not support the read operation.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">Disconnect occurred on the stream's connection</exception> 
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>  
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.EndRead(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
             <summary>
              End Reading the stream for this Connection instance
             </summary>
             <param name="asyncResult">
                 The reference to the pending asynchronous request to finish.
            </param>
             <returns>
                 The number of bytes read from the stream, between zero (0) and the number
                 of bytes you requested. Streams return zero (0) only at the end of the stream,
                 otherwise, they should block until at least one byte is available.
             </returns>
             <exception cref="T:System.ArgumentNullException">
                 asyncResult is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 asyncResult did not originate from a CrestronIO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
                 method on the current stream.
            </exception> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BeginWrite(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
                Begins an asynchronous write operation.
            </summary>
            <param name="buffer">
                The buffer to write data from.
            </param>
            <param name="offset">
                The byte offset in buffer from which to begin writing.
            </param>
            <param name="count">
                The maximum number of bytes to write.
            </param>
            <param name="callback">
                An optional asynchronous callback, to be called when the write is complete.
            </param>
            <param name="state">
                A user-provided object that distinguishes this particular asynchronous write
                request from other requests.
            </param>
            <returns>
                An IAsyncResult that represents the asynchronous write, which could still
                be pending. 
            </returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                Attempted an asynchronous write past the end of the stream, or a disk error
                occurs.
            </exception>
            <exception cref="T:System.ArgumentException">
                One or more of the arguments is invalid.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                Methods were called after the stream was closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                The current Stream implementation does not support the write operation.            
            </exception>
            <exception cref="T:Crestron.SimplSharp.Net.ConnectionClosedException">
                The current Connection was closed.         
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.EndWrite(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
             <summary>
                 Ends an asynchronous write operation.
            </summary>
             <param name="asyncResult">
                 A reference to the outstanding asynchronous I/O request.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 asyncResult is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 asyncResult did not originate from a CrestronIO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
                 method on the current stream.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 The stream is closed or an internal error has occurred.
                 </exception>
             <exception cref="T:Crestron.SimplSharp.Net.ConnectionClosedException">
                 The current Connection was closed.         
             </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begin bringing up the Connection.
            </summary>
            <param name="aEndPoint"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begin bringing up the Connection.
            </summary>
            <param name="anIPAddress"></param>
            <param name="aPort">Port Number</param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begin bringing up the Connection.
            </summary>
            <param name="anIPAddress"></param>
            <param name="aPort">Port Number</param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.EndConnect(System.IAsyncResult)">
            <summary>
            End the Connection.
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ReadLine">
             <summary>
             ReadLine will read data from the connection until a linebreak (either a CR LF or a single LF) is received.
            If MaxLineLengthEnabled is active, ReadLine will take security precautions to ensure the remote side is not sending strings that are too long.
             </summary>
             <returns>String containing one line of data.</returns>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Connection.CRLF">
            <summary>
            CRLF byte array
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Connection.LF">
            <summary>
            LF byte array
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.WriteLine(System.String,System.Object[])">
            <summary>
            The WriteLine method is similar to the Write method, 
            but as in-parameter WriteLine it receives a string and finishes writing with carriage-return line feed character CRLF.
            </summary>
            <param name="aLine">String of text line to write.</param>
            <param name="aValues">Parameter array for String.Format</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.WriteLineLF(System.String,System.Object[])">
            <summary>
            The WriteLineLF method is similar to the Write method, 
            but as in-parameter WriteLineLF it receives a string and finishes writing with line feed character CRLF.
            </summary>
            <param name="aLine">String of text line to write.</param>
            <param name="aValues">Parameter array for String.Format</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.WriteLine(System.String)">
            <summary>
            The WriteLine method is similar to the Write method, 
            but as in-parameter WriteLine it receives a string and finishes writing with carriage-return line feed character CRLF.
            </summary>
            <param name="aLine">String of text line to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.WriteLineLF(System.String)">
            <summary>
            The WriteLineLF method is similar to the Write method, 
            but as in-parameter WriteLineLF it receives a string and finishes writing with line feed character CRLF.
            </summary>
            <param name="aLine">String of text line to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.Dispose">
            <summary>
            Disconnects and Disposes of the Connection elements. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.ResetStatistics">
            <summary>
            Reset the Statistics for this Connection instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.TriggerOnBytesSent(System.Int64)">
            <summary>
            Trigger for OnBytesSent procedure. 
            </summary>
            <param name="aCount">Count of bytes to use in the byte array</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Connection.TriggerOnBytesReceived(System.Int64)">
            <summary>
            Trigger for OnBytesReceived.
            </summary>
            <param name="aCount">Count of bytes to use in the byte array</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.Binding">
            <summary>
            Get the Binding for this connection instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.LocalEndPoint">
            <summary>
            LocalEndPoint specifies the local address that this connection is assigned to. 
            For clients, this will usually be a random port and IP address; 
            For servers, this will be the port and IP address that the connection came in on
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.LocalEndPointAddress">
            <summary>
            LocalEndPointAddress specifies the local address that this connection is assigned to. 
            For clients, this will usually be a random IP address; 
            For servers, this will be the IP address that the connection came in on.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.LocalEndPointPort">
            <summary>
            LocalEndPointPort specifies the local port that this connection is assigned to. 
            For clients, this will usually be a random port; 
            For servers, this will be the port that the connection came in on.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.RemoteEndPoint">
            <summary>
            RemoteEndPoint specifies the remote address that this connection is assigned to. 
            For clients, this will be the port and IP address that they connected to; 
            For servers, this will usually be a random port on the client, and the IP address of the connected client. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.RemoteEndPointAddress">
            <summary>
            RemoteEndPointAddress specifies the remote address that this connection is assigned to. 
            For clients, this will be the IP address that they connected to; 
            For servers, this will usually be a random port of the connected client. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.RemoteEndPointPort">
            <summary>
            RemoteEndPointPort specifies the remote port that this connection is assigned to. 
            For clients, this will be the port that they connected to; 
            For servers, this will usually be a random port on the connected client. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.Encoding">
            <summary>
            Get or set the encoding type for this connection instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.EnableNagle">
            <summary>
            Set the property value to true to enable the Nagle algorithm for send coalescing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.TimedOut">
            <summary>
            Gets the Timeout Status of this connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.BufferedAsync">
            <summary>
            Determines if BufferedAsync is available or not. When set to true, data will not be returned until the specified maximum buffer size is reached.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.AsyncCallbackAvailable">
            <summary>
            Determines if We are going to invoke an AsyncCallback on this IAsyncResult.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.Timeout">
            <summary>
            The Timeout property specifies the maximum amount of time (in seconds) that a Connection will wait for incoming data within a single Receive operation. 
            The timeout handling can be activated by the TimeoutEnabled property, the default value is 5 minutes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.TimeoutEnabled">
            <summary>
            The TimeoutEnabled property toggles whether the Connection will do automatic timeout checking. 
            When turned on (true), the Connection will keep track of the time that passes during any single Receive operation 
            - if a receive operation takes longer than the given timeout, the connection will be terminated.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.MaxLineLength">
            <summary>
            The MaxLineLength property specifies the maximum number of bytes that a ReadLine operation will receive. 
            The maximum line checking can be activated by the MaxLineLengthEnabled property, the default value is 1024 bytes (1kB).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.MaxLineLengthEnabled">
            <summary>
            The MaxLineLengthEnabled property toggles whether the ReadLine function will enforce a maximum line length. 
            When turned on (true), ReadLine will fail and the connection will be terminated if the remote side sends a line longer than the defined MaxLineLength bytes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.DataSocket">
            <summary>
            Get the Data Socket instance
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.DataSocketConnected">
            <summary>
            Specified if the underlying DataSocket is connected.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.DataSocketAvailable">
            <summary>
            Specified if the underlying DataSocket is Available.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.Connected">
            <summary>
            The boolean Connected property can be evaluated at any given time to find out if the Connection object is referring to an open Connection. 
            When a connection is first obtained, it will be open and the property will be true. Once the connection has been closed, whether purposely or by remote, the property will turn to false.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.OriginalEndpoint">
            <summary>
            Gets the OriginalEndpoint property value for this Connection instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.Available">
            <summary>
            Returns the number of bytes available in the local receive buffer.
            Override this method in descendant Connection classes if you need to perform additional handling or calculation on the size of available data.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.CanRead">
            <summary>
            Gets a value indicating whether the current connection supports reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.CanSeek">
            <summary>
            Gets a value indicating whether the current connection supports seeking.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.CanWrite">
            <summary>
            Gets a value indicating whether the current connection supports writing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.Length">
            <summary>
            Length contains the entire known length of the incoming Connection stream. 
            Returns the number of bytes that have been previously received (Position) plus the number of bytes that are waiting in the local receive buffer (Available).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.Position">
            <summary>
            Get or set the position for the Connection instance.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Connection.AsyncDisconnect">
            <summary>
            Called when an async read fails and the socket is disconnected; Will not work when not using async reading
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Connection.AsyncHaveIncompleteData">
            <summary>
            Called when there is data received but it's not complete yet. Can be used for timeout handling.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.BytesSent">
            <summary>
            Gets the number of Bytes sent for this Connection instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Connection.BytesReceived">
            <summary>
            Gets the number of Bytes received for this Connection instance.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Connection.OnBytesSent">
            <summary>
            OnBytesSent Event Handler for this Connection. 
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Connection.OnBytesReceived">
            <summary>
            OnBytesReceived Event Handler for this Connection.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ConnectionEventHandler">
            <summary>
            Delegate for the Connection EventHandler
            </summary>
            <param name="sender">An object representing the sender of the event</param>
            <param name="e">A <see cref="T:Crestron.SimplSharp.Net.ConnectionEventArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ConnectionClosedException">
            <summary>
            Occurs when a Connection is closed while reading data from it, for example because the remote host has unexpectedly closed the connection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionClosedException.#ctor">
            <summary>
            ConnectionClosedException default.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionClosedException.#ctor(System.Boolean)">
            <summary>
            ConnectionClosedException with custom timeout parameter.
            </summary>
            <param name="aTimeout">true if timeout occurred.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionClosedException.#ctor(System.String)">
            <summary>
            ConnectionClosedException with custom message parameter.
            </summary>
            <param name="Message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ConnectionClosedException.#ctor(System.Exception)">
            <summary>
            ConnectionClosedException with custom Exception parameter.
            </summary>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ConnectionClosedException.Timeout">
            <summary>
            Determines whether the connection was closed because of time out.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ProxyType">
            <summary>
            The type of the proxy client uses to connect to the server
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.ProxyType.NONE">
            <summary>No proxy type defined = default (HTTP)</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.ProxyType.HTTP">
            <summary>HTTP</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.ProxyType.HTTP_1_0">
            <summary>HTTP v1.0</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.ProxyType.SOCKS4">
            <summary>SOCKS 4</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.ProxyType.SOCKS4A">
            <summary>SOCKS 4A</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.ProxyType.SOCKS5">
            <summary>SOCKS 5</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.ProxyType.SOCKS5H">
            <summary>SOCKS 5 with host name resolution</summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.AuthMethod">
            <summary>
            The method of authentication to an HTTPS server
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.NONE">
            <summary>No authentication method defined = default (BASIC)</summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.BASIC">
            <summary>
            HTTP Basic authentication. This is the default choice, 
            and the only method that is in wide-spread use and supported virtually everywhere. 
            This sends the user name and password over the network in plain text, easily captured by others.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.DIGEST">
            <summary>
            HTTP Digest authentication.
            Digest authentication is defined in RFC 2617 and is a more secure way to do authentication over public networks 
            than the regular old-fashioned Basic method.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.DIGEST_IE">
            <summary>
            HTTP Digest authentication with an IE flavor. 
            Digest authentication is defined in RFC 2617 and is a more secure way to do authentication over public networks 
            than the regular old-fashioned Basic method. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.NEGOTIATE">
            <summary>
            HTTP Negotiate (SPNEGO) authentication. 
            Negotiate authentication is defined in RFC 4559 and is the most secure way to perform authentication over HTTP.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.NTLM">
            <summary>
            HTTP NTLM authentication. A proprietary protocol invented and used by Microsoft.
            It uses a challenge-response and hash concept similar to Digest, to prevent the password from being eavesdropped.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.NTLM_WB">
            <summary>
            NTLM delegating to winbind helper. Authentication is performed by a separate binary application that is executed when needed. 
            The name of the application is specified at compile time but is typically /usr/bin/ntlm_auth
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.ANY">
            <summary>
            This is a convenience macro that sets all bits and thus makes the client pick any it finds suitable. 
            The client will automatically select the one it finds most secure.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.ANYSAFE">
            <summary>
            This is a convenience macro that sets all bits except Basic and thus makes the client pick any it finds suitable. 
            The client will automatically select the one it finds most secure.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.AuthMethod.ONLY">
            <summary>
            This is a meta symbol. OR this value together with a single specific auth value to force the client to probe for un-restricted auth 
            and if not, only that single auth algorithm is acceptable.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ProxySettings">
            <summary>
            The class representing proxy settings
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ProxySettings.#ctor(System.String)">
            <summary>
            Creates a new instance of the Proxy Settings class
            </summary>
            <param name="urlOrHost">The proxy's Host Name/IP address or fully qualified URL which will be used as the proxy regardless of the rest of the settings</param>
            <remarks>If just a Host Name or IP address is provided, the rest of non-default proxy attributes must be also provided. The defaults are:
                - 'HTTP' for Proxy type
                - 1080 for Proxy Port number
                - Empty Proxy User Name and Password for authentication
            A fully qualified URL in the form of [proxy_type://][user_name:password@]my_proxy_host_name_or_ip_address[:port_number] would define everything.
            Empty string provided explicitly disables any use of proxy with a request.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ProxySettings.Port">
            <summary>
            Sets or gets the proxy server's port number to be used instead of the default one.
            </summary>
            <remarks>Setting a value explicitly defines the port number if not provided by proxy URL. <see cref="P:Crestron.SimplSharp.Net.ProxySettings.HostOrUrl"/>
            Setting to 0 clears the overriding value which means default proxy port (1080) or the one from URL will be used.
            Note that the getter does not return the port from the URL but the one set to override the default value.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ProxySettings.Type">
            <summary>
            Sets or gets the proxy server's type to be used instead of the default one.
            </summary>
            <remarks>Setting a value explicitly defines the proxy type if not provided by proxy URL. <see cref="P:Crestron.SimplSharp.Net.ProxySettings.HostOrUrl"/>
            Setting to 'NONE' clears the overriding value which means default type (HTTP) or the one from URL will be used.
            Note that the getter does not return the proxy type from the URL but the one set to override the default value.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ProxySettings.AuthenticationMethod">
            <summary>
            Sets or gets the proxy server's authentication method to be used instead of the default one.
            </summary>
            <remarks>
            This is a bitmask, to tell the client which HTTP authentication method(s) you want it to use for your proxy authentication.
            If more than one bit is set, the client will first query the site to see what authentication methods it supports and then pick the best one you allow it to use.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ProxySettings.UserName">
            <summary>
            Sets or gets the User Name that will be used to authenticate to the proxy.
            </summary>
            <remarks>Setting a value explicitly defines the proxy user name if not provided by proxy URL. <see cref="P:Crestron.SimplSharp.Net.ProxySettings.HostOrUrl"/>
            Setting to null clears the overriding value which means no user name or the one from URL will be used.
            Note that the getter does not return the proxy user name from the URL but the one set to override the default value.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ProxySettings.UserPassword">
            <summary>
            Sets or gets the Password that will be used to authenticate to the proxy.
            </summary>
            <remarks>Setting a value explicitly defines the proxy user password if not provided by proxy URL. <see cref="P:Crestron.SimplSharp.Net.ProxySettings.HostOrUrl"/>
            Setting to null clears the overriding value which means no user password or the one from URL will be used.
            Note that the getter does not return the proxy user password from the URL but the one set to override the default value.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ProxySettings.HostOrUrl">
            <summary>
            Sets or gets the proxy's Host Name/IP address or fully qualified URL which will be used as the proxy regardless of the rest of the settings.
            </summary>
            <remarks>If just a Host Name or IP address is provided, the rest of non-default proxy attributes must be also provided. The defaults are:
                - 'HTTP' for Proxy type
                - 1080 for Proxy Port number
                - Empty Proxy User Name and Password for authentication
            A fully qualified URL in the form of [proxy_type://][user_name:password@]my_proxy_host_name_or_ip_address[:port_number] would define everything.
            Empty string provided explicitly disables any use of proxy with a request.
            This property represents the string provided in the constructor.
            </remarks>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Binding">
            <summary>
            Represents a local socket binding. All active socket connections are "bound" to a specific port on the client and server side. 
            These bindings are particularly important for some protocols to identify the local connection. 
            Server processes bind themselves to a specific port in order to service incoming queries.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Binding.#ctor">
            <summary>
            Creates a new instance of the Binding class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Binding.#ctor(System.Net.Sockets.AddressFamily)">
            <summary>
            Creates a new instance of the Bindings class.
            </summary>
            <param name="aAddressFamily"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Binding.ShouldSerializePort">
            <summary>
            Returns whether the port is Serialized or not.
            </summary>
            <returns>bool </returns>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Binding.fSocketType">
            <summary>
            Denotes the type of socket used to use to communicate.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Binding.Port">
            <summary>
            Denotes the port number associated with the socket binding. 
            On a server connection, this would be the protocol numbers (e.g: HTTP=80, FTP=21)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Binding.Address">
            <summary>
            The IP Address of the binding.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Binding.BindingAddress">
            <summary>
            The IP Address of the binding as a String
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Binding.AddressFamily">
            <summary>
            AddressFamily denotes the type of address (and thus the means to communicate) of the binding. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Binding.SocketType">
            <summary>
            Denotes the type of socket used to communicate. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Binding.Protocol">
            <summary>
            Denotes the transport level protocol to use to communicate over the socket. The default value is "TCP".
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ServerBinding">
            <summary>
            A ServerBinding represents an EndPoint that a server component will be accepting connections on. 
            The binding can be bound to activate it and start listening for incoming connections, or unbound to close it.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBinding.#ctor">
            <summary>
            Server Binding Default Constructor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBinding.Bind(Crestron.SimplSharp.Net.IListener)">
            <summary>
            Associates a local address with a socket.
            </summary>
            <param name="aListener"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBinding.Unbind">
            <summary>
            Unbinds the connection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBinding.Unbind(System.Boolean)">
            <summary>
            Closes listening for incoming connections.
            </summary>
            <param name="aBlock">Block until join all listening threads.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBinding.BindUnthreaded">
            <summary>
            Bind the Unthreaded Connection.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBinding.Accept">
            <summary>
            Permits an incoming connection attempt on a socket.
            </summary>
            <returns>A Connection object</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ServerBinding.ListeningSocket">
            <summary>
            Gets the socket which is listening for an incoming connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ServerBinding.EndPoint">
            <summary>
            Gets a network EndPoint with a specified IP address and port number.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ServerBinding.EndPointAddress">
            <summary>
            Gets a network EndPoint with a specified IP address in the form of a String.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ServerBinding.EndPointPortNumber">
            <summary>
            Gets a port number for an Endpoint in the form of an integer.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ServerBinding.MaxWaitConnections">
            <summary>
            Gets or sets the length of time (in seconds) to wait for a connection before terminating the attempt and generating an error.
            Default: 10 wait connections.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ServerBinding.ListenerThreadCount">
            <summary>
            Gets or sets the number of listeners. 
            Default Value: 1
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.ServerBinding.EnableNagle">
            <summary>
            Get or set the use of Nagle's Algorithm.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Bindings">
            <summary>
            Bindings Class
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.ServerBindings">
            <summary>
            Creates a new instance of the ServerBindings class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBindings.Bind(Crestron.SimplSharp.Net.Listener)">
            <summary>
            Associates a local address with a socket and assigns a listener to it.
            </summary>
            <param name="aListener"></param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.ServerBindings.Unbind(System.Boolean)">
            <summary>
            Close listening socket and detach a listener from it.
            </summary>
            <param name="aBlock">Block until join all listening threads.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronFileTransferClient">
            <summary>
            FileTransferClient class is a File Transfer Class.  
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.ResponseStream(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            CallBack Stream for incomming data (response)
            </summary>
            <param name="buffer">the data stream</param>
            <param name="size">size of item</param>
            <param name="nmemb">the number of items to deliver</param>
            <param name="response">The response stream as user data</param>
            <returns>The number of items delivered</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.ResponseCallbackFunc(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            CallBack Stream for incomming data (response)
            </summary>
            <param name="buffer">the data stream</param>
            <param name="size">size of item</param>
            <param name="nmemb">the number of items to deliver</param>
            <param name="response">The response stream as user data</param>
            <returns>The number of items delivered</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.RequestStream(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Callback Function to output the Stream Content
            </summary>
            <param name="buffer">The buffer to write items to.</param>
            <param name="size">number of bytes in each item</param>
            <param name="nmemb">Number of items you can send</param>
            <param name="userObject">Null</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.GetStream(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            CallBack Stream for incomming data (response)
            </summary>
            <param name="buffer">the data stream</param>
            <param name="size">size of item</param>
            <param name="nmemb">the number of items to deliver</param>
            <param name="data">NUll</param>
            <returns>The number of items delivered</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.PostStream(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Callback Function to output the Stream Content
            </summary>
            <param name="buffer">The buffer to write items to.</param>
            <param name="size">number of bytes in each item</param>
            <param name="nmemb">Number of items you can send</param>
            <param name="response">Null</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.HeadStream(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            The Header callback to deliver the received Headers
            </summary>
            <param name="buffer"></param>
            <param name="size"></param>
            <param name="nmemb"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.HeaderCallbackFunc(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            CallBack Stream for incomming data (response)
            </summary>
            <param name="buffer">the data stream</param>
            <param name="size">size of item</param>
            <param name="nmemb">the number of items to deliver</param>
            <param name="response">The response stream as user data</param>
            <returns>The number of items delivered</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.StreamWrite(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Send data to the Data Socket Connection until the specified size is reached.
            </summary>
            <param name="aBuffer">System.Byte array of bytes to send.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to send.</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SendAsMuchAsPossible(System.Byte[],System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Send as much data as possible to the Data Connection.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to send.</param>
            <param name="stream">the outgoing stream</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.ReadAsMuchAsPossible(System.Byte[],System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Send as much data as possible to the Data Connection.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aSize">The number of bytes to send.</param>
            <param name="stream">Source to read</param>
            <returns> Returns the number of bytes sent. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.RequestCallbackFunc(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            CallBack Stream for outgoing data (request)
            </summary>
            <param name="buffer">the data stream</param>
            <param name="size">size of item</param>
            <param name="nmemb">the number of items to deliver</param>
            <param name="request">The request stream as user data</param>
            <returns>The number of items delivered</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.#cctor">
            <summary>
            The static constructor of FileTransferClient class to initialize the underlaying native DLL as sometimes CLR fails to call DllMain
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.#ctor">
            <summary>
            The constructor of FileTransferClient class. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.#ctor(Crestron.SimplSharp.CCriticalSection)">
            <summary>
            The constructor of FileTransferClient class. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.Finalize">
            <summary>
            The destructor of FileTransferClient class. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.Abort">
            <summary>
            Aborts current blocking operation asynchronously
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.GetFile(System.String,System.String)">
            <summary>
            Retrieves the remote file pointed by URL.
            This method directly uses the URL supplied.
            The URL is retrieved to the destination (localPath) file. Port number can be embedded into URL.
            Some examples of valid URL prefixed with the specified protocol - http://host.com/myPath/MyFile.txt, https://host.com/myPath/MyFile.txt, ftp://host.com:21/myPath/MyFile.txt, etc.
            </summary>
            <param name="url">The URL to the file intended for downloading</param>
            <param name="localPath">The fully qualified local path to the file being downloaded starting with initial "/"</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.PutFile(System.String,System.String)">
            <summary>
            Uploads local file to the remote destination pointed by URL.
            This method directly uses the URL supplied. Port number can be embedded into URL.
            Some examples of valid URL prefixed with the specified protocol - http://host.com/myPath/MyFile.txt, https://host.com/myPath/MyFile.txt, ftp://host.com:21/myPath/MyFile.txt, etc.
            </summary>
            <param name="url">The URL to the file intended for uploading</param>
            <param name="localPath">The fully qualified local path to the file being uploaded starting with initial "/"</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.PostFile(System.String,System.String)">
            <summary>
            Uploads local file to the remote destination pointed by URL.
            </summary>
            <param name="url">file dest.</param>
            <param name="localPath">file source.</param>
            <returns>Returns status of file posting.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetUserName(System.String)">
            <summary>
            Sets the user name to be used in protocol authentication.
            </summary>
            <param name="name">The user name to use for the transfer</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>In order to specify the password to be used in conjunction with the user name use SetPassword method.
            Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetPassword(System.String)">
            <summary>
            Sets the password to be used in protocol authentication.
            </summary>
            <param name="password">The password to use for the transfer</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>The password should be used in conjunction with SetUserName method.
            Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetProxyAuthMethod(Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod)">
            <summary>
            Sets HTTP proxy server authentication methods to try.
            </summary>
            <param name="authMethod">The bitmask, to tell the client which HTTP authentication method(s) you want it to use for your proxy authentication.
            If more than one bit is set, the client will first query the site to see what authentication methods it supports and then pick the best one you allow it to use.
            </param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetHttpAuthMethod(Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod)">
            <summary>
            Sets HTTP server authentication methods to try.
            </summary>
            <param name="authMethod">The bitmask, to tell the client which HTTP authentication method(s) you want it to use for your HTTP server authentication.
            If more than one bit is set, the client will first query the site to see what authentication methods it supports and then pick the best one you allow it to use.
            </param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetProxyType(Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType)">
            <summary>
            Sets the proxy type to use (e.g. HTTP, SOCKS5, etc).
            </summary>
            <param name="proxyType">The proxy type's enumerator. See: <see cref="T:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType"/></param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>If type "NONE" supplied, the use of proxy is disabled.
            Valid options: NONE, HTTP, HTTP_1_0, SOCKS4, SOCKS4A, SOCKS5, SOCKS5H. See: <see cref="T:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType"/></remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetProxy(System.String)">
            <summary>
            Sets the proxy's name or IP address.
            </summary>
            <param name="proxyNameOrIP">The name or IP address</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>Optionally, fully qualified URL to the proxy can be supplied. Example: "socks5://myproxy:1080"
            Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetProxyPort(System.UInt16)">
            <summary>
            Sets the proxy port to use (e.g. 80, 1080, etc).
            </summary>
            <param name="proxyPort">The port number in the range of 1..65535.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetProxyUserName(System.String)">
            <summary>
            Sets the user name to use for the transfer while connecting to the proxy.
            </summary>
            <param name="name">The user name to use for the proxy</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>In order to specify the password to be used in conjunction with the user name use SetProxyPassword method.
            Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetProxyPassword(System.String)">
            <summary>
            Sets the password to use for the transfer while connecting to the proxy.
            </summary>
            <param name="password">The password to use for the proxy</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>The password should be used in conjunction with SetProxyUserName method.
            Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetPeerVerification(System.Boolean)">
            <summary>
            Set option to enable/disable verification of the peer's certificate.
            </summary>
            <param name="verifyPeer">The Boolean turning On/Off the Verification.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>This option determines whether the client verifies the authenticity of the peer's certificate.
            When negotiating a SSL connection, the server sends a certificate indicating its identity.
            Client verifies whether the certificate is authentic, i.e. that you can trust that the server is who the certificate says it is. 
            This trust is based on a chain of digital signatures, rooted in certification authority (CA) certificates you supply. 
            Client will use certificates provided with the SetCACertificate method.
            When the Verification is set to TRUE, and the verification fails to prove that the certificate is authentic, the GetFile method fails. 
            When it is FALSE, the peer certificate verification succeeds regardless.
            Authenticating the certificate is not by itself very useful. 
            You typically want to ensure that the server, as authentically identified by its certificate, is the server you mean to be talking to. 
            Use SetHostVerification to control that. 
            The check that the host name in the certificate is valid for the host name you're connecting to is done independently of the SetPeerVerification option.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetHostVerification(System.Boolean)">
            <summary>
            Set option to enable/disable host name verification.
            </summary>
            <param name="verifyHost">The Boolean turning On/Off the Verification.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>When negotiating a SSL connection, the server sends a certificate indicating its identity.
            When SetHostVerification is TRUE, then certificate must indicate that the server is the server to which you meant to connect, or the connection fails.
            Curl considers the server the intended one when the Common Name field or a Subject Alternate Name field in the certificate matches the host name in the URL to which you told Curl to connect.
            When the value is FALSE, the connection succeeds regardless of the names in the certificate.
            The default value for this option is TRUE.
            This option controls checking the server's certificate's claimed identity. The server could be lying. To control lying, see SetPeerVerification method. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetVerbose(System.Boolean)">
            <summary>
            Set option to enable/disable client's debug output to the console.
            </summary>
            <param name="verbose">The Boolean turning On/Off the debug output to the console.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetExtraVerbose(System.Boolean)">
            <summary>
            Set option to enable/disable client's Extra debug output to the console.
            </summary>
            <param name="verbose">The Boolean turning On/Off the extra debug output to the console.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetKeepAlive(System.Boolean)">
            <summary>
            Set option to enable/disable feature preventing the client's connection from timing out.
            </summary>
            <param name="keepAlive">The Boolean turning On/Off the keep alive.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetTimeout(System.Int32)">
            <summary>
            Set option for connection timeout.
            </summary>
            <param name="timeout">The timeout. The value must be positive in the range of 0 to 65353 (ushort)</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetIncludeHeaders(System.Boolean)">
            <summary>
            Set option to enable/disable the include of headers in the response.
            </summary>
            <param name="includeHeaders">The Boolean value.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetCACertificate(System.String)">
            <summary>
            Sets the file holding one or more certificates to verify the peer with.
            </summary>
            <param name="certificatePath">The path to the file with the certificates</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>
            Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetCAPath(System.String)">
            <summary>
            Sets the path holding one or more certificates to verify the peer with.
            </summary>
            <param name="certificatePath">The path to the file with the certificates</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <remarks>
            Non-ASCII characters are not currently supported.</remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetClientCertificate(System.String)">
            <summary>
            Sets the file holding one or more client certificates.
            </summary>
            <param name="szClientCertificatePath">The path to the file with the certificates</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetBearerAccessToken(System.String)">
            <summary>
            Sets the Access token for OAUTH login.
            </summary>
            <param name="szBearerToken">The bearer access token</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetSslCertPassWord(System.String)">
            <summary>
            Sets the password for the ClientCertificate
            </summary>
            <param name="szCertPassWord"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetSslCertType(System.String)">
            <summary>
            Sets the Client Certificate format.
            </summary>
            <param name="szSslCertType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetSslKey(System.String)">
            <summary>
            Sets the SSL private Key
            </summary>
            <param name="szSslKeyPath"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetSslKeyPassWord(System.String)">
            <summary>
            Sets the SSL private Key password
            </summary>
            <param name="szSslKeyPassWord"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetSslKeyType(System.String)">
            <summary>
            Sets the SSL private Key Format.
            </summary>
            <param name="szSslKeyType"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetPostFieldSize(System.Int64)">
            <summary>
            Set the size of the field to post
            </summary>
            <param name="size">Size value</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetPostFieldSize(System.Int32)">
            <summary>
            Set the size of the field to post
            </summary>
            <param name="size">Size value</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetHeader(System.String)">
            <summary>
            Set custom headers
            </summary>
            <param name="header">String Header value</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetRedirect(System.Boolean)">
            <summary>
            URL Redirect
            </summary>
            <param name="follow">Redirect true/false</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetMaxRedirect(System.Int32)">
            <summary>
            URL Max Redirects
            </summary>
            <param name="max">Redirect max redirects. The value must be positive in the range of 0 to 65353 (ushort)</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.GetEffectiveUrl(System.String@)">
            <summary>
            Gets the effective URL the client connects to
            </summary>
            <param name="urlout">If successful, contains the effective URL string. Otherwise, empty string.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetUrl(System.String)">
            <summary>
            Sets the URL to connect to
            </summary>
            <param name="urlIn"></param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetHost(System.String)">
            <summary>
            Sets the host name of the remote side
            </summary>
            <param name="hostNameOrIP">Sets the host name portion of the remote site</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetPort(System.UInt16)">
            <summary>
            Sets the host's port to use (e.g. 80 (default), 8080, etc).
            </summary>
            <param name="hostPort">The port number in the range of 1..65535.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.UseSslTlsTransfer(System.UInt16)">
            <summary>
            request using SSL / TLS for the transfer
            </summary>
            <param name="desiredSslTlsSecurityLevel">CURLUSESSL_NONE, CURLUSESSL_TRY, CURLUSESSL_CONTROL, CURLUSESSL_ALL </param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetMailOptFrom(System.String)">
            <summary>
            Sets the FROM option for the mail client.
            </summary>
            <param name="from">email address of the sender</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetMailRecipientsList(System.String,System.String)">
            <summary>
            Sets the list for that receivers of the email.
            </summary>
            <param name="to">string containing the address to send the email to</param>
            <param name="cc">string containing the address to copy the email to</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SendMailMessage(System.IntPtr,System.Object)">
            <summary>
            Sends email.  Blocks until the email is sent.
            </summary>
            <param name="pFunc">response callback</param>
            <param name="response">response out stream</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.DoCommand(Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest)">
            <summary>
            Execute the command using the Async Streams
            </summary>
            <param name="cmdRequest">The command to execute</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.DispatchRequest(Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest,System.String,System.Object,System.Object)">
            <summary>
            Sends a get/put message to the url
            </summary>
            <param name="cmdRequest">Command (get, put, post)</param>
            <param name="url">URL</param>
            <param name="request">request out stream</param>
            <param name="response">response in stream</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.DispatchRequest(System.IntPtr,Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest,System.String,System.Object,System.Object)">
            <summary>
            Sends a get/put message to the url
            </summary>
            <param name="pFunc">response callback</param>
            <param name="cmdRequest">The type of action</param>
            <param name="url">The location</param>
            <param name="request">request out stream</param>
            <param name="response">response in stream</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.GetLastClientError">
            <summary>
            Retrieves last client's internal error occurred (effective when one of the methods returned error code = 1).
            </summary>
            <returns>
            The internal error code.
            </returns>
            <remarks>
            In the current client's implementation, the error codes are equivalent to libCURL's ones.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.GetLastClientStrError">
            <summary>
            Gets a string describing the last error that occurred
            </summary>
            <returns>The string containing the error</returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetResponseCallBack(System.IntPtr)">
            <summary>
            Set the response function to use
            </summary>
            <param name="pFunc"></param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetHeaderCallBack(System.IntPtr)">
            <summary>
            Set the response function to use
            </summary>
            <param name="pFunc"></param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetHeaderCallBackData(System.IntPtr)">
            <summary>
            Set the response function to use
            </summary>
            <param name="pFunc"></param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.SetProgressCallBack(Crestron.SimplSharp.CrestronFileTransferClient.UserProgressCallBack,System.Single)">
            <summary>
            Sets the callback info to receive a progress feedback from the client while uploading/downloading
            </summary>
            <param name="pFunc">The callback function.</param>
            <param name="freq">The frequency of the progress calls in % of the completion. 0 means auto-frequency.</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred. Use GetLastClientError() to retrieve the error code.
            87 if invalid parameter was passed.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The FTC Client has already been closed or disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.ProgressCB(System.IntPtr,System.Double,System.Double)">
            <summary>
            Callback function to process the FGet/FPut's progress info
            </summary>
            <param name="clientData">Pointer to a data structure provided in SetProgressCallBack</param>
            <param name="total">Total number of bytes to transfer (sizeof the file)</param>
            <param name="now">Current number of bytes transferred. -1 means heartbeat</param>
            <returns>Zero if successful.
            -1 if underlying object has not been properly initialized.
            1 if internal error occurred.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.Close">
            <summary>
            Shut down the Client process
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronFileTransferClient.Dispose">
            <summary>
            Destroys the Client
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronFileTransferClient.DefaultAsyncWaitTime">
            <summary>
            The default to wait on an Async Operation
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType">
            <summary>
            The type of the proxy client uses to connect to the server
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType.NONE">
            <summary>No proxy type defined = default (HTTP)</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType.HTTP">
            <summary>HTTP</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType.HTTP_1_0">
            <summary>HTTP v1.0</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType.SOCKS4">
            <summary>SOCKS 4</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType.SOCKS4A">
            <summary>SOCKS 4A</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType.SOCKS5">
            <summary>SOCKS 5</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCProxyType.SOCKS5H">
            <summary>SOCKS 5 with host name resolution</summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest">
            <summary>
            The cmd requested to perform
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest.NONE">
            <summary>No Cmd</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest.GET">
            <summary>GET</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest.PUT">
            <summary>PUT</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest.POST">
            <summary>POST</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest.DELETE">
            <summary>DELETE</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCCmdRequest.PATCH">
            <summary>PATCH</summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod">
            <summary>
            The method of authentication to a proxy or an http server
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.NONE">
            <summary>No authentication method defined = default (BASIC)</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.BASIC">
            <summary>
            HTTP Basic authentication. This is the default choice, 
            and the only method that is in wide-spread use and supported virtually everywhere. 
            This sends the user name and password over the network in plain text, easily captured by others.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.DIGEST">
            <summary>
            HTTP Digest authentication.
            Digest authentication is defined in RFC 2617 and is a more secure way to do authentication over public networks 
            than the regular old-fashioned Basic method.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.DIGEST_IE">
            <summary>
            HTTP Digest authentication with an IE flavor. 
            Digest authentication is defined in RFC 2617 and is a more secure way to do authentication over public networks 
            than the regular old-fashioned Basic method. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.NEGOTIATE">
            <summary>
            HTTP Negotiate (SPNEGO) authentication. 
            Negotiate authentication is defined in RFC 4559 and is the most secure way to perform authentication over HTTP.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.NTLM">
            <summary>
            HTTP NTLM authentication. A proprietary protocol invented and used by Microsoft.
            It uses a challenge-response and hash concept similar to Digest, to prevent the password from being eavesdropped.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.NTLM_WB">
            <summary>
            NTLM delegating to winbind helper. Authentication is performed by a separate binary application that is executed when needed. 
            The name of the application is specified at compile time but is typically /usr/bin/ntlm_auth
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.ANY">
            <summary>
            This is a convenience macro that sets all bits and thus makes the client pick any it finds suitable. 
            The client will automatically select the one it finds most secure.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.ANYSAFE">
            <summary>
            This is a convenience macro that sets all bits except Basic and thus makes the client pick any it finds suitable. 
            The client will automatically select the one it finds most secure.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronFileTransferClient.FTCAuthMethod.ONLY">
            <summary>
            This is a meta symbol. OR this value together with a single specific auth value to force the client to probe for un-restricted auth 
            and if not, only that single auth algorithm is acceptable.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronFileTransferClient.ProgressCallBack">
            <summary>
            CallBack prototype for progress feedback - Internal
            </summary>
            <param name="clientData">The user's data transparently passed back to the callback function.</param>
            <param name="total">Contains total number of bytes to upload/download</param>
            <param name="now">Contains total number of bytes currently uploaded/downloaded. -1 means no progress but heartbeat.</param>
            <returns>Zero if successful.
            non-zero means termination of the upload/download process by callback.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronFileTransferClient.UserProgressCallBack">
            <summary>
            CallBack prototype for progress feedback
            </summary>
            <param name="total">Contains total number of bytes to upload/download</param>
            <param name="now">Contains total number of bytes currently uploaded/downloaded. -1 means no progress but heartbeat.</param>
            <returns>Zero if successful.
            non-zero means termination of the upload/download process by callback.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronFileTransferClient.StreamCallBack">
            <summary>
            CallBack prototype for response feedback - Internal
            </summary>
            <param name="buffer">The pointer receive/transmit stream</param>
            <param name="size">Total number of bytes to transfer (</param>
            <param name="nmemb">Current number of bytes transferred. </param>
            <param name="stream">Pointer user data stream</param>
            <returns>Zero if successful.
            non-zero means termination of the upload/download process by callback.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.AsyncStream">
            <summary>
            Provides an asynchronous buffered stream for the stream presented to the Begin/End Https Request/Response
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.#ctor(Crestron.SimplSharp.CCriticalSection)">
            <summary>
            Sets the internal stream
            </summary>
            <param name="asyncStreamThreadCriticalSection">Critical Section to sync stream operations</param>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.#ctor(System.IO.MemoryStream,Crestron.SimplSharp.CCriticalSection)">
            <summary>
            Sets the internal stream
            </summary>
            <param name="stream">The base memory stream</param>
            <param name="asyncStreamThreadCriticalSection">Critical Section to sync stream operations</param>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.WaitEos(System.Int32)">
            <summary>
            Waits for End-Of-Stream status
            </summary>
            <param name="timeout">Timeout</param>
            <returns>True is signaled, False if timeout</returns>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.WaitEos">
            <summary>
            Waits for End-Of-Stream status
            </summary>
            <returns>True is signaled, False is Stream is closed</returns>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.SetEos">
            <summary>
            Gets End-Of-Stream state
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Close">
            <summary>
             Closes the current stream and releases any resources (such as sockets and
             file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and
            causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"> An I/O error occurs.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Reset">
            <summary>
            Resets the state of the stream to initial one and clears the current contect
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Read(System.Byte[],System.Int32,System.Int32)">
             <summary>
            Reads a sequence of bytes from the current
            stream and advances the position within the stream by the number of bytes
            read.
             </summary>
             <param name="buffer"> An array of bytes. When this method returns, the buffer contains the specified
             byte array with the values between offset and (offset + count - 1) replaced
             by the bytes read from the current source.</param>
             <param name="offset"> The zero-based byte offset in buffer at which to begin storing the data read
             from the current stream.</param>
             <param name="count">The maximum number of bytes to be read from the current stream.</param>
             <returns> The total number of bytes read into the buffer. This can be less than the
             number of bytes requested if that many bytes are not currently available,
             or zero (0) if the end of the stream has been reached.</returns>
             <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length.</exception>
             <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative</exception>
             <exception cref="T:System.NotSupportedException">The stream does not support reading.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
             <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Peek(System.Byte[],System.Int32,System.Int32)">
             <summary>
            Peek a sequence of bytes from the current
            stream and without advancing the position within the stream by the number of bytes
            read.
             </summary>
             <param name="buffer"> An array of bytes. When this method returns, the buffer contains the specified
             byte array with the values between offset and (offset + count - 1) replaced
             by the bytes read from the current source.</param>
             <param name="offset"> The zero-based byte offset in buffer at which to begin storing the data read
             from the current stream.</param>
             <param name="count">The maximum number of bytes to be read from the current stream.</param>
             <returns> The total number of bytes read into the buffer. This can be less than the
             number of bytes requested if that many bytes are not currently available,
             or zero (0) if the end of the stream has been reached.</returns>
             <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length.</exception>
             <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative</exception>
             <exception cref="T:System.NotSupportedException">The stream does not support reading.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
             <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.BeginRead(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer"> The buffer to read the data into.</param>
            <param name="offset"> The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count"> The maximum number of bytes to read.</param>
            <param name="callback"> An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state"> A user-provided object that distinguishes this particular asynchronous read
            request from other requests.</param>
            <returns> An CrestronIO.IAsyncResult that represents the asynchronous read, which could
            still be pending.</returns>
            <exception cref="T:System.ArgumentException">One or more of the arguments is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.NotSupportedException">The current Stream implementation does not support the read operation.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Attempted an asynchronous read past the end of the stream, or a disk error
            occurs.</exception> 
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.EndRead(Crestron.SimplSharp.CrestronIO.IAsyncResult)">
             <summary>
                 Waits for the pending asynchronous read to complete.
             </summary>
             <param name="asyncResult">
                 The reference to the pending asynchronous request to finish.
            </param>
             <returns>
                 The number of bytes read from the stream, between zero (0) and the number
                 of bytes you requested. Streams return zero (0) only at the end of the stream,
                 otherwise, they should block until at least one byte is available.
             </returns>
             <exception cref="T:System.ArgumentNullException">
                 asyncResult is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 asyncResult did not originate from a CrestronIO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
                 method on the current stream.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 The stream is closed or an internal error has occurred.
             </exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
             When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type CrestronIO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed
            from a pipe or console output.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.SetLength(System.Int64)">
            <summary>
             When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value"> The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed</exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current
            stream and advances the current position within this stream by the number
            of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current
            stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the
            current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative.</exception>
            <exception cref="T:System.ArgumentNullException"> buffer is null.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.AsyncStream.Write(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current
            stream and advances the current position within this stream by the number
            of bytes written.
            </summary>
            <param name="buffer">A native pointer to the array of bytes. This method copies count bytes from buffer to the current
            stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the
            current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative.</exception>
            <exception cref="T:System.ArgumentNullException"> buffer is null.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.CanTimeout">
            <summary>
             Gets a value that determines whether the current stream can time out.
            </summary>
            <returns> A value that determines whether the current stream can time out.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.ReadTimeout">
            <summary>
            Gets or sets a value, in milliseconds, that determines how long the stream
            will attempt to read before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to read before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">The CrestronIO.Stream.ReadTimeout method always throws an System.InvalidOperationException.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.WriteTimeout">
            <summary>
             Gets or sets a value, in milliseconds, that determines how long the stream 
             will attempt to write before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to write before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">The CrestronIO.Stream.WriteTimeout method always throws an System.InvalidOperationException.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.Eos">
            <summary>
            Gets End-Of-Stream status
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current
            stream supports reading.
            </summary>
            <returns> true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.CanSeek">
            <summary>
             When overridden in a derived class, gets a value indicating whether the current
             stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.CanWrite">
            <summary>
             When overridden in a derived class, gets a value indicating whether the current
             stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns> A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking.</exception>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.AsyncStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns> The current position within the stream.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking.</exception>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling">
            <summary>
            Special class for overriding our HiddenDirectories function for program 0
            Program 0 has access to the whole enchilada - Let them shoot themselves in the foot !!
            This is an overloaded class - please add any references to the HiddenDirectories class within this.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling.OutsideOfProgramPathAdjustment">
            <summary>
            Reference to the function to adjust the path instead of using the standard flow.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling.AdjustPathForMono(System.String@)">
            <summary>
            Adjusts the path for mono.
            </summary>
            <param name="directoryName">Name of the directory.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling.IsAddDeleteDirectoryOperationPermitted(System.String)">
            <summary>
            Function to check if the specified Add or Delete operation is available on the specified directory
            </summary>
            <param name="directoryName"></param>
            <returns> TRUE for Program 0 always else depends </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling.IsFileHidden(System.IO.FileInfo)">
            <summary>
            IsFileHidden - Checks to see if the file is hidden
            </summary>
            <param name="fileInfo"></param>
            <returns>FALSE for Program 0 always else depends </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling.IsDirHidden(System.String)">
            <summary>
            IsFileHidden - Checks to see if the directory is hidden
            </summary>
            <param name="directoryPath"></param>
            <returns>FALSE for Program 0 always else depends </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling.IsFileDeleteable(System.IO.FileInfo)">
            <summary>
            Function to check if the file is deleteable
            </summary>
            <param name="fileToBeDeleted"></param>
            <returns>TRUE for Program 0 always else depends</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Program0HiddenDirAndFileSystemHandling.AdjustingPathDelegate">
            <summary>
            Delegate to describe a function that will be used for adjusting paths when running outside of a user application.
            </summary>
            <param name="directoryName">Path to adjust.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileStream">
            <summary>
            SimplSharp.CrestronIO FileStream Instance of a file supporting synchronous read and write operations.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.#ctor(System.String,Crestron.SimplSharp.CrestronIO.FileAccess)">
            <summary>
            INTERNAL: Initialize the FileStream with the specified path and access. FileMode is set to OpenOrCreate.
            </summary>
            <param name="path">Full path of the file the stream will encapsulate.</param>            
            <param name="fileAccess">Constant that specifies the file access allowed by the stream. (Read, Write, etc.)</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted for the specified file.</exception>:
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.#ctor(System.String,Crestron.SimplSharp.CrestronIO.FileMode)">
             <summary>
                Initializes a new instance of the CrestronIO.FileStream class with the specified
                path and creation mode.
                </summary>
             <param name="path">
                A relative or absolute path for the file that the current FileStream object
                will encapsulate.
            </param>
             <param name="mode">
                A CrestronIO.FileMode constant that determines how to open or create the file.
            </param>
             <exception cref="T:System.ArgumentException">
                path is an empty string (""), contains only white space, or contains one
                or more invalid characters. -or-path refers to a non-file device, such as
                "con:", "com1:", "lpt1:", etc. in an NTFS environment.
            </exception>exception&gt;
             <exception cref="T:System.NotSupportedException">
                 path refers to a non-file device, such as "con:", "com1:", "lpt1:", etc.
                 in a non-NTFS environment.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open,
                 and the file specified by path does not exist. The file must already exist
                 in these modes.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs, such as specifying FileMode.CreateNew and the file specified
                 by path already exists.-or-The stream has been closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 mode contains an invalid value.
                 </exception>
             <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted for the specified file.</exception>:
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.#ctor(System.String,Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess)">
            <summary>
            Initialize the FileStream with the specified path, mode, and access.
            </summary>
            <param name="path">Full path of the file the stream will encapsulate.</param>
            <param name="mode">Specified mode to open the file. (Open, Append, etc.)</param>
            <param name="access">Constant that specifies the file access allowed by the stream. (Read, Write, etc.)</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted for the specified file.</exception>:
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.#ctor(System.String,Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess,Crestron.SimplSharp.CrestronIO.FileShare)">
             <summary>
                 Initializes a new instance of the CrestronIO.FileStream class with the specified
                 path, creation mode, read/write permission, and sharing permission.
            </summary>
             <param name="path">
                 A relative or absolute path for the file that the current FileStream object
                 will encapsulate.
            </param>
             <param name="mode">
                 A CrestronIO.FileMode constant that determines how to open or create the file.
            </param>
             <param name="access">
                 A CrestronIO.FileAccess constant that determines how the file can be accessed
                 by the FileStream object. This gets the CrestronIO.FileStream.CanRead and
                 CrestronIO.FileStream.CanWrite properties of the FileStream object. CrestronIO.FileStream.CanSeek
                 is true if path specifies a disk file.
            </param>
             <param name="share">
                 A CrestronIO.FileShare constant that determines how the file will be shared
                 by processes.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is an empty string (""), contains only white space, or contains one
                 or more invalid characters. -or-path refers to a non-file device, such as
                 "con:", "com1:", "lpt1:", etc. in an NTFS environment.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path refers to a non-file device, such as "con:", "com1:", "lpt1:", etc.
                 in a non-NTFS environment.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is an empty string (""), contains only white space, or contains one
                 or more invalid characters.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open,
                 and the file specified by path does not exist. The file must already exist
                 in these modes.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs, such as specifying FileMode.CreateNew and the file specified
                 by path already exists. -or-The system is running Windows 98 or Windows 98
                 Second Edition and share is set to FileShare.Delete.-or-The stream has been
                 closed.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">
                 The access requested is not permitted by the operating system for the specified
                 path, such as when access is Write or ReadWrite and the file or directory
                 is set for read-only access.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 mode contains an invalid value.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted for the specified file.</exception>:
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.#ctor(System.String,Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess,Crestron.SimplSharp.CrestronIO.FileShare,System.Int32)">
             <summary>
                 Initializes a new instance of the CrestronIO.FileStream class with the specified
                 path, creation mode, read/write and sharing permission, and buffer size.
            </summary>
             <param name="path">
                 A relative or absolute path for the file that the current FileStream object
                 will encapsulate.
            </param>
             <param name="mode">
                 A CrestronIO.FileMode constant that determines how to open or create the file.
            </param>
             <param name="access">
                 A CrestronIO.FileAccess constant that determines how the file can be accessed
                 by the FileStream object. This gets the CrestronIO.FileStream.CanRead and
                 CrestronIO.FileStream.CanWrite properties of the FileStream object. CrestronIO.FileStream.CanSeek
                 is true if path specifies a disk file.
            </param>
             <param name="share">
                 A CrestronIO.FileShare constant that determines how the file will be shared
                 by processes.
            </param>
             <param name="bufferSize">
                 A positive System.Int32 value greater than 0 indicating the buffer size.
                 For bufferSize values between one and eight, the actual buffer size is set
                 to eight bytes.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is an empty string (""), contains only white space, or contains one
                 or more invalid characters. -or-path refers to a non-file device, such as
                 "con:", "com1:", "lpt1:", etc. in an NTFS environment.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path refers to a non-file device, such as "con:", "com1:", "lpt1:", etc.
                 in a non-NTFS environment.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is an empty string (""), contains only white space, or contains one
                 or more invalid characters.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 bufferSize is negative or zero.-or- mode, access, or share contain an invalid
                 value.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open,
                 and the file specified by path does not exist. The file must already exist
                 in these modes.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs, such as specifying FileMode.CreateNew and the file specified
                 by path already exists. -or-The system is running Windows 98 or Windows 98
                 Second Edition and share is set to FileShare.Delete.-or-The stream has been
                 closed.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">
                 The access requested is not permitted by the operating system for the specified
                 path, such as when access is Write or ReadWrite and the file or directory
                 is set for read-only access.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
                 </exception>
             <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted for the specified file.</exception>:
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.CreateDirAndCheckFile(System.String@,System.IO.FileMode)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="fileOpenMode"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.Flush">
            <summary>
            Clears all buffers for the stream and writes any cleared data to the file system.
            </summary>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>             
            <exception cref="T:System.ObjectDisposedException"></exception>                                               
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read bytes from a stream in to the specified buffer.
            </summary>
            <param name="buffer">Buffer to contain the data to be read off the stream. (offset to ((offset + count) -1)</param>
            <param name="offset">Byte offset in the array to start copying the data read off the stream.</param>
            <param name="count">Maximum number of bytes to read.</param>                                  
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>            
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception> 
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns>Int with the number of bytes read off the stream.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.ReadByte">
            <summary>
             Reads a byte from the stream and advances the position within the stream
                by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns> The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
            <exception cref="T:System.NotSupportedException">The stream does not support reading.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Sets the current position of the stream.
            </summary>
            <param name="offset">The point relative to origin from which to begin seeking.</param>
            <param name="origin">Specifies a point of origin in the file.</param>                                             
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>                                    
            <exception cref="T:System.ArgumentException"></exception>            
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>            
            <returns>The new position in the stream.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the stream
            </summary>
            <param name="value">New length of the stream.</param>                                            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>                                    
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>            
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write bytes to a stream using the buffer as data.
            </summary>
            <param name="buffer">Buffer to contain the data to be written to the stream.</param>
            <param name="offset">Byte offset in to the array to start writing.</param>
            <param name="count">Number of bytes to write.</param>                                  
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>            
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception> 
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.Write(System.String,System.Text.Encoding)">
            <summary>
            Function to write a string to the stream using the specified encoding.
            </summary>
            <param name="stringToWrite">String to write to the stream.</param>
            <param name="encodingToUse">Encoding to use when writing to the stream.</param>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>
            <exception cref="T:System.UnauthorizedAccessException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception> 
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.WriteByte(System.Byte)">
            <summary>
             Writes a byte to the current position in the stream and advances the position
             within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
            <exception cref="T:System.ObjectDisposedException"> Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.Finalize">
            <summary>
            Destructor for FileStream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileStream.Dispose(System.Boolean)">
            <summary>
            Checks to see if Dispose has already been called.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources.
            False to release only unmanaged resources.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.CanRead">
            <summary>
            Returns true if the stream supports reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.CanSeek">
            <summary>
            Returns true if the stream supports seeking.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.CanWrite">
            <summary>
            Returns true if the stream supports writing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.Length">
            <summary>
            Get the length of the stream in bytes.
            </summary>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>             
            <exception cref="T:System.NotSupportedException"></exception>                        
            <returns>The current length of the stream in bytes.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.Position">
            <summary>
            Get or set the current position in the stream.
            </summary>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException"></exception>   
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>                        
            <returns>The current position in the stream.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.Name">
             <summary>
                 Gets the name of the FileStream that was passed to the constructor.
            </summary>
             <returns>
                 A string that is the name of the FileStream.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.IsAsync">
             <summary>
                 Gets a value indicating whether the FileStream was opened asynchronously
                 or synchronously.
            </summary>
             <returns>
                 true if the FileStream was opened asynchronously; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.ReadTimeout">
            <summary>
            Gets or sets a value, in milliseconds, that determines how long the stream
            will attempt to read before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to read before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">If CanTimeout is false, the CrestronIO.FileStream.ReadTimeout method throws an System.InvalidOperationException.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.WriteTimeout">
            <summary>
             Gets or sets a value, in milliseconds, that determines how long the stream 
             will attempt to write before timing out.
            </summary>
            <returns>A value, in milliseconds, that determines how long the stream will attempt
            to write before timing out.</returns>
            <exception cref="T:System.InvalidOperationException">If CanTimeout is false, The CrestronIO.FileStream.WriteTimeout method throws an System.InvalidOperationException.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileStream.CanTimeout">
            <summary>
             Gets a value that determines whether the current stream can time out.
            </summary>
            <returns> A value that determines whether the current stream can time out.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.SeekOrigin">
            <summary>
            Provides the fields that represent reference points in streams for seeking.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.SeekOrigin.Begin">
            <summary>
             Specifies the beginning of a stream.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.SeekOrigin.Current">
            <summary>
            Specifies the current position within a stream.
            </summary>
            
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.SeekOrigin.End">
            <summary>
            Specifies the end of a stream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileAccess">
            <summary>
            Defines constants for read, write, or read/write access to a file.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAccess.Read">
            <summary>
            Read access to the file. Data can be read from the file. Combine with Write for read/write access.            
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAccess.Write">
            <summary>
            Write access to the file. Data can be written to the file. Combine with Read for read/write access.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAccess.ReadWrite">
            <summary>
            Read and write access to the file. Data can be written to and read from the file.
            </summary>  
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileMode">
            <summary>
            Specifies how the operating system should open a file.
            </summary> 
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileMode.CreateNew">
            <summary>
            Specifies that the operating system should create a new file. If the file already exists, an IOException is thrown.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileMode.Create">
            <summary>
            Specifies that the operating system should create a new file. If the file already exists, it will be overwritten.
            </summary>                 
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileMode.Open">
            <summary>
            Specifies that the operating system should open an existing file.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileMode.OpenOrCreate">
            <summary>
            Specifies that the operating system should open a file if it exists; otherwise,
              a new file should be created.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileMode.Truncate">
            <summary>
            Specifies that the operating system should open an existing file. Once opened,
            the file should be truncated so that its size is zero bytes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileMode.Append">
            <summary>
            Opens the file if it exists and seeks to the end of the file, or creates
            a new file. FileMode.Append can only be used in conjunction with FileAccess.Write.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileShare">
            <summary>
                Defines constants for controlling the kind of access other CrestronIO.FileStream
                objects can have to the same file.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileShare.None">
             <summary>
                 Declines sharing of the current file. Any request to open the file (by this
                 process or another process) will fail until the file is closed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileShare.Read">
            <summary>
                Allows subsequent opening of the file for reading. If this flag is not specified,
                any request to open the file for reading (by this process or another process)
                will fail until the file is closed. However, even if this flag is specified,
                additional permissions might still be needed to access the file.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileShare.Write">
            <summary>
                Allows subsequent opening of the file for writing. If this flag is not specified,
                any request to open the file for writing (by this process or another process)
                will fail until the file is closed. However, even if this flag is specified,
                additional permissions might still be needed to access the file.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileShare.ReadWrite">
            <summary>
                Allows subsequent opening of the file for reading or writing. If this flag
                is not specified, any request to open the file for reading or writing (by
                this process or another process) will fail until the file is closed. However,
                even if this flag is specified, additional permissions might still be needed
                to access the file.
                </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.BinaryWriter">
            <summary>
            SimplSharp.CrestronIO BinaryWriter instance to allow writing of data encoded as binary in a file.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.BinaryWriter.Null">
            <summary>
                Specifies a CrestronIO.BinaryWriter with no backing store.
              </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.#ctor">
            <summary>
                Initializes a new instance of the CrestronIO.BinaryWriter class that writes
                to a stream.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
             <summary>
                 Initializes a new instance of the CrestronIO.BinaryWriter class based on the
                 supplied stream and using UTF-8 as the encoding for strings.
                 </summary>
             <param name="output">
                 The output stream.
            </param>
             <exception cref="T:System.ArgumentException">
                 The stream does not support writing, or the stream is already closed.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 output is null.
             </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding)">
             <summary>
                 Initializes a new instance of the CrestronIO.BinaryWriter class based on the
                 supplied stream and a specific character encoding.
                 </summary>
             <param name="output">
                 The supplied stream.
            </param>
             <param name="encoding">
                 The character encoding.
            </param>
             <exception cref="T:System.ArgumentException">
                 The stream does not support writing, or the stream is already closed.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 output or encoding is null.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Crestron BinaryWriter class based on the supplied
            file name. Defaults to UTF-8.
            </summary>
            <param name="filename">Name of the file.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is greater than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Function to initializes a new instance of the Crestron BinaryWriter class based on 
            the supplied stream and a specific character encoding.
            </summary>
            <param name="filename">Name of the file.</param>
            <param name="encoding">Type of coding.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is greater than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>           
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Flush">
            <summary>
            Clears all buffers for the current writer and causes any buffered data to be written
            to the underlying device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Seek(System.Int32,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Sets the position within the current file.
            </summary>
            <param name="offset">A byte offset relative to origin.</param>
            <param name="origin">A field of SeekOrigin indicating the reference point from which 
            the new position is to be obtained.</param>
            <returns>The position with the current file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">The file pointer was moved to an invalid location.</exception>
            <exception cref="T:System.ArgumentException">The CrestronIO.SeekOrigin value is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Boolean)">
            <summary>
            Writes a one-byte Boolean value to the current stream, with 0 representing
            false and 1 representing true and advances the current file pointer one byte.
            </summary>
            <param name="value">Boolean value to write (0 or 1).</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Byte)">
            <summary>
            Writes an unsigned byte to the current stream and advances the position by one byte.
            </summary>
            <param name="value">The unsigned byte to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Byte[])">
            <summary>
            Writes a byte array to the file.
            </summary>
            <param name="buffer">A byte array containing the data to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
            <exception cref="T:System.ArgumentNullException">Buffer is Null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Char)">
            <summary>
            Writes a Unicode character to the current file and advances the current 
            file pointer in accordance with the Encoding used and the specific characters
            being written to the file. 
            </summary>
            <param name="ch">The non-surrogate, Unicode character to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
            <exception cref="T:System.ArgumentException">ch is a single surrogate character.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Char[])">
            <summary>
            Writes a Unicode character array to the current file and advances the current 
            file pointer in accordance with the Encoding used and the specific characters
            being written to the file.
            </summary>
            <param name="chars">A character array containing the data to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
            <exception cref="T:System.ArgumentNullException">chars is Null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Decimal)">
            <summary>
            Writes a decimal value and advances the current file pointer sixteen bytes.
            </summary>
            <param name="value">The decimal value to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Double)">
            <summary>
            Writes a eight-byte floating-point value to the current file and advances the current
            file pointer by eight bytes.
            </summary>
            <param name="value">The double value to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Single)">
            <summary>
            Writes a four-byte floating-point value and advances the current file pointer 
            by four bytes. 
            </summary>
            <param name="value">The four-byte floating-point value to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Int16)">
            <summary>
            Writes a two-byte signed integer to the file and advances the current file pointer 
            by two bytes. 
            </summary>
            <param name="value">The two-byte signed integer to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Int32)">
            <summary>
            Writes a four-byte signed integer to the file and advances the current file pointer 
            by four bytes. 
            </summary>
            <param name="value">The four-byte signed integer to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Int64)">
            <summary>
            Writes an eight-byte signed integer to the file and advances the current file pointer 
            by eight bytes. 
            </summary>
            <param name="value">The eight-byte signed integer to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.SByte)">
            <summary>
            Writes a signed byte to the file and advances the current file pointer 
            by one byte. 
            </summary>
            <param name="value">The signed byte to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.String)">
            <summary>
            Writes a length-prefixed string to the file in the current encoding of
            the BinaryWriter, and advances the current position of the stream
            in accordance with the encoding used and the specific characters being 
            written to the stream.
            </summary>
            <param name="value">The value to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.UInt32)">
            <summary>
            Writes a four-byte unsigned integer to the current file and advances the
            current file pointer four bytes.
            </summary>
            <param name="value">The four-byte unsigned integer to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.UInt64)">
            <summary>
            Writes a eight-byte unsigned integer to the current file and advances the
            current file pointer eight bytes.
            </summary>
            <param name="value">The eight-byte unsigned integer to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.UInt16)">
            <summary>
            Writes a two-byte unsigned integer to the current file and advances the
            current file pointer two bytes.
            </summary>
            <param name="value">The two-byte unsigned integer to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a region of a byte array to the current file.
            </summary>
            <param name="buffer">A byte array containing the data to write.</param>
            <param name="index">The starting point in buffer at which to begin writing.</param>
            <param name="count">The number of bytes to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
            <exception cref="T:System.ArgumentException">The buffer length minus index is less than count.</exception>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index or count is negative.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a section of a character array to the current file and advances the current
            file pointer in accordance with the encoding used and perhaps the specific characters
            being written to the file.
            </summary>
            <param name="chars">A character array containing the data to write.</param>
            <param name="index">The starting point in chars at which to begin writing.</param>
            <param name="count">The number of characters to write.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception> 
            <exception cref="T:System.ArgumentException">The chars length minus index is less than count.</exception>
            <exception cref="T:System.ArgumentNullException">chars is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index or count is negative.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Close">
            <summary>
            Closes the current BinaryWriter and the underlying file.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Finalize">
            <summary>
            Destructor for BinaryWriter.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Dispose(System.Boolean)">
            <summary>
            Checks to see if Dispose has already been called.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources.
            False to release only unmanaged resources.</param>
            <remarks> If we were to ever unseal this class then please make this as protected.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryWriter.Dispose">
            <summary>
            Disposes the current BinaryWriter and the underlying file and then suppresses further disposing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.BinaryWriter.BaseStream">
            <summary>
            Gets the base output stream.
            </summary>
            <returns>The base stream created from path string or the one passed to the constructor.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.BinaryReader">
            <summary>
            SimplSharp.CrestronIO BinaryReader instance to allow reading of data encoded as binary in a file.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
             <summary>
                 Initializes a new instance of the CrestronIO.BinaryReader class based on the
                 supplied stream and using System.Text.UTF8Encoding.
                 </summary>
             <param name="input">
                 A stream.
            </param>
             <exception cref="T:System.ArgumentException">
                 The stream does not support reading, the stream is null, or the stream is
                 already closed.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding)">
             <summary>
                 Initializes a new instance of the CrestronIO.BinaryReader class based on the
                 supplied stream and a specific character encoding.
                 </summary>
             <param name="input">
                 The supplied stream.
            </param>
             <param name="encoding">
                 The character encoding.
            </param>
             <exception cref="T:System.ArgumentException">
                 The stream does not support reading, the stream is null, or the stream is
                 already closed.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 encoding is null.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.#ctor(System.String)">
            <summary>
            Function to initialize a new BinaryRead class.
            </summary>
            <param name="fileName">BinaryFile to read.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is greater than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Function to initialize a new BinaryRead class.
            </summary>
            <param name="fileName">BinaryFile to read.</param>
            <param name="encoding">Encoding of the file.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is greater than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.PeekChar">
            <summary>
            Returns the next available character in the file, but does not change the position in the file.
            </summary>
            <returns>The next character in the file or -1 if there are no more.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">I/O Error Occurs</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.Read">
            <summary>
            Reads the next available character in the file and moves the current file pointer
            forward according to the current encoding.
            </summary>
            <returns>The next character in the file or -1 if there are no more characters.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">I/O Error Occurs</exception>
            <exception cref="T:System.ObjectDisposedException">The file has been closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadBoolean">
            <summary>
            Reads a boolean value from the file at the current position and advances the file pointer 
            by one byte.
            </summary>
            <returns>True if the byte is nonzero.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadByte">
            <summary>
            Reads the next byte from the current stream
            and advances the current file pointer by one byte.
            </summary>
            <returns>The next byte in the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadBytes(System.Int32)">
            <summary>
            Reads the specified number of bytes from the current file into a byte array and
            moves the file pointer forward by the number of bytes read.
            </summary>
            <param name="numberOfBytesToRead">The number of bytes to read.</param>
            <returns>A byte array containing the bytes read from the file.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The numberOfBytesToRead is negative.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadChar">
            <summary>
            Reads the next character from the file and moves the file pointer forward
            the number of bytes specified by the encoding. 
            </summary>
            <returns>A character read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
            <exception cref="T:System.ArgumentException">A surrogate character was read.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadChars(System.Int32)">
            <summary>
            Reads the number of characters specified from the file. The data is
            returned in a character array and the file pointer is moved forward according
            to the encoding of the file.
            </summary>
            <param name="numberOfCharactersToRead">The number of characters to read.</param>
            <returns>A character array containing data read from the file.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The numberOfCharactersToRead is negative.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadDecimal">
            <summary>
            Reads a decimal value from the current file and moves the file pointer
            forward by sixteen bytes.
            </summary>
            <returns>The decimal value read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadDouble">
            <summary>
            Reads a double from the current file and moves the file pointer
            forward by eight bytes.
            </summary>
            <returns>The double read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadInt16">
            <summary>
            Reads a short from the current file and moves the file pointer
            forward by two bytes.
            </summary>
            <returns>The short read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadInt32">
            <summary>
            Reads a integer from the current file and moves the file pointer
            forward by four bytes.
            </summary>
            <returns>The integer read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadInt64">
            <summary>
            Reads a long from the current file and moves the file pointer
            forward by eight bytes.
            </summary>
            <returns>The long read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadSingle">
            <summary>
            Reads a float from the current file and moves the file pointer
            forward by four bytes.
            </summary>
            <returns>The float read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadString">
            <summary>
            Reads a string from the current file. The string is prefixed with the length, 
            encoded as an integer seven bits at a time. The file pointer is moved forward
            the size of the string.            
            </summary>
            <returns>The string read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadUInt16">
            <summary>
            Reads an unsigned short from the current file and moves the file pointer
            forward by two bytes.
            </summary>
            <returns>The ushort read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadUInt32">
            <summary>
            Reads an unsigned integer from the current file and moves the file pointer
            forward by four bytes.
            </summary>
            <returns>The unsigned integer read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadUInt64">
            <summary>
            Reads a unsigned long from the current file and moves the file pointer
            forward by eight bytes.
            </summary>
            <returns>The unsigned long read from the file.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.ReadSByte">
            <summary>
            Reads a signed byte from this stream and advances the current position of
            the stream by one byte.
            </summary>
            <returns>A signed byte read from the current stream.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The end of the file is reached.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads count bytes from the stream with index as the starting point in the
                 byte array.
            </summary>
             <param name="buffer">
                 The buffer to read data into.
            </param>
             <param name="index">
                 The starting point in the buffer at which to begin reading into the buffer.
            </param>
             <param name="count">
                 The number of characters to read.
            </param>
            <returns>
                 The number of characters read into buffer. This might be less than the number
                 of bytes requested if that many bytes are not available, or it might be zero
                 if the end of the stream is reached.
            </returns>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
                 Reads count characters from the stream with index as the starting point in
                 the character array.
            </summary>
             <param name="buffer">
                 The buffer to read data into.
            </param>
             <param name="index">
                 The starting point in the buffer at which to begin reading into the buffer.
            </param>
             <param name="count">
                 The number of characters to read.
            </param>
            <returns>
                 The total number of characters read into the buffer. This might be less than
                 the number of characters requested if that many characters are not currently
                 available, or it might be zero if the end of the stream is reached.
            </returns>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                 The stream is closed.
            </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.Close">
            <summary>
            Closes the current BinaryReader and the underlying file.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.Finalize">
            <summary>
            BinaryReader Destructor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.Dispose(System.Boolean)">
            <summary>
            Checks to see if Dispose has already been called.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources.
            False to release only unmanaged resources.</param>
            <remarks> If we were to ever unseal this class then please make this as protected.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.BinaryReader.Dispose">
            <summary>
            Disposes the current BinaryReader and the underlying file and then suppresses further disposing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.BinaryReader.BaseStream">
            <summary>
            Gets the base input stream.
            </summary>
            <returns>The base stream created from path string or the one passed to the constructor.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.BinaryReader.Position">
            <summary>
            Get or Set the position in the file.
            </summary>
            <returns>The current position in the file.</returns>
            <exception cref="T:System.NotSupportedException"> Seeking is not supported.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.BinaryReader.Length">
            <summary>
            Get the length of the file.
            </summary>
            <returns>The current length in bytes of the file.</returns>
            <exception cref="T:System.NotSupportedException"> Seeking is not supported.</exception>            
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileAttributes">
            <summary>
            Provides attributes for files and directories.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.ReadOnly">
            <summary>
            The file is read-only.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Hidden">
            <summary>
            The file is hidden, and thus is not included in an ordinary directory listing.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.System">
            <summary>
            The file is a system file. The file is part of the operating system or is used exclusively by the operating system.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Directory">
            <summary>
            The file is a directory.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Archive">
            <summary>
            The file's archive status. Applications use this attribute to mark files for backup or removal.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Device">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Normal">
            <summary>
            The file is normal and has no other attributes set. This attribute is valid only if used alone.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Temporary">
            <summary>
            The file is temporary. File systems attempt to keep all of the data in memory for quicker access rather than flushing the data back to mass storage. A temporary file should be deleted by the application as soon as it is no longer needed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.SparseFile">
            <summary>
            The file is a sparse file. Sparse files are typically large files whose data are mostly zeros.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.ReparsePoint">
            <summary>
            The file contains a reparse point, which is a block of user-defined data associated with a file or a directory.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Compressed">
            <summary>
            The file is compressed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Offline">
            <summary>
            The file is offline. The data of the file is not immediately available.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.NotContentIndexed">
            <summary>
            The file will not be indexed by the operating system's content indexing service.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.FileAttributes.Encrypted">
            <summary>
            The file or directory is encrypted. For a file, this means that all data in the file is encrypted. For a directory, this means that encryption is the default for newly created files and directories.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileSystemInfo">
            <summary>
                Provides the base class for both CrestronIO.FileInfo and CrestronIO.DirectoryInfo
                objects.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileSystemInfo.#ctor">
            <summary>
                Initializes a new instance of the CrestronIO.FileSystemInfo class.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileSystemInfo.Refresh">
            <summary>
            Refreshes the state of the object.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Device is not ready.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileSystemInfo.Delete">
            <summary>
            Delete the current directory.
            </summary>                       
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The specified directory can not be deleted.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not Exist.</exception>                        
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to delete this directory.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.Attributes">
            <summary>
            Gets or sets the FileAttributes of the current object.
            </summary>
            <returns>FileAttributes of the current object.</returns> 
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The specified file does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified path is invalid.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <exception cref="T:System.ArgumentException">The caller attempted to set an invalid file attribute.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.CreationTime">
            <summary>
            Gets the creation time of the current object.
            </summary>
            <returns>The creation data and time of the current object.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified path is invalid.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.Extension">
            <summary>
            Gets the string representing the extension part of the file.
            </summary>
            <returns>A string contains the extension</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.LastAccessTime">
            <summary>
            Gets the time the current file or directory was last accessed.
            </summary>
            <returns>The time that the current file or directory was last accessed.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.LastWriteTime">
            <summary>
            Gets the time when the current file or directory was last written to.
            </summary>
            <Returns>The time the current file was last written.</Returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT of later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.Exists">
            <summary>
            Determines if the current directory exists on the system.
            </summary>                        
            <returns>True if the current directory exists.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.Name">
            <summary>
            Return the name of the current directory.
            </summary>                        
            <returns>A string populated with the name of the current directory.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileSystemInfo.FullName">
            <summary>
            Return the full path of the Directory
            </summary>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permission.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.DirectoryInfo">
            <summary>
            Provides an instance for creating, moving, deleting, and enumerating through directories
            and subdirectories.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.#ctor(System.String)">
            <summary>
            Initialize the DirectoryInfo class with the specified path.
            </summary>
            <param name="dirPath">Path to create the DirectoryInfo object</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The path is greater than 248 characters.</exception>                        
            <exception cref="T:System.ArgumentException">The path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The path is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the correct permissions.</exception>                
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.CreateSubdirectory(System.String)">
             <summary>
              Creates a subdirectory or subdirectories on the specified path. The specified 
              path can be relative to this instance of the <see cref="T:Crestron.SimplSharp.CrestronIO.DirectoryInfo"></see> class.
             </summary>
             <param name="dirPath">Path to create the DirectoryInfo object. 
             This cannot be a different disk volume or Universal Naming Convention (UNC) name.</param>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory specified.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The path is greater than 248 characters.</exception>                       
             <exception cref="T:System.ArgumentException">The path contains invalid characters.</exception>
             <exception cref="T:System.ArgumentNullException">The path is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the correct permissions.</exception>                
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not Exist.</exception>              
             <exception cref="T:System.NotSupportedException">The system does not support access to this file type.</exception>         
             <returns>The last directory specified in path.</returns>
             <example>
             using Crestron.SimplSharp;
             using Crestron.SimplSharp.CrestronIO;;
            
             public class CreateSubDirectory 
             {
                public static void Main() 
                {
                    // Create a reference to a directory.
                    DirectoryInfo di = new DirectoryInfo("MyDirectory");
            
                    // Create a subdirectory in MyDirectory.
                    DirectoryInfo dis = di.CreateSubdirectory("MySubDirectory");
            
                    // Process that directory as required. 
                    ....
                }
             }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.GetFileSystemInfos">
             <summary>
             Returns an array of strongly typed <see cref="T:Crestron.SimplSharp.CrestronIO.FileSystemInfo"></see> entries representing 
             all the files and subdirectories in a directory.
             </summary>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory specified.</exception> 
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not Exist.</exception>
             <returns>An array of strongly typed <see cref="T:Crestron.SimplSharp.CrestronIO.FileSystemInfo"></see> entries.</returns>
             <example>
            using Crestron.SimplSharp;
            using Crestron.SimplSharp.CrestronIO;;
            
            public class FileSystemInfos 
            {
                public static void Main() 
                {
                  try
                  {
                    // Create a reference to a directory.
                    DirectoryInfo dir = new DirectoryInfo("MyDirectory");
            
                     if (dir.Exists)
                     {
                         // Call the GetFileSystemInfos method.
                         FileSystemInfo[] infos = dir.GetFileSystemInfos();
                     
            
                         //Display the results to the console.
                         CrestronConsole.Print("SubDirectories and files \r\n");
                         foreach( FileSystemInfo f in infos)
                         {
                             CrestronConsole.Print(" " + f.FullName + "\r\n");
                         }
                     }
                   }
                   catch (Exception Ex)
                   {
                     CrestronConsole.Print(String.Format("Unable to access directory '{0}'", _diretoryInfo.FullName));
                   }
                   return
                 }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.GetFileSystemInfos(System.String)">
             <summary>
             Retrieves an array of strongly typed <see cref="T:Crestron.SimplSharp.CrestronIO.FileSystemInfo"></see> objects representing 
             the files and subdirectories matching the specified search criteria.
             </summary>
             <param name="searchPattern">The search string, such as "System*", used to search for all directories 
             beginning with the word "System".</param>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory specified.</exception> 
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not Exist.</exception>              
             <exception cref="T:System.ArgumentNullException">The path is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the correct permissions.</exception> 
             <returns>An array of strongly typed <see cref="T:Crestron.SimplSharp.CrestronIO.FileSystemInfo"></see> objects matching the search criteria.</returns>
             <example>
            using Crestron.SimplSharp;
            using Crestron.SimplSharp.CrestronIO;;
            
            public class FileSystemInfosWithSearch 
            {
                public static void Main() 
                {
                  try
                  {
                    // Create a reference to a directory.
                    DirectoryInfo dir = new DirectoryInfo("MyDirectory");
                    string searchString = "app";
                     if (dir.Exists)
                     {
            
                        // Call the GetFileSystemInfos method.
                         FileSystemInfo[] infos = dir.GetFileSystemInfos(searchString);
                     
            
                         //Display the results to the console.
                         CrestronConsole.Print("SubDirectories and files that include {0} \r\n",searchString);
                         foreach( FileSystemInfo f in infos)
                         {
                             CrestronConsole.Print("SubDirectories and files: {0} , ", f.FullName);
                         }
                     }
                   }
                   catch (Exception Ex)
                   {
                     CrestronConsole.Print("Unable to access directory '{0}'", _diretoryInfo.FullName);
                   }
                   return
                 }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Create">
            <summary>
            Create the current directory.
            </summary>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The specified directory can not be created at the current path.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Delete">
            <summary>
            Delete the current directory.
            </summary> 
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The specified directory can not be deleted.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not Exist.</exception>                        
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to delete this directory.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Delete(System.Boolean)">
             <summary>
              Deletes this instance of a <see cref="T:Crestron.SimplSharp.CrestronIO.DirectoryInfo"></see>, specifying whether to delete subdirectories and files.
             </summary> 
             <param name="recursive">true to delete this directory, its subdirectories, and all files; otherwise, false.</param> 
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The specified directory can not be deleted.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not Exist.</exception>                        
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to delete this directory.</exception>
             <example>
             using Crestron.SimplSharp;
             using Crestron.SimplSharp.CrestronIO;;
            
             public class DeleteTest
             {
                public static void Main()
                {
            
                    // Make a reference to a directory.
                    DirectoryInfo info = new DirectoryInfo("/User/myDir");
            
                    // Create the directory only if it does not already exist. 
                    if (info.Exists == false)
                        info.Create();
            
                    // Create a subdirectory in the directory just created.
                    DirectoryInfo dis = info.CreateSubdirectory("SubDir");
            
                    // Process that directory as required. 
                    // ... 
            
                    // Delete the subdirectory. The true indicates that if subdirectories 
                    // or files are in this directory, they are to be deleted as well.
                    dis.Delete(true);
            
                    // Delete the directory.
                    di.Delete(true);
                }
             } 
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Refresh">
            <summary>
            Refreshes the state of the object.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Device is not ready.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.GetDirectories">
            <summary>
            Return the subdirectories of the current instance.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not exist.</exception>     
            <returns>Array of DirectoryInfo instances to the subdirectories of the current directory.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.GetDirectories(System.String)">
            <summary>
            Return the subdirectories of the current instance that match the specified search pattern.
            </summary>
            <param name="searchPattern">String to match the subdirectories against.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not exist.</exception> 
            <exception cref="T:System.ArgumentException">The search pattern contains invalid characters.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have permissions to the specified directory.</exception>  
            <returns>Array of DirectoryInfo instances to the subdirectories of the current directory that match the specified pattern.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.GetFiles">
            <summary>
            Return the files of the current directory.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not exist.</exception>     
            <returns>Array of FileInfo instances to the files of the current directory.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.GetFiles(System.String)">
            <summary>
            Return the files of the current directory that match the specified search pattern.
            </summary>
            <param name="searchPattern">String to match the files against.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The current directory does not exist.</exception> 
            <exception cref="T:System.ArgumentException">The search pattern contains invalid characters.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to this directory.</exception>  
            <returns>Array of FileInfo instances to the files of the current directory that match the specified pattern.</returns>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.MoveTo(System.String)">
            <summary>
            Moves the specified directory and contents to the destination location.
            </summary>        
            <param name="destDirName">Destination to move the source folder to.</param>             
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The destination directory is invalid.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The destination or current directory do not exist.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the require access to the destination or current directory.</exception>
            <exception cref="T:System.ArgumentException">The destination directory contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The destination directory is null.</exception>                   
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.ConvertSYSDirInfoToCDirInfo(System.IO.DirectoryInfo[])">
            <summary>
            Function to convert CrestronIO.DirectoryInfo[] to DirectoryInfo[]
            </summary>
            <param name="dirInfoArray">The CrestronIO.DirectoryInfo to convert</param>
            <returns>DirectoryInfo[]</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryInfo.ConvertSYSFileInfoToCFileInfo(System.IO.FileInfo[])">
            <summary>
            Function to convert CrestronIO.FileInfo[] to FileInfo[]
            </summary>
            <param name="fileInfoArray">The CrestronIO.FileInfo to convert</param>
            <returns>FileInfo[]</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Exists">
            <summary>
            Determines if the current directory exists on the system.
            </summary>                        
            <returns>True if the current directory exists.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Name">
            <summary>
            Return the name of the current directory.
            </summary>                        
            <returns>A string populated with the name of the current directory.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Attributes">
            <summary>
            Gets or sets the FileAttributes of the current object.
            </summary>
            <returns>FileAttributes of the current object.</returns> 
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The specified file does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified path is invalid.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <exception cref="T:System.ArgumentException">The caller attempted to set an invalid file attribute.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.CreationTime">
            <summary>
            Gets the creation time of the current object.
            </summary>
            <returns>The creation data and time of the current object.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified path is invalid.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Extension">
            <summary>
            Gets the string representing the extension part of the file.
            </summary>
            <returns>A string contains the extension</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <returns>The time that the current file or directory was last accessed.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <Returns>The time the current file was last written.</Returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT of later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.FullName">
            <summary>
            Return the full path of the Directory
            </summary>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permission.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Parent">
            <summary>
            Get the instance of the Parent Directory.
            </summary>                                                                   
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to access the parent.</exception>
            <returns>A DirectoryInfo instance to the Parent directory. Null, if there is no parent.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.DirectoryInfo.Root">
            <summary>
            Get the instance of the root directory.
            </summary>                                               
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to access the root directory.</exception>
            <returns>A DirectoryInfo instance to the root directory.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileInfo">
            <summary>
            Provides an instance for the creation, copying, deletion, moving, and
            opening of files.        
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.#ctor(System.String)">
            <summary>
            Initialize the FileInfo class with the specified file name.
            </summary>
            <param name="fileName">Full path file name.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The directory specified is invalid.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The path is greater than 248 characters.</exception>            
            <exception cref="T:System.UnauthorizedAccessException">The user does not have access to the specified directory.</exception>
            <exception cref="T:System.ArgumentException">The path specified contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The path is null.</exception>
            <exception cref="T:System.Security.SecurityException">Access denied to this file.</exception>
            <exception cref="T:System.NotSupportedException">The system does not support access to this file type.</exception>        
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.Delete">
            <summary>
            Delete the file.
            </summary>                                 
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Permissions needs are not held by the user.</exception>            
            <exception cref="T:System.Security.SecurityException">Access denied.</exception>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.Refresh">
            <summary>
            Refreshes the state of the object.
            </summary>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Device is not ready.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.AppendText">
             <summary>
              Creates a <see cref="T:Crestron.SimplSharp.CrestronIO.StreamWriter"></see> that appends text to the file represented 
              by this instance of the <see cref="T:Crestron.SimplSharp.CrestronIO.FileInfo"/>.
             </summary>
             <returns>A new <see cref="T:Crestron.SimplSharp.CrestronIO.StreamWriter"></see>.</returns>
             <example>
             using Crestron.SimplSharp;
             using Crestron.SimplSharp.CrestronIO;;
            class Test
            {
            
                public static void Main()
                {
                    FileInfo fi = new FileInfo(@"\user\MyTest.txt");
            
                    // This text is added only once to the file. 
                    if (!fi.Exists)
                    {
                        //Create a file to write to. 
                        using (StreamWriter sw = fi.CreateText())
                        {
                            sw.WriteLine("Hello");
                            sw.WriteLine("And");
                            sw.WriteLine("Welcome");
                        }
                    }
            
                    // This text will always be added, making the file longer over time 
                    // if it is not deleted. 
                    using (StreamWriter sw = fi.AppendText())
                    {
                        sw.WriteLine("This");
                        sw.WriteLine("is Extra");
                        sw.WriteLine("Text");
                    }
                }
            }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.CopyTo(System.String)">
            <summary>
            Copies the specified file to a new file location.
            </summary>
            <param name="destFileName">Destination to copy the file to.</param>             
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory passed.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The destination or source directory do not exist.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempt to copy a file to a different drive.</exception>
            <exception cref="T:System.ArgumentException">The argument contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception> 
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns>A FileInfo instance of the newly created file.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.CopyTo(System.String,System.Boolean)">
            <summary>
            Copies the specified file to a new file location with the option to overwrite.
            </summary>
            <param name="destFileName">Destination to copy the file to.</param>  
            <param name="overwrite">True to overwrite an existing file.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory passed.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The destination or source directory do not exist.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempt to copy a file to a different drive.</exception>
            <exception cref="T:System.ArgumentException">The argument contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">An argument is null.</exception> 
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns>A FileInfo instance of the newly created file.</returns>           
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.Create">
             <summary>
             Creates a file.
             </summary>
             <returns>A new file.</returns>
             <example>
             using Crestron.SimplSharp;
             using Crestron.SimplSharp.CrestronIO;;
            
             class Test 
             {	
                public static void Main() 
                {
                    string path = @"c:\MyTest.txt";
                    FileInfo fi = new FileInfo(path);
            
                    // Delete the file if it exists. 
                    if (fi.Exists) 
                    {
                        fi.Delete();
                    }
            
                    //Create the file. 
                    using (FileStream fs = fi.Create()) 
                    {
                        Byte[] info = 
                            new UTF8Encoding(true).GetBytes("This is some text for the file.");
            
                        //Add some information to the file.
                        fs.Write(info, 0, info.Length);
                    }
                }
             }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.CreateText">
             <summary>
              Creates a <see cref="T:Crestron.SimplSharp.CrestronIO.StreamWriter"></see> that writes a new text file.
             </summary>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
             <exception cref="T:System.UnauthorizedAccessException">Attempt to copy a file to a different drive.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
             <returns>A new <see cref="T:Crestron.SimplSharp.CrestronIO.StreamWriter"></see>.</returns>
             <example>
             using Crestron.SimplSharp;
             using Crestron.SimplSharp.CrestronIO;;
            
             class Test 
             {	
                public static void Main() 
                {
                    string path = @"c:\MyTest.txt";
                    FileInfo fi = new FileInfo(path);
            
                    // Delete the file if it exists. 
                    if (fi.Exists) 
                    {
                        fi.Delete();
                    }
            
                    //Create the file. 
                    using (FileStream fs = fi.CreateText()) 
                    {
                        Byte[] info = 
                            new UTF8Encoding(true).GetBytes("This is some text for the file.");
            
                        //Add some information to the file.
                        fs.Write(info, 0, info.Length);
                    }
                }
             }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.MoveTo(System.String)">
            <summary>
            Moves the specified file to the destination with possibly a new file name.
            </summary>            
            <param name="destFileName">Destination to move the source file to.</param>             
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory passed.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The destination or source directory do not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The source file does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File system error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempt to copy a file to a different drive.</exception>
            <exception cref="T:System.ArgumentException">The argument contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception> 
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.Open(Crestron.SimplSharp.CrestronIO.FileMode)">
             <summary>
             Opens a file in the specified mode.
             </summary>
             <param name="mode">Specified mode to open the file. (Open, Append, etc.)</param>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
             <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
             <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
             <returns>A file opened in the specified mode, with read/write access and unshared.</returns>
             <example>
             using Crestron.SimplSharp;
             using Crestron.SimplSharp.CrestronIO;;
            
             class Test
             {
            
                public static void Main()
                {
                    string path = @"\User\MyTest.txt";
                    FileInfo fi = new FileInfo(path);
            
                    // Delete the file if it exists. 
                    if (!fi.Exists)
                    {
                        //Create the file. 
                        using (FileStream fs = fi.Create())
                        {
                            Byte[] info = new UTF8Encoding(true).GetBytes("This is some text in the file.");
                            //Add some information to the file.
                            fs.Write(info, 0, info.Length);
                        }
                    }
            
                    //Open the stream and read it back. 
                    using (FileStream fs = fi.Open(FileMode.Open))
                    {
                        byte[] b = new byte[1024];
                        UTF8Encoding temp = new UTF8Encoding(true);
                        while (fs.Read(b, 0, b.Length) &gt; 0)
                        {
                            ......
                        }
                    }
                }
             }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.Open(Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess)">
            <summary>
            Opens the current file with the specified mode and access.
            </summary>
            <param name="mode">Specified mode to open the file. (Open, Append, etc.)</param>
            <param name="access">Constant that specifies the file access allowed by the stream. (Read, Write, etc.)</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
            <returns>FileStream instance of the current file.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.Open(Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess,Crestron.SimplSharp.CrestronIO.FileShare)">
             <summary>
             Opens a file in the specified mode with read, write, or read/write access
             and the specified sharing option.
             </summary>
             <param name="mode">Specified mode to open the file. (Open, Append, etc.)</param>
             <param name="access">Constant that specifies the file access allowed by the stream. (Read, Write, etc.)</param>
             <param name="share">
             A FileShare constant specifying the type of access other FileStream
             objects have to this file.
            </param>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
             <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
             <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
             <returns>FileStream instance of the current file.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.OpenRead">
            <summary>
            Opens the current file with Read only access.
            </summary>          
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
            <returns>FileStream instance of the current file with read only access.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.OpenText">
             <summary>
              Creates a <see cref="T:Crestron.SimplSharp.CrestronIO.StreamReader"></see> with UTF8 encoding that reads from an existing
              text file.
             </summary>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
             <exception cref="T:System.UnauthorizedAccessException">Attempt to copy a file to a different drive.</exception>
             <returns>A new <see cref="T:Crestron.SimplSharp.CrestronIO.StreamReader"></see> with UTF8 encoding.</returns>
             <example>
             using Crestron.SimplSharp;
             using Crestron.SimplSharp.CrestronIO;;
            
             class Test
             {
                public static void Main()
                {
                    string path = @"\User\MyTest.txt";
            
                    FileInfo fi = new FileInfo(path);
            
                    // Check for existing file 
                    if (!fi.Exists)
                    {
                        // Create the file. 
                        using (FileStream fs = fi.Create())
                        {
                            Byte[] info =
                                new UTF8Encoding(true).GetBytes("This is some text in the file.");
            
                            // Add some information to the file.
                            fs.Write(info, 0, info.Length);
                            fs.Close();
                        }
                    }
            
                    // Open the stream and read it back. 
                    using (StreamReader sr = fi.OpenText())
                    {
                        string s = "";
                        while ((s = sr.ReadLine()) != null)
                        {
                            Process .....
                        }
                    }
                }
             }
             </example>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileInfo.OpenWrite">
            <summary>
            Opens the current file with write only access.
            </summary>  
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument passed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Mode or FileAccess are invalid.</exception>
            <exception cref="T:System.NotSupportedException">The file is of a non-file system type.</exception>
            <returns>FileStream instance of the current file with write only access..</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.Exists">
            <summary>
            Determines if the file exists on the system.
            </summary>                        
            <returns>true if the specified file exists.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.Name">
            <summary>
            Return the name of file.
            </summary>                        
            <returns>A string populated with the name of the file.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.Attributes">
            <summary>
            Gets or sets the FileAttributes of the current object.
            </summary>
            <returns>FileAttributes of the current object.</returns> 
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The specified file does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified path is invalid.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <exception cref="T:System.ArgumentException">The caller attempted to set an invalid file attribute.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.CreationTime">
            <summary>
            Gets the creation time of the current object.
            </summary>
            <returns>The creation data and time of the current object.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified path is invalid.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.Extension">
            <summary>
            Gets the string representing the extension part of the file.
            </summary>
            <returns>A string contains the extension</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <returns>The time that the current file or directory was last accessed.</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <Returns>The time the current file was last written.</Returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Cannot initialize the data.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT of later.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.FullName">
            <summary>
            Return the full name of the file path
            </summary>
            <exception cref="T:System.Security.SecurityException">Access denied.</exception> 
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.Directory">
            <summary>
            Return the DirectoryInfo for the parent directory.
            </summary>                                 
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The parent directory does not exist.</exception>            
            <exception cref="T:System.Security.SecurityException">Access denied.</exception> 
            <returns>A DirectoryInfo instance of the parent directory.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.DirectoryName">
            <summary>
            Return the the directory's name.
            </summary>                                             
            <exception cref="T:System.Security.SecurityException">Access Denied.</exception> 
            <exception cref="T:System.ArgumentNullException">The specified directory is null.</exception>
            <returns>A string with the name of the parent directory.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.FileInfo.Length">
            <summary>
            Return the the length of the file, in bytes.
            </summary>                                 
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The current file does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>            
            <returns>A long representing the length of the current file in bytes.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.File">
            <summary>
            Provides an static methods for the creation, copying, deletion, and moving of files.       
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Open(System.String,Crestron.SimplSharp.CrestronIO.FileMode)">
             <summary>
                 Opens a CrestronIO.FileStream on the specified path with read/write access.
                 </summary>
             <param name="path">
                 The file to open.
            </param>
             <param name="mode">
                 A CrestronIO.FileMode value that specifies whether a file is created if one
                 does not exist, and determines whether the contents of existing files are
                 retained or overwritten.
            </param>
             <returns>
                 A CrestronIO.FileStream opened in the specified mode and path, with read/write
                 access and not shared.
                 </returns>
             <exception cref="T:System.ArgumentException">
                 path is a zero-length string, contains only white space, or contains one
                 or more invalid characters as defined by CrestronIO.Path.InvalidPathChars.-or-
                 access specified Read and mode specified Create, CreateNew, Truncate, or
                 Append.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, (for example, it is on an unmapped drive).
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurred while opening the file.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">
                 path specified a file that is read-only and access is not Read.-or- path
                 specified a directory.-or- The caller does not have the required permission.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 mode or access specified an invalid value.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file specified in path was not found.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path is in an invalid format.
                 </exception>
             <exception cref="T:System.NotSupportedException">
                 path is in an invalid format.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Open(System.String,Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess)">
             <summary>
                 Opens a CrestronIO.FileStream on the specified path, with the specified mode
                 and access.
             </summary>
             <param name="path">
                 The file to open.
            </param>
             <param name="mode">
                 A CrestronIO.FileMode value that specifies whether a file is created if one
                 does not exist, and determines whether the contents of existing files are
                 retained or overwritten.
            </param>
             <param name="access">
                 A CrestronIO.FileAccess value that specifies the operations that can be performed
                 on the file.
            </param>
             <returns>
                 An unshared CrestronIO.FileStream that provides access to the specified file,
                 with the specified mode and access.
            </returns>
             <exception cref="T:System.ArgumentException">
                 path is a zero-length string, contains only white space, or contains one
                 or more invalid characters as defined by CrestronIO.Path.InvalidPathChars.-or-
                 access specified Read and mode specified Create, CreateNew, Truncate, or
                 Append.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, (for example, it is on an unmapped drive).
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurred while opening the file.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">
                 path specified a file that is read-only and access is not Read.-or- path
                 specified a directory.-or- The caller does not have the required permission.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 mode or access specified an invalid value.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file specified in path was not found.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path is in an invalid format.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Open(System.String,Crestron.SimplSharp.CrestronIO.FileMode,Crestron.SimplSharp.CrestronIO.FileAccess,Crestron.SimplSharp.CrestronIO.FileShare)">
             <summary>
                 Opens a CrestronIO.FileStream on the specified path, having the specified
                 mode with read, write, or read/write access and the specified sharing option.
             </summary>
             <param name="path">
                 The file to open.
            </param>
             <param name="mode">
                 A CrestronIO.FileMode value that specifies whether a file is created if one
                 does not exist, and determines whether the contents of existing files are
                 retained or overwritten.
            </param>
             <param name="access">
                 A CrestronIO.FileAccess value that specifies the operations that can be performed
                 on the file.
            </param>
             <param name="share">
                 A CrestronIO.FileShare value specifying the type of access other threads have
                 to the file.
            </param>
             <returns>
                 A CrestronIO.FileStream on the specified path, having the specified mode with
                 read, write, or read/write access and the specified sharing option.
            </returns>
             <exception cref="T:System.ArgumentException">
                 path is a zero-length string, contains only white space, or contains one
                 or more invalid characters as defined by CrestronIO.Path.InvalidPathChars.-or-
                 access specified Read and mode specified Create, CreateNew, Truncate, or
                 Append.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, (for example, it is on an unmapped drive).
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurred while opening the file.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">
                 path specified a file that is read-only and access is not Read.-or- path
                 specified a directory.-or- The caller does not have the required permission.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 mode, access, or share specified an invalid value.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file specified in path was not found.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path is in an invalid format.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.OpenRead(System.String)">
            <summary>
            Opens an existing file for reading.
            </summary>
            <param name="fileToRead">The file to be opened for reading.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns>A read-only stream on the specified path.</returns>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.OpenWrite(System.String)">
            <summary>
            Opens an existing file for writing.
            </summary>
            <param name="fileToWrite">The file to be opened for writing.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns>An FileStream object on the specified path.</returns>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.ReadToEnd(System.String,System.Text.Encoding)">
            <summary>
            Function to Read an entire file and return it as a string
            </summary>
            <param name="fileToRead">File to open for reading.</param>
            <param name="stringEncoding">Encoding used to convert the file to a string.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns>The contents of the file according to the Encoding passed in.</returns>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Exists(System.String)">
            <summary>
            Determines if the specified file exists on the system.
            </summary>
            <param name="fileName">Directory to check.</param>
            <returns>true if the specified file exists, otherwise false. This method also returns false if
             path is null, an invalid path, or a zero-length string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Delete(System.String)">
            <summary>
            Delete the specified file.
            </summary>
            <param name="path">File to delete.</param>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Copy(System.String,System.String)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">Source file to copy.</param>    
            <param name="destFileName">The name of the destination file.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified for source or destination.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">destFileName exists or a file system error has occurred.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory for source or destination does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path for source or destination is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The source file does not exist.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Source or destination access is not provided to the user.</exception>
            <exception cref="T:System.ArgumentException">sourceFileName or destFileName contain invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">sourceFileName or destFileName is null.</exception>            
            <exception cref="T:System.NotSupportedException">sourceFileName or destFileName is of invalid format.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Copy(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file where overwrite can be specified.
            </summary>
            <param name="sourceFileName">Source file to copy.</param>    
            <param name="destFileName">The name of the destination file.</param>
            <param name="overwrite">'true' if the destination file can be overwritten; otherwise, 'false'.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified for source or destination.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">destFileName is read-only, or destFileName exists and overwrite is false, or a file system error has occurred.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory for source or destination does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path for source or destination is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The source file does not exist.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Source or destination access is not provided to the user.</exception>
            <exception cref="T:System.ArgumentException">sourceFileName or destFileName contain invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">sourceFileName or destFileName is null.</exception>            
            <exception cref="T:System.NotSupportedException">sourceFileName or destFileName is of invalid format.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.CreateText(System.String)">
            <summary>
            Creates or opens a file for writing UTF-8 encoded text.
            </summary>
            <param name="path">The file to be opened for writing.</param>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns> StreamWriter that writes to the specified file using UTF-8 encoding.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.AppendText(System.String)">
            <summary>
            Creates a StreamWriter that appends UTF-8 encoded text to an existing file.
            </summary>
            <param name="path">The path to the file to append to.</param>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns> A StreamWriter that appends UTF-8 encoded text to an existing file.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.OpenText(System.String)">
            <summary>
            Opens an existing UTF-8 encoded text file for reading.
            </summary>
            <param name="path">The file to be opened for reading.</param>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns> StreamReader on the specified path</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Create(System.String)">
            <summary>
            Creates or overwrites a file in the specified path.
            </summary>
            <param name="path">The path and name of the file to create.</param>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns> FileStream that provides read/write access to the file specified in path.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.Move(System.String,System.String)">
            <summary>
            Moves the specified file to the destination location.
            </summary>
            <param name="sourceFileName">Source directory to move.</param>
            <param name="newFileName">Destination to move the source file to.</param>             
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">One of the specified directories is invalid.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">A Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">A specified file does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is longer than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Higher Permissions needed.</exception>
            <exception cref="T:System.ArgumentException">Specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">Specified path is null.</exception> 
            <exception cref="T:System.NotSupportedException">System does not support this operation.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.GetCreationTime(System.String)">
            <summary>
            Returns the data and time the specified file was created.
            </summary>
            <param name="path">File to query.</param>                
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid path specified.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>            
            <exception cref="T:System.UnauthorizedAccessException">User does not have the require permissions to this file.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified path is null.</exception>
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns>A DateTime object populated with the creation time of the specified path.</returns>  
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.GetLastAccessTime(System.String)">
            <summary>
            Returns the data and time the specified file was last accessed.
            </summary>
            <param name="path">File to query.</param>                
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid path specified.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>            
            <exception cref="T:System.UnauthorizedAccessException">User does not have the require permissions to this file.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified path is null.</exception>
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns>A DateTime object populated with the last access time of the specified path.</returns>  
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.File.GetLastWriteTime(System.String)">
             <summary>
            Returns the data and time the specified file was last written to.
             </summary>
             <param name="path">Path to delete.</param>            
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid path specified.</exception>                        
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>            
             <exception cref="T:System.UnauthorizedAccessException">User does not have the require permissions to this file.</exception>
             <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
             <exception cref="T:System.ArgumentNullException">The specified path is null.</exception>
             <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
             <returns>A DateTime object populated with the last write time of the specified path.</returns> 
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Directory">
            <summary>
            Provides a static methods for deleting, moving, and enumerating through directories
            and subdirectories.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.CreateDirectory(System.String)">
            <summary>
            Create the specified empty directory.
            </summary>
            <param name="path">Path to create.</param>   
            <returns> Directory Info for the new directory</returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>          
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.Create(System.String)">
            <summary>
            Create the specified empty directory.
            </summary>
            <param name="path">Path to create.</param>   
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>          
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.Delete(System.String)">
            <summary>
            Delete the specified empty directory.
            </summary>
            <param name="path">Path to delete.</param>   
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>            
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>                        
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.Delete(System.String,System.Boolean)">
            <summary>
            Delete the specified directory and any subdirectories, if indicated.
            </summary>
            <param name="path">Path to delete.</param>
            <param name="recursive">Specify True to delete subdirectories.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System Error.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is greater than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Attempting to delete a file the user does not have permissions for.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>                        
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.Exists(System.String)">
            <summary>
            Determines if the specified path exists on the system.
            </summary>
            <param name="path">Directory to check.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory specified.</exception>  
            <returns>true if the specified path exists.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetCreationTime(System.String)">
            <summary>
            Returns the data and time the specified directory was created.
            </summary>
            <param name="path">Directory to query.</param>                
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid path specified.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>            
            <exception cref="T:System.UnauthorizedAccessException">User does not have the require permissions to this directory.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified path is null.</exception>             
            <returns>A DateTime object populated with the creation time of the specified path.</returns>  
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetLastAccessTime(System.String)">
            <summary>
            Returns the data and time the specified directory was last accessed.
            </summary>
            <param name="path">Directory to query.</param>                
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid path specified.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>            
            <exception cref="T:System.UnauthorizedAccessException">User does not have the require permissions to this directory.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified path is null.</exception>             
            <exception cref="T:System.NotSupportedException">The system does not support this operation.</exception>
            <returns>A DateTime object populated with the last access time of the specified path.</returns>  
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetLastWriteTime(System.String)">
            <summary>
            Returns the data and time the specified directory was last written to.
            </summary>
            <param name="path">Directory to query.</param>                
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid path specified.</exception>                        
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is greater than 248 characters.</exception>            
            <exception cref="T:System.UnauthorizedAccessException">User does not have the require permissions to this directory.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified path is null.</exception>                                             
            <returns>A DateTime object populated with the last write time of the specified path.</returns>     
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.Move(System.String,System.String)">
            <summary>
            Moves the specified directory and contents to the destination location.
            </summary>
            <param name="sourceDirName">Source directory to move.</param>
            <param name="destDirName">Destination to move the source folder to.</param>             
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">One of the specified directories is invalid.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">A Specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">A specified directory does not exist.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified path is longer than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Higher Permissions needed.</exception>
            <exception cref="T:System.ArgumentException">Specified path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">Specified path is null.</exception>                                               
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetDirectories(System.String)">
            <summary>
            Returns an array populated with the names of directories in the specified directory.
            </summary>
            <param name="path">Directory to search.</param>                
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified directory is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the require permissions.</exception>
            <exception cref="T:System.ArgumentException">The specified argument contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified argument is null.</exception>                                   
            <returns>A string array populated with the names of files in the specified directory.</returns>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetDirectories(System.String,System.String)">
            <summary>
            Returns an array populated with the names of directories in the specified directory matched against the search pattern.
            </summary>
            <param name="path">Directory to search.</param>    
            <param name="searchPattern">Pattern to match the directories against.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified directory is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the require permissions.</exception>
            <exception cref="T:System.ArgumentException">The specified argument contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified argument is null.</exception>                                                       
            <returns>A string array populated with the names of directories in the specified directory that match the search pattern.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetDirectoryRoot(System.String)">
            <summary>
            Returns the root information of the specified directory.
            </summary>
            <param name="path">Directory to search.</param>                                      
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is longer than 248 characters.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Higher permissions required.</exception>
            <exception cref="T:System.ArgumentException">The path contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The path is null.</exception>                                   
            <returns>A string with the root information of the specified directory.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetFiles(System.String)">
            <summary>
            Returns an array populated with the names of files in the specified directory.
            </summary>
            <param name="path">Directory to search.</param>  
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified directory is greater than 248 characters.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the require permissions.</exception>
            <exception cref="T:System.ArgumentException">The specified argument contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified argument is null.</exception>                                                                            
            <returns>A string array populated with the names of files in the specified directory.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetFiles(System.String,System.String)">
            <summary>
            Returns an array populated with the names of files in the specified directory that match the search pattern.
            </summary>
            <param name="path">Directory to search.</param>  
            <param name="searchPattern">Search pattern to match against files in the supplied directory.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid Directory location.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The specified directory does not exist.</exception>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The specified directory is greater than 248 characters.</exception>            
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the require permissions.</exception>
            <exception cref="T:System.ArgumentException">The specified argument contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">The specified argument is null.</exception>                            
            <returns>A string array populated with the names of files in the specified directory that match the search pattern.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetApplicationDirectory">
            <summary>
            Return the working directory of the application.            
            </summary>           
            <returns>The path of the current directory as a string. "\\SIMPL\\AppXX" or "/SIMPL/AppXX" based on the platform.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetApplicationRootDirectory">
            <summary>
            Returns the application's 'root' directory. This is where NVRAM and HTML folders can be found. No trailing directory separator at the end.
            </summary>           
            <returns>The path of this applications 'root' as a string. For appliances, this would be ""; for servers, this would be the "{HOME}/RunningPrograms/RoomName".
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetFileSystemEntries(System.String)">
            <summary>
                 Returns the names of all files and subdirectories in the specified directory.
            </summary>
             <param name="path">
                 The directory for which file and subdirectory names are returned.
            </param>
            <returns>
                 A String array containing the names of file system entries in the specified
                 directory.
            </returns>
             <exception cref="T:System.UnauthorizedAccessException">
                 The caller does not have the required permission.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is a zero-length string, contains only white space, or contains one
                 or more invalid characters as defined by System.IO.Path.InvalidPathChars.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters and file names must be less than 260 characters.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path is a file name.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid (for example, it is on an unmapped drive).
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Directory.GetFileSystemEntries(System.String,System.String)">
            <summary>
                 Returns an array of file system entries matching the specified search criteria.
            </summary>
             <param name="path">
                 The path to be searched.
            </param>
             <param name="searchPattern">
                 The search string to match against the names of files in path. The searchPattern
                 parameter cannot end in two periods ("..") or contain two periods ("..")
                 followed by System.IO.Path.DirectorySeparatorChar or System.IO.Path.AltDirectorySeparatorChar,
                 nor can it contain any of the characters in System.IO.Path.InvalidPathChars.
            </param>
            <returns>
                 A String array of file system entries matching the search criteria.
            </returns>
             <exception cref="T:System.UnauthorizedAccessException">
                 The caller does not have the required permission.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is a zero-length string, contains only white space, or contains one
                 or more invalid characters as defined by System.IO.Path.InvalidPathChars.-or-
                 searchPattern does not contain a valid pattern.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path or searchPattern is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters and file names must be less than 260 characters.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path is a file name.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid (for example, it is on an unmapped drive).
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.Path">
            <summary>
            Static methods to perform operations on paths.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Path.AltDirectorySeparatorChar">
            <summary>
             Provides a platform-specific alternate character used to separate directory
             levels in a path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Path.DirectorySeparatorChar">
            <summary>
            Provides a platform-specific character used to separate directory levels in a 
            path string that reflects a hierarchical file system organization.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Path.PathSeparator">
            <summary>
            A platform-specific separator character used to separate path strings in environment variables.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.Path.VolumeSeparatorChar">
            <summary>
            Provides a platform-specific volume separator character.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.ChangeExtention(System.String,System.String)">
            <summary>
            Changes the extension of the specified path string.
            </summary>
            <param name="path">Path string to modify. This string cannot contain any of the characters returned from Crestron.SimplSharp.CrestronIO.Path.GetInvalidPathChars().</param>
            <param name="extension">The new extension (with or without a leading period). Specify null to remove an existing extension from path.</param>
            <returns>A string containing the modified path information.</returns>
            <exception cref="T:System.ArgumentException">Path string contains one or more of the invalid characters defined in Crestron.SimplSharp.CrestronIO.Path.GetInvalidPathChars().</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.ChangeExtension(System.String,System.String)">
            <summary>
            Changes the extension of the specified path string.
            </summary>
            <param name="path">Path string to modify. This string cannot contain any of the characters returned from Crestron.SimplSharp.CrestronIO.Path.GetInvalidPathChars().</param>
            <param name="extension">The new extension (with or without a leading period). Specify null to remove an existing extension from path.</param>
            <returns>A string containing the modified path information.</returns>
            <exception cref="T:System.ArgumentException">Path string contains one or more of the invalid characters defined in Crestron.SimplSharp.CrestronIO.Path.GetInvalidPathChars().</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.Combine(System.String,System.String)">
            <summary>
            Combines two path strings.
            </summary>
            <param name="path1">First path.</param>
            <param name="path2">Second path.</param>
            <returns>A string containing the combined paths. If one of the specified paths is a zero-length string, this method returns the other path. 
            If path2 contains an absolute path, this method returns path2.</returns>
            <exception cref="T:System.ArgumentException">Path1 or path2 contain one or more of the invalid characters defined in Crestron.SimplSharp.CrestronIO.Path.GetInvalidPathChars().</exception>
            <exception cref="T:System.ArgumentNullException">Path1 or path2 is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetInvalidPathChars">
            <summary>
            Gets an array that contains the characters not allowed in path names.
            </summary>
            <returns>An array containing the characters that are not allowed in path names.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.HasExtension(System.String)">
            <summary>
            Determines whether a path contains a file name extension.
            </summary>
            <param name="path">Specified path to search for an extension.</param>
            <returns>true if the characters that follow the last directory separator (\\ or /) or volume separator (:) 
            in the path include a period (.) followed by one or more characters; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentException">path contains one or more of the invalid characters defined in Crestron.SimplSharp.CrestronIO.Path.GetInvalidPathChars().</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetFreeSpace(System.String)">
            <summary>
            Function to return the number of bytes available on the drive of the specified path.
            </summary>
            <param name="path">Path to check free space.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid path specified.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is too long.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>     
            <returns>Long integer containing the number of bytes available.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetExtention(System.String)">
            <summary>
            Returns the extension of the specified path.
            </summary>
            <param name="path">Path from which to get the extension from.</param>            
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>            
            <returns>String containing the extension (including '.'), null if the path is null, and Empty string if the
            path does not contain an extension.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetExtension(System.String)">
            <summary>
            Returns the extension of the specified path.
            </summary>
            <param name="path">Path from which to get the extension from.</param>            
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>            
            <returns>String containing the extension (including '.'), null if the path is null, and Empty string if the
            path does not contain an extension.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetFileNameWithExtension(System.String)">
            <summary>
            Returns the file name and extension of the specified path.
            </summary>
            <param name="path">Path from which to get the file name from.</param>            
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>                
            <returns>String containing the file name with extension (ex. "test.txt"), null if the path is null, and Empty string if the
            path does not contain file name at the end.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetFileName(System.String)">
            <summary>
            Returns the file name and extension of the specified path.
            </summary>
            <param name="path">Path from which to get the file name from.</param>            
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>                
            <returns>String containing the file name with extension (ex. "test.txt"), null if the path is null, and Empty string if the
            path does not contain file name at the end. Note: This method is identical to the GetFileNameWithExtension method.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetFileNameWithoutExtension(System.String)">
            <summary>
            Returns the file name without the extension of the specified path.
            </summary>
            <param name="path">Path from which to get the file name from.</param>            
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>     
            <returns>String containing the file name with extension (ex. "test")</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.GetDirectoryName(System.String)">
            <summary>
            Returns the directory information from the specified path string.
            </summary>
            <param name="path">Path from which to get the directory information from.</param>            
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Specified path is too long.</exception>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>     
            <returns>String containing the directory information as a string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.Path.IsPathRooted(System.String)">
            <summary>
            Gets a value indicating whether the specified path string contains absolute or relative path information.
            <remarks> Note, absolute paths are expected for operations like opening or creating a file in the File class.</remarks>
            </summary>
            <param name="path">The path to test.</param>
            <returns>true if path contains an absolute path; otherwise, false.</returns>
            <exception cref="T:System.ArgumentException">The specified path contains invalid characters.</exception>   
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.IOException">
            <summary>
            Exception used when a File System I/O error occurs. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.IOException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.IOException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.IOException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
            <summary>
            Exception used when a directory is not present on the system. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
            <summary>
            Exception used when a File Sis not present on the system. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileNotFoundException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileNotFoundException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.FileNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">
            <summary>
            Exception used when the end of a stream is reached. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.EndOfStreamException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.EndOfStreamException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.EndOfStreamException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
            <summary>
            Exception used when the specified path is greater than 248 characters.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.PathTooLongException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.PathTooLongException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.PathTooLongException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">
            <summary>
            Exception used when a the specified directory is invalid. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.TextReader">
            <summary>
                Represents a reader that can read a sequential series of characters.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.TextReader.Null">
            <summary>
                 Provides a TextReader with no data to read from.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.#ctor">
            <summary>
                 Initializes a new instance of the CrestronIO.TextReader class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.Close">
            <summary>
                Closes the CrestronIO.TextReader and releases any system resources associated
                with the TextReader.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.Dispose">
            <summary>
                Releases all resources used by the CrestronIO.TextReader object.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by the CrestronIO.TextReader and optionally
                releases the managed resources.
                </summary>
            <param name="disposing">
                true to release both managed and unmanaged resources; false to release only
                unmanaged resources.
                </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.Peek">
             <summary>
                 Reads the next character without changing the state of the reader or the
                 character source. Returns the next available character without actually reading
                 it from the input stream.
                 </summary>
             <returns>
                 An integer representing the next character to be read, or -1 if no more characters
                 are available or the stream does not support seeking.
                 </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.Read">
             <summary>
                 Reads the next character from the input stream and advances the character
                 position by one character.
                 </summary>
             <returns>
                 The next character from the input stream, or -1 if no more characters are
                 available. The default implementation returns -1.
                 </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Reads a maximum of count characters from the current stream and writes the
                 data to buffer, beginning at index.
                 </summary>
             <param name="buffer">
                 When this method returns, contains the specified character array with the
                 values between index and (index + count - 1) replaced by the characters read
                 from the current source.
            </param>
             <param name="index">
                 The place in buffer at which to begin writing.
            </param>
             <param name="count">
                 The maximum number of characters to read. If the end of the stream is reached
                 before count of characters is read into buffer, the current method returns.
            </param>
             <returns>
                 The number of characters that have been read. The number will be less than
                 or equal to count, depending on whether the data is available within the
                 stream. This method returns zero if called when no more characters are left
                 to read.
                 </returns>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Reads a maximum of count characters from the current stream, and writes the
                 data to buffer, beginning at index.
            </summary>
             <param name="buffer">
                 When this method returns, this parameter contains the specified character
                 array with the values between index and (index + count -1) replaced by the
                 characters read from the current source.
            </param>
             <param name="index">
                 The place in buffer at which to begin writing.
            </param>
             <param name="count">
                 The maximum number of characters to read.
            </param>
             <returns>
                 The position of the underlying stream is advanced by the number of characters
                 that were read into buffer.The number of characters that have been read.
                 The number will be less than or equal to count, depending on whether all
                 input characters have been read.
                 </returns>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.ReadLine">
             <summary>
                 Reads a line of characters from the current stream and returns the data as
                 a string.
                 </summary>
             <returns>
                 The next line from the input stream, or null if all characters have been
                 read.
                 </returns>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.OutOfMemoryException">
                 There is insufficient memory to allocate a buffer for the returned string.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The number of characters in the next line is larger than System.Int32.MaxValue
                 </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.ReadToEnd">
             <summary>
                 Reads all characters from the current position to the end of the TextReader
                 and returns them as one string.
            </summary>
             <returns>
                 A string containing all characters from the current position to the end of
                the TextReader.
            </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:System.OutOfMemoryException">
                 There is insufficient memory to allocate a buffer for the returned string.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The number of characters in the next line is larger than System.Int32.MaxValue
                 </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextReader.Synchronized(Crestron.SimplSharp.CrestronIO.TextReader)">
             <summary>
                 Creates a thread-safe wrapper around the specified TextReader.
            </summary>
             <param name="reader">
                 The TextReader to synchronize.
            </param>
             <returns>
                 A thread-safe CrestronIO.TextReader.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 reader is null.
                 </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.SystemTextWriter">
            <summary>
            Allows a CrestronIO.TextWriter and its derivations to be passed into .Net apis
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.TextWriter">
            <summary>
                Represents a writer that can write a sequential series of characters. This
                class is abstract.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.TextWriter.Null">
            <summary>
                Provides a TextWriter with no backing store that can be written to, but not
                read from.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.TextWriter.CoreNewLine">
            <summary>
            Stores the new line characters used for this TextWriter.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.#ctor">
            <summary>
                Initializes a new instance of the CrestronIO.TextWriter class.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.#ctor(System.IFormatProvider)">
             <summary>
                 Initializes a new instance of the CrestronIO.TextWriter class with the specified
                 format provider.
                 </summary>
             <param name="formatProvider">
                 An System.IFormatProvider object that controls formatting.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Close">
            <summary>
                Closes the current writer and releases any system resources associated with
                the writer.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Dispose">
            <summary>
                Releases all resources used by the CrestronIO.TextWriter object.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by the CrestronIO.TextWriter and optionally
                releases the managed resources.
                </summary>
            <param name="disposing">
                true to release both managed and unmanaged resources; false to release only
                unmanaged resources.
                </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Flush">
            <summary>
                Clears all buffers for the current writer and causes any buffered data to
                be written to the underlying device.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Synchronized(Crestron.SimplSharp.CrestronIO.TextWriter)">
             <summary>
                 Creates a thread-safe wrapper around the specified TextWriter.
            </summary>
             <param name="writer">
                 The TextWriter to synchronize.
            </param>
             <returns>
                 A thread-safe wrapper.
                 </returns>
             <exception cref="T:System.ArgumentNullException">
                 writer is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Boolean)">
             <summary>
                 Writes the text representation of a Boolean value to the text stream.
                 </summary>
             <param name="value">
                 The Boolean to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Char)">
             <summary>
                 Writes a character to the text stream.
                 </summary>
             <param name="value">
                 The character to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Char[])">
             <summary>
                 Writes a character array to the text stream.
                 </summary>
             <param name="buffer">
                 The character array to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Decimal)">
             <summary>
                 Writes the text representation of a decimal value to the text stream.
                 </summary>
             <param name="value">
                 The decimal value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception> 
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Double)">
             <summary>
                 Writes the text representation of an 8-byte floating-point value to the text
                 stream.
                 </summary>
             <param name="value">
                 The 8-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Single)">
             <summary>
                 Writes the text representation of a 4-byte floating-point value to the text
                 stream.
                 </summary>
             <param name="value">
                 The 4-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Int32)">
             <summary>
                 Writes the text representation of a 4-byte signed integer to the text stream.
                 </summary>
             <param name="value">
                 The 4-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Int64)">
             <summary>
                 Writes the text representation of an 8-byte signed integer to the text stream.
                 </summary>
             <param name="value">
                 The 8-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Object)">
             <summary>
                 Writes the text representation of an object to the text stream by calling
                 ToString on that object.
                 </summary>
             <param name="value">
                 The object to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.String)">
             <summary>
                 Writes a string to the text stream.
                 </summary>
             <param name="value">
                 The string to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.UInt32)">
             <summary>
                 Writes the text representation of a 4-byte unsigned integer to the text stream.
            </summary>
             <param name="value">
                 The 4-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.UInt64)">
             <summary>
                 Writes the text representation of an 8-byte unsigned integer to the text
                 stream.
                 </summary>
             <param name="value">
                 The 8-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.String,System.Object)">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
                 </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 An object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.String,System.Object[])">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg">
                 The object array to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format or arg is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 arg. Length.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Writes a subarray of characters to the text stream.
            </summary>
             <param name="buffer">
                 The character array to write data from.
            </param>
             <param name="index">
                 Starting index in the buffer.
            </param>
             <param name="count">
                 The number of characters to write.
            </param>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer parameter is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.Write(System.String,System.Object,System.Object)">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
                 </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 An object to write into the formatted string.
            </param>
             <param name="arg1">
                 An object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine">
             <summary>
                 Writes a line terminator to the text stream.
                 </summary>
             <returns>
                 The default line terminator is a carriage return followed by a line feed
                 ("\r\n"), but this value can be changed using the CrestronIO.TextWriter.NewLine
                 property.
            </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Boolean)">
             <summary>
                 Writes the text representation of a Boolean followed by a line terminator
                 to the text stream.
                 </summary>
             <param name="value">
                 The Boolean to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Char)">
             <summary>
                 Writes a character followed by a line terminator to the text stream.
                 </summary>
             <param name="value">
                 The character to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Char[])">
             <summary>
                 Writes an array of characters followed by a line terminator to the text stream.
                 </summary>
             <param name="buffer">
                 The character array from which data is read.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Decimal)">
             <summary>
                 Writes the text representation of a decimal value followed by a line terminator
                 to the text stream.
                 </summary>
             <param name="value">
                 The decimal value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Double)">
             <summary>
                 Writes the text representation of a 8-byte floating-point value followed
                 by a line terminator to the text stream.
                 </summary>
             <param name="value">
                 The 8-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Single)">
             <summary>
                 Writes the text representation of a 4-byte floating-point value followed
                 by a line terminator to the text stream.
                 </summary>
             <param name="value">
                 The 4-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Int32)">
             <summary>
                 Writes the text representation of a 4-byte signed integer followed by a line
                 terminator to the text stream.
                 </summary>
             <param name="value">
                 The 4-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Int64)">
             <summary>
                 Writes the text representation of an 8-byte signed integer followed by a
                 line terminator to the text stream.
                 </summary>
             <param name="value">
                 The 8-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Object)">
             <summary>
                 Writes the text representation of an object by calling ToString on this object,
                 followed by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The object to write. If value is null, only the line termination characters
                 are written.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.String)">
             <summary>
                 Writes a string followed by a line terminator to the text stream.
                 </summary>
             <param name="value">
                The string to write. If value is null, only the line termination characters
                 are written.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.UInt32)">
             <summary>
                 Writes the text representation of a 4-byte unsigned integer followed by a
                 line terminator to the text stream.
                 </summary>
             <param name="value">
                 The 4-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.UInt64)">
             <summary>
                 Writes the text representation of an 8-byte unsigned integer followed by
                 a line terminator to the text stream.
                 </summary>
             <param name="value">
                 The 8-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.String,System.Object)">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
                 </summary>
             <param name="format">
                 The formatted string.
            </param>
             <param name="arg0">
                 The object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.String,System.Object[])">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
                 </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg">
                 The object array to write into format string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 A string or object is passed in as null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 arg.Length.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Writes a subarray of characters followed by a line terminator to the text
                 stream.
                 </summary>
             <param name="buffer">
                 The character array from which data is read.
            </param>
             <param name="index">
                 The index into buffer at which to begin reading.
            </param>
             <param name="count">
                 The maximum number of characters to write.
            </param>
             <returns>
                 Characters are read from buffer beginning at index and ending at index +
                 count.
                 </returns>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer parameter is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
                 </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 The object to write into the format string.
            </param>
             <param name="arg1">
                 The object to write into the format string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.TextWriter.Encoding">
             <summary>
                 When overridden in a derived class, returns the System.Text.Encoding in which
                 the output is written.
            </summary>
             <returns>
                 The Encoding in which the output is written.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.TextWriter.FormatProvider">
             <summary>
                 Gets an object that controls formatting.
            </summary>
             <returns>
                 An System.IFormatProvider object for a specific culture, or the formatting
                 of the current culture if no other culture is specified.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.TextWriter.NewLine">
             <summary>
                 Gets or sets the line terminator string used by the current TextWriter.
            </summary>
             <returns>
                 The line terminator string for the current TextWriter.
                 </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.StreamReader">
            <summary>
                Implements a CrestronIO.TextReader that reads characters from a byte stream
                in a particular encoding.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.StreamReader.Null">
            <summary>
                A CrestronIO.StreamReader object around an empty stream.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor">
             <summary>
                 Initializes a new NULL instance of the CrestronIO.StreamReader class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 stream.
            </summary>
             <param name="stream">
                 The stream to be read.
            </param>
             <exception cref="T:System.ArgumentException">
                 stream does not support reading.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 stream is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(System.String)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 file name.
            </summary>
             <param name="path">
                 The complete file path to be read.
            </param>
             <exception cref="T:System.ArgumentException">
                 path is an empty string ("").
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Boolean)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 stream, with the specified byte order mark detection option.
                 </summary>
             <param name="stream">
                 The stream to be read.
            </param>
             <param name="detectEncodingFromByteOrderMarks">
                 Indicates whether to look for byte order marks at the beginning of the file.
            </param>
             <exception cref="T:System.ArgumentException">
                 stream does not support reading.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 stream is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 stream, with the specified character encoding.
                 </summary>
             <param name="stream">
                 The stream to be read.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <exception cref="T:System.ArgumentException">
                 stream does not support reading.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 stream or encoding is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(System.String,System.Boolean)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 file name, with the specified byte order mark detection option.
                 </summary>
             <param name="path">
                 The complete file path to be read.
            </param>
             <param name="detectEncodingFromByteOrderMarks">
                 Indicates whether to look for byte order marks at the beginning of the file.
            </param>
             <exception cref="T:System.ArgumentException">
                 path is an empty string ("").
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(System.String,System.Text.Encoding)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 file name, with the specified character encoding.
                 </summary>
             <param name="path">
                 The complete file path to be read.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <exception cref="T:System.ArgumentException">
                 path is an empty string ("").
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path or encoding is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding,System.Boolean)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 stream, with the specified character encoding and byte order mark detection
                 option.
                 </summary>
             <param name="stream">
                 The stream to be read.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <param name="detectEncodingFromByteOrderMarks">
                 Indicates whether to look for byte order marks at the beginning of the file.
            </param>
             <exception cref="T:System.ArgumentException">
                 stream does not support reading.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 stream or encoding is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 file name, with the specified character encoding and byte order mark detection
                 option.
            </summary>
             <param name="path">
                 The complete file path to be read.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <param name="detectEncodingFromByteOrderMarks">
                 Indicates whether to look for byte order marks at the beginning of the file.
            </param>
             <exception cref="T:System.ArgumentException">
                 path is an empty string ("").
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path or encoding is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                or volume label.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 stream, with the specified character encoding, byte order mark detection
                 option, and buffer size.
            </summary>
             <param name="stream">
                 The stream to be read.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <param name="detectEncodingFromByteOrderMarks">
                 Indicates whether to look for byte order marks at the beginning of the file.
            </param>
             <param name="bufferSize">
                 The minimum buffer size.
            </param>
             <exception cref="T:System.ArgumentException">
                 The stream does not support reading.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 stream or encoding is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 bufferSize is less than or equal to zero.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamReader class for the specified
                 file name, with the specified character encoding, byte order mark detection
                 option, and buffer size.
            </summary>
             <param name="path">
                 The complete file path to be read.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <param name="detectEncodingFromByteOrderMarks">
                 Indicates whether to look for byte order marks at the beginning of the file.
            </param>
             <param name="bufferSize">
                 The minimum buffer size, in number of 16-bit characters.
            </param>
             <exception cref="T:System.ArgumentException">
                 path is an empty string ("").
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path or encoding is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The file cannot be found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 buffersize is less than or equal to zero.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.Finalize">
            <summary>
            Destructor for StreamReader.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.DiscardBufferedData">
            <summary>
                Allows a CrestronIO.StreamReader object to discard its current data.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.Dispose(System.Boolean)">
             <summary>
                 Closes the underlying stream, releases the unmanaged resources used by the
                 CrestronIO.StreamReader, and optionally releases the managed resources.
                 </summary>
             <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.Peek">
             <summary>
                 Returns the next available character but does not consume it.
            </summary>
             <returns>
                 An integer representing the next character to be read, or -1 if no more characters
                 are available or the stream does not support seeking.
            </returns>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.Read">
             <summary>
                 Reads the next character from the input stream and advances the character
                 position by one character.
            </summary>
             <returns>
                 The next character from the input stream represented as an System.Int32 object,
                 or -1 if no more characters are available.
            </returns>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.Read(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Reads a maximum of count characters from the current stream into buffer,
                 beginning at index.
            </summary>
             <param name="buffer">
                 When this method returns, contains the specified character array with the
                 values between index and (index + count - 1) replaced by the characters read
                 from the current source.
            </param>
             <param name="index">
                 The index of buffer at which to begin writing.
            </param>
             <param name="count">
                 The maximum number of characters to read.
            </param>
             <returns>
                 The number of characters that have been read, or 0 if at the end of the stream
                 and no data was read. The number will be less than or equal to the count
                 parameter, depending on whether the data is available within the stream.
            </returns>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs, such as the stream is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Reads a maximum of count characters from the current stream, and writes the
                 data to buffer, beginning at index.
            </summary>
             <param name="buffer">
                 When this method returns, this parameter contains the specified character
                 array with the values between index and (index + count -1) replaced by the
                 characters read from the current source.
            </param>
             <param name="index">
                 The place in buffer at which to begin writing.
            </param>
             <param name="count">
                 The maximum number of characters to read.
            </param>
             <returns>
                 The position of the underlying stream is advanced by the number of characters
                 that were read into buffer.The number of characters that have been read.
                 The number will be less than or equal to count, depending on whether all
                 input characters have been read.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.ReadLine">
             <summary>
                 Reads a line of characters from the current stream and returns the data as
                 a string.
            </summary>
             <returns>
                 The next line from the input stream, or null if the end of the input stream
                 is reached.
            </returns>
             <exception cref="T:System.OutOfMemoryException">
                 There is insufficient memory to allocate a buffer for the returned string.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamReader.ReadToEnd">
             <summary>
                 Reads the stream from the current position to the end of the stream.
            </summary>
             <returns>
                 The rest of the stream as a string, from the current position to the end.
                 If the current position is at the end of the stream, returns the empty string("").
            </returns>
             <exception cref="T:System.OutOfMemoryException">
                 There is insufficient memory to allocate a buffer for the returned string.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StreamReader.BaseStream">
             <summary>
                 Returns the underlying stream.
            </summary>
             <returns>
                 The underlying stream.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StreamReader.CurrentEncoding">
             <summary>
                 Gets the current character encoding that the current CrestronIO.StreamReader
                 object is using.
            </summary>
             <returns>
                 The current character encoding used by the current reader. The value can
                 be different after the first call to any Overload:CrestronIO.StreamReader.Read
                 method of CrestronIO.StreamReader, since encoding autodetection is not done
                 until the first call to a Overload:CrestronIO.StreamReader.Read method.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StreamReader.EndOfStream">
             <summary>
                 Gets a value that indicates whether the current stream position is at the
                 end of the stream.
            </summary>
             <returns>
                 true if the current stream position is at the end of the stream; otherwise
                 false.
            </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The underlying stream has been disposed.
            </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.StreamWriter">
            <summary>
                Implements a CrestronIO.TextWriter for writing characters to a stream in a
                particular encoding.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronIO.StreamWriter.Null">
            <summary>
                Provides a StreamWriter with no backing store that can be written to, but
                not read from.
                </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor">
             <summary>
                 Initializes a new NULL instance of the CrestronIO.StreamWriter class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamWriter class for the specified
                 stream, using UTF-8 encoding and the default buffer size.
            </summary>
             <param name="stream">
                 The stream to write to.
            </param>
             <exception cref="T:System.ArgumentException">
                 stream is not writable.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 stream is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor(System.String)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamWriter class for the specified
                 file on the specified path, using the default encoding and buffer size.
            </summary>
             <param name="path">
                 The complete file path to write to. path can be a file name.
            </param>
             <exception cref="T:System.UnauthorizedAccessException">
                 Access is denied.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is an empty string(""). -or-path contains the name of a system device
                 (com1, com2, and so on).
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label syntax.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamWriter class for the specified
                 stream, using the specified encoding and the default buffer size.
            </summary>
             <param name="stream">
                 The stream to write to.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 stream or encoding is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 stream is not writable.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor(System.String,System.Boolean)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamWriter class for the specified
                 file on the specified path, using the default encoding and buffer size. If
                 the file exists, it can be either overwritten or appended to. If the file
                 does not exist, this constructor creates a new file.
            </summary>
             <param name="path">
                 The complete file path to write to.
            </param>
             <param name="append">
                 Determines whether data is to be appended to the file. If the file exists
                 and append is false, the file is overwritten. If the file exists and append
                 is true, the data is appended to the file. Otherwise, a new file is created.
            </param>
             <exception cref="T:System.UnauthorizedAccessException">
                 Access is denied.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is empty. -or-path contains the name of a system device (com1, com2,
                 and so on).
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label syntax.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding,System.Int32)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamWriter class for the specified
                 stream, using the specified encoding and buffer size.
            </summary>
             <param name="stream">
                 The stream to write to.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <param name="bufferSize">
                 Sets the buffer size.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 stream or encoding is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 bufferSize is negative.
            </exception>
             <exception cref="T:System.ArgumentException">
                 stream is not writable.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamWriter class for the specified
                 file on the specified path, using the specified encoding and default buffer
                 size. If the file exists, it can be either overwritten or appended to. If
                 the file does not exist, this constructor creates a new file.
            </summary>
             <param name="path">
                 The complete file path to write to.
            </param>
             <param name="append">
                 Determines whether data is to be appended to the file. If the file exists
                 and append is false, the file is overwritten. If the file exists and append
                 is true, the data is appended to the file. Otherwise, a new file is created.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <exception cref="T:System.UnauthorizedAccessException">
                 Access is denied.
            </exception>
             <exception cref="T:System.ArgumentException">
                 path is empty. -or-path contains the name of a system device (com1, com2,
                 etc).
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label syntax.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
             <summary>
                 Initializes a new instance of the CrestronIO.StreamWriter class for the specified
                 file on the specified path, using the specified encoding and buffer size.
                 If the file exists, it can be either overwritten or appended to. If the file
                 does not exist, this constructor creates a new file.
            </summary>
             <param name="path">
                 The complete file path to write to.
            </param>
             <param name="append">
                 Determines whether data is to be appended to the file. If the file exists
                 and append is false, the file is overwritten. If the file exists and append
                 is true, the data is appended to the file. Otherwise, a new file is created.
            </param>
             <param name="encoding">
                 The character encoding to use.
            </param>
             <param name="bufferSize">
                 Sets the buffer size.
            </param>
             <exception cref="T:System.ArgumentException">
                 path is an empty string (""). -or-path contains the name of a system device
                 (com1, com2, etc).
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 path or encoding is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 bufferSize is negative.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 path includes an incorrect or invalid syntax for file name, directory name,
                 or volume label syntax.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">
                 Access is denied.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The specified path is invalid, such as being on an unmapped drive.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">
                 The specified path, file name, or both exceed the system-defined maximum
                 length. For example, on Windows-based platforms, paths must be less than
                 248 characters, and file names must be less than 260 characters.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Finalize">
            <summary>
            Destructor for StreamWriter.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Dispose(System.Boolean)">
             <summary>
                 Releases the unmanaged resources used by the CrestronIO.StreamWriter and optionally
                 releases the managed resources.
            </summary>
             <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Flush">
             <summary>
                 Clears all buffers for the current writer and causes any buffered data to
                 be written to the underlying stream.
            </summary>
             <exception cref="T:System.ObjectDisposedException">
                 The current writer is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error has occurred.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Boolean)">
             <summary>
                 Writes the text representation of a Boolean value to the text stream.
            </summary>
             <param name="value">
                 The Boolean to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Char)">
             <summary>
                 Writes a character to the text stream.
            </summary>
             <param name="value">
                 The character to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Char[])">
             <summary>
                 Writes a character array to the text stream.
            </summary>
             <param name="buffer">
                 The character array to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Decimal)">
             <summary>
                 Writes the text representation of a decimal value to the text stream.
            </summary>
             <param name="value">
                 The decimal value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Double)">
             <summary>
                 Writes the text representation of an 8-byte floating-point value to the text
                 stream.
            </summary>
             <param name="value">
                 The 8-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Single)">
             <summary>
                 Writes the text representation of a 4-byte floating-point value to the text
                 stream.
            </summary>
             <param name="value">
                 The 4-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Int32)">
             <summary>
                 Writes the text representation of a 4-byte signed integer to the text stream.
            </summary>
             <param name="value">
                 The 4-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Int64)">
             <summary>
                 Writes the text representation of an 8-byte signed integer to the text stream.
            </summary>
             <param name="value">
                 The 8-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Object)">
             <summary>
                 Writes the text representation of an object to the text stream by calling
                 ToString on that object.
            </summary>
             <param name="value">
                 The object to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.String)">
             <summary>
                 Writes a string to the text stream.
            </summary>
             <param name="value">
                 The string to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.UInt32)">
             <summary>
                 Writes the text representation of a 4-byte unsigned integer to the text stream.
            </summary>
             <param name="value">
                 The 4-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.UInt64)">
             <summary>
                 Writes the text representation of an 8-byte unsigned integer to the text
                 stream.
            </summary>
             <param name="value">
                 The 8-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.String,System.Object)">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 An object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.String,System.Object[])">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg">
                 The object array to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format or arg is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 arg. Length.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Writes a subarray of characters to the text stream.
            </summary>
             <param name="buffer">
                 The character array to write data from.
            </param>
             <param name="index">
                 Starting index in the buffer.
            </param>
             <param name="count">
                 The number of characters to write.
            </param>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer parameter is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.Write(System.String,System.Object,System.Object)">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 An object to write into the formatted string.
            </param>
             <param name="arg1">
                 An object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine">
             <summary>
                 Writes a line terminator to the text stream.
            </summary>
             <returns>
                 The default line terminator is a carriage return followed by a line feed
                 ("\r\n"), but this value can be changed using the CrestronIO.TextWriter.NewLine
                 property.
            </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Boolean)">
             <summary>
                 Writes the text representation of a Boolean followed by a line terminator
                 to the text stream.
            </summary>
             <param name="value">
                 The Boolean to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Char)">
             <summary>
                 Writes a character followed by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The character to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Char[])">
             <summary>
                 Writes an array of characters followed by a line terminator to the text stream.
            </summary>
             <param name="buffer">
                 The character array from which data is read.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Decimal)">
             <summary>
                 Writes the text representation of a decimal value followed by a line terminator
                 to the text stream.
            </summary>
             <param name="value">
                 The decimal value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Double)">
             <summary>
                 Writes the text representation of a 8-byte floating-point value followed
                 by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The 8-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Single)">
             <summary>
                 Writes the text representation of a 4-byte floating-point value followed
                 by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The 4-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Int32)">
             <summary>
                 Writes the text representation of a 4-byte signed integer followed by a line
                 terminator to the text stream.
            </summary>
             <param name="value">
                 The 4-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Int64)">
             <summary>
                 Writes the text representation of an 8-byte signed integer followed by a
                 line terminator to the text stream.
            </summary>
             <param name="value">
                 The 8-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Object)">
             <summary>
                 Writes the text representation of an object by calling ToString on this object,
                 followed by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The object to write. If value is null, only the line termination characters
                 are written.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.String)">
             <summary>
                 Writes a string followed by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The string to write. If value is null, only the line termination characters
                 are written.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.UInt32)">
             <summary>
                 Writes the text representation of a 4-byte unsigned integer followed by a
                 line terminator to the text stream.
            </summary>
             <param name="value">
                 The 4-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.UInt64)">
             <summary>
                 Writes the text representation of an 8-byte unsigned integer followed by
                 a line terminator to the text stream.
            </summary>
             <param name="value">
                 The 8-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.String,System.Object)">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatted string.
            </param>
             <param name="arg0">
                 The object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.String,System.Object[])">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg">
                 The object array to write into format string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 A string or object is passed in as null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 arg.Length.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Writes a subarray of characters followed by a line terminator to the text
                 stream.
            </summary>
             <param name="buffer">
                 The character array from which data is read.
            </param>
             <param name="index">
                 The index into buffer at which to begin reading.
            </param>
             <param name="count">
                 The maximum number of characters to write.
            </param>
             <returns>
                 Characters are read from buffer beginning at index and ending at index +
                 count.
            </returns>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer parameter is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StreamWriter.WriteLine(System.String,System.Object,System.Object)">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 The object to write into the format string.
            </param>
             <param name="arg1">
                 The object to write into the format string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StreamWriter.AutoFlush">
             <summary>
                 Gets or sets a value indicating whether the CrestronIO.StreamWriter will flush
                 its buffer to the underlying stream after every call to CrestronIO.StreamWriter.Write(System.Char).
            </summary>
             <returns>
                 true to force CrestronIO.StreamWriter to flush its buffer; otherwise, false.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StreamWriter.BaseStream">
             <summary>
                 Gets the underlying stream that interfaces with a backing store.
            </summary>
             <returns>
                 The stream this StreamWriter is writing to.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StreamWriter.Encoding">
             <summary>
                 Gets the System.Text.Encoding in which the output is written.
            </summary>
             <returns>
                 The System.Text.Encoding specified in the constructor for the current instance,
                 or System.Text.UTF8Encoding if an encoding was not specified.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StreamWriter.NewLine">
             <summary>
                 Gets or sets the line terminator string used by the current TextWriter.
            </summary>
             <returns>
                 The line terminator string for the current TextWriter.
                 </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.StringReader">
            <summary>
                 Implements a CrestronIO.TextReader that reads from a string.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.#ctor(System.String)">
            <Summary>
                 Initializes a new instance of the System.IO.StringReader class that reads
                 from the specified string.
            </Summary>
             <param name="s">
                 The string to which the System.IO.StringReader should be initialized.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 The s parameter is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.Finalize">
            <summary>
            Destructor for StringReader.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.Dispose(System.Boolean)">
             <summary>
                 Releases the unmanaged resources used by the System.IO.StringReader and optionally
                 releases the managed resources.
                 </summary>
             <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.Peek">
             <summary>
                 Returns the next available character but does not consume it.
            </summary>
             <returns>
                 An integer representing the next character to be read, or -1 if no more characters
                 are available or the stream does not support seeking.
            </returns>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.Read">
             <summary>
                 Reads the next character from the input stream and advances the character
                 position by one character.
            </summary>
             <returns>
                 The next character from the input stream represented as an System.Int32 object,
                 or -1 if no more characters are available.
            </returns>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Reads a maximum of count characters from the current stream into buffer,
                 beginning at index.
            </summary>
             <param name="buffer">
                 When this method returns, contains the specified character array with the
                 values between index and (index + count - 1) replaced by the characters read
                 from the current source.
            </param>
             <param name="index">
                 The index of buffer at which to begin writing.
            </param>
             <param name="count">
                 The maximum number of characters to read.
            </param>
             <returns>
                 The number of characters that have been read, or 0 if at the end of the stream
                 and no data was read. The number will be less than or equal to the count
                 parameter, depending on whether the data is available within the stream.
            </returns>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs, such as the stream is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Reads a maximum of count characters from the current stream, and writes the
                 data to buffer, beginning at index.
            </summary>
             <param name="buffer">
                 When this method returns, this parameter contains the specified character
                 array with the values between index and (index + count -1) replaced by the
                 characters read from the current source.
            </param>
             <param name="index">
                 The place in buffer at which to begin writing.
            </param>
             <param name="count">
                 The maximum number of characters to read.
            </param>
             <returns>
                 The position of the underlying stream is advanced by the number of characters
                 that were read into buffer.The number of characters that have been read.
                 The number will be less than or equal to count, depending on whether all
                 input characters have been read.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextReader is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.ReadLine">
             <summary>
                 Reads a line of characters from the current stream and returns the data as
                 a string.
            </summary>
             <returns>
                 The next line from the input stream, or null if the end of the input stream
                 is reached.
            </returns>
             <exception cref="T:System.OutOfMemoryException">
                 There is insufficient memory to allocate a buffer for the returned string.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringReader.ReadToEnd">
             <summary>
                 Reads the stream from the current position to the end of the stream.
            </summary>
             <returns>
                 The rest of the stream as a string, from the current position to the end.
                 If the current position is at the end of the stream, returns the empty string("").
            </returns>
             <exception cref="T:System.OutOfMemoryException">
                 There is insufficient memory to allocate a buffer for the returned string.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid destination directory.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">File System error while attempting to open the stream.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">Invalid directory location.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file passed does not exist.</exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">Path is great than 248 characters.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronIO.StringWriter">
            <summary>
                 Implements a System.IO.TextWriter for writing information to a string. The
                 information is stored in an underlying System.Text.StringBuilder.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.#ctor">
            <summary>
                 Initializes a new instance of the System.IO.StringWriter class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.#ctor(System.IFormatProvider)">
            <Summary>
                 Initializes a new instance of the System.IO.StringWriter class with the specified
                 format control.
            </Summary>
             <param name="formatProvider">
                 An System.IFormatProvider object that controls formatting.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.#ctor(System.Text.StringBuilder)">
            <Summary>
                 Initializes a new instance of the System.IO.StringWriter class that writes
                 to the specified System.Text.StringBuilder.
            </Summary>
             <param name="sb">
                 The StringBuilder to write to.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 sb is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
            <Summary>
                 Initializes a new instance of the System.IO.StringWriter class that writes
                 to the specified System.Text.StringBuilder and has the specified format provider.
            </Summary>
             <param name="sb">
                 The StringBuilder to write to.
            </param>
             <param name="formatProvider">
                 An System.IFormatProvider object that controls formatting.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 sb is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Finalize">
            <summary>
            Destructor for StringWriter.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Dispose(System.Boolean)">
             <summary>
                 Releases the unmanaged resources used by the CrestronIO.StringWriter and optionally
                 releases the managed resources.
            </summary>
             <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only
                 unmanaged resources.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Flush">
             <summary>
                 Clears all buffers for the current writer and causes any buffered data to
                 be written to the underlying stream.
            </summary>
             <exception cref="T:System.ObjectDisposedException">
                 The current writer is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error has occurred.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Boolean)">
             <summary>
                 Writes the text representation of a Boolean value to the text stream.
            </summary>
             <param name="value">
                 The Boolean to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Char)">
             <summary>
                 Writes a character to the text stream.
            </summary>
             <param name="value">
                 The character to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Char[])">
             <summary>
                 Writes a character array to the text stream.
            </summary>
             <param name="buffer">
                 The character array to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Decimal)">
             <summary>
                 Writes the text representation of a decimal value to the text stream.
            </summary>
             <param name="value">
                 The decimal value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Double)">
             <summary>
                 Writes the text representation of an 8-byte floating-point value to the text
                 stream.
            </summary>
             <param name="value">
                 The 8-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Single)">
             <summary>
                 Writes the text representation of a 4-byte floating-point value to the text
                 stream.
            </summary>
             <param name="value">
                 The 4-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Int32)">
             <summary>
                 Writes the text representation of a 4-byte signed integer to the text stream.
            </summary>
             <param name="value">
                 The 4-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Int64)">
             <summary>
                 Writes the text representation of an 8-byte signed integer to the text stream.
            </summary>
             <param name="value">
                 The 8-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Object)">
             <summary>
                 Writes the text representation of an object to the text stream by calling
                 ToString on that object.
            </summary>
             <param name="value">
                 The object to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.String)">
             <summary>
                 Writes a string to the text stream.
            </summary>
             <param name="value">
                 The string to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.UInt32)">
             <summary>
                 Writes the text representation of a 4-byte unsigned integer to the text stream.
            </summary>
             <param name="value">
                 The 4-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.UInt64)">
             <summary>
                 Writes the text representation of an 8-byte unsigned integer to the text
                 stream.
            </summary>
             <param name="value">
                 The 8-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.String,System.Object)">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 An object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.String,System.Object[])">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg">
                 The object array to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format or arg is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 arg. Length.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Writes a subarray of characters to the text stream.
            </summary>
             <param name="buffer">
                 The character array to write data from.
            </param>
             <param name="index">
                 Starting index in the buffer.
            </param>
             <param name="count">
                 The number of characters to write.
            </param>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer parameter is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.Write(System.String,System.Object,System.Object)">
             <summary>
                 Writes out a formatted string, using the same semantics as System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 An object to write into the formatted string.
            </param>
             <param name="arg1">
                 An object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine">
             <summary>
                 Writes a line terminator to the text stream.
            </summary>
             <returns>
                 The default line terminator is a carriage return followed by a line feed
                 ("\r\n"), but this value can be changed using the CrestronIO.TextWriter.NewLine
                 property.
            </returns>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Boolean)">
             <summary>
                 Writes the text representation of a Boolean followed by a line terminator
                 to the text stream.
            </summary>
             <param name="value">
                 The Boolean to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Char)">
             <summary>
                 Writes a character followed by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The character to write to the text stream.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Char[])">
             <summary>
                 Writes an array of characters followed by a line terminator to the text stream.
            </summary>
             <param name="buffer">
                 The character array from which data is read.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Decimal)">
             <summary>
                 Writes the text representation of a decimal value followed by a line terminator
                 to the text stream.
            </summary>
             <param name="value">
                 The decimal value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Double)">
             <summary>
                 Writes the text representation of a 8-byte floating-point value followed
                 by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The 8-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Single)">
             <summary>
                 Writes the text representation of a 4-byte floating-point value followed
                 by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The 4-byte floating-point value to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Int32)">
             <summary>
                 Writes the text representation of a 4-byte signed integer followed by a line
                 terminator to the text stream.
            </summary>
             <param name="value">
                 The 4-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Int64)">
             <summary>
                 Writes the text representation of an 8-byte signed integer followed by a
                 line terminator to the text stream.
            </summary>
             <param name="value">
                 The 8-byte signed integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Object)">
             <summary>
                 Writes the text representation of an object by calling ToString on this object,
                 followed by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The object to write. If value is null, only the line termination characters
                 are written.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.String)">
             <summary>
                 Writes a string followed by a line terminator to the text stream.
            </summary>
             <param name="value">
                 The string to write. If value is null, only the line termination characters
                 are written.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.UInt32)">
             <summary>
                 Writes the text representation of a 4-byte unsigned integer followed by a
                 line terminator to the text stream.
            </summary>
             <param name="value">
                 The 4-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.UInt64)">
             <summary>
                 Writes the text representation of an 8-byte unsigned integer followed by
                 a line terminator to the text stream.
            </summary>
             <param name="value">
                 The 8-byte unsigned integer to write.
            </param>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.String,System.Object)">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatted string.
            </param>
             <param name="arg0">
                 The object to write into the formatted string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.String,System.Object[])">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg">
                 The object array to write into format string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 A string or object is passed in as null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 arg.Length.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
             <summary>
                 Writes a subarray of characters followed by a line terminator to the text
                 stream.
            </summary>
             <param name="buffer">
                 The character array from which data is read.
            </param>
             <param name="index">
                 The index into buffer at which to begin reading.
            </param>
             <param name="count">
                 The maximum number of characters to write.
            </param>
             <returns>
                 Characters are read from buffer beginning at index and ending at index +
                 count.
            </returns>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer parameter is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is negative.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.WriteLine(System.String,System.Object,System.Object)">
             <summary>
                 Writes out a formatted string and a new line, using the same semantics as
                 System.String.Format(System.String,System.Object).
            </summary>
             <param name="format">
                 The formatting string.
            </param>
             <param name="arg0">
                 The object to write into the format string.
            </param>
             <param name="arg1">
                 The object to write into the format string.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 format is null.
            </exception>
             <exception cref="T:System.ObjectDisposedException">
                 The CrestronIO.TextWriter is closed.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 An I/O error occurs.
            </exception>
             <exception cref="T:System.FormatException">
                 The format specification in format is invalid.-or- The number indicating
                 an argument to be formatted is less than zero, or larger than or equal to
                 the number of provided objects to be formatted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.GetStringBuilder">
            <summary>
                 Returns the underlying System.Text.StringBuilder.
            </summary>
            <returns>
                 The underlying StringBuilder.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronIO.StringWriter.ToString">
            <summary>
                 Returns a string containing the characters written to the current StringWriter
                 so far.
            </summary>
            <returns>
                 The string containing the characters written to the current StringWriter.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StringWriter.Encoding">
             <summary>
                 Gets the System.Text.Encoding in which the output is written.
            </summary>
             <returns>
                 The System.Text.Encoding specified in the constructor for the current instance,
                 or System.Text.UTF8Encoding if an encoding was not specified.
                 </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronIO.StringWriter.NewLine">
             <summary>
                 Gets or sets the line terminator string used by the current TextWriter.
            </summary>
             <returns>
                 The line terminator string for the current TextWriter.
                 </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeSha256">
            <summary>
            Represents "diffie-hellman-group-exchange-sha256" algorithm implementation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(System.Byte[])">
            <summary>
            Hashes the specified data bytes.
            </summary>
            <param name="hashBytes">Data to hash.</param>
            <returns>
            Hashed bytes
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.NoneAuthenticationMethod">
            <summary>
            Provides functionality for "none" authentication method
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NoneAuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NoneAuthenticationMethod.Authenticate(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session.</param>
            <returns>
            Result of authentication  process.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NoneAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NoneAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NoneAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.NoneAuthenticationMethod.Name">
            <summary>
            Gets connection name
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo">
            <summary>
            Represents "env" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.VariableName">
            <summary>
            Gets or sets the name of the variable.
            </summary>
            <value>
            The name of the variable.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.EnvironmentVariableRequestInfo.VariableValue">
            <summary>
            Gets or sets the variable value.
            </summary>
            <value>
            The variable value.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageNone">
            <summary>
            Represents "none" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageNone.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageNone.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageNone.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.MessageEventArgs`1">
            <summary>
            Provides data for message events.
            </summary>
            <typeparam name="T">Message type</typeparam>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.MessageEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.MessageEventArgs`1"/> class.
            </summary>
            <param name="message">The message.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="message"/> is null.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.MessageEventArgs`1.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException">
            <summary>
            The exception that is thrown when operation is timed out.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding">
            <summary>
            Implementation of ASCII Encoding
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>
            The number of bytes produced by encoding the specified characters.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="chars"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="chars"/>. </exception>
              
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.EncoderFallback"/> is set to <see cref="T:System.Text.EncoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The index at which to start writing the resulting sequence of bytes.</param>
            <returns>
            The actual number of bytes written into <paramref name="bytes"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="chars"/> is null.-or- <paramref name="bytes"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="charIndex"/> or <paramref name="charCount"/> or <paramref name="byteIndex"/> is less than zero.-or- <paramref name="charIndex"/> and <paramref name="charCount"/> do not denote a valid range in <paramref name="chars"/>.-or- <paramref name="byteIndex"/> is not a valid index in <paramref name="bytes"/>. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="bytes"/> does not have enough capacity from <paramref name="byteIndex"/> to the end of the array to accommodate the resulting bytes. </exception>
              
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.EncoderFallback"/> is set to <see cref="T:System.Text.EncoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            The number of characters produced by decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="bytes"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>. </exception>
              
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.DecoderFallback"/> is set to <see cref="T:System.Text.DecoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The index at which to start writing the resulting set of characters.</param>
            <returns>
            The actual number of characters written into <paramref name="chars"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="bytes"/> is null.-or- <paramref name="chars"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="byteIndex"/> or <paramref name="byteCount"/> or <paramref name="charIndex"/> is less than zero.-or- <paramref name="byteIndex"/> and <paramref name="byteCount"/> do not denote a valid range in <paramref name="bytes"/>.-or- <paramref name="charIndex"/> is not a valid index in <paramref name="chars"/>. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="chars"/> does not have enough capacity from <paramref name="charIndex"/> to the end of the array to accommodate the resulting characters. </exception>
              
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.DecoderFallback"/> is set to <see cref="T:System.Text.DecoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            Calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>
            The maximum number of bytes produced by encoding the specified number of characters.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="charCount"/> is less than zero. </exception>
              
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.EncoderFallback"/> is set to <see cref="T:System.Text.EncoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ASCIIEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            Calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>
            The maximum number of characters produced by decoding the specified number of bytes.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="byteCount"/> is less than zero. </exception>
              
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.DecoderFallback"/> is set to <see cref="T:System.Text.DecoderExceptionFallback"/>.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Channels.ChannelTypes">
            <summary>
            Lists channel types as defined by the protocol.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Channels.ChannelTypes.Session">
            <summary>
            session
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Channels.ChannelTypes.X11">
            <summary>
            x11
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Channels.ChannelTypes.ForwardedTcpip">
            <summary>
            forwarded-tcpip
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Channels.ChannelTypes.DirectTcpip">
            <summary>
            direct-tcpip
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip">
            <summary>
            Implements "direct-tcpip" SSH channel.
            </summary>
            <summary>
            Implements "direct-tcpip" SSH channel.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip.Bind">
            <summary>
            Binds channel to remote host.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.ChannelDirectTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.AuthenticationResult">
            <summary>
            Represents possible authentication methods results
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.AuthenticationResult.Success">
            <summary>
            Authentication was successful.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.AuthenticationResult.PartialSuccess">
            <summary>
            Authentication completed with partial success.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.AuthenticationResult.Failure">
            <summary>
            Authentication failed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SocketIdClassForReportingPurposes.ReleaseSocketId(System.UInt32)">
            <summary>
            Remove this ID from the list of sockets
            </summary>
            <param name="socketIDToRemove">Socket Identifier</param>
        </member>
        <member name="M:Crestron.SimplSharp.SocketIdClassForReportingPurposes.GetNextSimplSharpSocketId">
            <summary>
            Obtain the next available SocketID
            </summary>
            <returns>The next available socket ID as a UInt32</returns>
            <exception cref="T:System.Exception">No valid SocketIDs available</exception>
        </member>
        <member name="M:Crestron.SimplSharp.SocketIdClassForReportingPurposes.GetInvalidSocketId">
            <summary>
            Returns the invalid socket Id
            </summary>
            <returns>Invalid socket Id index</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SocketIdClassForReportingPurposesInternal.ReleaseSocketId(System.UInt32)">
            <summary>
            Remove this ID from the list of sockets
            </summary>
            <param name="socketIDToRemove">Socket Identifier</param>
        </member>
        <member name="M:Crestron.SimplSharp.SocketIdClassForReportingPurposesInternal.GetNextSimplSharpSocketId">
            <summary>
            Obtain the next available SocketID
            </summary>
            <returns>The next available socket ID as a UInt32</returns>
            <exception cref="T:System.Exception">No valid SocketIDs available</exception>
        </member>
        <member name="T:Crestron.SimplSharp.InitialParametersClass">
            <summary>
            Static class for all initial parameters
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.IsPlatformPc">
            <summary>
            Function to indicate if the current running platform is Linux PC
            </summary>
            <returns>'true', running on a PC; 'false' otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.IsPlatformWindowsCe">
            <summary>
            Function to indicate if the current running platform is WindowsCE
            </summary>
            <returns>'true', running on Windows CE; 'false' otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.IsPlatformLinuxCS">
            <summary>
            Function to indicate if the current running platform is Linux Control System
            </summary>
            <returns>'true', running on Linux CS; 'false' otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.IsPlatformMercuryDGE">
            <summary>
            Function to indicate if the current running platform is Mercury/DGE
            </summary>
            <returns>'true', running on Mercury/DGE; 'false' otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.IsRunningOnMono">
            <summary>
            Indicates if we are running on the mono runtime;
            </summary>
            <returns>'true' - running under Mono Project runtime; 'false' otherwise.</returns>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.bDoAuditLogPrinting">
            <summary>
            Variable to see if we need to do an audit log printing. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.m_eEnumForSecondAdapter">
            <summary>
            Enum for second ethernet adapter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.m_FirmwareVersionAsVersion">
            <summary>
             This is the version class based on the firmware version string.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.m_iNumRemovableDrives">
            <summary>
            Number of removable drives
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.m_iNumberOfEthernetInterfaces">
            <summary>
            Returns number of ethernet interfaces or adapters
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.m_iNumExternalEthernetInterfaces">
            <summary>
             Stores the number of external ethernet interfaces
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.InitializeCommandProcessor(Crestron.SimplSharp.CrestronPrintDelegate,Crestron.SimplSharp.CrestronSimplSharpConsoleAccessDelegate)">
            <summary>
            Function to initialize the Command Processor from SIMPL+
            </summary>
            <param name="printDelegateParam"></param>
            <param name="consoleAccessDelegateParam"></param>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.SetInitialParametersForAutoUpdateInterface(System.UInt32,System.String)">
            <summary>
            This so the Auto Update Interface can set the app number and friendly name so that it will work with the 
            CrestronScheduler (aka Pythagoras).
            </summary>
            <param name="appNumber"></param>
            <param name="friendlyName"></param>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.GetPlatformModel">
            <summary>
            Method to read in the platform model.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.ReadInPlatformModel">
            <summary>
            Method to determine the platform that we are running on. Only called on Unix platforms.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.ReadInInitialParameters(System.UInt32)">
            <summary>
            Function to read in all the initial parameters - Need to be called once on startup passing in the 
            application number
            Do not use the error logger functions in here or else the NVRAM Utility will fail ..
            </summary>
            <param name="appNumber"> Application Number - we pass uint.MaxValue for things which use the Helper interface and need to call ReadInInitialParameters </param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.UpdateRemoteSysLogStatus">
            <summary>
            Function to read in RemoteSysLogger enable status - Need to be called in process watchdog function 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.UpdateRemoteSyslogConnectStatus(System.Boolean)">
            <summary>
            Function to read in RemoteSysLogger connection status
            </summary>
            <param name="connected">Flag to indicate that server is connected. </param>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.GetAdapterEnumSecondInternalAdapterFromRegistry">
            <summary>
            Returns the enum type for the second internal adapter - if it exists
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.ReadApplicationInformationFromRegistry(System.UInt32)">
            <summary>
            Method to read in information from the registry as needed for this application.
            </summary>
            <param name="appNumber"></param>            
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.IsHostname(System.String)">
            <summary>
            parses a string to determine if host name or valid Ip address
            </summary>
            <param name="ipAddressOrName"></param>
            <returns>true if it is a host name</returns>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.IsAuthenticationEnabled">
            <summary>
            Indicates if authentication is enabled on the controller
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.SocketPollTimeout">
            <summary>
            Get the current socket PollTimeout of the system. This is firmware dependent on ManagedUtilities.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.m_iMulticastTimeToLive">
            <summary>
            Maximum multicast time to live (in hops)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.IsSystemProdigy">
            <summary>
            Indicates whether this is a prodigy system 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.ControllerPromptName">
            <summary>
            Returns the controller prompt
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.ApplicationNumber">
            <summary>
            Returns the Application Number
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.ProgramIDTag">
            <summary>
            Get the Program ID Tag for this application.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.RoomId">
            <summary>
            Unique Room ID given to this application.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.RoomName">
            <summary>
            The name of this running program.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.FirmwareVersion">
            <summary>
            Returns the firmware version of the controller
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.NumberOfRemovableDrives">
            <summary>
            Returns the number of removable media
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.NumberOfEthernetInterfaces">
            <summary>
            Returns the number of Ethernet Interfaces in the system
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.NumberOfExternalEthernetInterfaces">
            <summary>
            Set and get the number of external ethernet interfaces
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.ProgramDirectory">
            <summary>
            String to store the program directory
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.IsRouterPresent">
            <summary>
            Property to indiciate if this system has a router present.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.ExServiceCipToAppMsgQSize">
            <summary>
            Returns the maximum number of CIP to Application queue entries 
            for extended service in the system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.ExServiceAppToCipMsgQSize">
            <summary>
            Returns the maximum number of Application to CIP queue entries 
            for extended service in the system. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.InitialParametersClass.ResolveHostName">
            <summary>
            Method to set and get the ResolveHostName
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.InitialParametersClass.Platforms">
            <summary>
            List of all the platforms
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.NA">
            <summary>
            Platform not known
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.PLATFORM_WIN_CE">
            <summary>
            Running on a windows 3 series control system
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.PLATFORM_MERCURY_DGE">
            <summary>
            Running on a Mercury/DGE - basically pinpoint where we have a linux and an android mix
            and the CS code is a hack. This is the BUILDROOT side.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.PLATFORM_LINUX_CS">
            <summary>
            True CS on linux
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.PLATFORM_LINUX_CSTP">
            <summary>
            True CS on linux but this is a Touch Screen control system
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.PLATFORM_ANDROID">
            <summary>
            This is an Android platform
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.PLATFORM_LINUX">
            <summary>
            This is an Linux device platform
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.InitialParametersClass.Platforms.PLATFORM_LINUX_CS_ON_PC">
            <summary>
            This is a Linux OS running on a PC/Server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.ProductName.Init">
            <summary>
            Init method MUST BE called!
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.ProductName.GetProductName(System.Text.StringBuilder)">
            <summary>
            This method will return the product name as determined by the environment.
            </summary>
            <param name="retVal">Storage of the return value, "DM-TXRX-100-STR"</param>
            <returns>0 = success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.ProductName.GetFirmwareVersion(System.Text.StringBuilder)">
            <summary>
            This method will return the full version string. 
            </summary>
            <param name="retVal">Storage of the return value, "0.2990.10183 (Mar 28 2016)"</param>
            <returns>-1 = success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.InitialParametersClass.ProductName.GetProductType">
            <summary>
            This method will return the product type
            </summary>
            <returns> Product type</returns>
        </member>
        <member name="T:Crestron.SimplSharp.InitialParametersClass.ResolveHostNameFunctionDelegate">
            <summary>
            Delegate Signature for the Resolve Host name command
            </summary>
            <param name="hostNameToResolve"> HostName to resolve</param>
            <param name="resolvedHostName"> Resolved Host Name</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm">
            <summary>
            Implements key support for host algorithm.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.#ctor(System.String,Crestron.SimplSharp.Ssh.Security.Key)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm"/> class.
            </summary>
            <param name="name">Host key name.</param>
            <param name="key">Host key.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.#ctor(System.String,Crestron.SimplSharp.Ssh.Security.Key,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.HostAlgorithm"/> class.
            </summary>
            <param name="name">Host key name.</param>
            <param name="key">Host key.</param>
            <param name="data">Host key encoded data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.Sign(System.Byte[])">
            <summary>
            Signs the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Signed data.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data.</param>
            <param name="signature">The signature.</param>
            <returns>
              <c>True</c> is signature was successfully verifies; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.Data">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.SignatureKeyData.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.SignatureKeyData.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.SignatureKeyData.AlgorithmName">
            <summary>
            Gets or sets the name of the algorithm.
            </summary>
            <value>
            The name of the algorithm.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyHostAlgorithm.SignatureKeyData.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1">
            <summary>
            Provides HMAC algorithm implementation.
            </summary>
            <typeparam name="T">Class that implements <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</typeparam>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1.#ctor(System.Byte[],System.Int32)">
            <summary>
            Rfc 2104.
            </summary>
            <param name="key">The key.</param>
            <param name="hashSizeValue">Size</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Hashes the core.
            </summary>
            <param name="rgb">The RGB.</param>
            <param name="ib">The ib.</param>
            <param name="cb">The cb.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.HMac`1.Key">
            <summary>
            Gets or sets the key to use in the hash algorithm.
            </summary>
            <returns>The key to use in the hash algorithm.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.OfbCipherMode">
            <summary>
            Implements OFB cipher mode
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.OfbCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.OfbCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.OfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.OfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage">
            <summary>
            Represents SSH_MSG_GLOBAL_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.#ctor(Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestName,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
            <param name="requestName">Name of the request.</param>
            <param name="wantReply">if set to <c>true</c> [want reply].</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.#ctor(Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestName,System.Boolean,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
            <param name="requestName">Name of the request.</param>
            <param name="wantReply">if set to <c>true</c> [want reply].</param>
            <param name="addressToBind">The address to bind.</param>
            <param name="portToBind">The port to bind.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.WantReply">
            <summary>
            Gets a value indicating whether message reply should be sent..
            </summary>
            <value>
              <c>true</c> if message reply should be sent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.AddressToBind">
            <summary>
            Gets the address to bind to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.GlobalRequestMessage.PortToBind">
            <summary>
            Gets port number to bind to.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo">
            <summary>
            Represents "window-change" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.NAME">
            <summary>
            Channe request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.Columns">
            <summary>
            Gets the columns.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.WindowChangeRequestInfo.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo">
            <summary>
            Used to open "direct-tcpip" channel type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo"/> class.
            </summary>
            <param name="hostToConnect">The host to connect.</param>
            <param name="portToConnect">The port to connect.</param>
            <param name="originatorAddress">The originator address.</param>
            <param name="originatorPort">The originator port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.HostToConnect">
            <summary>
            Gets the host to connect.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.PortToConnect">
            <summary>
            Gets the port to connect.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.DirectTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.PasswordChangeRequiredMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PASSWD_CHANGEREQ message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.PasswordChangeRequiredMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.PasswordChangeRequiredMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.PasswordChangeRequiredMessage.Message">
            <summary>
            Gets password change request message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.PasswordChangeRequiredMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException">
            <summary>
            The exception that is thrown when file or directory is not found.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronStringEncoding">
            <summary>
            String Encoding passed in by the SIMPL compiler. This was copied from the top of CWCharString.h
            This is a copy from SplusObjects - so for the time being please do update there also
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronStringEncoding.eEncodingUnknown">
            <summary>
            Throw an error if we see this
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronStringEncoding.eEncodingASCII">
            <summary>
            This is the format that is currently being used as ASCII
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronStringEncoding.eEncodingUTF16">
            <summary>
            UTF16
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SimplSharpString">
            <summary>
            String class to convert between a CrestronString and Simpl # strings
            Used when interfacing with Simpl Plus
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.#ctor">
            <summary>
            Default constructor for the SimplSharp String 
            Encoding defaults to ASCII
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.#ctor(System.String)">
            <summary>
            Constructor for the SimplSharpString which takes in a specified String
            Encoding defaults to ASCII
            </summary>
            <param name="stringValue"> String specified</param>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.#ctor(System.String,Crestron.SimplSharp.CrestronStringEncoding)">
            <summary>
            Constructor for the SimplSharpString which takes in a specified String and the encoding
            </summary>
            <param name="stringValue"> String specified</param>
            <param name="encoding">String encoding</param>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.#ctor(Crestron.SimplSharp.SimplSharpString)">
            <summary>
            Constructor for the SimplSharpString which takes in a Simpl Sharp String
            </summary>
            <param name="stringObject"> Simpl Sharp String Object</param>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.#ctor(Crestron.SimplSharp.SimplSharpString[])">
            <summary>
            Constructor for the SIMPLSharpString to take in multiple SIMPLSharpString objects and append them together
            </summary>
            <param name="SSPStrings">Array of string objects to append together.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.#ctor(System.Text.StringBuilder,Crestron.SimplSharp.CrestronStringEncoding)">
            <summary>
            Constructor for the Simpl Sharp String which takes in a string builder
            This is not exposed.
            </summary>
            <param name="stringBuilder"></param>
            <param name="stringEncoding"></param>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.ToString">
            <summary>
            Returns the string from the String Builder Object
            </summary>
            <returns> The current string within the StringBuilder Object</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.UpdateValue(System.String)">
            <summary>
            Updates the String builder object with the new value
            </summary>
            <param name="newStringValue">String to set.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.AppendToString(System.String)">
            <summary>
            Appends the value to the existing String Builder Object 
            </summary>
            <param name="newStringValue">String to append.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.op_Implicit(System.String)~Crestron.SimplSharp.SimplSharpString">
            <summary>
            Function to explicitly convert a string to a SimplSharp String 
            </summary>
            <param name="tempString">String to put into SimplSharpString.</param>
            <returns>new SimplSharpString created from a String</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SimplSharpString.op_Addition(Crestron.SimplSharp.SimplSharpString,Crestron.SimplSharp.SimplSharpString)">
            <summary>
            Operator overload for the + operator
            </summary>
            <param name="string1">String to put into SimplSharpString.</param>
            <param name="string2">String to put into SimplSharpString.</param>
            <returns>new SimplSharpString</returns>
        </member>
        <member name="P:Crestron.SimplSharp.SimplSharpString.StringBuilderObject">
            <summary>
            StringBuilder object within the Simpl Sharp String Object
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.SimplSharpString.StringEncoding">
            <summary>
            String encoding for the Simpl Sharp String Object
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization">
            <summary>
            Class to provide static function to serialize and deserialize objects from XML Files.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(System.String,System.Object)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <remarks>
            The following types can not be serialized, arrays of ArrayList or arrays of List(Of T).
            Also, enumerations of type unsigned long that contains values larger then 9,223,372,036,854,775,807 can not be serialized.
            </remarks>
            <param name="filename">File to serialize the object to. If the file already exists it will be replaced.</param>
            <param name="objectToSerialize">Object to serialize to the specified file.</param>
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The location of the specified file is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The specified file name is null(or empty) or the objectToSerialize parameter is null.</exception>        
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(Crestron.SimplSharp.CrestronIO.Stream,System.Object)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <remarks>
            The following types can not be serialized, arrays of ArrayList or arrays of List(Of T).
            Also, enumerations of type unsigned long that contains values larger then 9,223,372,036,854,775,807 can not be serialized.
            </remarks>
            <param name="stream">Stream to serialize the object to.</param>
            <param name="objectToSerialize">Object to serialize to the specified stream.</param>
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>    
            <exception cref="T:System.ArgumentNullException">The specified stream is null(or empty) or the objectToSerialize parameter is null.</exception>        
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(Crestron.SimplSharp.CrestronIO.TextWriter,System.Object)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <param name="paramTextWriter">TextWriter to serialize the object to.</param>
            <param name="paramObjectToSerialize">Object to serialize.</param>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>      
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(Crestron.SimplSharp.CrestronXml.XmlWriter,System.Object)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <param name="paramXmlWriter">XmlWriter to serialize the object to.</param>
            <param name="paramObjectToSerialize">Object to serialize.</param>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>      
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(Crestron.SimplSharp.CrestronIO.Stream,System.Object,CrestronSharp.CrestronXmlSerializerNamespaces)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <param name="paramStream">Stream to serialize the object to.</param>
            <param name="paramObjectToSerialize">Object to serialize.</param>
            <param name="paramNamespaces">Namespaces that will be referenced.</param>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>      
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(Crestron.SimplSharp.CrestronIO.TextWriter,System.Object,CrestronSharp.CrestronXmlSerializerNamespaces)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <param name="paramTextWriter">TextWriter to serialize the object to.</param>
            <param name="paramObjectToSerialize">Object to serialize.</param>
            <param name="paramNamespaces">Namespaces that will be referenced.</param>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>      
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(Crestron.SimplSharp.CrestronXml.XmlWriter,System.Object,CrestronSharp.CrestronXmlSerializerNamespaces)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <param name="paramXmlWriter">XmlWriter to serialize the object to.</param>
            <param name="paramObjectToSerialize">Object to serialize.</param>
            <param name="paramNamespaces">Namespaces that will be referenced.</param>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>      
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.SerializeObject(System.Type,Crestron.SimplSharp.CrestronXml.XmlTextWriter,System.Object,CrestronSharp.CrestronXmlSerializerNamespaces,System.String)">
            <summary>
            Function to convert public fields and properties of an object to an XML file.
            </summary>
            <param name="paramType">The type of the object that is to be serialized.</param>
            <param name="paramXmlTextWriter">XmlTextWriter to serialize the object to.</param>
            <param name="paramObjectToSerialize">Object to serialize.</param>
            <param name="paramNamespaces">Namespaces that will be referenced.</param>
            <param name="paramEncodingStyle">The encoding style.</param>
            <remarks>Set paramEncodingStyle to <see href="http://schemas.xmlsoap.org/soap/encoding/"/> for SOAP version 1.1 encoding; otherwise, 
            set it to <see href="http://www.w3.org/2003/05/soap-encoding"/> for SOAP version 1.2 encoding.</remarks>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>      
            <exception cref="T:System.InvalidOperationException">Error while attempting to serialize the object.</exception>
            <exception cref="T:System.InvalidOperationException">Encoding was not set to <see href="http://schemas.xmlsoap.org/soap/encoding/"/>
             or <see href="http://www.w3.org/2003/05/soap-encoding."/></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject``1(System.String)">
            <summary>
            Function to create an object of the specified type from an XML document.             
            </summary>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of T).            
            Objects being deserialized must have a parameterless constructor.            
            </remarks>
            <returns>The object deserialized from the file or null if the file does not exist on the system.</returns>
            <param name="filename">File to read from.</param>
            <typeparam name="T">Type of the object to deserialize.</typeparam>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The location of the specified file is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The specified file name is null(or empty).</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject``1(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Function to create an object of the specified type from an XML document.             
            </summary>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of T).            
            Objects being deserialized must have a parameterless constructor.              
            </remarks>
            <returns>The object deserialized from the file or null if the file does not exist on the system.</returns>
            <param name="stream">Stream to read from.</param>
            <typeparam name="T">Type of the object to deserialize.</typeparam>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
            <exception cref="T:System.ArgumentNullException">The specified Stream is null(or empty).</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject(System.Type,System.String)">
            <summary>
            Function to create an object of the specified type from an XML document.             
            </summary>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).            
            Objects being deserialized must have a parameterless constructor.              
            </remarks>
            <returns>The object deserialized from the file or null if the file does not exist on the system or if there is
            an error deserializing.</returns>
            <param name="type">Type of the object to deserialize.</param>
            <param name="filename">File to read from.</param>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">The location of the specified file is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The specified file name is null(or empty).</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject(System.Type,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Function to create an object of the specified type from an XML document.             
            </summary>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).            
            Objects being deserialized must have a parameterless constructor.              
            </remarks>
            <returns>The object deserialized from the stream or null if there is an issue deserializing.</returns>
            <param name="type">Type of the object to deserialize.</param>
            <param name="stream">Stream to read from.</param>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
            <exception cref="T:System.ArgumentNullException">The specified Stream is null(or empty).</exception>
            <exception cref="T:System.ArgumentNullException">The TypeOfObject is null(or empty).</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject(System.Type,Crestron.SimplSharp.CrestronIO.TextReader)">
            <summary>
            Function to create an object of the specified type from an XML document.
            </summary>
            <param name="paramType">Type of the object to deserialize.</param>
            <param name="paramTextReader">TextReader to read from.</param>
            <returns>The object deserialized from the TextReader or null if there was an error.</returns>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).            
            Objects being deserialized must have a parameterless constructor.              
            </remarks>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject``1(Crestron.SimplSharp.CrestronIO.TextReader)">
            <summary>
            Function to create an object of the specified type from an XML document.
            </summary>
            <typeparam name="T">Type of the object to deserialize.</typeparam>
            <param name="paramTextReader">TextReader to read from.</param>
            <returns>The object deserialized from the TextReader or null if there was an error.</returns>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).            
            Objects being deserialized must have a parameterless constructor.              
            </remarks>
            <exception cref="T:System.ArgumentNullException">The specified TextReader is null.</exception>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject(System.Type,Crestron.SimplSharp.CrestronXml.XmlReader)">
            <summary>
            Function to create an object of the specified type from an XML document.
            </summary>
            <param name="paramType">Type of the object to deserialize.</param>
            <param name="paramXmlReader">XmlReader to read from.</param>
            <returns>The object deserialized from the XmlReader or null if there is an error.</returns>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).            
            Objects being deserialized must have a parameterless constructor.              
            </remarks>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject``1(Crestron.SimplSharp.CrestronXml.XmlReader)">
            <summary>
            Function to create an object of the specified type from an XML document.
            </summary>
            <typeparam name="T">Type of the object to deserialize.</typeparam>
            <param name="paramXmlReader">XmlReader to read from.</param>
            <returns>The object deserialized from the XmlReader or the default value of T if there is an error.</returns>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).            
            Objects being deserialized must have a parameterless constructor.              
            </remarks>
            <exception cref="T:System.ArgumentNullException">If the argument that is passed in is null an ArgumentNullException will be thrown.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject(System.Type,Crestron.SimplSharp.CrestronXml.XmlReader,System.String)">
            <summary>
            Function to create an object of the specified type from an XML document.
            </summary>
            <param name="paramType">Type of the object to deserialize.</param>
            <param name="paramXmlReader">XmlReader to read from.</param>
            <param name="paramEncodingStyle">The encoding to use when deserializing the XML file.</param>
            <returns>The object deserialized from the XmlReader or null if there is an error.</returns>
            <remarks>
            The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).            
            Objects being deserialized must have a parameterless constructor.              
            Set paramEncodingStyle to <see href="http://schemas.xmlsoap.org/soap/encoding"/> for SOAP version 1.1 encoding; otherwise, 
            set it to <see href="http://www.w3.org/2003/05/soap-encoding"/> for SOAP version 1.2 encoding.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
            <exception cref="T:System.InvalidOperationException">Encoding was not set to <see href="http://schemas.xmlsoap.org/soap/encoding"/> 
            or <see href="http://www.w3.org/2003/05/soap-encoding."/></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization.DeSerializeObject``1(Crestron.SimplSharp.CrestronXml.XmlReader,System.String)">
            <summary>
            Function to create an object of the specified type from an XML document.
            </summary>
            <typeparam name="T">Type of the object to deserialize.</typeparam>
            <param name="paramXmlReader">XmlReader to read from.</param>
            <param name="paramEncodingStyle">The encoding to use when deserializing the XML file.</param>
            <returns>The object deserialized from the XmlReader or the default value of T if there is an error.</returns>
            <remarks>The following types can not be deserialized, arrays of ArrayList or arrays of List(Of type).
            Objects being deserialized must have a parameterless constructor.  
            Set paramEncodingStyle to <see href="http://schemas.xmlsoap.org/soap/encoding/"/> for SOAP version 1.1 encoding; otherwise, 
            set it to <see href="http://www.w3.org/2003/05/soap-encoding"/> for SOAP version 1.2 encoding.</remarks>
            <exception cref="T:System.ArgumentNullException">Parameter set to null.</exception>
            <exception cref="T:System.InvalidOperationException">Error while attempting to deserialize the object.</exception>
            <exception cref="T:System.InvalidOperationException">Encoding was not set to <see href="http://schemas.xmlsoap.org/soap/encoding/"/> or <see href="http://www.w3.org/2003/05/soap-encoding."/></exception>
        </member>
        <member name="T:Crestron.SimplSharp.Dns">
            <summary>
            Provides simple domain name resolution functionality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Dns.GetHostEntry(Crestron.SimplSharp.IPAddress)">
            <summary>
            Resolves an IP address to an IPHostEntry instance.
            </summary>
            <param name="address"> IP address to resolve </param>
            <returns>An IPHostEntry instance that contains address information about the host specified in address.</returns>
            <exception cref="T:System.ArgumentNullException"> Address is null</exception>
            <exception cref="T:System.ArgumentException"> Address is an invalid IP address </exception>
            <exception cref="T:System.InvalidOperationException"> An error is encountered when resolving address.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Dns.GetHostEntry(System.String)">
            <summary>
            Resolves a host name or IP address to an IPHostEntry instance.
            </summary>
            <param name="hostNameOrAddress"> The host name or IP address to resolve.</param>
            <returns>An IPHostEntry instance that contains address information about the host specified in hostNameOrAddress.</returns>
            <exception cref="T:System.ArgumentNullException">The hostNameOrAddress parameter is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of hostNameOrAddress parameter is greater than 126 characters.</exception>
            <exception cref="T:System.ArgumentException">The hostNameOrAddress parameter is an invalid IP address</exception>
            <exception cref="T:System.InvalidOperationException">An error was encountered when resolving the hostNameOrAddress parameter</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Dns.GetHostName">
            <summary>
            Gets the host name of the device.
            </summary>
            <returns> A string that contains the DNS host name of the unit</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronCresnetHelper">
            <summary>
            Common Cresnet Helper.
            This feature is not supported on <see cref="F:Crestron.SimplSharp.eDevicePlatform.Server"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.m_CresnetADOperationCriticalSection">
            <summary>
            Prevent concurrent access to the AD functions
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.Query">
            <summary>
            Function to report all the cresnet devices in the system.
            This might not work if there are devices with duplicate Id's on the network. Please execute the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoverAllDevices"/> function to
            detect if there are duplicate Id's on your network.
            </summary>
            <remarks> On a successful response, the <see cref="P:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredElementsList"/> will contain all devices available in the system. The list will be
            empty if there are no devices in the system. if the function returns a <see cref="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.Failure"/>, then one of the reasons
            could be that there are duplicate Id's on your network. In that case please execute the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoverAllDevices"/> function. </remarks>
            <returns>eCresnetDiscoveryReturnValues - enum indicating return value</returns>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.ParseString(System.String@,System.Byte@,System.String@,System.UInt32@,System.String@)">
            <summary>
            Method to parse the string...
            this is only used for the ReportCresnet currently and not for PPNDIscover
            </summary>
            <param name="ResponseFromCommand"></param>
            <param name="cresnetId"></param>
            <param name="deviceName"></param>
            <param name="tsid"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.ReportDevices">
            <summary>
            Function to report the cresnet devices present in the system. If there are multiple devices at the same Id, then this will just report
            the first device. Use the <see>DiscoverAllDevices</see> to discover all the cresnet devices (including duplicate Id's) in the system.
            </summary>
            <remarks> On a successful response , the DiscoveredElementsList gets populated.</remarks>
            <returns>eCresnetDiscoveryReturnValues - enum indicating return value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoverAllDevices">
            <summary>
            Function to discover all the devices in the system. This will report devices with duplicate Id's also.
            This will not report any cresnet devices which are in the loader. Please execute the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.Query"/> function to
            detect those devices.
            </summary>
            <remarks> On a successful response , the DiscoveredElementsList gets populated.</remarks>
            <returns>eCresnetDiscoveryReturnValues - enum indicating return value</returns>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoverAllDevices(System.Boolean)">
            <summary>
            Function to discover all the devices in the system. This will report devices with duplicate Id's also.
            This will not report any cresnet devices which are in the loader. Please execute the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.Query"/> function to
            detect those devices.
            </summary>
            <param name="bCalledExternally"> Parameter to indicate if this was called externally or locally</param>
            <remarks> On a successful response , the DiscoveredElementsList gets populated.</remarks>
            <returns>eCresnetDiscoveryReturnValues - enum indicating return value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.SetCresnetIdByTouchSettableID(Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement,System.Byte)">
            <summary>
            Function to set the cresnet Id for a specified discovered element.        
            </summary>
            <param name="elementToSet"> Specific device within the discovered list</param>
            <param name="newIdInHexToSetSpecifiedDeviceTo"> New Id to set the specified device to</param>
            <returns> eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <remarks>Invoke the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.Query"/> function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.SetCresnetIdByTouchSettableID(System.UInt32,System.Byte)">
            <summary>
            Function to set the cresnet Id for a specific device based on the Touch Settable Id of the device        
            </summary>
            <param name="touchSettableIdForSpecificDevice"> Touch Settable Id for the specific device</param>
            <param name="newIdInHexToSetSpecifiedDeviceTo"> New Id to set the specified device to</param>
            <returns> eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.SetCresnetIdByCurrentCresnetId(Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement,System.Byte)">
            <summary>
            Function to set the cresnet Id for a specified discovered element.        
            </summary>
            <param name="elementToSet"> Specific device within the discovered list</param>
            <param name="newIdInHexToSetSpecifiedDeviceTo"> New Id to set the specified device to</param>
            <returns> eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <remarks>Invoke the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.Query"/> function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.SetCresnetIdByCurrentCresnetId(System.UInt32,System.Byte)">
            <summary>
            Function to set the cresnet Id for a specific device based on the current Cresnet Id of the device        
            </summary>
            <param name="currentCresnetIdInHexOfSpecificDevice"> Current Cresnet Id of the specific device</param>
            <param name="newIdInHexToSetSpecifiedDeviceTo"> New Id to set the specified device to</param>
            <returns> eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.ReportCresnetIdByTouchSettableID(Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement,System.Byte@)">
            <summary>
            Function to return the Id for the specified device based on the Touch Settable Id
            </summary>
            <param name="elementToQuery"> Specific device within the discovered list</param>
            <param name="cresnetId"> Cresnet Id for the specified device </param>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <remarks>Invoke the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.Query"/> function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.ReportCresnetIdByTouchSettableID(System.UInt32,System.Byte@)">
            <summary>
            Function to return the Id for the specified device based on the Touch Settable Id
            </summary>
            <param name="touchSettableIdForSpecificDevice"> Touch Settable Id for the specific device</param>
            <param name="cresnetId"> Cresnet Id for the specified device </param>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.ReportTouchSettableIDByCresnetId(Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement,System.UInt32@)">
            <summary>
            Function to return the Touch Settable Id for a specified device based on the Id
            </summary>
            <param name="elementToQuery"> Specific device within the discovered list</param>
            <param name="touchSettableID"> Returns the Returns the Touch Settable Id for the specified device</param>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <remarks>Invoke the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.Query"/> function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.ReportTouchSettableIDByCresnetId(System.Byte,System.UInt32@)">
            <summary>
            Function to return the Touch Settable Id for a specified device based on the Id
            </summary>
            <param name="cresnetId"> cresnet Id for the specific device</param>
            <param name="touchSettableID"> Returns the Touch Settable Id for the specified device</param>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.m_pUserSpecifiedCallback">
            <summary>
            Variable to store the user specified callback
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.m_hHandleToThreadForResponse">
            <summary>
            Variable to store the thread for reading the response back
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.m_hPPNDeviceRespondedEvent">
            <summary>
            Handle to the event which indicates if there is any data or not
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.m_bStopLightNPollNotCalled">
            <summary>
            Indicates if the stop was called
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.GrabResponseForUserLightByPPN">
            <summary>
            Function to get the response when a device which is in Light And Poll is pressed.
            </summary>
            <returns> List of DiscoveredDeviceElement or NULL </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.UserSpecifiedPPNThreadPoolCallback(System.Object)">
            <summary>
            Function to invoke the user specified callback. Executes in the context of a system thread so does not hold off the processing
            </summary>
            <param name="callbackObject"> Callback to invoke</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.CallBackFunctionForUserInitiatedLightByPPNResponses">
            <summary>
            Function to wait until a device gets pressed or the user issues a Stop Light And poll
            </summary>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.InternalUserInitiatedLightAndPoll(Crestron.SimplSharp.CrestronCresnetHelper.LightAndPollDeviceFunctionDelegate,System.UInt32,System.Boolean)">
            <summary>
            Function to do the actual light and poll
            </summary>
            <param name="callbackFunction"> User specified callback</param>
            <param name="touchSettableID"> TSID of device to light up if by TSID</param>
            <param name="bUseTSID"> flag to indicate if to light all the devices or the one specified by TSID</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.LightAllDevices(Crestron.SimplSharp.CrestronCresnetHelper.LightAndPollDeviceFunctionDelegate)">
            <summary>
            Function to enable Light And Poll on all cresnet devices
            </summary>
            <param name="callbackFunction"> User specified callback which is invoked whenever a device which is in Light and poll mode responds.</param>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <remarks> Please ensure that only a single instance of the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.LightDeviceBySpecifiedTouchSettableId(System.UInt32,Crestron.SimplSharp.CrestronCresnetHelper.LightAndPollDeviceFunctionDelegate)"/> or LightAllDevices is being called
            at any given time. If not the outcome is nondeterministic.
            This requires firmware version 1.011.0014 and higher.</remarks>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.LightDeviceBySpecifiedTouchSettableId(System.UInt32,Crestron.SimplSharp.CrestronCresnetHelper.LightAndPollDeviceFunctionDelegate)">
            <summary>
            Function to enable Light And Poll on a specific device based on the touch settable Id
            </summary>
            <param name="touchSettableID">Touch Settable Id for the specific device to light</param>
            <param name="callbackFunction"> User specified callback which is invoked whenever a device which is in Light and poll mode responds.</param>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <remarks> Please ensure that only a single instance of the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.LightAllDevices(Crestron.SimplSharp.CrestronCresnetHelper.LightAndPollDeviceFunctionDelegate)"/> or LightDeviceBySpecifiedTouchSettableId is being called
            at any given time. If not the outcome is nondeterministic.
            This requires firmware version 1.011.0014 and higher.</remarks>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.StopLightAndPoll">
            <summary>
            Function to stop the light and poll.
            </summary>
            <returns>eCresnetDiscoveryReturnValues  Enum indicating failure or success</returns>
            <remarks> This requires firmware version 1.011.0014 and higher.</remarks>
            <exception cref="T:System.NotSupportedException">Cresnet is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.Close">
            <summary>
            Function to close all the native resourcess.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredElementsList">
            <summary>
            List of elements discovered by issuing the <see cref="M:Crestron.SimplSharp.CrestronCresnetHelper.Query"/> function.
            The List is empty until the function is executed or there are no cresnet devices in the system.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement">
            <summary>
            One discovered Cresnet device
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.#ctor">
            <summary>
            Creates an empty discovered device element.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.#ctor(System.Byte,System.String,System.UInt32,System.String)">
            <summary>
            Creates a discovered device element.
            </summary>
            <param name="cresnetId">Cresnet ID.</param>
            <param name="ModelName">Model name.</param>
            <param name="TSID">TSID.</param>
            <param name="versionString">Version number.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.#ctor(System.Byte,System.Byte,System.String,System.UInt32,System.String)">
            <summary>
            Creates a discovered device element.
            </summary>
            <param name="cresnetId">Cresnet ID.</param>
            <param name="cresnetBranchId">Branch ID.</param>
            <param name="ModelName">Model name.</param>
            <param name="TSID">TSID.</param>
            <param name="versionString">Version number.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.ToString">
            <summary>
            Returns a string that displays the values of the object's members.
            </summary>
            <returns>Returns a String that contains each members value.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.CresnetId">
            <summary>
            Cresnet Id of the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.CresnetBranchId">
            <summary>
            Cresnet branch of the device.  Will be set to 0 if the device is not on a cresnet bridge.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.DeviceModel">
            <summary>
            Model Name of the device
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.TouchSettableId">
            <summary>
            Device Touch Settable Identification string 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement.Version">
            <summary>
            Version of the device
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElementComparer">
            <summary>
            Used to compare discovered device elements for equality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElementComparer.Equals(Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement,Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement)">
            <summary>
            Returns true if the TSIDs are the same. If the TSID is zero, this function will fall back on the Cresnet IDs.
            </summary>
            <param name="d1">Discovered device element one.</param>
            <param name="d2">Discovered device element two.</param>
            <returns>Returns true if the TSIDs match</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElementComparer.GetHashCode(Crestron.SimplSharp.CrestronCresnetHelper.DiscoveredDeviceElement)">
            <summary>
            Returns the Discovered device element's TSID's hashcode.
            </summary>
            <param name="d">Discovered device element.</param>
            <returns>Hash code.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues">
            <summary>
            Enum for return codes from the  Cresnet discovery operation
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.NotSupported">
            <summary>
            Indicates discovery not supported
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.Success">
            <summary>
            Indicates discovery operation was successful
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.TimeOut">
            <summary>
            Indicates discovery operation timed out
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.UnknownError">
            <summary>
            Indicates unknown error.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.InvalidParameter">
            <summary>
            Indicates invalid parameter(s) were passed in to the calls
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.Failure">
            <summary>
            Indicates that the operation failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronCresnetHelper.eCresnetDiscoveryReturnValues.InProgress">
            <summary>
            Indicates that the operation is already in progress
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronCresnetHelper.LightAndPollDeviceFunctionDelegate">
            <summary>
            Delegate Signature for the Light and Poll functionality
            </summary>
            <param name="discoveredDeviceElements"> An array of the discovered devices. The array could be null if no devices responded while we were in the
            Light and poll mode.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.GetCanonicalPath(System.String)">
            <summary>
            Resolves path into absolute path on the server.
            </summary>
            <param name="path">Path to resolve.</param>
            <returns>Absolute path</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestOpen(System.String,Crestron.SimplSharp.Ssh.Sftp.Flags,System.Boolean)">
            <summary>
            Performs SSH_FXP_OPEN request
            </summary>
            <param name="path">The path.</param>
            <param name="flags">The flags.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>File handle.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestClose(System.Byte[])">
            <summary>
            Performs SSH_FXP_CLOSE request.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestRead(System.Byte[],System.UInt64,System.UInt32)">
            <summary>
            Performs SSH_FXP_READ request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <returns>data array; null if EOF</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestWrite(System.Byte[],System.UInt64,System.Byte[],System.Threading.EventWaitHandle,System.Action{Crestron.SimplSharp.Ssh.Sftp.Responses.SftpStatusResponse})">
            <summary>
            Performs SSH_FXP_WRITE request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="offset">The offset.</param>
            <param name="data">The data to send.</param>
            <param name="wait">The wait event handle if needed.</param>
            <param name="writeCompleted">Status.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestLStat(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_LSTAT request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>
            File attributes
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestFStat(System.Byte[],System.Boolean)">
            <summary>
            Performs SSH_FXP_FSTAT request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>
            File attributes
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestSetStat(System.String,Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes)">
            <summary>
            Performs SSH_FXP_SETSTAT request.
            </summary>
            <param name="path">The path.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestFSetStat(System.Byte[],Crestron.SimplSharp.Ssh.Sftp.SftpFileAttributes)">
            <summary>
            Performs SSH_FXP_FSETSTAT request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestOpenDir(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_OPENDIR request
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>File handle.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestReadDir(System.Byte[])">
            <summary>
            Performs SSH_FXP_READDIR request
            </summary>
            <param name="handle">The handle.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestRemove(System.String)">
            <summary>
            Performs SSH_FXP_REMOVE request.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestMkDir(System.String)">
            <summary>
            Performs SSH_FXP_MKDIR request.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestRmDir(System.String)">
            <summary>
            Performs SSH_FXP_RMDIR request.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestRealPath(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_REALPATH request
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestStat(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_STAT request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>
            File attributes
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestRename(System.String,System.String)">
            <summary>
            Performs SSH_FXP_RENAME request.
            </summary>
            <param name="oldPath">The old path.</param>
            <param name="newPath">The new path.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestReadLink(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_READLINK request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestSymLink(System.String,System.String)">
            <summary>
            Performs SSH_FXP_SYMLINK request.
            </summary>
            <param name="linkpath">The linkpath.</param>
            <param name="targetpath">The targetpath.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestPosixRename(System.String,System.String)">
            <summary>
            Performs posix-rename@openssh.com extended request.
            </summary>
            <param name="oldPath">The old path.</param>
            <param name="newPath">The new path.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestStatVfs(System.String,System.Boolean)">
            <summary>
            Performs statvfs@openssh.com extended request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> [null on error].</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.RequestFStatVfs(System.Byte[],System.Boolean)">
            <summary>
            Performs fstatvfs@openssh.com extended request.
            </summary>
            <param name="handle">The file handle.</param>
            <param name="nullOnError">if set to <c>true</c> [null on error].</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpSession.HardLink(System.String,System.String)">
            <summary>
            Performs hardlink@openssh.com extended request.
            </summary>
            <param name="oldPath">The old path.</param>
            <param name="newPath">The new path.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpSession.WorkingDirectory">
            <summary>
            Gets remote working directory.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpSession.ProtocolVersion">
            <summary>
            Gets SFTP protocol version.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpSession.NextRequestId">
            <summary>
            Gets the next request id for sftp session.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher">
            <summary>
            Implements Twofish cipher algorithm
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher.P_00">
            Define the fixed p0/p1 permutations used in keyed S-box lookup.
            By changing the following constant definitions, the S-boxes will
            automatically Get changed in the Twofish engine.
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher.#ctor(System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher.gSubKeys">
            gSubKeys[] and gSBox[] are eventually used in the
            encryption and decryption methods.
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher.RS_MDS_Encode(System.Int32,System.Int32)">
             Use (12, 8) Reed-Solomon code over GF(256) to produce
             a key S-box 32-bit entity from 2 key material 32-bit
             entities.
            
             @param    k0 first 32-bit entity
             @param    k1 second 32-bit entity
             @return     Remainder polynomial Generated using RS code
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.TwofishCipher.RS_rem(System.Int32)">
            Reed-Solomon code parameters: (12,8) reversible code:
            <p>
            <pre>
            G(x) = x^4 + (a+1/a)x^3 + ax^2 + (a+1/a)x + 1
            </pre>
            where a = primitive root of field generator 0x14D
            </p>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher">
            <summary>
            Implements ARCH4 cipher algorithm
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.StreamCipher">
            <summary>
            Base class of stream cipher algorithms.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.StreamCipher.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.StreamCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher._engineState">
            <summary>
             Holds the state of the RC4 engine
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="dischargeFirstBytes">if set to <c>true</c> will disharged first 1536 bytes.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Encrypted data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Decrypted data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Arc4Cipher.MinimumSize">
            <summary>
            Gets the minimum data size.
            </summary>
            <value>
            The minimum data size.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod">
            <summary>
            Provides functionality to perform private key authentication.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod.#ctor(System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="keyFiles">The key files.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod.Authenticate(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>
            Result of authentication  process.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.PrivateKeyAuthenticationMethod.KeyFiles">
            <summary>
            Gets the key files used for authentication.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo">
            <summary>
            Provides connection information when password authentication method is used
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Crestron.SimplSharp.Ssh.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.PasswordExpired">
            <summary>
            Occurs when user's password has expired and needs to be changed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage">
            <summary>
            Represents SSH_MSG_REQUEST_SUCCESS message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.RequestSuccessMessage.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.KeepAliveRequestInfo">
            <summary>
            Represents "keepalive@openssh.com" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.KeepAliveRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.KeepAliveRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.EndOfWriteRequestInfo"/> class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.KeepAliveRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo">
            <summary>
            Represents "exit-status" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo.NAME">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
            <param name="exitStatus">The exit status number.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ExitStatusRequestInfo.ExitStatus">
            <summary>
            Gets the exit status number.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost">
            <summary>
            Represents "hostbased" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="publicKeyAlgorithm">The public key algorithm.</param>
            <param name="publicHostKey">The public host key.</param>
            <param name="clientHostName">Name of the client host.</param>
            <param name="clientUsername">The client username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.PublicKeyAlgorithm">
            <summary>
            Gets the public key algorithm for host key
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.PublicHostKey">
            <summary>
            Gets or sets the public host key and certificates for client host.
            </summary>
            <value>
            The public host key.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.ClientHostName">
            <summary>
            Gets or sets the name of the client host.
            </summary>
            <value>
            The name of the client host.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.ClientUsername">
            <summary>
            Gets or sets the client username on the client host
            </summary>
            <value>
            The client username.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageHost.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ForwardedPortDynamic">
            <summary>
            Provides functionality for dynamic port forwarding
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortDynamic"/> class.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortDynamic"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.Start">
            <summary>
            Starts local port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.Stop">
            <summary>
            Stops local port forwarding.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.ForwardedPortLocal"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.ForwardedPortDynamic.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">
            <summary>
            The exception that is thrown when connection was terminated.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshConnectionException.#ctor(System.String,Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshConnectionException.#ctor(System.String,Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.SshConnectionException.DisconnectReason">
            <summary>
            Gets the disconnect reason if provided by the server or client. Otherwise None.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.AuthenticationPasswordChangeEventArgs">
            <summary>
            Provides data for <see cref="E:Crestron.SimplSharp.Ssh.PasswordConnectionInfo.PasswordExpired"/> event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AuthenticationPasswordChangeEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.AuthenticationPasswordChangeEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPasswordChangeEventArgs.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
            <value>
            The new password.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Channels.ChannelSession">
            <summary>
            Implements Session SSH channel.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Channels.ChannelSession._failedOpenAttempts">
            <summary>
            Counts faile channel open attempts
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Channels.ChannelSession._channelOpenResponseWaitHandle">
            <summary>
            Wait handle to signal when response was received to open the channel
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.Open">
            <summary>
            Opens the channel.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.OnClose">
            <summary>
            Called when channel is closed by the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendPseudoTerminalRequest(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32})">
            <summary>
            Sends the pseudo terminal request.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <returns>
            true if request was successful; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendX11ForwardingRequest(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Sends the X11 forwarding request.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> the it is single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendEnvironmentVariableRequest(System.String,System.String)">
            <summary>
            Sends the environment variable request.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendShellRequest">
            <summary>
            Sends the shell request.
            </summary>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendExecRequest(System.String)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="command">The command.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendBreakRequest(System.UInt32)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="breakLength">Length of the break.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendSubsystemRequest(System.String)">
            <summary>
            Sends the subsystem request.
            </summary>
            <param name="subsystem">The subsystem.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendWindowChangeRequest(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sends the window change request.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendLocalFlowRequest(System.Boolean)">
            <summary>
            Sends the local flow request.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendSignalRequest(System.String)">
            <summary>
            Sends the signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendExitStatusRequest(System.UInt32)">
            <summary>
            Sends the exit status request.
            </summary>
            <param name="exitStatus">The exit status.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendExitSignalRequest(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sends the exit signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> [core dumped].</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendEndOfWriteRequest">
            <summary>
            Sends eow@openssh.com request.
            </summary>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendKeepAliveRequest">
            <summary>
            Sends keepalive@openssh.com request.
            </summary>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.SendChannelOpenMessage">
            <summary>
            Sends the channel open message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Channels.ChannelSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Channels.ChannelSession.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Net.WorkerCollection">
            <summary>
            Worker Collection Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.WorkerCollection.#ctor">
            <summary>
            Worker Collection default constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.WorkerCollection.Add(Crestron.SimplSharp.Net.IWorker)">
            <summary>
            Add a Worker to the Worker Collection 
            </summary>
            <param name="aWorker">A <see cref="T:Crestron.SimplSharp.Net.IWorker"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.WorkerCollection.Remove(Crestron.SimplSharp.Net.IWorker)">
            <summary>
            Remove a Worker from the Worker Collection 
            </summary>
            <param name="aWorker">A <see cref="T:Crestron.SimplSharp.Net.IWorker"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.WorkerCollection.Close">
            <summary>
            Close the Data Connection for each Worker instance in the Worker Collection 
            </summary>    
        </member>
        <member name="T:Crestron.SimplSharp.CTimerCallbackFunction">
            <summary>
            Crestron Timer Callback function
            </summary>
            <param name="userSpecific">Any object the user specifies.</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.CTimer">
            <summary>
            Timer class for the Crestron Simpl#
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.TimerCallbackFunction(System.Object)">
            <summary>
            TimerCallbackFunction - this is the callback function for the timer.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.InitializeTimer(Crestron.SimplSharp.CTimerCallbackFunction,System.Object,System.Int64,System.Int64)">
            <summary>
            
            </summary>
            <param name="callbackFunction">Callback function to be invoked.</param>
            <param name="callbackObject"> Any System.Object the user specifies. </param>
            <param name="dueTime"></param>
            <param name="repeatPeriod"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.#ctor(Crestron.SimplSharp.CTimerCallbackFunction,System.Int64)">
            <summary>
            Constructor for the CTimer
            </summary>
            <param name="callbackFunction">Timer Callback Function to invoke</param>
            <param name="dueTime"> The amount of time to delay before callback is invoked, in milliseconds.
            Specify Timeout.Infinite to prevent the timer from starting. Specify zero (0) to start the timer immediately.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.#ctor(Crestron.SimplSharp.CTimerCallbackFunction,System.Object,System.Int64)">
            <summary>
            Constructor for the CTimer
            </summary>
            <param name="callbackFunction">Timer Callback Function to invoke</param>
            <param name="callbackObject">Object to pass to the function </param>
            <param name="dueTime"> The amount of time to delay before callback is invoked, in milliseconds.
            Specify Timeout.Infinite to prevent the timer from starting. Specify zero (0) to start the timer immediately.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.#ctor(Crestron.SimplSharp.CTimerCallbackFunction,System.Object,System.Int64,System.Int64)">
            <summary>
            Constructor for the CTimer
            </summary>
            <param name="callbackFunction">Timer Callback Function to invoke</param>
            <param name="callbackObject">Object to pass to the function</param>
            <param name="dueTime"> The amount of time to delay before callback is invoked, in milliseconds.
            Specify Timeout.Infinite to prevent the timer from starting. Specify zero (0) to start the timer immediately.</param>
            <param name="repeatPeriod">The time interval between invocations of callback, in milliseconds. Specify Timeout.Infinite to disable periodic signaling.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.#ctor">
            <summary>
            Default constructor - Not exposed or used
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.Finalize">
            <summary>
            Destructor for the timer
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.Dispose">
            <summary>
            Clean up of unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.Dispose(System.Boolean)">
            <summary>
            Dispose implementation
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.Stop">
            <summary>
            Function to stop the timer
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.Reset">
            <summary>
            Function to immediately start the timer
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.Reset(System.Int64)">
            <summary>
            Function to start the timer after the specified due time
            </summary>
            <param name="dueTime"> due Time in milliseconds</param>
        </member>
        <member name="M:Crestron.SimplSharp.CTimer.Reset(System.Int64,System.Int64)">
            <summary>
            Function to start the timer after the specified due time and repeatable 
            </summary>
            <param name="dueTime"> due time in milliseconds</param>
            <param name="repeatPeriod"> repeat period in milliseconds </param>
        </member>
        <member name="P:Crestron.SimplSharp.CTimer.Disposed">
            <summary>
            Property to indicate if the CTimer has been disposed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Stopwatch">
            <summary>
            Object to accurately measure elapsed time.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Stopwatch.m_pInternalStopWatch">
            <summary>
            Internal handle to the read stopwatch class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Stopwatch.#ctor">
            <summary>
            Initializes a new instance of the Stopwatch class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Stopwatch.Start">
            <summary>
            Starts, or resumes, measuring elapsed time.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Stopwatch.Stop">
            <summary>
            Stops measuring elapsed time.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Stopwatch.Reset">
            <summary>
            Stops the current time measurement and resets to elapsed time to zero.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Stopwatch.GetTimestamp">
            <summary>
            Gets the current number of ticks in the timer mechanism.
            </summary>
            <returns> A long integer representing the tick counter value of the underlying timer mechanism.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Stopwatch.StartNew">
            <summary>
             Initializes a new Stopwatch instance, sets the elapsed time property to zero, and starts measuring elapsed time.
            </summary>
            <returns> A Stopwatch that has just begun measuring elapsed time</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Stopwatch.Elapsed">
            <summary>
            Gets the total elapsed time measured by the current instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Stopwatch.ElapsedMilliseconds">
            <summary>
            Get the total elapsed time measured by the current instance, in milliseconds.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Stopwatch.ElapsedTicks">
            <summary>
             Gets the total elapsed time measured by the current instance, in timer ticks.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Stopwatch.IsRunning">
            <summary>
            Gets a value indicating if the current Stopwatch timer is running. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Stopwatch.Frequency">
            <summary>
            Gets the frequency of the timer as the number of ticks per second. This field is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Stopwatch.IsHighResolution">
            <summary>
            Indicates whether the timer is based on a high-resolution performance counter.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore">
            <summary>
            SimplSharp personal database manager for this application
            Manages two databases Local - access only to the application
                                  Global - access controlled by application
                                           any application read/write or read only
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.#ctor">
            <summary>
            Provides support to store and retrieve data from a private or global database.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.Finalize">
            <summary>
            Unmount to flush on the way out
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.Close">
            <summary>
            Shut down the database connection and Flush buffered data
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetNextGlobalTag(System.String@,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo@,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ACTION)">
            <summary>
            Walks through each record in the Global Store
            Find the next record after this name and return the record information. 
            If name is an empty string, the record pointer is set to the first record in the Global Database.
            </summary>
            <param name="name">input record name to find, output the next record name</param>
            <param name="info">outputs extended record information</param>
            <param name="flags">optional processing features</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetNextLocalTag(System.String@,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo@)">
            <summary>
            Find the next record after this name and return the record information. 
            If name is an empty string, the record pointer is set to the first record in the Local Database.
            If there are no more records or no records, then the status will be CDS_END_OF_TABLE.
            </summary>
            <param name="name">input record name to find, output the next record name</param>
            <param name="info">outputs extended record information</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetGlobalBoolValue(System.String,System.Boolean@)">
            <summary>
            Find the Global record by tag name and return the boolean value.
            </summary>
            <param name="tag">boolean's name</param>
            <param name="value"> local variable to hold the boolean value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetGlobalUintValue(System.String,System.UInt32@)">
            <summary>
            Find the Global record by tag name and return the unsigned int32 value
            </summary>
            <param name="tag">uint's name</param>
            <param name="value">local variable to hold the uint value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetGlobalIntValue(System.String,System.Int32@)">
            <summary>
            Find the Global record by tag name and return the int32 value
            </summary>
            <param name="tag">integer's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetGlobalDoubleValue(System.String,System.Double@)">
            <summary>
            Find the Global record by tag name and return the double float value
            </summary>
            <param name="tag">double's value</param>
            <param name="value">local variable to hold the double value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetGlobalStringValue(System.String,System.String@)">
            <summary>
            Find the Global record by tag name and return the string value
            </summary>
            <param name="tag">string's name</param>
            <param name="value">local variable to hold the string value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetLocalBoolValue(System.String,System.Boolean@)">
            <summary>
            Find the Local record by tag name and return the Boolean value.
            </summary>
            <param name="tag">Booleans's name</param>
            <param name="value">local variable to hold the boolean value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetLocalUintValue(System.String,System.UInt32@)">
            <summary>
            Find the Local record by tag name and return the unsigned int32 value
            </summary>
            <param name="tag">the uint's name</param>
            <param name="value">local variable to hold the unsigned integer value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetLocalIntValue(System.String,System.Int32@)">
            <summary>
            Find the Local record by tag name and return the int32 value
            </summary>
            <param name="tag">The int's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetLocalDoubleValue(System.String,System.Double@)">
            <summary>
            Find the Local record by tag name and return the double floating value.
            </summary>
            <param name="tag">double's name</param>
            <param name="value">local variable to hold the double value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GetLocalStringValue(System.String,System.String@)">
            <summary>
            Find the Local record by tag name and return the string value
            </summary>
            <param name="tag">string's name</param>
            <param name="value">local variable to hold the string value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetGlobalBoolValue(System.String,System.Boolean)">
            <summary>
            Write/Edit the named Global record with the boolean value
            </summary>
            <param name="tag">he boolean's name</param>
            <param name="value">boolean value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetGlobalUintValue(System.String,System.UInt32)">
            <summary>
             Write/Edit the named Global record with the unsigned int32 value
            </summary>
            <param name="tag">uint's name</param>
            <param name="value">unsigned integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetGlobalIntValue(System.String,System.Int32)">
            <summary>
             Write/Edit the named Global record with the signed int32 value
            </summary>
            <param name="tag">integer's name</param>
            <param name="value">The integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetGlobalDoubleValue(System.String,System.Double)">
            <summary>
             Write/Edit the named Global record with the double value
            </summary>
            <param name="tag">The double's name</param>
            <param name="value">The double value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetGlobalStringValue(System.String,System.String)">
            <summary>
             Write/Edit the named Global record with the string value
            </summary>
            <param name="tag">The string's name</param>
            <param name="value">The string value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetLocalBoolValue(System.String,System.Boolean)">
            <summary>
             Write/Edit the named Local record with the boolean value
            </summary>
            <param name="tag">The boolean's name</param>
            <param name="value">The boolean value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetLocalUintValue(System.String,System.UInt32)">
            <summary>
             Write/Edit the named Local record with the unsigned in32 value
            </summary>
            <param name="tag">The uint's name</param>
            <param name="value"> The unsigned integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetLocalIntValue(System.String,System.Int32)">
            <summary>
             Write/Edit the named Local record with the signed in32 value
            </summary>
            <param name="tag">The int's name</param>
            <param name="value">The integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetLocalDoubleValue(System.String,System.Double)">
            <summary>
            Write/Edit the named Local record with the double value
            </summary>
            <param name="tag">The double's name</param>
            <param name="value">The double value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.SetLocalStringValue(System.String,System.String)">
            <summary>
            Write/Edit the named Local record with the string value
            </summary>
            <param name="tag">The string's name</param>
            <param name="value">The string value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.clearLocal(System.String)">
            <summary>
            Deletes the record by name in local space.
            If name is an empty string then all records are deleted that belong to this application.
            </summary>
            <param name="tag">value name</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.clearGlobal(System.String)">
            <summary>
            Deletes the record by name in global space.
            If name is an empty string then all records are deleted that belong to this application.
            </summary>
            <param name="tag">value name</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.GlobalAccess">
            <summary>
            Global space read/write permissions
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE">
            <summary>
            Crestron DataStore Types
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.Int16">
            <summary>
            Crestron Field Data type Description (Int)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.UInt16">
            <summary>
            Crestron Field Data type Description (Unsigned Int)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.Int32">
            <summary>
            Crestron Field Data type Description (Unsigned Long)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.UInt32">
            <summary>
            Crestron Field Data type enum (Long)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.FileTime">
            <summary>
            Crestron Field Data type enum (UInt)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.String">
            <summary>
            Crestron Field Data type enum (DATETIME)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.Bool">
            <summary>
            Crestron Field Data type enum (byte[])
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.Byte">
            <summary>
            Crestron Field Data type enum (byte[])
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_TYPE.Double">
            <summary>
            Crestron Field Data type Enum (Double)
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_FIELDS">
            <summary>
            Crestron DataStore Fields
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_FIELDS.IDNAME">
            <summary>
            Record Reference Name field
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_FIELDS.IDDATA">
            <summary>
            Record Data field
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_FIELDS.IDTIME">
            <summary>
            Record last modification Time Field
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_FIELDS.IDOWNER">
            <summary>
            Record Creator Field
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_FIELDS.IDACCESS">
            <summary>
            Record Access Field
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CSDAFLAGS">
            <summary>
            Crestron DataStore Record Access 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CSDAFLAGS.OWNERREADONLY">
            <summary>
            Owner Read Only (not supported)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CSDAFLAGS.OWNERREADWRITE">
            <summary>
            Owner Read - Write (Default)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CSDAFLAGS.OTHERREADONLY">
            <summary>
            any readOnly (default for global)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CSDAFLAGS.OTHERREADWRITE">
            <summary>
            any body read - write (applies to global section only)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CSDAFLAGS.OTHERHIDDEN">
            <summary>
            hidden from anybody except owner (applies to global section only)
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR">
            <summary>
            Crestron DataStore application Interface Error Codes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_SUCCESS">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_DATABASE_NOT_FOUND">
            <summary>
            Database not found or not available.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_RECORD_NOT_FOUND">
            <summary>
            record not found.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_WRONG_DATA_TYPE">
            <summary>
            Wrong data type for this record
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_END_OF_TABLE">
            <summary>
            End of the table. No more records
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_ACCESS_DENIED">
            <summary>
            Do not have permission
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_NAME_TOO_BIG">
            <summary>
            Max size is 32 characters
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_STRING_TOO_BIG">
            <summary>
            Max size is 1600 characters
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_MAX_RECORDS">
            <summary>
            Max records allowed in this space
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ERROR.CDS_DATABASE_ERROR">
            <summary>
            Data base error
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ACTION">
            <summary>
            Crestron DataStore Optional processing features
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ACTION.CDS_NAMEONLY">
            <summary>
            Reference name, Default
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ACTION.CDS_RESET">
            <summary>
            Reset table pointer
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ACTION.CDS_EXT_NAME">
            <summary>
            Name returned with extension.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo">
            <summary>
            Record information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo.type">
            <summary>
            Record data type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo.owner">
            <summary>
            creator of the record
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo.date">
            <summary>
            Last modified
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo.access">
            <summary>
            Record access flags
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic">
            <summary>
            SimplSharp personal database manager for this application
            Manages two databases Local - access only to the application
                                  Global - access controlled by application
                                           any application read/write or read only
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.idName">
            <summary>
            The Valid Definitions For Crestron DataStore Records. Record ( idname,idData*,IdSMLPid,idAccess,idTime )
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.CreateGlobalDataStoreFlowControl">
            <summary>
            Method to create the flow control for the global data store.
            This creates a named mutex. We do not use this for anything but just to see if the mutex exists or not.
            If the mutex exists, then it is assumed that the global data store has been created.
            </summary>
            <returns> returns false if global mutex already existed or true otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.InitCrestronDataStore">
            <summary>
            Provides support to store and retrieve data from a private or global database.
            </summary>
            <returns> Error or success </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.Flush">
            <summary>
            Flush buffered data
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetNextGlobalTag(System.String@,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo@,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ACTION)">
            <summary>
            Find the next record after this name in the Global DataStore and return the record information. 
            </summary>
            <param name="name">
            Input record name to find. Output the next record name.
            If name is an empty string, info on the first record will be returned.
            </param>
            <param name="info">Outputs extended record information.</param>
            <param name="flags">Optional processing features.</param>
            <returns>
            CDS_ERROR
            CDS_RECORD_NOT_FOUND - If name is not found or database is empty.
            CDS_END_OF_TABLE - If name is the last record or the output info is the last record.
            Note: CDS_END_OF_TABLE will be returned when "name" is the second to the last record.  In this case "info" will be valid.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetNextLocalTag(System.String@,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo@)">
            <summary>
            Find the next record after this name in the Global DataStore and return the record information. 
            </summary>
            <param name="name">
            Input record name to find. Output the next record name.
            If name is an empty string, info on the first record will be returned.
            </param>
            <param name="info">Outputs extended record information.</param>
            <returns>
            CDS_ERROR
            CDS_RECORD_NOT_FOUND - If name is not found or database is empty.
            CDS_END_OF_TABLE - If name is the last record or the output info is the last record.
            Note: CDS_END_OF_TABLE will be returned when "name" is the second to the last record.  In this case "info" will be valid.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetNextTag(System.String@,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.recInfo@,Crestron.CedbDataStoreInterface.CedbDataStoreStore,Crestron.SimplSharp.CrestronDataStore.CrestronDataStore.CDS_ACTION)">
            <summary>
            Private method to support GetNext______Tag methods for local and global.
            </summary>
            <param name="name">Tag to search for.  If empty/null then return the first record in info.</param>
            <param name="info">Outputs record information.</param>
            <param name="db">Database to perform action on.</param>
            <param name="flags">optional processing features</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalBoolValue(System.String,System.Boolean@)">
            <summary>
            Find the Global record by tag name and return the boolean value.
            </summary>
            <param name="tag">boolean's name</param>
            <param name="value"> local variable to hold the boolean value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalByteValue(System.String,System.Byte[]@)">
            <summary>
            Find the Global record by tag name and return the boolean value.
            </summary>
            <param name="tag">boolean's name</param>
            <param name="value"> local variable to hold the boolean value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalUintValue(System.String,System.UInt32@)">
            <summary>
            Find the Global record by tag name and return the unsigned int32 value
            </summary>
            <param name="tag">uint's name</param>
            <param name="value">local variable to hold the uint value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalIntValue(System.String,System.Int32@)">
            <summary>
            Find the Global record by tag name and return the int32 value
            </summary>
            <param name="tag">integer's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalLongValue(System.String,System.Int64@)">
            <summary>
            Find the Global record by tag name and return the signed int64 value
            </summary>
            <param name="tag">long's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalULongValue(System.String,System.UInt64@)">
            <summary>
            Find the Global record by tag name and return the unsigned int64 value
            </summary>
            <param name="tag">ulong's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalDoubleValue(System.String,System.Double@)">
            <summary>
            Find the Global record by tag name and return the double float value
            </summary>
            <param name="tag">double's value</param>
            <param name="value">local variable to hold the double value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetGlobalStringValue(System.String,System.String@)">
            <summary>
            Find the Global record by tag name and return the string value
            </summary>
            <param name="tag">string's name</param>
            <param name="value">local variable to hold the string value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalBoolValue(System.String,System.Boolean@)">
            <summary>
            Find the Local record by tag name and return the Boolean value.
            </summary>
            <param name="tag">Booleans's name</param>
            <param name="value">local variable to hold the boolean value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalByteValue(System.String,System.Byte[]@)">
            <summary>
            Find the Local record by tag name and return the Boolean value.
            </summary>
            <param name="tag">Booleans's name</param>
            <param name="value">local variable to hold the boolean value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalUintValue(System.String,System.UInt32@)">
            <summary>
            Find the Local record by tag name and return the unsigned int32 value
            </summary>
            <param name="tag">the uint's name</param>
            <param name="value">local variable to hold the unsigned integer value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalIntValue(System.String,System.Int32@)">
            <summary>
            Find the Local record by tag name and return the int32 value
            </summary>
            <param name="tag">The int's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalLongValue(System.String,System.Int64@)">
            <summary>
            Find the Local record by tag name and return the int64 value
            </summary>
            <param name="tag">The long's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalULongValue(System.String,System.UInt64@)">
            <summary>
            Find the Local record by tag name and return the unsigned int64 value
            </summary>
            <param name="tag">The ulong's name</param>
            <param name="value">local variable to hold the int value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalDoubleValue(System.String,System.Double@)">
            <summary>
            Find the Local record by tag name and return the double floating value.
            </summary>
            <param name="tag">double's name</param>
            <param name="value">local variable to hold the double value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GetLocalStringValue(System.String,System.String@)">
            <summary>
            Find the Local record by tag name and return the string value
            </summary>
            <param name="tag">string's name</param>
            <param name="value">local variable to hold the string value</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalBoolValue(System.String,System.Boolean)">
            <summary>
            Write/Edit the named Global record with the boolean value
            </summary>
            <param name="tag">he boolean's name</param>
            <param name="value">boolean value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalByteValue(System.String,System.Byte[])">
            <summary>
             Write/Edit the named Local record with the boolean value
            </summary>
            <param name="tag">The boolean's name</param>
            <param name="value">The boolean value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalUintValue(System.String,System.UInt32)">
            <summary>
             Write/Edit the named Global record with the unsigned int32 value
            </summary>
            <param name="tag">uint's name</param>
            <param name="value">unsigned integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalIntValue(System.String,System.Int32)">
            <summary>
             Write/Edit the named Global record with the signed int32 value
            </summary>
            <param name="tag">integer's name</param>
            <param name="value">The integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalLongValue(System.String,System.Int64)">
            <summary>
             Write/Edit the named Global record with the signed int64 value
            </summary>
            <param name="tag">long's name</param>
            <param name="value">The long value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalLongValue(System.String,System.UInt64)">
            <summary>
             Write/Edit the named Global record with the unsigned int64 value
            </summary>
            <param name="tag">ulong's name</param>
            <param name="value">The ulong value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalDoubleValue(System.String,System.Double)">
            <summary>
             Write/Edit the named Global record with the double value
            </summary>
            <param name="tag">The double's name</param>
            <param name="value">The double value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetGlobalStringValue(System.String,System.String)">
            <summary>
             Write/Edit the named Global record with the string value
            </summary>
            <param name="tag">The string's name</param>
            <param name="value">The string value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalBoolValue(System.String,System.Boolean)">
            <summary>
             Write/Edit the named Local record with the boolean value
            </summary>
            <param name="tag">The boolean's name</param>
            <param name="value">The boolean value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalByteValue(System.String,System.Byte[])">
            <summary>
             Write/Edit the named Local record with the boolean value
            </summary>
            <param name="tag">The boolean's name</param>
            <param name="value">The boolean value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalUintValue(System.String,System.UInt32)">
            <summary>
             Write/Edit the named Local record with the unsigned in32 value
            </summary>
            <param name="tag">The uint's name</param>
            <param name="value"> The unsigned integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalIntValue(System.String,System.Int32)">
            <summary>
             Write/Edit the named Local record with the signed in32 value
            </summary>
            <param name="tag">The int's name</param>
            <param name="value">The integer value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalLongValue(System.String,System.Int64)">
            <summary>
             Write/Edit the named Local record with the signed int64 value
            </summary>
            <param name="tag">The long's name</param>
            <param name="value">The long value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalULongValue(System.String,System.UInt64)">
            <summary>
             Write/Edit the named Local record with the unsigned int64 value
            </summary>
            <param name="tag">The ulong's name</param>
            <param name="value">The ulong value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalDoubleValue(System.String,System.Double)">
            <summary>
            Write/Edit the named Local record with the double value
            </summary>
            <param name="tag">The double's name</param>
            <param name="value">The double value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetLocalStringValue(System.String,System.String)">
            <summary>
            Write/Edit the named Local record with the string value
            </summary>
            <param name="tag">The string's name</param>
            <param name="value">The string value to store</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetValue``1(System.String,``0,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Write/Edit record command hidden from the user
            </summary>
            <typeparam name="T">The type of the value</typeparam>
            <param name="tag">name of the value to store</param>
            <param name="value">The value to store</param>
            <param name="dict">The record list to use</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.InsertAndReturnId(Crestron.CedbDataStoreInterface.CeDbRecordSet,Crestron.CedbDataStoreInterface.CedbDataStoreRecord)">
            <summary>
            Inserts a new record on the table and return it's Id.
            </summary>
            <param name="session">The database session</param>
            <param name="record">The record object</param>
            <returns>The record Id</returns>
            <remarks></remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.clearLocal(System.String)">
            <summary>
            Deletes the record by name in local space.
            If name is an empty string then all records are deleted that belong to this application.
            </summary>
            <param name="tag">value name</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.clearGlobal(System.String)">
            <summary>
            Deletes the record by name in global space.
            If name is an empty string then all records are deleted that belong to this application.
            </summary>
            <param name="tag">value name</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.deleteRecord(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Delete record by name
            </summary>
            <param name="tag">value name</param>
            <param name="dict">local list to delete from</param>
            <returns>CDS_ERROR</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.loadMyStuff(Crestron.CedbDataStoreInterface.CeDbRecordSet,System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Loads up the local list of records related to this application
            </summary>
            <param name="openDB">A <see cref="T:Crestron.CedbDataStoreInterface.CeDbRecordSet"/> object.</param>
            <param name="friendlyName">String to match</param>
            <param name="dict">Dictionary to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.openRecord(Crestron.CedbDataStoreInterface.CeDbRecordSet,System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Find and open the named record
            </summary>
            <param name="openDB">table to open</param>
            <param name="tag">record name</param>
            <param name="dict">list to update</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SeekTag(Crestron.CedbDataStoreInterface.CeDbRecordSet,System.String)">
            <summary>
            Finds the tag optionally qualified with the owner,in the open session(local or global)
            </summary>
            <param name="openDB">the open session to seek</param>
            <param name="tag">tag name\owner (optional)</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.SetAppId(System.Boolean)">
            <summary>
            Blocking call that sets up the applications' environment
            required to execute the requested function.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.ReleaseAppId">
            <summary>
            Release rights to dataStore
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.LookupTag(System.Collections.Generic.Dictionary{System.String,System.Int32},System.String)">
            <summary>
            Look up the tag in the local or global list of known records
            </summary>
            <param name="dict">local record list</param>
            <param name="tag">value name</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.OpenDbSession(Crestron.CedbDataStoreInterface.CedbDataStoreStore,Crestron.CedbDataStoreInterface.CeDbOpenFlags)">
            <summary>
            Open a session with the requested table
            </summary>
            <param name="db">A <see cref="T:Crestron.CedbDataStoreInterface.CedbDataStoreStore"/> object.</param>
            <param name="flg">A <see cref="T:Crestron.CedbDataStoreInterface.CeDbOpenFlags"/> value.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.getFriendly">
            <summary>
            get the friendly name of this program from the registry
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.mountdatabase">
            <summary>
            Make sure the database exists and is useable.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.GlobalAccess">
            <summary>
            Global space read/write permissions
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.CedbSimplRecord">
            <summary>
            Crestron SIMPL Sharp record definition class
            record
                Name
                Value
                Date
                Owner
                Access Flags
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.CedbSimplRecord.idName">
            <summary>
            Crestron record field definitions(property id's)
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.CedbSimplRecord.#ctor(System.String)">
            <summary>
            Constructor for empty record
            </summary>
            <param name="appId">Application Identifier</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.CedbSimplRecord.#ctor(Crestron.CedbDataStoreInterface.CedbDataStoreRecord)">
            <summary>
            Constructor for existing record
            </summary>
            <param name="record">A <see cref="T:Crestron.CedbDataStoreInterface.CedbDataStoreRecord"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.CedbSimplRecord.setProp``1(System.UInt32,``0)">
            <summary>
            Create a property/value entry in the record
            </summary>
            <typeparam name="T">Property type</typeparam>
            <param name="idProp">Property Identifier</param>
            <param name="Pvalue">Property Value</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronDataStore.CrestronDataStoreStatic.CedbSimplRecord.UpdateMembers">
            <summary>
            Extract property members that apply to the SIMPL fields
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Comparers.UInt32EqualityComparer">
            <summary>
            Class to determine if two Uints are of the same value.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Comparers.UInt32EqualityComparer.Equals(System.UInt32,System.UInt32)">
            <summary>
            Method to determine if two <see cref="T:System.UInt32"/> values are equal.
            </summary>
            <param name="x">First <see cref="T:System.UInt32"/> value to compare.</param>
            <param name="y">Second <see cref="T:System.UInt32"/> value to compare.</param>
            <returns>'true' the values are the same; 'false' otherwise.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Comparers.UInt32EqualityComparer.GetHashCode(System.UInt32)">
            <summary>
            Return the value from <see cref="M:System.UInt32.GetHashCode"/>.
            </summary>
            <param name="obj">Object to get the hash code of.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Comparers.Int32EqualityComparer">
            <summary>
            Class to determine if two ints are of the same value.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Comparers.Int32EqualityComparer.Equals(System.Int32,System.Int32)">
            <summary>
            Method to determine if two <see cref="T:System.Int32"/> values are equal.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Comparers.Int32EqualityComparer.GetHashCode(System.Int32)">
            <summary>
            Return the value from <see cref="M:System.Int32.GetHashCode"/>.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CCriticalSection">
            <summary>
            Critical Section synchronization between threads.
            </summary>
            <example> This is how we would use a CriticalSection 
            <code> 
            // Initialize the critical section
            CCriticalSection tempCS = new CCriticalSection();
            // Enter the critical section
            tempCs.Enter();
            // Do anything critical in here
            // ..
            // ..
            // Leave the critical section
            tempCs.Leave();
            </code>
            </example>
        </member>
        <member name="M:Crestron.SimplSharp.CCriticalSection.#ctor">
            <summary>
            Initialize the Critical Section object.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CCriticalSection.Enter">
            <summary>
            Block until ownership of the critical section can be obtained.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Critical Section has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CCriticalSection.Leave">
            <summary>
            Release ownership of the critical section.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Critical Section has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CCriticalSection.TryEnter">
            <summary>
            Attempt to enter the critical section without blocking. 
            </summary>
            <returns>True, calling thread has ownership of the critical section; otherwise, false.</returns>      
            <exception cref="T:System.ObjectDisposedException">Critical Section has been disposed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CCriticalSection.Dispose">
            <summary>
            Clean up of unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CCriticalSection.Dispose(System.Boolean)">
            <summary>
            Dispose implementation
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CCriticalSection.Finalize">
            <summary>
            Make sure unmanaged handle is cleaned up from the finalizer.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CCriticalSection.Disposed">
            <summary>
            Property to indicate if the Critical Section object has been disposed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.SshClient">
            <summary>
            Provides client connection to SSH server.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.SshClient._forwardedPorts">
            <summary>
            Holds the list of forwarded ports
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.SshClient._disposeConnectionInfo">
            <summary>
            If true, causes the connectionInfo object to be disposed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.#ctor(Crestron.SimplSharp.Ssh.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SshClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.AddForwardedPort(Crestron.SimplSharp.Ssh.ForwardedPort)">
            <summary>
            Adds the forwarded port.
            </summary>
            <param name="port">The port.</param>
            <exception cref="T:System.InvalidOperationException">Forwarded port is already added to a different client.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="port"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Port is already forwarded</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.RemoveForwardedPort(Crestron.SimplSharp.Ssh.ForwardedPort)">
            <summary>
            Stops and removes the forwarded port from the list.
            </summary>
            <param name="port">Forwarded port.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="port"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateCommand(System.String)">
            <summary>
            Creates the command to be executed.
            </summary>
            <param name="commandText">The command text.</param>
            <returns><see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> object.</returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateCommand(System.String,System.Text.Encoding)">
            <summary>
            Creates the command to be executed with specified encoding.
            </summary>
            <param name="commandText">The command text.</param>
            <param name="encoding">The encoding to use for results.</param>
            <returns><see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> object which uses specified encoding.</returns>
            <remarks>This method will change current default encoding.</remarks>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandText"/> or <paramref name="encoding"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.RunCommand(System.String)">
            <summary>
            Creates and executes the command.
            </summary>
            <param name="commandText">The command text.</param>
            <returns>Returns an instance of <see cref="T:Crestron.SimplSharp.Ssh.SshCommand"/> with execution results.</returns>
            <remarks>This method internally uses asynchronous calls.</remarks>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshException">Invalid Operation - An existing channel was used to execute this command.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandText"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShell(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32},System.Int32)">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal mode.</param>
            <param name="bufferSize">Size of the internal read buffer.</param>
            <returns>
            Returns a representation of a <see cref="T:Crestron.SimplSharp.Ssh.Shell"/> object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShell(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32})">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal mode.</param>
            <returns>
            Returns a representation of a <see cref="T:Crestron.SimplSharp.Ssh.Shell"/> object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShell(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <returns>
            Returns a representation of a <see cref="T:Crestron.SimplSharp.Ssh.Shell"/> object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShell(System.Text.Encoding,System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32},System.Int32)">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding to use to send the input.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal mode.</param>
            <param name="bufferSize">Size of the internal read buffer.</param>
            <returns>
            Returns a representation of a <see cref="T:Crestron.SimplSharp.Ssh.Shell"/> object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShell(System.Text.Encoding,System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32})">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal modes.</param>
            <returns>
            Returns a representation of a <see cref="T:Crestron.SimplSharp.Ssh.Shell"/> object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShell(System.Text.Encoding,System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <returns>
            Returns a representation of a <see cref="T:Crestron.SimplSharp.Ssh.Shell"/> object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Creates the shell stream.
            </summary>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns>
            Reference to Created ShellStream object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.Collections.Generic.IDictionary{Crestron.SimplSharp.Ssh.Common.TerminalModes,System.UInt32})">
            <summary>
            Creates the shell stream.
            </summary>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <returns>
            Reference to Created ShellStream object.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.OnDisconnected">
            <summary>
            Called when client is disconnected from the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.SshClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshClient.ForwardedPorts">
            <summary>
            Gets the list of forwarded ports.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.SshClient.EthernetAdapter">
            <summary>
            Returns the Ethernet adapter on which the socket resides
            EthernetAdapterType.EthernetLANAdapter indicates that the socket is on the LAN Adapter
            EthernetAdapterType.EthernetCSAdapter indicates the Control Subnet side (for a system with a router)
            EthernetAdapterType.EthernetUnknownAdapter indicates that the socket is not initialized as yet
            EthernetAdapterType.EthernetLAN2Adapter indicates the second LAN Adapter
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash">
            <summary>
            MD5 algorithm implementation
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Routes data written to the object into the hash algorithm for computing the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="ibStart">The offset into the byte array from which to begin using data.</param>
            <param name="cbSize">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.MD5Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelWindowAdjustMessage.BytesToAdd">
            <summary>
            Gets number of bytes to add to the window.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo">
            <summary>
            Used to open "forwarded-tcpip" channel type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedAddress">
            <summary>
            Gets the connected address.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedPort">
            <summary>
            Gets the connected port.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureReasons">
            <summary>
            List channel open failure reasons defined by the protocol.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureReasons.AdministativelyProhibited">
            <summary>
            SSH_OPEN_ADMINISTRATIVELY_PROHIBITED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureReasons.ConnectFailed">
            <summary>
            SSH_OPEN_CONNECT_FAILED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureReasons.UnknownChannelType">
            <summary>
            SSH_OPEN_UNKNOWN_CHANNEL_TYPE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureReasons.ResourceShortage">
            <summary>
            SSH_OPEN_RESOURCE_SHORTAGE
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageKeyboardInteractive">
            <summary>
            Represents "keyboard-interactive" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageKeyboardInteractive.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageKeyboardInteractive"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageKeyboardInteractive.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageKeyboardInteractive.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageKeyboardInteractive.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.RequestMessageKeyboardInteractive.SubMethods">
            <summary>
            Gets authentication sub methods.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.ExpectAsyncResult">
            <summary>
            Provides additional information for asynchronous command execution
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.ExpectAsyncResult.#ctor(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.ExpectAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ShellDataEventArgs">
            <summary>
            Provides data for Shell DataReceived event
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ShellDataEventArgs.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ShellDataEventArgs"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ShellDataEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ShellDataEventArgs"/> class.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ShellDataEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ShellDataEventArgs.Line">
            <summary>
            Gets the line data.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.UrlHostNameType">
            <summary>
            Defines host name types for the System.Url.CheckHostName(System.String) method.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.UrlHostNameType.Unknown">
            <summary>
            The type of the host name is not supplied.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.UrlHostNameType.Basic">
            <summary>
            The host is set, but the type cannot be determined.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.UrlHostNameType.Dns">
            <summary>
            The host name is a domain name system (DNS) style host name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.UrlHostNameType.IPv4">
            <summary>
            The host name is an Internet Protocol (IP) version 4 host address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.UrlHostNameType.IPv6">
            <summary>
            The host name is an Internet Protocol (IP) version 6 host address.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.KnownProtocols">
            <summary>
            The KnownProtocols class represents some common protocols (ftp, ssh, telnet, smtp, http, pop3, https) and their default ports which are used by the UrlParser.
            If you want UrlParser to make out any other protocol, you can register this protocol by using RegisterProtocol method.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.KnownProtocols.RegisterProtocol(System.String,System.Int32)">
            <summary>
            Registers a new protocol and its default port for the UrlParser.
            </summary>
            <param name="aName">Protocol name to register</param>
            <param name="aPort">Port Number</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.KnownProtocols.GetProtocolDefaultPort(System.String)">
            <summary>
            Returns the default port number for the specified protocol.
            </summary>
            <param name="aProtocol">String containing name of protocol</param>
            <returns>the default port number for the specified protocol</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.UrlParser">
            <summary>
            The UrlParser class represents a URL string and its separate components. It can be assigned a full string to the UrlParser via the Url property, 
            or it can be accessed through separate parts of the URL via the individual properties.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParser.#ctor">
            <summary>
            URL parser default constructor. Sets Protocol and port by default.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParser.#ctor(System.String)">
            <summary>
            URL parser constructor with URL parameter that parses the input URL.
            </summary>
            <param name="aUrl">String containing the URL to parse</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="aUrl"/> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="aUrl"/> is incorrectly formed or contains invalid credentials.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParser.#ctor(Crestron.SimplSharp.Net.Http.UrlParser,System.String)">
            <summary>
            
            </summary>
            <param name="baseUrl">The base URL.</param>
            <param name="relativeUrl">The relative URL to add to the base URL.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="baseUrl"/> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="baseUrl"/> is incorrectly formed or contains invalid credentials.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParser.ToString">
            <summary>
            Returns the URL as a string.
            </summary>
            <returns>the URL as a string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParser.Parse(System.String)">
            <summary>
            Parses the URL and sets the proper definitions for all aspects of the URL
            </summary>
            <param name="aUrl">String containing the URL to parse</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="aUrl"/> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="aUrl"/> is incorrectly formed or contains invalid credentials.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.Url">
            <summary>
            The full URL. Only the relevant parts of the URL will be included; 
            the Port will be omitted if it is equal to the default for the specified Protocol, 
            Path and Params will be omitted if they are not assigned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.PathAndParams">
            <summary>
            Combined Path and Parameters of the URL ("test.pas?query=something"). 
            The Parameters and the separating questionmark will only be included if the Params value is assigned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.HostnameAndPort">
            <summary>
            Combined Hostname and Port of the URL ("www.website.com:81"). 
            The Port and the separating colon will only be included if the Port value is different from the default port for the specified protocol.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.Protocol">
            <summary>
            Protocol portion of the URL ("http").
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.Hostname">
            <summary>
            Get the HostName.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.HostnameType">
            <summary>
            Get Hostname type
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.Port">
            <summary>
            Port portion of the URL ("81").
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.Path">
            <summary>
            Path portion of the URL ("/test.asp)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.Params">
            <summary>
            Parameters portion of the URL ("?query=something").
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.Fragment">
            <summary>
            The Fragment property gets any text following a fragment marker (#) in the URL, including the fragment marker itself.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.IsUnc">
            <summary>
            The IsUnc property is true if the specified Url instance is a UNC path (such as \\server\folder or file://server/folder). 
            This property always returns true if the URL has the file:// scheme and specifies a host component.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.IsAbsoluteUri">
            <summary>
            The AbsoluteUrl property includes the entire URL stored in the Url instance, including all fragments and query strings.
            </summary>
            <exception cref="T:System.InvalidOperationException">This instance represents a relative URL, 
            and this property is valid only for absolute URLs. </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.IsDefaultPort">
            <summary>
            Gets whether the port value of the URL is the default for this scheme.
            </summary>
            <exception cref="T:System.InvalidOperationException">This instance represents a relative URL, 
            and this property is valid only for absolute URLs. </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.IsFile">
            <summary>
            Gets a value indicating whether the specified Url is a file URL.
            </summary>
            <exception cref="T:System.InvalidOperationException">This instance represents a relative URL, 
            and this property is valid only for absolute URLs. </exception>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.UrlParser.IsLoopback">
            <summary>
            Gets whether the specified Url references the local host.
            </summary>
            <exception cref="T:System.InvalidOperationException">This instance represents a relative URL, 
            and this property is valid only for absolute URLs. </exception>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.UrlParserException">
            <summary>
            An Exception object that contains errors returned from an UrlParser call.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParserException.#ctor">
            Parameterless (default) constructor
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParserException.#ctor(System.String)">
            Constructor for an exception with text message
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.UrlParserException.#ctor(System.String,System.Exception)">
            Constructor for an exception with text message and inner exception
            <param name="message">General message about the Exception.</param>
            <param name="e">Inner Exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.AsyncStreamStateEnum">
            <summary>
            The Async Stream States
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.AsyncStreamStateEnum.NewRequest">
            <summary>
            Async Request has not been initiated
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.AsyncStreamStateEnum.BeginRequest">
            <summary>
            Async Request has been initiated
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.AsyncStreamStateEnum.EndRequest">
            <summary>
            Connection made waiting for data
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.AsyncStreamStateEnum.BeginResponse">
            <summary>
            Initiated response
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.AsyncStreamStateEnum.EndResponse">
            <summary>
            StopReceiving Data
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.AsyncStreamStateEnum.Complete">
            <summary>
            Task Completed
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.AsyncStatus.AsyncState">
            <summary>
            State information for an AsyncStreamOperation
            BeginGetRequestStream,EndGetRequestStream,BeginResponseStream, and EndResponseStream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpRequestResponse">
            <summary>
            Abstract base class representing an HTTP message. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestResponse.#ctor">
            <summary>
            Creates an instance of the HttpRequestResponse Class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestResponse.#ctor(Crestron.SimplSharp.Net.Http.HttpHeaders)">
            <summary>
            Creates an instance of the HttpRequestResponse Class with HTTP Header parameter.
            </summary>
            <param name="aHeader">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpHeaders"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestResponse.CloneEvents(Crestron.SimplSharp.Net.Http.HttpRequestResponse)">
            <summary>
            Clones the events of the HTTP Request Response.
            </summary>
            <param name="aRequestOrResponse">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpRequestResponse"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestResponse.TriggerOnTransferStart(Crestron.SimplSharp.Net.TransferDirection,System.Int64)">
            <summary>
            Trigger the OnTransferStart Event Handler
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
            <param name="aTotal">Total byte count.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestResponse.TriggerOnTransferEnd(Crestron.SimplSharp.Net.TransferDirection)">
            <summary>
            Trigger the OnTransferEnd Event Handler
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestResponse.TriggerOnTransferProgress(Crestron.SimplSharp.Net.TransferDirection,System.Int64)">
            <summary>
            Trigger the OnTransferProgress Event Handler 
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
            <param name="aCurrent">The current byte count transfered.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.Header">
            <summary>
            Get or set the HTTP Response Header
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.Encoding">
            <summary>
            Determines the Encoding for the HTTP Request Response
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.Client">
            <summary>
             Gets the Client property status for the HTTPRequestResponse.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.Server">
            <summary>
            Gets the Server property status for the HTTPRequestResponse.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Http.HttpRequestResponse.OnTransferStart">
            <summary>
            OnTransferStart Event handler
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Http.HttpRequestResponse.OnTransferEnd">
            <summary>
            OnTransferEnd Event Handler
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Net.Http.HttpRequestResponse.OnTransferProgress">
            <summary>
            OnTransferProgress Event Handler
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.HasOnTransferProgress">
            <summary>
            Determines whether the current HTTPRequest Response has an OnTransferProgress event handler.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.AsyncState">
            <summary>
            contains information about an asynchronous operation.
            </summary>
            <return> returns information about an asynchronous operation.</return>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed.
            </summary>
            <return> true if the operation is complete; otherwise, false.</return>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestResponse.ThisClient">
            <summary>
            Gets the Client that is host to this Async request
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse">
            <summary>
             Base class representing an incoming HTTP message - either a request to be received by the HttpServer, or a response received by the HttpClient. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.#ctor(Crestron.SimplSharp.Net.Connection,Crestron.SimplSharp.Net.Http.HttpHeaders)">
            <summary>
            Creates an instance of the HttpIncomingRequestResponse Class
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <param name="aHeaders">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpHeaders"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.FlushContent">
            <summary>
            Flush the content of the HTTP Incoming Stream.
            </summary>
            <returns>true if the operation succeeds; otherwise, false </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.Validate">
            <summary>
            Validate that the HTTP Header "Transfer-Encoding" is not chunked.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpRequestInvalidException">This request has Chunked transfer encoding.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.DataConnection">
            <summary>
            Gets the Data Connection for the HttpIncomingRequestResponse instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.ContentBytes">
            <summary>
            Returns the HTTP body in the form of a byte array.
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The stream unexpected ended.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Error reading HTTP chunk data.</exception>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.ContentStream">
            <summary>
            Returns a Stream object with the HTTP body of the received request (server) or response (client).
            Because ContentStream provides you with direct access to the underlying Connection Stream, 
            it is the fastest and most efficient way to access the response (as opposed to ContentString and ContentBytes, 
            both of which involve copying the entire data from the stream into a memory buffer).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.ContentString">
            <summary>
            Returns the HTTP body in form of a String object.
            <exception cref="T:Crestron.SimplSharp.CrestronIO.EndOfStreamException">The stream unexpected ended.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">Error reading HTTP chunk data.</exception>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.HasContentLength">
            <summary>
            Specifies whether the HTTP header provides a ContentLength field.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.ContentLength">
            <summary>
            Contains the ContentLength header value received from the remote side. 
            If the remote did not provide a length (for example in HTTP 1.0 scenarios, or if Keep-Alive is not supported), accessing the property will raise an exception.
            Use the HasContentLength property to determine if a valid ContentLength has been received.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.KeepAlive">
            <summary>
            Keeps the HTTP Request Response connection alive.
            If enabled (true), once a request is made and a connection is established, this connection is kept open and used for future requests. 
            If disabled, the connection is closed, and a new connection is created for future requests.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse.Chunked">
            <summary>
            Determines whether data being transferred will be chunked or not.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.Flush">
            <summary>
            Clears all buffers for this stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aCount">Count of bytes to use in the byte array</param>
            <returns></returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.ReadByte">
            <summary>
            Reads a byte from the current stream and advances the position within the stream by one.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="aOffset">irrelevant</param>
            <param name="aOrigin">irrelevant</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="aLength">irrelevant</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="aBuffer">array of Byte buffer</param>
            <param name="aOffset">offset</param>
            <param name="aCount">Size</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse">
            <summary>
            The Abstract Base Class represents an outgoing HTTP message - either a request to be sent from the HttpClient, or a response to be sent from the HttpServer. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.#ctor">
            <summary>
            HttpOutgoingRequestResponse base constructor
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.#ctor(Crestron.SimplSharp.Net.Http.HttpHeaders)">
            <summary>
            HttpOutgoingRequestResponse with custom HTTP Header parameter
            </summary>
            <param name="aHeader">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpHeaders"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.CleanContent">
            <summary>
            Clean out any request data in this request
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.FinalizeHeader">
            <summary>
            Sets the Header Value for the "Content-Length" in the Content Source.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.WriteToConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Writes the Header and Body to the Connection instance. 
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.WriteHeaderToConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Write the Header to the Connection instance.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.WriteBodyToConnection(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Write the Header to the Connection instance.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.ContentSource">
            <summary>
            Defines which property (ContentBytes, ContentStream or ContentString) will be used to send the body of the response. 
            Assigning any of these three properties will automatically set the ContentSource property so that the content will always be sent from the appropriate source.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.ContentBytes">
            <summary>
            Assigns a byte array to send back as the HTTP body to this property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.ContentStream">
            <summary>
            Assigns a stream to send back as HTTP body to this property. When assigned (and ContentSource is set to ContentStream),
            you can use the CloseStream property to determine if the stream should be closed automatically after sending it to the connection (true) or not (false).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.ContentString">
            <summary>
            Assigns a string to send back as HTTP body to this property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.DelayDataClose">
            <summary>
            Delays the demise of request data in writebody
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.CloseStream">
            <summary>
            When ContentSource is set to ContentStream (and a ContentStream is assigned), 
            this property determines if the stream should be closed automatically after sending it to the connection (true) or not (false).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpOutgoingRequestResponse.KeepAlive">
            <summary>
            Determines the keep alive status of the HTTP Outgoing Request Response. 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpServerRequest">
            <summary>
            HTTP Server Request Class.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.HttpServerRequest.NotSupportedRequest">
            <summary>
            Property to indicate if the header of this request is valid or supported.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerRequest.#ctor(Crestron.SimplSharp.Net.Connection,Crestron.SimplSharp.Net.Http.HttpHeaders)">
            <summary>
            Creates an instance of the HTTPServerRequest class.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <param name="aHeaders">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpHeaders"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerRequest.Validate">
            <summary>
            Validate the HTTP Server Request by ensuring that the 'Host' header has a value. 
            </summary>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpRequestInvalidException">This request has no host header.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerRequest.Client">
            <summary>
            Always returns false for Client Property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerRequest.Server">
            <summary>
            Always returns true for Server Property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerRequest.QueryString">
            <summary>
            Gets the Query string for this HTTP Server Request instance.
            </summary>
            <returns>A <see cref="P:Crestron.SimplSharp.Net.Http.HttpServerRequest.QueryString"/>.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerRequest.Path">
            <summary>
            Gets the Path for the HTTP Server Request.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpServerResponse">
            <summary>
            The HttpServerResponse class is used to create a server response that is sent back to the client by the HttpServer.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerResponse.#ctor">
            <summary>
            Creates a new instance of the HttpServerResponse class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerResponse.SendError(System.Int32,System.String,System.String)">
            <summary>
            Wraps the provided error message into an HTML document and puts the resulting document into ContentBytes.
            </summary>
            <param name="aCode">Int32 with HTTP response code.</param>
            <param name="aResponseText">String with HTTP response text.</param>
            <param name="aMessage">String to put into response document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerResponse.SendError(System.Int32,System.String)">
            <summary>
            Wraps the provided error message into an HTML document and puts the resulting document into ContentBytes.
            This method always sets the ResponseText to ERROR.
            </summary>
            <param name="aCode">Int32 with HTTP response code.</param>
            <param name="aMessage">String to put into the response document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerResponse.SendError(System.Int32,System.String,System.Exception)">
            <summary>
            Wraps the provided System.Exception object, including the exception type name, 
            exception message and full stacktrace into an HTML document and puts the resulting document into ContentBytes.
            </summary>
            <param name="aCode">Int32 with HTTP response code.</param>
            <param name="aResponseText">String with HTTP response text.</param>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerResponse.SendErrorWithCustomBody(System.Int32,System.String,System.String)">
            <summary>
            Allows to set custom error messages. Unlike the SendError methods, this method doesn't wrap the provided text into any HTML tags. 
            The provided response body is used as is.
            </summary>
            <param name="aCode">Int32 with HTTP response code.</param>
            <param name="aResponseText">String with HTTP response text.</param>
            <param name="aBody">String to use as response document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpServerResponse.FinalizeHeader">
            <summary>
            This method finalizes the HTTP header.
            It sets the correct value of the Content-Length header and sets the HTTP version header to 1.1.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerResponse.Client">
            <summary>
            Always False.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerResponse.Server">
            <summary>
            Always True.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerResponse.Code">
            <summary>
            Gets or sets the HTTP status code of the response. The default value is 200.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpServerResponse.ResponseText">
             <summary>
             Gets or sets the HTTP status code description (For example, OK when the Code is 200).
            It is up to the caller to ensure that the Code and the ResponseText values correspond to each other.
            The default value is OK.
             </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpClientRequest">
            <summary>
            The HttpClientRequest class represents an HTTP request sent from the client to the server. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClientRequest.#ctor">
            <summary>
            Creates an instance of the HttpClientRequest Class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClientRequest.FinalizeHeader">
            <summary>
            Sets the HTTP headers of the request.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientRequest.Client">
            <summary>
            Gets a flag indicating whether this class is used in a client application.
            The value of this class is always true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientRequest.Server">
            <summary>
            Gets a flag indicating whether this class is used in a server application.
            The value of this class is always false.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientRequest.Url">
            <summary>
            Gets or sets the target URL for the HTTP request.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientRequest.RequestType">
            <summary>
            Gets or sets the type of the HTTP request.
            Possible values are:
            RequestType.Get
            RequestType.Post
            RequestType.Put
            RequestType.Delete
            RequestType.Head
            RequestType.Patch
            The default value of this class is RequestType.Get.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpClientResponse">
            <summary>
            The HttpClientResponse class represents an HTTP response received by the client from the server. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClientResponse.#ctor(Crestron.SimplSharp.Net.Connection,Crestron.SimplSharp.Net.Http.HttpHeaders)">
            <summary>
            Creates a new instance of the HttpClientResponse class.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <param name="aHeaders">An <see cref="T:Crestron.SimplSharp.Net.Http.HttpHeaders"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClientResponse.Validate">
            <summary>
            Validate the HTTP Client Response.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpClientResponse.Dispose">
            <summary>
            Releases resources used by the current instance, in particular the disposed HTTP connection instance that was provided as a constructor parameter earlier.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientResponse.Client">
            <summary>
            Gets a flag indicating whether this class is used in a client application.
            The value of this property is always true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientResponse.Server">
            <summary>
            Gets a flag indicating whether this class is used in a server application.
            The value of this class is always false.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientResponse.Code">
            <summary>
            Gets the HTTP Result code received from the server.
            HTTP codes of 300 and above usually indicate a redirect or error on the server side (such as 404 "File not Found")
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpClientResponse.ResponseUrl">
            <summary>
            Gets the URL of the Internet resource that responded to the request.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpInStream.Flush">
            <summary>
            Clears all buffers for this stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpInStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpInStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aCount">Count of bytes to use in the byte array</param>
            <returns></returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpInStream.ReadByte">
            <summary>
            Reads a byte from the current stream and advances the position within the stream by one.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpInStream.Seek(System.Int64,Crestron.SimplSharp.CrestronIO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="aOffset">irrelevant</param>
            <param name="aOrigin">irrelevant</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpInStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="aLength">irrelevant</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpInStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="aBuffer">array of Byte buffer</param>
            <param name="aOffset">offset</param>
            <param name="aCount">Size</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpInStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpInStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpInStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpInStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpInStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpIncomingStream">
            <summary>
            Implements an incoming stream of HTTP message (HttpIncomingRequestResponse).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.#ctor(Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse)">
            <summary>
            Creates an instance of the HttpIncomingStream Class.
            </summary>
            <param name="aOwner">A <see cref="T:Crestron.SimplSharp.Net.Http.HttpIncomingRequestResponse"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.Flush">
            <summary>
            Clears all buffers for this stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="aBuffer">System.Byte array to receive the bytes read.</param>
            <param name="aOffset">Starting offset in the byte array.</param>
            <param name="aCount">Count of bytes to use in the byte array</param>
            <returns></returns>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.ReadByte">
            <summary>
            Reads a byte from the current stream and advances the position within the stream by one.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="aOffset">irrelevant</param>
            <param name="aOrigin">irrelevant</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="aLength">irrelevant</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpIncomingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="aBuffer">array of Byte buffer</param>
            <param name="aOffset">offset</param>
            <param name="aCount">Size</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException"></exception> 
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpIncomingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.ContentSource">
            <summary>
            Defines which type of the HTTP body will be used - array of bytes or string.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.ContentSource.ContentNone">
            <summary>
            N/A
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.ContentSource.ContentBytes">
            <summary>
            Array of bytes content
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.ContentSource.ContentStream">
            <summary>
            Stream content
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.ContentSource.ContentString">
            <summary>
            String content
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.RequestType">
            <summary>
            This enumeration defines the common values for the HTTP methods used to make a request.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.RequestType.Get">
            <summary>
            GET request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.RequestType.Post">
            <summary>
            POST request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.RequestType.Put">
            <summary>
            Put request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.RequestType.Delete">
            <summary>
            Delete Request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.RequestType.Head">
            <summary>
            Head Request
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.Http.RequestType.Patch">
            <summary>
            Patch Request
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.QueryString">
            <summary>
            QueryString represents a collection of key/value pairs which is used to store parameters from the HTTP path (the tail from symbol "?" to the end).
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.QueryString.#ctor(System.String)">
            <summary>
            QueryString constructor with query parameter which stores parameters from the HTTP path (the tail from symbol "?" to the end).
            </summary>
            <param name="aQuery">Query string with parameter in HTTP path</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.QueryString.ToString">
            <summary>
            ToString that returns the Query String.
            </summary>
            <returns>the Query String</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.QueryString.Item(System.Object)">
            <summary>
            Returns Query string using Key as index.
            </summary>
            <param name="aKey">Key to look up.</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpRequestInvalidException">
            <summary>
            HttpRequestInvalidException class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestInvalidException.#ctor(System.Int32,System.String)">
            <summary>
            Constructor for an exception of the HTTP Request Response with ErrorCode and Error Message.
            </summary>
            <param name="aErrorCode">Integer error code to return for this request.</param>
            <param name="aErrorMessage">String with error message text to return for this request.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpRequestInvalidException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            Constructor for an exception with Error Code, message, and inner Exception. 
            </summary>
            <param name="aErrorCode">Integer error code to return for this request.</param>
            <param name="aErrorMessage">String with error message text to return for this request.</param>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpRequestInvalidException.Response">
            <summary>
            The specific content returned from the server when the error occurred.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferStartEventHandler">
            <summary>
            Delegate for the TransferStartEvent Handler
            </summary>
            <param name="sender">An object representing the sender of the event</param>
            <param name="e">A <see cref="T:Crestron.SimplSharp.Net.TransferStartEventArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferEndEventHandler">
            <summary>
            Delegate for the TransferEndEvent Handler
            </summary>
            <param name="sender">An object representing the sender of the event</param>
            <param name="e">A <see cref="T:Crestron.SimplSharp.Net.TransferEndEventArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferProgressEventHandler">
            <summary>
            Delegate for the TransferProgressEvent Handler
            </summary>
            <param name="sender">An object representing the sender of the event</param>
            <param name="e">A <see cref="T:Crestron.SimplSharp.Net.TransferProgressEventArgs"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferDirection">
            <summary>
            Transfer direction for Events.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.TransferDirection.Send">
            <summary>
            Send Direction
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.TransferDirection.Receive">
            <summary>
            Receive Direction
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferEventArgs">
            <summary>
            TransferEventArgs Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TransferEventArgs.#ctor(Crestron.SimplSharp.Net.TransferDirection)">
            <summary>
            Creates an instance of the TransferEventArgs Class
            </summary>
            <param name="aDirection">Direction specified</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.TransferEventArgs.TransferDirection">
            <summary>
            Returns the Direction for this TransferEventArgs instance.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferStartEventArgs">
            <summary>
            TransferStartEventArgs Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TransferStartEventArgs.#ctor(Crestron.SimplSharp.Net.TransferDirection,System.Int64)">
            <summary>
            Creates an instance of the TransferStartEventArgs Class.
            </summary>
            <param name="aDirection">Direction specified</param>
            <param name="aTotal">long Total</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.TransferStartEventArgs.Total">
            <summary>
            Gets the Total value for this TransferStartEventArgs instance.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferEndEventArgs">
            <summary>
            TransferEndEventArgs Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TransferEndEventArgs.#ctor(Crestron.SimplSharp.Net.TransferDirection)">
            <summary>
            Creates an instance of the TransferEndEventArgs class.
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TransferProgressEventArgs">
            <summary>
            TransferProgressEventArgs Class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TransferProgressEventArgs.#ctor(Crestron.SimplSharp.Net.TransferDirection,System.Int64)">
            <summary>
            Creates an instance of the TransferProgressEventArgs Class with specified direction and Current.
            </summary>
            <param name="aDirection">A <see cref="T:Crestron.SimplSharp.Net.TransferDirection"/>.</param>
            <param name="aCurrent">The current byte count transfered.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.TransferProgressEventArgs.Current">
            <summary>
            Gets the Current value for this TransferProgressEventArgs
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReportingSupport.AddDeviceUuid(System.String)">
            <summary>
            Add the specified device's unique name to this program's table.
            </summary>
            <param name="deviceUuid">Unique name for this device reporting object.</param>
            <exception cref="T:System.ArgumentException">The specified "deviceUuid" is already in use in the application.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReportingSupport.RemoveDeviceUuid(System.String)">
            <summary>
            Remove the specified device's unique name to this program's table.
            </summary>
            <param name="deviceUuid">Unique name for this device reporting object.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Reporting.SimplSharpDeviceReportingSupport.RemoteMonitoringMode">
            <summary>
            Property to indicated if we are reporting status from outside a SIMPL# Pro application.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Reporting.SimplSharpDeviceReportingSupport.ProgramLocation">
            <summary>
            Get this application's location information. 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1">
            <summary>
            Object used to report device information to Crestron cloud services
            </summary>
            <typeparam name="T">Type of object will report about to and from the cloud.</typeparam>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.#ctor(System.String,System.Object,Crestron.SimplSharp.Reporting.DeviceReportingCallback{`0})">
            <summary>
            Constructor to initialize a new device reporting object.
            </summary>
            <param name="deviceUuid">The universally unique identifier for this device driver. The cloud services will register this ID for communication.</param>
            <param name="userObject">User settable object that will be passed into the specified DeviceReportingCallback. Can be 'null'.</param>
            <param name="callbackForUpdates">When the cloud service sends a device update, the callback will be triggered with an object containing information. Can be 'null' if no feedback is needed.</param>
            <exception cref="T:System.ArgumentException">The specified "deviceUuid" is already in use in the application.</exception>
            <exception cref="T:System.NotSupportedException">This version of firmware does not support JsonDb feature.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.SendUpdate(`0)">
            <summary>
            Send a device change or update to the Crestron cloud services.
            </summary>
            <param name="deviceUpdateObject">Object that contains the updated information.</param>
            <exception cref="T:System.ObjectDisposedException">This object has been disposed, no further updates are possible.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.ToString">
            <summary>
            String representation of this object.
            </summary>
            <returns>"SimplSharpDeviceReporting for '<see cref="P:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.DeviceUuid"/>'"</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.Dispose">
            <summary>
            Dispose of this device reporting object. This will unregister the devices UUID with the cloud services.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.Dispose(System.Boolean)">
            <summary>
            Dispose implementation method.
            </summary>
            <param name="disposing">'true' means called from Dispose(). 'false' means this was called by the finalizer.
            <para>Under the 'false' case, do not remove the device from the cloud.</para></param>
        </member>
        <member name="M:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.Finalize">
            <summary>
            Destructor for this class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.DeviceUuid">
            <summary>
            Read back the set device UUID that this object is related to. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Reporting.SimplSharpDeviceReporting`1.ProgramLocation">
            <summary>
            Get the program location for this device reporting object
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Reporting.DeviceReportingCallback`1">
            <summary>
            Callback signature for SimplSharpDeviceReporting objects.
            </summary>
            <typeparam name="T">Represents the object type that will be received from the cloud.</typeparam>
            <param name="userObject">The user specified object that was supplied to the SimplSharpDeviceReporting's constructor.</param>
            <param name="deviceUpdateObject">The updated information from the cloud service.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Timeout">
            <summary>
            Timeout for the Crestron Event and Timer class
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Timeout.Infinite">
            <summary>
            A constant used to specify an infinite waiting period. This field is constant.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CEventHandle">
            <summary>
            Base class for the crestron CEvent.
            </summary>
            <remarks>
             This class should not be derived from.
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CEventHandle.#ctor">
            <summary>
            Default constructor for the CEvent
            Creates an Auto Reset Event with the event set to be signaled
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CEventHandle.Wait(System.Int32)">
            <summary>
            Function to wait for the event to be signaled
            </summary>
            <param name="timeOutInms">Timeout in milliseconds or Timeout.Infinite to wait indefinitely</param>
            <returns>True if the current instance receives a signal otherwise false.</returns>
            <exception cref="T:System.Exception"> Object not initialized</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEventHandle.Wait">
            <summary>
            Function to wait for the event to be signaled
            </summary>
            <returns>True if the current instance receives a signal otherwise false.</returns>
            <exception cref="T:System.Exception"> Object not initialized</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEventHandle.Dispose">
            <summary>
            Clean up of resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CEventHandle.Dispose(System.Boolean)">
            <summary>
            Dispose implementation
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CEventHandle.Close">
            <summary>
            Closes the Event
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CEventHandle.Finalize">
            <summary>
            Destructor for the CEvent class
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CNamedEvent">
            <summary>
            Class to create instances of crestron named events.
            A named event can be shared across multiple programs
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CEvent">
            <summary>
            Class to create instances of crestron events.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CEvent.m_NamedEventHandle">
            <summary>
            Unmanaged event handle.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CEvent.m_event">
            <summary>
            .NET event handle.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.#ctor(System.Threading.WaitHandle)">
            <summary>
            Constructor to set the .NET Event handle and use that instead of native.
            </summary>
            <param name="eventHandle">.NET Event handle to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.#ctor(System.String,System.Boolean)">
            <summary>
            Default constructor for the Crestron event class.
            Creates an Auto Reset Event with the event set to be signaled.
            If a name is specified, this can be used to synchronize across multiple programs.
            </summary>
            <param name="eventName">Name of the event</param>
            <param name="bLogInfoIfEventAlreadyExists">If true will log an info message if the event already exists (created by another program)</param>
            <exception cref="T:System.Exception">Unable to create event</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.#ctor(System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Constructor for the Crestron event class.
            If a name is specifiedl, this can be used to synchronize across multiple programs
            </summary>
            <param name="bAutoOrManualEvent">If true indicates Auto Reset event / False indicates Manual Reset Event</param>
            <param name="bInitialState">If true indicates event is signaled</param>
            <param name="eventName">Name of the event </param>
            <param name="bLogInfoIfEventAlreadyExists">If true will log an info message if the event already exists (created by another program)</param>
            <exception cref="T:System.Exception">Unable to create event</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.#ctor">
            <summary>
            Default constructor for the CEvent
            Creates an Auto Reset Event with the event set to be signaled.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructor for the Crestron Event class
            </summary>
            <param name="bAutoEvent">If true indicates Auto Reset event / False indicates Manual Reset Event</param>
            <param name="bInitialState">If true indicates event is signaled</param>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.Set">
            <summary>
            Function to set the event
            </summary>
            <returns>true if the operation succeeds; otherwise, false.</returns>
            <exception cref="T:System.Exception"> Object not initialized</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.Reset">
            <summary>
            Function to reset the specified event
            </summary>
            <returns>true if the operation succeeds; otherwise, false.</returns>
            <exception cref="T:System.Exception"> Object not initialized</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.Wait">
            <summary>
            Function to wait for the event to be signaled. This will block indefinitely until the event is signaled.
            </summary>
            <returns>True if the current instance receives a signal otherwise false.</returns>
            <exception cref="T:System.Exception"> Object not initialized</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.Wait(System.Int32)">
            <summary>
            Function to wait for the event to be signaled
            </summary>
            <param name="timeOutInms">Timeout in milliseconds or Timeout.Infinite to wait indefinitely</param>
            <returns>True if the current instance receives a signal otherwise false.</returns>
            <exception cref="T:System.Exception"> Object not initialized</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CEvent.Close">
            <summary>
            Close the event to release all resources used by this instance.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedEvent.#ctor(System.String,System.Boolean)">
            <summary>
            Default constructor for the Crestron named event class
            This can be used to synchronize across multiple programs
            Creates an Auto Reset Event with the event set to be signaled
            </summary>
            <param name="eventName">Name of the event</param>
            <param name="bLogInfoIfEventAlreadyExists">If true will log an info message if the event already exists (created by another program)</param>
            <exception cref="T:System.Exception">Unable to create event</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedEvent.#ctor(System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Constructor for the Crestron named event class.
            This can be used to synchronize across multiple programs
            </summary>
            <param name="bAutoOrManualEvent">If true indicates Auto Reset event / False indicates Manual Reset Event</param>
            <param name="bInitialState">If true indicates event is signaled</param>
            <param name="eventName"> Name of the event </param>
            <param name="bLogInfoIfEventAlreadyExists">If true will log an info message if the event already exists (created by another program)</param>
            <exception cref="T:System.Exception">Unable to create event</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedEvent.Pulse">
            <summary>
            Function to pulse the specified event.
            </summary>
            <returns>true if the operation succeeds; otherwise, false.</returns>
            <exception cref="T:System.Exception"> Object not initialized</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CNamedEvent.Name">
            <summary>
            Property to get the name of the event.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronZIP">
            <summary>
            Class-wrapper for zip functionality from Utilities DLL
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronZIP.UnZipHere(System.String,System.String,System.String)">
            <summary>
            Method to unzip an archive to a specified (optional) destination folder with password (optional)
            </summary>
            <param name="zipFilePath">The path to the zip file to unzip</param>
            <param name="zipDestPath">The path to the destination folder to unzip to (optional).
            If NULL or empty, the folder with the name of the zip file w/o extension is created beside the zip file.
            </param>
            <param name="zipPassword">The password to the zip file if encrypted</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronZIP.ZipTo(System.String,System.String,System.String)">
            <summary>
            Method to zip a file or a folder (recursive) to an archive with password (optional)
            </summary>
            <param name="zipFilePath">The path to the zip file to zip to.
             If NULL or empty, the path is built from the name of the source file or folder with .zip extension appended.</param>
            <param name="zipSrcPath">The path to the source file or folder (recursive) to zip.</param>
            <param name="zipPassword">The password to the zip file if encrypted</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronZIP.Unzip(System.String,System.String)">
            <summary>
            Method to unzip an archive to a specified (optional) destination folder
            </summary>
            <param name="zipFilePath">The path to the zip file to unzip</param>
            <param name="destinationPath">The path to the destination folder to unzip to (optional).
            If NULL or empty, the files are unzipped to the folder where the zip file resides. 
            </param>
            <returns> Result code indicating success or failure</returns>
            <remarks>
            The zip file is not deleted after unzipping.
            This operation overwrites any existing file in the destination folder with the same name.
            However, if the destination folder has an existing folder with the same name as one of the file(s) being unzipped
            then the file will not be unzipped and ZR_NOFILE error will be returned.
            Conversely, if we have a folder in the file being unzipped and the destination folder contains a file with the same name
            then the folder will not be unzipped with ZR_NOFILE error returned. 
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronZIP.Zip(System.String,System.String)">
            <summary>
            Method to zip a file or a folder (including subfolders) to an zip file.
            </summary>
            <param name="zipFilePath">The path to the zip file to zip to.
             If NULL or empty, the path is built from the name of the source file or folder with .zip extension appended.</param>
            <param name="sourcePath">The path to the source file or folder to zip.</param>
            <returns>Result code indicating error or success</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronZIP.ResultCode">
            <summary>These are the result codes of a zip/unzip operation.</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_OK">
            <summary>Everything went OK.</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_RECENT">
            <summary>
            nb. the pseudo-code zr-recent is never returned,
            but can be passed to FormatZipMessage.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_GENMASK">
            <summary>The following come from general system stuff (e.g. files not openable)</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_NODUPH">
            <summary>couldn't duplicate the handle</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_NOFILE">
            <summary>couldn't create/open the file or folder</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_NOALLOC">
            <summary>failed to allocate some resource</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_WRITE">
            <summary>a general error writing to the file</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_NOTFOUND">
            <summary>couldn't find that file in the zip</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_MORE">
            <summary>there's still more data to be unzipped</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_CORRUPT">
            <summary>the zipfile is corrupt or not a zipfile</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_READ">
            <summary>a general error reading the file</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_PASSWORD">
            <summary>we didn't get the right password to unzip the file</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_CALLERMASK">
            <summary>The following come from mistakes on the part of the caller</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_ARGS">
            <summary>general mistake with the arguments</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_NOTMMAP">
            <summary>tried to ZipGetMemory, but that only works on mmap zipfiles, which yours wasn't</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_MEMSIZE">
            <summary>the memory size is too small</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_FAILED">
            <summary>the thing was already failed when you called this function</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_ENDED">
            <summary>the zip creation has already been closed</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_MISSIZE">
            <summary>the indicated input file size turned out mistaken</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_PARTIALUNZ">
            <summary>the file had already been partially unzipped</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_ZMODE">
            <summary>tried to mix creating/opening a zip </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_BUGMASK">
            <summary>The following come from bugs within the zip library itself</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_NOTINITED">
            <summary>initialization didn't work</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_SEEK">
            <summary>trying to seek in an unseekable file</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_NOCHANGE">
            <summary>changed its mind on storage, but not allowed</summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronZIP.ResultCode.ZR_FLATE">
            <summary>an internal error in the de/inflation code</summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.ConformanceLevel">
            <summary>
                Specifies the amount of input or output checking that the created  XmlReader
                and  XmlWriter objects perform.
            </summary>     
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ConformanceLevel.Auto">
            <summary>
                The  XmlReader or  XmlWriter object automatically detects
                whether document or fragment checking should be performed, and does the appropriate
                checking. In the case where you are wrapping another  XmlReader
                or  XmlWriter object, the outer object does not do any additional
                conformance checking. Conformance checking is left up to the underlying object.
            </summary>      
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ConformanceLevel.Fragment">
            
             <summary>
                 The XML data is a well-formed XML fragment.
             </summary>    
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ConformanceLevel.Document">
            
             <summary>
                 The XML data is in conformance to the rules for a well-formed XML 1.0 document.
             </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.EntityHandling">
                <summary>
                Specifies how the  XmlTextReader or  XmlValidatingReader
                handle entities.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.EntityHandling.ExpandEntities">
            <summary>
                Expands all entities and returns the expanded nodes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.EntityHandling.ExpandCharEntities">
            
             <summary>
                 Expands character entities and returns general entities as  XmlNodeType.EntityReference
                 nodes.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.Formatting">
                <summary>
                Specifies formatting options for the  XmlTextWriter.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.Formatting.None">
                <summary>
                No special formatting is applied. This is the default.
                     </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.Formatting.Indented">
            
                 <summary>
                 Causes child elements to be indented according to the  XmlTextWriter.Indentation
                 and  XmlTextWriter.IndentChar settings.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.NewLineHandling">
                <summary>
                Specifies how to handle line breaks.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.NewLineHandling.Replace">
                <summary>
                New line characters are replaced to match the character specified in the
                 XmlWriterSettings.NewLineChars property.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.NewLineHandling.Entitize">
            
                 <summary>
                 New line characters are entitized. This setting preserves all characters
                 when the output is read by a normalizing  XmlReader.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.NewLineHandling.None">
            
                 <summary>
                 The new line characters are unchanged. The output is the same as the input.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.ReadState">
                <summary>
                Specifies the state of the reader.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ReadState.Initial">
            <summary>
                The Read method has not been called.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ReadState.Interactive">
            
             <summary>
                 The Read method has been called. Additional methods may be called on the
                 reader.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ReadState.Error">
            
             <summary>
                 An error occurred that prevents the read operation from continuing.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ReadState.EndOfFile">
            
             <summary>
                 The end of the file has been reached successfully.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ReadState.Closed">
            
             <summary>
                 The  XmlReader.Close() method has been called.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.ValidationType">
            <summary>
                Specifies the type of validation to perform.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ValidationType.None">
            <summary>
                No validation is performed. This setting creates an XML 1.0 compliant non-validating
                parser.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.ValidationType.Schema">
            
             <summary>
                 Validate according to XML Schema definition language (XSD) schemas, including
                 inline XML Schemas. XML Schemas are associated with namespace URIs either
                 by using the schemaLocation attribute or the provided Schemas property.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.WhitespaceHandling">
            <summary>
                Specifies how white space is handled.
             </summary>   
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WhitespaceHandling.All">
            <summary>
                Return Whitespace and SignificantWhitespace nodes. This is the default.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WhitespaceHandling.Significant">
            
             <summary>
                 Return SignificantWhitespace nodes only.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WhitespaceHandling.None">
            
             <summary>
                 Return no Whitespace and no SignificantWhitespace nodes.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.WriteState">
            <summary>
                Specifies the state of the  XmlWriter.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WriteState.Start">
            <summary>
                A Write method has not been called.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WriteState.Prolog">
            
             <summary>
                 The prolog is being written.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WriteState.Element">
            
             <summary>
                 An element start tag is being written.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WriteState.Attribute">
            
             <summary>
                 An attribute value is being written.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WriteState.Content">
            
             <summary>
                 The element content is being written.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WriteState.Closed">
            
             <summary>
                 The  XmlWriter.Close() method has been called.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.WriteState.Error">
            
             <summary>
                 An exception has been thrown, which has left the  XmlWriter in
                 an invalid state. You may call the  XmlWriter.Close() method to
                 put the  XmlWriter in the  WriteState.Closed state. Any
                 other  XmlWriter method calls results in an System.InvalidOperationException
                 being thrown.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlDateTimeSerializationMode">
            <summary>
                Specifies how to treat the time value when converting between string and
                System.DateTime.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlDateTimeSerializationMode.Local">
            <summary>
                Treat as local time. If the System.DateTime object represents a Coordinated
                Universal Time (UTC), it is converted to the local time.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlDateTimeSerializationMode.Utc">
            
             <summary>
                 Treat as a UTC. If the System.DateTime object represents a local time, it
                 is converted to a UTC.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlDateTimeSerializationMode.Unspecified">
            
             <summary>
                 Treat as a local time if a System.DateTime is being converted to a string.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlDateTimeSerializationMode.RoundtripKind">
            
             <summary>
                 Time zone information should be preserved when converting.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNamespaceScope">
            <summary>
                Defines the namespace scope.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNamespaceScope.All">
            <summary>
                All namespaces defined in the scope of the current node. This includes the
                xmlns:xml namespace which is always declared implicitly. The order of the
                namespaces returned is not defined.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNamespaceScope.ExcludeXml">
            
             <summary>
                 All namespaces defined in the scope of the current node, excluding the xmlns:xml
                 namespace, which is always declared implicitly. The order of the namespaces
                 returned is not defined.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNamespaceScope.Local">
            
             <summary>
                 All namespaces that are defined locally at the current node.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeChangedAction">
            <summary>
                Specifies the type of node change.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeChangedAction.Insert">
            <summary>
                A node is being inserted in the tree.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeChangedAction.Remove">
            
             <summary>
                 A node is being removed from the tree.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeChangedAction.Change">
            
             <summary>
                 A node value is being changed.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeOrder">
            <summary>
                Describes the document order of a node compared to a second node.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeOrder.Before">
            <summary>
                The current node of this navigator is before the current node of the supplied
                navigator.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeOrder.After">
            
             <summary>
                 The current node of this navigator is after the current node of the supplied
                 navigator.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeOrder.Same">
            
             <summary>
                 The two navigators are positioned on the same node.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeOrder.Unknown">
            
             <summary>
                 The node positions cannot be determined in document order, relative to each
                 other. This could occur if the two nodes reside in different trees.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeType">
            <summary>
                Specifies the type of node.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.None">
            <summary>
                This is returned by the  XmlReader if a Read method has not been
                called.
               </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Element">
            <summary>
            An element.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Attribute">
            
             <summary>
                 An attribute (for example, id='123' ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Text">
            
             <summary>
                 The text content of a node.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.CDATA">
            
             <summary>
                 A CDATA section (for example, <![CDATA[my escaped text]]> ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.EntityReference">
            
             <summary>
                 A reference to an entity (for example, num; ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Entity">
            
             <summary>
                 An entity declaration (<!-- for example, <!ENTITY...>  --> ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.ProcessingInstruction">
            
             <summary>
                 A processing instruction (for example, <?pi test?> ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Comment">
            
             <summary>
                 A comment (for example, <!-- my comment --> ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Document">
            
             <summary>
                 A document object that, as the root of the document tree, provides access
                 to the entire XML document.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.DocumentType">
            
             <summary>
                 The document type declaration, indicated by the following tag 
                 (for example,<!--<!DOCTYPE...>--> ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.DocumentFragment">
            
             <summary>
                 A document fragment.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Notation">
            
             <summary>
                 A notation in the document type declaration (<!-- for example, <!NOTATION...> -->
                 ).
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.Whitespace">
            
             <summary>
                 White space between markup.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.SignificantWhitespace">
            
             <summary>
                 White space between markup in a mixed content model or white space within
                 the xml:space="preserve" scope.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.EndElement">
            <summary>
            An end element tag (for example, /item ).
            </summary>            
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.EndEntity">
            
             <summary>
                 Returned when XmlReader gets to the end of the entity replacement as a result
                 of a call to  XmlReader.ResolveEntity().
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeType.XmlDeclaration">
            
             <summary>
                 The XML declaration
             </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlOutputMethod">
            <summary>
                Specifies the method used to serialize the  XmlWriter output.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlOutputMethod.Xml">
            <summary>
                Serialize according to the XML 1.0 rules.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlOutputMethod.AutoDetect">
            
             <summary>
                 Use the XSLT rules to choose between the  XmlOutputMethod.Xml and
                  XmlOutputMethod.Html output methods at runtime.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlSpace">
            <summary>
                Specifies the current xml:space scope.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSpace.None">
            <summary>
                No xml:space scope.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSpace.Default">
            
             <summary>
                 The xml:space scope equals default.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSpace.Preserve">
            
             <summary>
                 The xml:space scope equals preserve.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlTokenizedType">
            <summary>
                Represents the XML type for the string. This allows the string to be read
                as a particular XML type, for example a CDATA section type.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.CDATA">
            <summary>
                CDATA type.
                </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.ID">
            
             <summary>
                 ID type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.IDREF">
            
             <summary>
                 IDREF type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.IDREFS">
            
             <summary>
                 IDREFS type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.ENTITY">
            
             <summary>
                 ENTITY type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.ENTITIES">
            
             <summary>
                 ENTITIES type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.NMTOKEN">
            
             <summary>
                 NMTOKEN type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.NMTOKENS">
            
             <summary>
                 NMTOKENS type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.NOTATION">
            
             <summary>
                 NOTATION type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.ENUMERATION">
            
             <summary>
                 ENUMERATION type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.QName">
            
             <summary>
                 QName type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.NCName">
            
             <summary>
                 NCName type.
                 </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlTokenizedType.None">
            
             <summary>
                 No type.
                 </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlSchemaValidationFlags">
            <summary>
            Specifies schema validation options used by the Crestron.Xml.Schema.XmlSchemaValidator
             and Crestron.Xml.XmlReader classes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSchemaValidationFlags.None">
            <summary>
             Do not process identity constraints, inline schemas, schema location hints,
              or report schema validation warnings.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSchemaValidationFlags.ProcessInlineSchema">
            <summary>
             Process inline schemas encountered during validation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSchemaValidationFlags.ProcessSchemaLocation">
            <summary>
             Process schema location hints (xsi:schemaLocation, xsi:noNamespaceSchemaLocation)
             encountered during validation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSchemaValidationFlags.ReportValidationWarnings">
            <summary>
             Report schema validation warnings encountered during validation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSchemaValidationFlags.ProcessIdentityConstraints">
            <summary>
             Process identity constraints (xs:ID, xs:IDREF, xs:key, xs:keyref, xs:unique)
              encountered during validation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlSchemaValidationFlags.AllowXmlAttributes">
            <summary>
             Allow xml:* attributes even if they are not defined in the schema. The attributes
              will be validated based on their data type.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.IXmlNamespaceResolver">
            <summary>
             Provides read-only access to a set of prefix and namespace mappings.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.IXmlNamespaceResolver.GetNamespacesInScope(Crestron.SimplSharp.CrestronXml.XmlNamespaceScope)">
            <summary>
            Gets a collection of defined prefix-namespace mappings that are currently
                in scope. 
            </summary>
            <param name="scope">An System.Xml.XmlNamespaceScope value that specifies the type of namespace
                nodes to return.</param>
            <returns>An System.Collections.IDictionary that contains the current in-scope namespaces.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.IXmlNamespaceResolver.LookupNamespace(System.String)">
            <summary>
            Gets the namespace URI mapped to the specified prefix.
            </summary>
            <param name="prefix">The prefix whose namespace URI you wish to find.</param>
            <returns>The namespace URI that is mapped to the prefix; null if the prefix is not
                mapped to a namespace URI.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.IXmlNamespaceResolver.LookupPrefix(System.String)">
            <summary>
            Gets the prefix that is mapped to the specified namespace URI.
            </summary>
            <param name="namespaceName">The namespace URI whose prefix you wish to find.</param>
            <returns>The prefix that is mapped to the namespace URI; null if the namespace URI
             is not mapped to a prefix.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlReader">
             <summary>
             SimplSharp.CrestronXml XmlReader Instance of a file supporting Xml Reading.
             Parameters:
               input:
                 The stream containing the XML data. The SimplSharp.CrestronXml.XmlReader scans the first
                 bytes of the stream looking for a byte order mark or other sign of encoding.
                 When encoding is determined, the encoding is used to continue reading the
                 stream, and processing continues parsing the input as a stream of (Unicode)
                 characters.
            
             Returns:
                 An SimplSharp.CrestronXml.XmlReader object used to read the data contained in the stream.
             </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initialize the XmlReader with the specified Crestron Stream.
            </summary>
            <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.Stream"/></param>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.TextReader)">
            <summary>
            Initialize the XmlReader with the specified Crestron TextReader.
            </summary>
            <param name="tr">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextReader"/></param>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
             <summary>
             Initialize the XmlReader with the specified Crestron Stream and XmlReaderSettings.
             Parameters:
               input:
                 The stream containing the XML data. The SimplSharp.CrestronXml.XmlReader scans the first
                 bytes of the stream looking for a byte order mark or other sign of encoding.
                 When encoding is determined, the encoding is used to continue reading the
                 stream, and processing continues parsing the input as a stream of (Unicode)
                 characters.
            
               settings:
                 The SimplSharp.CrestronXml.XmlReaderSettings object used to configure the new SimplSharp.CrestronXml.XmlReader
                 instance. This value can be null.
            
             Returns:
                 An SimplSharp.CrestronXml.XmlReader object to read the XML data.
            
             Exceptions:
               System.ArgumentNullException:
                 The input value is null.
             </summary>
             <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.FileStream"/></param>
             <param name="settings">SimplSharp XmlReaderSettings type. This parameter can be null.</param> 
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
             <summary>
             Initialize the XmlReader with the specified Crestron TextReader and XmlReaderSettings.
             Parameters:
               input:
                 The TextReader containing the XML data. The SimplSharp.CrestronXml.XmlReader scans the first
                 bytes of the stream looking for a byte order mark or other sign of encoding.
                 When encoding is determined, the encoding is used to continue reading the
                 stream, and processing continues parsing the input as a stream of (Unicode)
                 characters.
            
               settings:
                 The SimplSharp.CrestronXml.XmlReaderSettings object used to configure the new SimplSharp.CrestronXml.XmlReader
                 instance. This value can be null.
            
             Returns:
                 An SimplSharp.CrestronXml.XmlReader object to read the XML data.
            
             Exceptions:
               System.ArgumentNullException:
                 The input value is null.
             </summary>
             <param name="tr">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextReader"/></param>
             <param name="settings">SimplSharp XmlReaderSettings type. This parameter can be null.</param> 
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(System.String)">
            <summary>
            Creates a new XmlReader instance with the specified XML passed in as the string
            Returns:
                An SimplSharp.CrestronXml.XmlReader object used to read the data contained in the string.
            </summary>
            <param name="str">The string containing the XML data.The SimplSharp.CrestronXml.XmlReader scans the first
                bytes of the string looking for a byte order mark or other sign of encoding.
                When encoding is determined, the encoding is used to continue reading the
                string, and processing continues parsing the input as a stream of (Unicode)
                characters.</param> 
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
            <summary>
            Creates a new XmlReader instance with the specified XML passed in as the string
            Returns:
                An SimplSharp.CrestronXml.XmlReader object used to read the data contained in the string.
            </summary>
            <param name="str">The string containing the XML data. The SimplSharp.CrestronXml.XmlReader scans the first
             bytes of the string looking for a byte order mark or other sign of encoding. When encoding is determined, 
             the encoding is used to continue reading the string, and processing continues parsing the input as a stream of (Unicode)
             characters.</param> 
            <param name="settings">SimplSharp XmlReaderSettings type.  This value can be null.</param> 
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new XmlReader instance 
            Returns:
                An SimplSharp.CrestronXml.XmlReader object
            </summary>
            <param name="bStringIsURIOrXMLData">If true indicates that we have a URI. If false indicates that the string passed in contains XML data</param> 
            <param name="uriOrString">The URI for the file containing the XML data or the string containing the XML data. Depends upon the bStringIsURIOrXMLData parameter. If this is 
            a string containing the XMLData then the SimplSharp.CrestronXml.XmlReader scans the first bytes of the string looking for a byte order mark or other sign of encoding.
            When encoding is determined, the encoding is used to continue reading the string, and processing continues parsing the input as a stream of (Unicode)characters.</param> 
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file identified by the URI does not exist.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(System.Byte[])">
             <summary>
             SimplSharp.CrestronXml XmlReader Instance of a string supporting Xml Reading.
             Parameters:
               input:
                 The string containing the XML data. The SimplSharp.CrestronXml.XmlReader scans the first
                 bytes of the string looking for a byte order mark or other sign of encoding.
                 When encoding is determined, the encoding is used to continue reading the
                 string, and processing continues parsing the input as a stream of (Unicode)
                 characters.
            
             Returns:
                 An SimplSharp.CrestronXml.XmlReader object used to read the data contained in the string.
             </summary>
             <param name="data">SimplSharp Filestream type</param> 
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(System.Byte[],Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
             <summary>
             SimplSharp.CrestronXml XmlReader Instance of a string supporting Xml Reading.
             Parameters:
                 The SimplSharp.CrestronXml.XmlReaderSettings object used to configure the new SimplSharp.CrestronXml.XmlReader
                 instance. This value can be null.
            
             Returns:
                 An SimplSharp.CrestronXml.XmlReader object used to read the data contained in the string.
             </summary>
             <param name="data">The stream containing the XML data.The SimplSharp.CrestronXml.XmlReader scans the first
              bytes of the string looking for a byte order mark or other sign of encoding.When encoding is determined, the encoding is used
              to continue reading the string, and processing continues parsing the input as a stream of (Unicode) characters.</param> 
             <param name="settings">SimplSharp XmlReaderSettings object used to configure the new SimplSharp.CrestronXml.XmlReader
                 instance.This value can be null.</param> 
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronXml.XmlReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
             <summary>
             Creates a new XmlReader instance with the specified XmlReader and XmlReaderSettings objects.
             Parameters:
               reader:
                 The SimplSharp.CrestronXml.XmlReader object that you wish to use as the underlying reader.
            
               settings:
                 The SimplSharp.CrestronXml.XmlReaderSettings object used to configure the new 
                 SimplSharp.CrestronXml.XmlReader instance.The conformance level of the  XmlReaderSettings 
                 object must either match the conformance level of the underlying reader, or it must
                 be set to SimplSharp.CrestronXml.ConformanceLevel.Auto.
            
             Returns:
                 An SimplSharp.CrestronXml.XmlReader object that is wrapped around the specified 
                 SimplSharp.CrestronXml.XmlReader object.
            
             Exceptions:
               System.ArgumentNullException:
                 The reader value is null.
            
               System.InvalidOperationException:
                 If the  XmlReaderSettings object specifies a conformance level
                 that is not consistent with conformance level of the underlying reader.-or-The
                 underlying  XmlReader is in an SimplSharp.CrestronXml.ReadState.Error or 
                 SimplSharp.CrestronXml.ReadState.Closed state.
             </summary>
             <param name="rd">CrestronXml XmlReader</param>
             <param name="settings">SimplSharp XmlReaderSettings type</param> 
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:System.InvalidOperationException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor">
             <summary>
                 Creates an empty wrapper
             </summary>
                 <returns> A Crestron.Xml.XmlReader object.</returns>
            <remarks>Default constructor of XmlReader class is deprecated. Please use one of the overloaded constructors.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
             <summary>
             Creates a new XmlReader instance using the specified stream, XmlReaderSettings, and XmlParserContext objects.
             Parameters:
               input:
                 The stream containing the XML data. The SimplSharp.CrestronXml.XmlReader scans the first
                 bytes of the stream looking for a byte order mark or other sign of encoding.
                 When encoding is determined, the encoding is used to continue reading the
                 stream, and processing continues parsing the input as a stream of (Unicode)
                 characters.
            
               settings:
                 The SimplSharp.CrestronXml.XmlReaderSettings object used to configure the new SimplSharp.CrestronXml.XmlReader
                 instance. This value can be null.
            
               inputContext:
                 TheSimplSharp.CrestronXml.XmlParserContext object that provides the context information
                 required to parse the XML fragment. The context information can include the
                 SimplSharp.CrestronXml.XmlNameTable to use, encoding, namespace scope, the current xml:lang
                 and xml:space scope, base URI, and document type definition. This value can
                 be null.
            
             Returns:
                 An SimplSharp.CrestronXml.XmlReader object to read XML data.
            
             Exceptions:
               System.ArgumentNullException:
                 The input value is null.
             </summary>
             <param name="fs">SimplSharp Filestream type</param>
             <param name="settings">The XmlReaderSettings object used to configure the new XmlReader instance. This value can be null</param> 
             <param name="parser">XmlParserContext provides the context information to parse the Xml fragment. This value can be null</param>
             <exception cref="T:System.ArgumentNullException">The specified Stream is null.</exception>
             <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>Initializes a new XmlReader with the specified TextReader, XmlReaderSettings, and XmlParserContext objects</summary>
            <param name="tr">SimplSharp TextReader type</param>
            <param name="settings">The XmlReaderSettings object used to configure the new XmlReader instance. This value can be null</param> 
            <param name="parser">XmlParserContext provides the context information to parse the Xml fragment. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified TextReader is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>Initializes a new XmlReader with the specified URI, XmlReaderSettings, and XmlParserContext objects</summary>
            <param name="uri">The URI for the file containing the XML data</param>
            <param name="settings">The XmlReaderSettings object used to configure the new XmlReader instance. This value can be null</param> 
            <param name="parser">XmlParserContext provides the context information to parse the Xml fragment. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified uri is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,System.String)">
            <summary>
            Creates a new XmlReader instance using the specified stream, base URI, and XmlReaderSettings object
            </summary>
            <param name="fs">The stream containing the Xml data</param>
            <param name="settings">The XmlReaderSettings object used to configure the new XmlReader instance. This value can be null</param>
            <param name="uri">The base URI for the entity or document being read.  This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified Stream is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.#ctor(Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,System.String)">
            <summary>
            Initialize the XmlReader with the specified TextReader, XmlReaderSettings, and URI
            </summary>
            <param name="tr">The TextReader to read the XML data.  The encoding used will be Unicode</param>
            <param name="settings">The XmlReaderSettings object used to configure the new XmlReader. This value can be null</param>
            <param name="uri">The base URI for the entity or document being read.  This value can be null.</param>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Close">
            <summary>
            This method also releases any resources held during reading. 
            If Close has already been called, no action is performed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Creates a new XmlReader instance using the specified stream. 
            </summary>
            <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.Stream"/></param>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
            <summary>
            Creates a new XmlReader instance using the specified stream. 
            </summary>
            <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.Stream"/></param>
            <param name="set">An <see cref="T:Crestron.SimplSharp.CrestronXml.XmlReaderSettings"/> object</param>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.TextReader)">
            <summary>
            Creates a new XmlReader instance using the specified TextReader. 
            </summary>
            <param name="tr">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextReader"/></param>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
            <summary>
            Creates a new XmlReader instance using the specified TextReader. 
            </summary>
            <param name="tr">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextReader"/></param>
            <param name="set">An <see cref="T:Crestron.SimplSharp.CrestronXml.XmlReaderSettings"/> object</param>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(System.String,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
            <summary>
            Creates a new instance with the specified URI and XmlReaderSettings
            </summary>
            <param name="str">SimplSharp Filestream type</param> 
            <param name="settings">The XmlReaderSettings object used to configure the new XmlReader. This value can be null</param> 
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronXml.XmlReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
            <summary>
            Creates a new XmlReader instance using the specified XmlReader instance. 
            </summary>
            <param name="rd">An <see cref="T:Crestron.SimplSharp.CrestronXml.XmlReader"/> object</param>
            <param name="set">An <see cref="T:Crestron.SimplSharp.CrestronXml.XmlReaderSettings"/> object</param>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(System.String)">
            <summary>
            Creates a new XmlReader instance with the specified URI
            </summary>
            <param name="uri">The URI for the file containing the XML data</param>
            <returns>new XmlReader instance</returns>
            <exception cref="T:System.ArgumentNullException">The uri is null</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,System.String)">
            <summary>
            Creates a new XmlReader instance using the specified stream, base URI, and XmlReaderSettings object
            </summary>
            <param name="fs">The stream containing the Xml data</param>
            <param name="set">The XmlReaderSettings object used to configure the new XmlReader. This value can be null</param>
            <param name="baseUri">The base URI for the entity or document being read. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified Stream is null</exception>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>
            Creates a new XmlReader instance using the specified Stream, XmlReaderSettings, and XmlParserContext
            </summary>
            <param name="fs">SimplSharp Filestream type</param>
            <param name="set">The XmlReaderSettings object used to configure the new XmlReader instance. This value can be null</param> 
            <param name="context">XmlParserContext provides the context information to parse the Xml fragment. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified Stream is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>Creates a new XmlReader with the specified TextReader, XmlReaderSettings, and XmlParserContext objects</summary>
            <param name="tr">SimplSharp TextReader type</param>
            <param name="set">The XmlReaderSettings object used to configure the new XmlReader instance. This value can be null</param> 
            <param name="context">XmlParserContext provides the context information to parse the Xml fragment. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified TextReader is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(System.String,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>Creates a new XmlReader with the specified URI, XmlReaderSettings, and XmlParserContext objects</summary>
            <param name="uri">The URI for the file containing the XML data</param>
            <param name="set">The XmlReaderSettings object used to configure the new XmlReader instance. This value can be null</param> 
            <param name="context">XmlParserContext provides the context information to parse the Xml fragment. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified uri is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Create(Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlReaderSettings,System.String)">
            <summary>
            Creates a new XmlReader with the specified TextReader, XmlReaderSettings, and URI
            </summary>
            <param name="tr">The TextReader to read the XML data. The encoding used will be Unicode</param>
            <param name="set">The XmlReaderSettings object used to configure the new XmlReader. This value can be null</param>
            <param name="uri">The base URI for the entity or document being read.  This value can be null.</param>
            <exception cref="T:System.ArgumentNullException">The TextReader is null</exception>
            <returns> new XmlReader instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.MoveToContent">
             <summary>
              Checks whether the current node is a content (non-white space text, CDATA,
                 Element, EndElement, EntityReference, or EndEntity) node. If the node is
                 not a content node, the reader skips ahead to the next content node or end
                 of file. It skips over nodes of the following type: ProcessingInstruction,
                 DocumentType, Comment, Whitespace, or SignificantWhitespace.
            
              Returns:
                 The  XmlReader.NodeType of the current node found by the method
                 or XmlNodeType.None if the reader has reached the end of the input stream.
             </summary> 
             <exception cref="T:Crestron.SimplSharp.XmlException">Incorrect XML encountered in the input stream..</exception>
             <returns> The  XmlReader.NodeType of the current node found by the method or XmlNodeType.None if the reader has reached the end of the input stream. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.MoveToElement">
            <summary>
                Moves to the element that contains the current attribute node.
            </summary>
            <returns> true if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); false if the reader is not positioned on an attribute (the position of the reader does not change). </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.MoveToNextAttribute">
            <summary>
             Moves to the next attribute.
            </summary>
            <returns> true if there is a next attribute; false if there are no more attributes. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.IsStartElement(System.String)">
            <summary>
               Calls  XmlReader.MoveToContent() and tests if the current content
                node is a start tag or empty element tag and if the  XmlReader.Name
                property of the element found matches the given argument.
            </summary>
            <param name="name">The string matched against the Name property of the element found.
            </param>
            <returns> true if the resulting node is an element and the Name property matches the
                specified string. false if a node type other than XmlNodeType.Element was
                found or if the element Name property does not match the specified string.
            </returns>
            <exception cref="T:Crestron.SimplSharp.XmlException">Incorrect XML is encountered in the input stream.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
             Reads the content and returns the Base64 decoded binary bytes.
            </summary>
            <param name="buffer">The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count"> The maximum number of bytes to copy into the buffer. The actual number of
             bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The buffer value is null.</exception>
            <exception cref="T:System.InvalidOperationException"> XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
            is not supported on the current node.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index into the buffer or index + count is larger than the allocated buffer
            size.</exception>
            <exception cref="T:System.NotSupportedException">The Crestron.Xml.XmlReader implementation does not support this method.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the content and returns the BinHex decoded binary bytes.
            </summary>
            <param name="buffer">The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count">The maximum number of bytes to copy into the buffer. The actual number of
            bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The buffer value is null.
            </exception>
            <exception cref="T:System.InvalidOperationException"> XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
            is not supported on the current node.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index into the buffer or index + count is larger than the allocated buffer
            size.
            </exception>
            <exception cref="T:System.NotSupportedException">The Crestron.Xml.XmlReader implementation does not support this method.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsBoolean">
            <summary>
            Reads the text content at the current position as a Boolean.
            </summary>
            <returns>The text content as a System.Bool object.</returns>
            <exception cref="T:System.InvalidCastException"> The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException">The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsDateTime">
            <summary>
            Reads the text content at the current position as a System.DateTime object.
            </summary>
            <returns>The text content as a System.DateTime object.</returns>
            <exception cref="T:System.InvalidCastException">The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException">The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsDecimal">
            <summary>
            Reads the text content at the current position as a System.Decimal object.
            </summary>
            <returns>The text content at the current position as a System.Decimal object.</returns>
            <exception cref="T:System.InvalidCastException">The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException"> The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsDouble">
            <summary>
             Reads the text content at the current position as a double-precision floating-point
             number.
            </summary>
            <returns>The text content as a double-precision floating-point number.</returns>
            <exception cref="T:System.InvalidCastException"> The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException"> The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsFloat">
            <summary>
            Reads the text content at the current position as a single-precision floating 
            point number.
            </summary>
            <returns> The text content at the current position as a single-precision floating point
            number.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsInt">
            <summary>
             Reads the text content at the current position as a 32-bit signed integer.
            </summary>
            <returns>The text content as a 32-bit signed integer.</returns>
            <exception cref="T:System.InvalidCastException">The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException"> The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsLong">
            <summary>
            Reads the text content at the current position as a 64-bit signed integer.
            </summary>
            <returns>The text content as a 64-bit signed integer.</returns>
            <exception cref="T:System.InvalidCastException">The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException"> The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsObject">
            <summary>
            Reads the text content at the current position as an System.Object.
            </summary>
            <returns>The text content as the most appropriate common language runtime (CLR) object.</returns>
            <exception cref="T:System.InvalidCastException">The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException"> The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAsString">
            <summary>
             Reads the text content at the current position as a System.String object.
            </summary>
            <returns>The text content as a System.String object.</returns>
            <exception cref="T:System.InvalidCastException">The attempted cast is not valid.</exception>
            <exception cref="T:System.FormatException"> The string format is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadContentAs(System.Type,Crestron.SimplSharp.CrestronXml.IXmlNamespaceResolver)">
            <summary>
            Reads the content as an object of the type specified.
            </summary>
            <param name="returnType">  The type of the value to be returned.</param>
            <param name="namespaceResolver"> An IXmlNamespaceResolver object that is used to resolve any namespace
            prefixes related to type conversion. This value can be null.</param>
            <returns>The concatenated text content or attribute value converted to the requested  type.</returns>
            <exception cref="T:System.FormatException"> The content is not in the correct format for the target type.</exception>
            <exception cref="T:System.ArgumentNullException"> The returnType value is null.</exception>
            <exception cref="T:System.InvalidOperationException"> The current node is not a supported node type.</exception>
            <exception cref="T:System.OverflowException">Read Decimal.MaxValue</exception>
            <exception cref="T:System.InvalidCastException"> The attempted cast is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAs(System.Type,Crestron.SimplSharp.CrestronXml.IXmlNamespaceResolver)">
            <summary>
            Reads the element content as the requested type.
            </summary>
            <param name="returnType">  The type of the value to be returned.</param>
            <param name="namespaceResolver"> An IXmlNamespaceResolver object object that is used to resolve any namespace
                prefixes related to type conversion..</param>
            <returns>The element content converted to the requested typed object.</returns>
            <exception cref="T:System.ArgumentNullException"> The method is called with null arguments.</exception>
            <exception cref="T:System.InvalidOperationException"> The XmlReader is not positioned on an element.</exception>
            <exception cref="T:System.OverflowException">Read Decimal.MaxValue</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException"> The current element contains child elements.  -or- The element content cannot
             be converted to the requested type.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAs(System.Type,Crestron.SimplSharp.CrestronXml.IXmlNamespaceResolver,System.String,System.String)">
            <summary>
            Reads the element content as the requested type.
            </summary>
            <param name="returnType">  The type of the value to be returned.</param>
            <param name="namespaceResolver"> An IXmlNamespaceResolver object object that is used to resolve any namespace
             prefixes related to type conversion.</param>
             <param name="localName"> The local name of the element.</param>   
             <param name="namespaceURI">The namespace URI of the element.</param>
            <returns>The element content converted to the requested typed object.</returns>
            <exception cref="T:System.ArgumentNullException"> The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException"> The specified local name and namespace URI do not match that of the current
            element being read.</exception>
            <exception cref="T:System.InvalidOperationException"> The XmlReader is not positioned on an element.</exception>
            <exception cref="T:System.OverflowException">Read Decimal.MaxValue</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException"> The current element contains child elements.  -or- The element content cannot
             be converted to the requested type.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the element and decodes the Base64 content.
            </summary>
            <param name="buffer">The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count">The maximum number of bytes to copy into the buffer. The actual number of
            bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The buffer value is null.</exception>
            <exception cref="T:System.InvalidOperationException"> The current node is not an element node.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index into the buffer or index + count is larger than the allocated buffer
            size.</exception>
            <exception cref="T:System.NotSupportedException">The  XmlReader implementation does not support this method.</exception>
            <exception cref="T:System.FormatException">The content cannot be converted to the requested type.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The element contains mixed-content.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the element and decodes the BinHex content.
            </summary>
            <param name="buffer"> The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count">The maximum number of bytes to copy into the buffer. The actual number of
            bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The buffer value is null.</exception>
            <exception cref="T:System.InvalidOperationException"> The current node is not an element node.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index into the buffer or index + count is larger than the allocated buffer
            size.</exception>
            <exception cref="T:System.NotSupportedException">The  XmlReader implementation does not support this method.</exception>
            <exception cref="T:System.FormatException">The content cannot be converted to the requested type.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The element contains mixed-content.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsBoolean">
            <summary>
            Reads the current element and returns the contents as a System.Bool object.
            </summary>
            <returns>The element content as a System.Bool object.</returns>
            <exception cref="T:System.InvalidOperationException"> The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException"> The current element contains child elements.  or 
            The element content cannot be converted to a System.Bool object.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as a System.Boolean object.
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns> The element content as a System.Boolean object</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.Boolean object.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>  
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsDateTime">
            <summary>
            Reads the current element and returns the contents as a System.DateTime object.
            </summary>
            <returns>The element content as a System.DateTime object.</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.DateTime object.</exception>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:System.ArgumentNullException"> The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as a System.DateTime object.
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns> The element content as a System.DateTime object</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.DateTime object.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>  
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsDecimal">
            <summary>
            Reads the current element and returns the contents as a System.Decimal object.
            </summary>
            <returns>The element content as a System.Decimal object.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.Decimal.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as a System.Decimal object.
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns> The element content as a System.Decimal object</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.Decimal object.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception> 
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsDouble">
            <summary>
             Reads the current element and returns the contents as a double-precision
             floating-point number.
            </summary>
            <returns> The element content as a double-precision floating-point number.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.Decimal.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as a double-precision floating-point number.
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns> The element content as a double-precision floating-point number</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a double-precision floating-point number.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>  
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsFloat">
            <summary>
            Reads the current element and returns the contents as single-precision floating-point
            number.
            </summary>
            <returns>The element content as a single-precision floating point number.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.Decimal.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as a single-precision floating-point number.
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns> The element content as a single-precision floating-point number</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a single-precision floating-point number.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>   
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsInt">
            <summary>
            Reads the current element and returns the contents as a 32-bit signed integer.
            </summary>
            <returns>The element content as a 32-bit signed integer.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.Decimal.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as a 32-bit signed integer
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns> The element content as a 32-bit signed integer</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a 32-bit signed integer.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>  
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsLong">
            <summary>
            Reads the current element and returns the contents as a 64-bit signed integer.
            </summary>
            <returns> The element content as a 64-bit signed integer.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a  64-bit signed integer.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as a 64-bit signed integer
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns> The element content as a 64-bit signed integer</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a 64-bit signed integer.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>   
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsObject">
            <summary>
            Reads the current element and returns the contents as an System.Object.
            </summary>
            <returns>A boxed common language runtime (CLR) object of the most appropriate type.
            The  XmlReader.ValueType property determines the appropriate CLR
            type. If the content is typed as a list type, this method returns an array
            of boxed objects of the appropriate type.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to to the requested type.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the current element, then reads the current element 
             and returns the contents as an System.Object.
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns>A boxed common language runtime (CLR) object of the most appropriate type.
            The  XmlReader.ValueType property determines the appropriate CLR
            type. If the content is typed as a list type, this method returns an array
            of boxed objects of the appropriate type.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to the requested type.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>            
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsString">
            <summary>
            Reads the current element and returns the contents as a System.String object.
            </summary>
            <returns>The element content as a System.String object.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.String.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementContentAsString(System.String,System.String)">
            <summary>
             Checks that the specified local name and namespace URI matches that of the
             current element, then reads the current element and returns the contents as a System.String object.
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="namespaceURI"> The namespace URI of the element.</param>
            <returns>The element content as a System.String object.</returns>
            <exception cref="T:System.InvalidOperationException">The Crestron.Xml.XmlReader is not positioned on an element.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current element contains child elements.  or The element content cannot
            be converted to a System.String.</exception>
            <exception cref="T:System.ArgumentNullException">The method is called with null arguments.</exception>
            <exception cref="T:System.ArgumentException">The specified local name and namespace URI do not match that of the current
             element being read.</exception>            
             <remarks>This method advances the reader past the end element tag.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementString">
            <summary>
            Reads a text-only element.
            </summary>
            <returns>The text contained in the element that was read. An empty string if the element
            is empty.</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException"> The next content node is not a start tag. or the element found does not contain
            a simple text value.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadElementString(System.String)">
            <summary>
            Checks that the Crestron.Xml.XmlReader.Name property of the element found matches
            the given string before reading a text-only element.
            </summary>
            <param name="name">The name to check.</param>
            <returns>The text contained in the element that was read. An empty string if the element is empty.</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException"> If the next content node is not a start tag; if the element Name does not
            match the given argument; or if the element found does not contain a simple
            text value.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadEndElement">
            <summary>
             Checks that the current content node is an end tag and advances the reader to the next node.
            </summary>
            <exception cref="T:Crestron.SimplSharp.XmlException">The current node is not an end tag or if incorrect XML is encountered in
            the input stream.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadInnerXml">
            <summary>
             Reads all the content, including markup,
            as a string.
            </summary>
            <returns>All the XML content, including markup, in the current node. If the current
            node has no children, an empty string is returned.  If the current node is
            neither an element nor attribute, an empty string is returned.</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException">The XML was not well-formed, or an error occurred while parsing the XML.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadOuterXml">
            <summary>
            Reads the content, including markup,
            representing this node and all its children.
            </summary>
            <returns>If the reader is positioned on an element or an attribute node, this method
            returns all the XML content, including markup, of the current node and all
            its children; otherwise, it returns an empty string.</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException">The XML was not well-formed, or an error occurred while parsing the XML.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadStartElement(System.String)">
            <summary>
            Checks that the current content node is an element with the given Crestron.Xml.XmlReader.Name
            and advances the reader to the next node.
            </summary>
            <param name="name">The qualified name of the element.</param>
            <remarks>Crestron.Xml.XmlReader.IsStartElement() returns false or if the Crestron.Xml.XmlReader.Name
            of the element does not match the given name.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadStartElement(System.String,System.String)">
            <summary>
            Checks that the current content node is an element with the given Crestron.Xml.XmlReader.Name
            and Crestron.Xml.XmlReader.NamespaceURI and advances the reader to the next node.
            </summary>
            <param name="localname">The local name of the element.</param>
            <param name="ns">The namespace URI of the element.</param>
            <remarks>Crestron.Xml.XmlReader.IsStartElement() returns false or if the Crestron.Xml.XmlReader.LocalName
            and Crestron.Xml.XmlReader.NamespaceURI properties of the element found do not match the given arguments of
            the element does not match the given name.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadStartElement">
            <summary>
            Checks that the current node is an element and advances the reader to the next node.
            </summary>
            <remarks>Crestron.Xml.XmlReader.IsStartElement() returns false.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadSubtree">
            <summary>
            Returns a new XmlReader instance that can be used to read the current node,
            and all its descendants.
            </summary>
            <returns> A new XmlReader instance set to ReadState.Initial. A call to the Crestron.Xml.XmlReader.Read()
            method positions the new XmlReader on the node that was current before the
            call to ReadSubtree method.</returns>
            <exception cref="T:System.InvalidOperationException">The XmlReader is not positioned on an element when this method is called.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadToDescendant(System.String)">
            <summary>
            Advances the Crestron.Xml.XmlReader to the next descendant element with the
            specified qualified name.
            </summary>
            <param name="name">The qualified name of the element you wish to move to.</param>
            <returns> true if a matching descendant element is found; otherwise false. If a matching
            child element is not found, the Crestron.Xml.XmlReader is positioned on the
            end tag (Crestron.Xml.XmlReader.NodeType is XmlNodeType.EndElement) of the
            element.  If the Crestron.Xml.XmlReader is not positioned on an element when
            Crestron.Xml.XmlReader.ReadToDescendant(System.String) was called, this method
            returns false and the position of the Crestron.Xml.XmlReader is not changed.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadToDescendant(System.String,System.String)">
            <summary>
            Advances the Crestron.Xml.XmlReader to the next descendant element with the
            specified qualified name and namespace URI.
            </summary>
            <param name="name">The qualified name of the element you wish to move to.</param>
            <param name="namespaceURI">The namespaceURI you wish to move to</param>
            <returns> true if a matching descendant element is found; otherwise false. If a matching
            child element is not found, the Crestron.Xml.XmlReader is positioned on the
            end tag (Crestron.Xml.XmlReader.NodeType is XmlNodeType.EndElement) of the
            element. If the Crestron.Xml.XmlReader is not positioned on an element when
            Crestron.Xml.XmlReader.ReadToDescendant(System.String) was called, this method
            returns false and the position of the Crestron.Xml.XmlReader is not changed.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadToFollowing(System.String)">
            <summary>
            Reads until an element with the specified qualified name is found.
            </summary>
            <param name="name">The qualified name of the element.</param>
            <returns>true if a matching element is found; otherwise false and the Crestron.Xml.XmlReader
            is in an end of file state.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadToFollowing(System.String,System.String)">
            <summary>
            Reads until an element with the specified qualified name and namespace URI is found.
            </summary>
            <param name="name">The qualified name of the element.</param>
            <param name="namespaceURI">The namespace URI of the element</param>
            <returns>true if a matching element is found; otherwise false and the Crestron.Xml.XmlReader
            is in an end of file state.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadToNextSibling(System.String)">
            <summary>
            Advances the XmlReader to the next sibling element with the specified qualified name.
            </summary>
            <param name="name"> The qualified name of the sibling element you wish to move to.</param>
            <returns>true if a matching sibling element is found; otherwise false. If a matching
            sibling element is not found, the XmlReader is positioned on the end tag
            (Crestron.Xml.XmlReader.NodeType is XmlNodeType.EndElement) of the parent element.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadToNextSibling(System.String,System.String)">
            <summary>
            Advances the XmlReader to the next sibling element with the specified qualified name and namespace URI.
            </summary>
            <param name="name"> The qualified name of the sibling element you wish to move to.</param>
            <param name="namespaceURI">The namespace URI of the sibling element you wish to move to</param>
            <returns>true if a matching sibling element is found; otherwise false. If a matching
            sibling element is not found, the XmlReader is positioned on the end tag
            (Crestron.Xml.XmlReader.NodeType is XmlNodeType.EndElement) of the parent element.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Read">
             <summary>
                 Reads the next node from the stream.
            
             Returns:
                 true if the next node was read successfully; false if there are no more nodes
                 to read.
            
             Exceptions:
               SimplSharp.CrestronXml.XmlException:
                 An error occurred while parsing the XML.
             </summary>
             <exception cref="T:Crestron.SimplSharp.XmlException">One of the arguments is null.</exception>
             <returns> true if the next node was read successfully; false if there are no more nodes to read. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.GetAttribute(System.Int32)">
             <summary>
                 Gets the value of the attribute with
                 the specified index.
            
             Parameters:
               i:
                 The index of the attribute. The index is zero-based. (The first attribute
                 has index 0.)
            
             Returns:
                 The value of the specified attribute. This method does not move the reader.
             </summary>
             <param name="i"> The zero-based index of the attribute.</param>
             <returns> The value of the specified attribute. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.GetAttribute(System.String)">
             <summary>
                 Gets the value of the attribute with
                 the specified SimplSharp.CrestronXml.XmlReader.Name.
            
             Parameters:
               name:
                 The qualified name of the attribute.
            
             Returns:
                 The value of the specified attribute. If the attribute is not found, null
                 is returned.
             </summary>
             <param name="name"> The qualified name of the attribute. </param>
             <returns> The value of the specified attribute. If the attribute is not found, null
                 is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.GetAttribute(System.String,System.String)">
            <summary>
            gets the value of the attribute with the specified LocalName and NamespaceURI.. 
            </summary>
            <param name="name"> The qualified name of the attribute. </param>
            <param name="namespaceURI"> The namespace URI of the attribute. </param>
            <returns> The value of the specified attribute. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Crestron.Xml.XmlReader and optionally releases the managed resources.
            </summary>
            <param name="disposing"> true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.MoveToAttribute(System.Int32)">
            <summary>
                 When overridden in a derived class, moves to the attribute with the specified
                 index.
            </summary>
             <param name="i">
                 The index of the attribute.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.MoveToAttribute(System.String)">
            <summary>
                 When overridden in a derived class, moves to the attribute with the specified
                 XmlReader.Name.
            </summary>
             <param name="name">
                 The qualified name of the attribute.
            </param>
            <returns>
                 true if the attribute is found; otherwise, false. If false, the reader's
                 position does not change.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.MoveToAttribute(System.String,System.String)">
            <summary>
                 When overridden in a derived class, moves to the attribute with the specified
                 XmlReader.LocalName and XmlReader.NamespaceURI.
            </summary>
             <param name="name">
                 The local name of the attribute.
            </param>
             <param name="ns">
                 The namespace URI of the attribute.
            </param>
            <returns>
                 true if the attribute is found; otherwise, false. If false, the reader's
                 position does not change.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.MoveToFirstAttribute">
            <summary>
                 When overridden in a derived class, moves to the first attribute.
            </summary>
            <returns>
                 true if an attribute exists (the reader moves to the first attribute); otherwise,
                 false (the position of the reader does not change).
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadAttributeValue">
            <summary>
                 When overridden in a derived class, parses the attribute value into one or
                 more Text, EntityReference, or EndEntity nodes.
            </summary>
            <returns>
                 true if there are nodes to return.false if the reader is not positioned on
                 an attribute node when the initial call is made or if all the attribute values
                 have been read.An empty attribute, such as, misc="", returns true with a
                 single node with a value of String.Empty.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadString">
            <summary>
                 When overridden in a derived class, reads the contents of an element or text
                 node as a string.
            </summary>
            <returns>
                 The contents of the element or an empty string.
            </returns>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 An error occurred while parsing the XML.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ResolveEntity">
            <summary>
                 When overridden in a derived class, resolves the entity reference for EntityReference
                 nodes.
            </summary>
             <exception cref="T:System.InvalidOperationException">
                 The reader is not positioned on an EntityReference node; this implementation
                 of the reader cannot resolve entities (XmlReader.CanResolveEntity
                 returns false).
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.Skip">
            <summary>
                 Skips the children of the current node.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.LookupNamespace(System.String)">
            <summary>
                 When overridden in a derived class, resolves a namespace prefix in the current
                 element's scope.
            </summary>
             <param name="prefix">
                 The prefix whose namespace URI you want to resolve. To match the default
                 namespace, pass an empty string.
            </param>
            <returns>
                 The namespace URI to which the prefix maps or null if no matching prefix
                 is found.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
            <summary>
                 Reads large streams of text embedded in an XML document.
            </summary>
             <param name="buffer">
                 The array of characters that serves as the buffer to which the text contents
                 are written. This value cannot be null.
            </param>
             <param name="index">
                 The offset within the buffer where the XmlReader can start to
                 copy the results.
            </param>
             <param name="count">
                 The maximum number of characters to copy into the buffer. The actual number
                 of characters copied is returned from this method.
            </param>
            <returns>
                 The number of characters read into the buffer. The value zero is returned
                 when there is no more text content.
            </returns>
             <exception cref="T:System.InvalidOperationException">
                 The current node does not have a value (XmlReader.HasValue is
                 false).
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer value is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The index into the buffer, or index + count is larger than the allocated
                 buffer size.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 The XmlReader implementation does not support this method.
            </exception>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 The XML data is not well-formed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.IsStartElement">
            <summary>
                 Calls XmlReader.MoveToContent() and tests if the current content
                 node is a start tag or empty element tag.
            </summary>
            <returns>
                 true if XmlReader.MoveToContent() finds a start tag or empty element
                 tag; false if a node type other than XmlNodeType.Element was found.
            </returns>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 Incorrect XML is encountered in the input stream.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.IsStartElement(System.String,System.String)">
            <summary>
                 Calls XmlReader.MoveToContent() and tests if the current content
                 node is a start tag or empty element tag and if the XmlReader.LocalName
                 and XmlReader.NamespaceURI properties of the element found match
                 the given strings.
            </summary>
             <param name="localname">
                 The string to match against the LocalName property of the element found.
            </param>
             <param name="ns">
                 The string to match against the NamespaceURI property of the element found.
            </param>
            <returns>
                 true if the resulting node is an element. false if a node type other than
                 XmlNodeType.Element was found or if the LocalName and NamespaceURI properties
                 of the element do not match the specified strings.
            </returns>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 Incorrect XML is encountered in the input stream.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.IsName(System.String)">
            <summary>
            Gets a value indicating whether the string argument is a valid XML name
            </summary>
            <param name="str">The name to validate</param>
            <returns>true if the name is valid; otherwise, false</returns>
            <exception cref="T:System.ArgumentNullException">The str value is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReader.IsNameToken(System.String)">
            <summary>
            Gets a value indicating whether or not the string argument is a valid XML name token
            </summary>
            <param name="str">The name token to validate</param>
            <returns>true if it is a valid name token; otherwise false</returns>
            <exception cref="T:System.ArgumentNullException">The str value is null</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.AttributeCount">
            <summary>
            Gets the number of attributes on the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.BaseURI">
            <summary>
            gets the base URI of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.CanReadBinaryContent">
            <summary>
            Gets a value indicating whether the XmlReader implements the binary content read methods.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.CanReadValueChunk">
            <summary>
            Gets a value indicating whether the XmlReader implements the ReadValueChunk method.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.CanResolveEntity">
            <summary>
            Gets a value indicating whether this reader can parse and resolve entities.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Depth">
            <summary>
            gets the depth of the current node in the XML document.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.EOF">
            <summary>
            Gets a value indicating whether the reader is positioned at the end of the stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.HasAttributes">
            <summary>
            Gets a value indicating whether the current node has any attributes
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.HasValue">
            <summary>
            Gets a value indicating whether the current node can have a Value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.IsDefault">
            <summary>
            Gets a value indicating whether the current node is an attribute that was generated 
            from the default value defined in the DTD or schema.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.IsEmptyElement">
            <summary>
            Gets a value indicating whether the current node is an empty element (for example, <MyElement/>).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.LocalName">
            <summary>
            Gets the local name of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Name">
            <summary>
            Gets the qualified name of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.NamespaceURI">
             <summary>
             Gets the namespace URI (as defined in the W3C Namespace specification) 
            of the node on which the reader is positioned
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.NameTable">
            <summary>
            Gets the XmlNameTable associated with this implementation
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.NodeType">
            <summary>
            gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Prefix">
            <summary>
            gets the namespace prefix associated with the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.QuoteChar">
            <summary>
            gets the quotation mark character used to enclose the value of an attribute node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.ReadState">
            <summary>
            gets the state of the reader.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.SchemaInfo">
            <summary>
            Gets the schema information that has been assigned to the current node as a result of schema validation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Settings">
            <summary>
            Gets the XmlReaderSettings object used to create this XmlReader instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Value">
            <summary>
            Gets the text value of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.ValueType">
            <summary>
            Gets the text value of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.XmlLang">
            <summary>
            Gets the current xml:lang scope.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.XmlSpace">
            <summary>
            Gets the current xml:space scope.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Item(System.Int32)">
            <summary>
            When overridden in a derived class, gets the value of the attribute with
            the specified index.
            </summary>
            <param name="i"> The index of the attribute. </param>
            <returns>The value of the specified attribute. </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Item(System.String)">
            <summary>
            When overridden in a derived class, gets the value of the attribute with the specified XmlReader.Name
            </summary>
            <param name="name">  The qualified name of the attribute. </param>
            <returns>The value of the specified attribute. If the attribute is not found, null
                is returned.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReader.Item(System.String,System.String)">
            <summary>
            When overridden in a derived class, gets the value of the attribute 
            with the specified LocalName and NamespaceURI.
            </summary>
            <param name="name"> The local name of the attribute. </param>
            <param name="namespaceURI"> The namespace URI of the attribute. </param>
            <returns> The value of the specified attribute. If the attribute is not found, null is returned. </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlReaderSettings">
             <summary>
            Specifies a set of features to support on the XmlReader object created by the Create method. 
             </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.#ctor">
            <summary>
            Initialize the XmlReaderSettings to default settings
            </summary>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.op_Equality(Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
            <summary>
            Checks for referential equality between two XmlReaderSettings
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XmlReaderSettings are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.op_Inequality(Crestron.SimplSharp.CrestronXml.XmlReaderSettings,Crestron.SimplSharp.CrestronXml.XmlReaderSettings)">
            <summary>
            Checks for referential inequality between two XmlReaderSettings
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XmlReaderSettings are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.GetHashCode">
            <summary>
            Gets the hash code for this XmlReaderSettings
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XmlReaderSettings
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XmlReaderSettings; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.CheckCharacters">
             <summary>
            Gets or sets a value indicating whether to do character checking.
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.CloseInput">
            <summary>
            Gets or sets a value indicating whether the underlying stream or TextReader should be closed when the reader is closed.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.ConformanceLevel">
            <summary>
            Gets or sets the level of conformance which the XmlReader will comply.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.IgnoreComments">
            <summary>
            Gets or sets a value indicating whether to ignore comments.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.IgnoreProcessingInstructions">
            <summary>
            Gets or sets a value indicating whether to ignore processing instructions.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.IgnoreWhitespace">
            <summary>
            Gets or sets a value indicating whether to ignore insignificant white space.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.LineNumberOffset">
            <summary>
            Gets or sets line number offset of the XmlReader object.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.LinePositionOffset">
            <summary>
            Gets or sets line position offset of the XmlReader object.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.NameTable">
            <summary>
            Gets or sets the XmlNameTable used for atomized string comparisons.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.Schemas">
            <summary>
            Gets or sets the XmlSchemaSet to use when performing schema validation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.ValidationFlags">
            <summary>
            Gets or sets a value indicating the schema validation settings. 
            This setting applies to schema validating XmlReader objects 
            (ValidationType property set to ValidationType.Schema).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.ValidationType">
            <summary>
            Gets or sets a value indicating whether the XmlReader will perform validation or type assignment when reading.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlReaderSettings.XmlResolver">
            <summary>
            Sets the XmlResolver used to access external documents
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlWriter">
            <summary>
            SimplSharp.CrestronXml XmlWriter Instance of a file supporting Xml Reading.
                Represents a writer that provides a fast, non-cached, forward-only means
                of generating streams or files containing XML data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlWriter._writer">
            <summary>
            The underlying System.Xml.XmlWriter
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor">
            <summary>
                Creates an empty wrapper
            </summary>
                <returns> A Crestron.Xml.XmlWriter object.</returns>
                
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the SimplSharp.CrestronXml.XmlWriter class.
            </summary>
            <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.Stream"/></param>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
            Initializes a new instance of the SimplSharp.CrestronXml.XmlWriter class.
            </summary>
            <param name="tw">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextWriter"/></param>
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the  XmlWriter class.
            </summary>
            <param name="wr">XmlWriter</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Initializes a new instance of the  XmlWriter class.
            </summary>
            <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.Stream"/></param>
            <param name="settings">SimplSharp XmlReaderSettings type</param> 
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(Crestron.SimplSharp.CrestronIO.TextWriter,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Initializes a new instance of the  XmlWriter class.
            </summary>
            <param name="tw">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextWriter"/></param>
            <param name="settings">SimplSharp XmlReaderSettings type</param> 
            <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  XmlWriter class with the specified file name.
            </summary>
            <param name="fileName">The file system path to write to, The XmlWriter creates a file at the specified path 
            and writes to it in XML 1.0 text syntax.</param>
            <exception cref="T:System.ArgumentNullException">fileName is null</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file was not found</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(System.Text.StringBuilder)">
            <summary>
            Initializes a new instance of the  XmlWriter class with the specified StringBuilder.
            </summary>
            <param name="builder">The StringBuilder to write to, 
            the content from the XmlWriter will be appended to the StringBuilder</param>
            <exception cref="T:System.ArgumentNullException">builder is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Initializes a new instance of the  XmlWriter class with the specified file name and XmlWriterSettings.
            </summary>
            <param name="fileName">The file system path to write to, The XmlWriter creates a file at the specified path 
            and writes to it in XML 1.0 text syntax</param>
            <param name="settings">The XmlWriterSettings object to configure the new XmlWriter instance. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified fileName is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file was not found</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(System.Text.StringBuilder,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Initializes a new instance of the XmlWriter class with the specified StringBuilder and XmlWriterSettings.
            </summary>
            <param name="builder">The StringBuilder to write to, 
            the content from the XmlWriter will be appended to the StringBuilder</param>
            <param name="settings">The XmlWriterSettings object to configure the new XmlWriter instance. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified builder is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Initializes a new instance of the XmlWriter class with the specified underlying XmlWriter.
            </summary>
            <param name="writer">The XmlWriter to use as the underlying writer</param>
            <exception cref="T:System.ArgumentNullException">The specified XmlWriter is null.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.#ctor(Crestron.SimplSharp.CrestronXml.XmlWriter,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Initializes a new instance of the XmlWriter class with the specified XmlWriter and XmlWriterSettings.
            </summary>
            <param name="writer">The XmlWriter to use as the underlying writer</param>
            <param name="settings">The XmlWriterSettings object to configure the new XmlWriter instance. This value can be null</param>
            <exception cref="T:System.ArgumentNullException">The specified writer is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Close">
            <summary>
            This method also releases any resources held during writing. 
            If Close has already been called, no action is performed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Creates a new XmlWriter instance using the specified stream. 
            </summary>
            <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.Stream"/></param>
            <returns> new XmlWriter instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Creates a new XmlWriter instance using the specified stream. 
            </summary>
            <param name="fs">A <see cref="T:Crestron.SimplSharp.CrestronIO.Stream"/></param>
            <param name="set">An <see cref="T:Crestron.SimplSharp.CrestronXml.XmlReaderSettings"/> object</param>
            <returns> new XmlWriter instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
            Creates a new XmlWriter instance using the specified TextWriter. 
            </summary>
            <param name="tw">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextWriter"/></param>
            <returns> new XmlWriter instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(Crestron.SimplSharp.CrestronIO.TextWriter,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Creates a new XmlWriter instance using the specified TextWriter. 
            </summary>
            <param name="tw">A <see cref="T:Crestron.SimplSharp.CrestronIO.TextWriter"/></param>
            <param name="set">An <see cref="T:Crestron.SimplSharp.CrestronXml.XmlReaderSettings"/> object</param>
            <returns> new XmlWriter instance </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(System.String)">
            <summary>
            Creates a new instance of the  XmlWriter class.
            </summary>
            <param name="fileName">The file system path to write to, the XmlWriter creates a file at the specified path 
            and writes to it in XML 1.0 text syntax.</param>
            <returns>new XmlWriter instance</returns>
            <exception cref="T:System.ArgumentNullException">fileName is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(System.Text.StringBuilder)">
            <summary>
            Creates a new instance of the  XmlWriter class.
            </summary>
            <param name="builder">The StringBuilder to write to, 
            the content from the XmlWriter will be appended to the StringBuilder</param>
            <returns>new XmlWriter instance</returns>
            <exception cref="T:System.ArgumentNullException">builder is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Creates a new instance of the SimplSharp.CrestronXml.XmlWriter class.
            </summary>
            <param name="writer">The XmlWriter to use as the underlying writer</param>
            <returns>An XmlWriter wrapping the specified XmlWriter</returns>
            <exception cref="T:System.ArgumentNullException">The specified XmlWriter is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(System.String,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Creates a new instance of the  XmlWriter class with the specified file name and XmlWriterSettings.
            </summary>
            <param name="fileName">The file system path to write to, The XmlWriter creates a file at the specified path 
            and writes to it in XML 1.0 text syntax</param>
            <param name="settings">The XmlWriterSettings object to configure the new XmlWriter instance. This value can be null</param>
            <returns>An XmlWriter object with the specified settings </returns>
            <exception cref="T:System.ArgumentNullException">The specified fileName is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(System.Text.StringBuilder,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Creates a new instance of the XmlWriter class with the specified StringBuilder and XmlWriterSettings.
            </summary>
            <param name="builder">The StringBuilder to write to, 
            the content from the XmlWriter will be appended to the StringBuilder</param>
            <param name="settings">The XmlWriterSettings object to configure the new XmlWriter instance. This value can be null</param>
            <returns>An XmlWriter object with the specified settings </returns>
            <exception cref="T:System.ArgumentNullException">The specified builder is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Create(Crestron.SimplSharp.CrestronXml.XmlWriter,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Creates a new instance of the XmlWriter class with the specified XmlWriter and XmlWriterSettings.
            </summary>
            <param name="writer">The XmlWriter to use as the underlying writer</param>
            <param name="settings">The XmlWriterSettings object to configure the new XmlWriter instance. This value can be null</param>
            <returns>An XmlWriter object with the specified settings </returns>
            <exception cref="T:System.ArgumentNullException">The specified writer is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Crestron.Xml.XmlWriter and optionally releases the managed resources.
            </summary>
            <param name="disposing"> true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.System#IDisposable#Dispose">
            <summary>
            Releases the unmanaged resources used by the XmlWriter 
            and optionally releases the managed resources. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.Flush">
            <summary>
            flushes whatever is in the buffer to the underlying streams
            and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteAttributes(Crestron.SimplSharp.CrestronXml.XmlReader,System.Boolean)">
             <summary>
            writes out all the attributes found at the current position in the XmlReader.
             </summary>
             <param name="reader"> The XmlReader from which to copy the attributes.</param>
             <param name="defattr">true to copy the default attributes from the XmlReader; otherwise, false.</param> 
             <exception cref="T:System.ArgumentNullException">One of the arguments is null.</exception>
             <exception cref="T:Crestron.SimplSharp.XmlException">One of the arguments is null.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteAttributeString(System.String,System.String)">
             <summary>
            writes out the attribute with the specified local name and value
             </summary>
             <param name="name"> The local name of the attribute.</param>
             <param name="value">The value of the attribute.</param>
             <exception cref="T:System.InvalidOperationException"> The state of writer is not WriteState.Element or writer is closed.</exception>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
             <summary>
            writes an attribute with the specified local name, namespace URI, and value
             </summary>
             <param name="name"> The local name of the attribute.</param>
             <param name="ns">The namespace URI of the attribute.</param>
             <param name="value">The value of the attribute.</param>
             <exception cref="T:System.InvalidOperationException"> The state of writer is not WriteState.Element or writer is closed.</exception>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
             <summary>
            writes out the attribute with the specified prefix, local name, namespace URI, and value.
             </summary>
             <param name="prefix">The namespace prefix of the attribute.</param>
             <param name="name"> The local name of the attribute.</param>
             <param name="ns">The namespace URI of the attribute.</param>
             <param name="value">The value of the attribute.</param>
             <exception cref="T:System.InvalidOperationException"> The state of writer is not WriteState.Element or writer is closed.</exception>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
            encodes the specified binary bytes as Base64 and writes out the resulting text.
            </summary>
            <param name="buffer"> Byte array to encode.</param>
            <param name="index"> The position in the buffer indicating the start of the bytes to write.</param>
            <param name="count"> The number of bytes to write.</param>           
            <exception cref="T:System.ArgumentOutOfRangeException">  index or count is less than zero.</exception> 
            <exception cref="T:System.ArgumentNullException">  buffer is null..</exception>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
            encodes the specified binary bytes as BinHex and writes out the resulting text.
            </summary>
            <param name="buffer"> Byte array to encode.</param>
            <param name="index"> The position in the buffer indicating the start of the bytes to write.</param>
            <param name="count"> The number of bytes to write.</param>           
            <exception cref="T:System.ArgumentOutOfRangeException">  index or count is less than zero.</exception> 
            <exception cref="T:System.ArgumentNullException">  buffer is null..</exception>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteCData(System.String)">
            <summary>
            writes out a <![CDATA[...]]> block containing the specified text.
            </summary>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            <param name="text">String containing text to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteCharEntity(System.Char)">
            <summary>
            forces the generation of a character entity for the specified Unicode character value.
            </summary>
            <param name="ch"> The character to write. </param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>
            writes text one buffer at a time..
            </summary>
            <param name="buffer"> The char array from which to write. </param>
            <param name="index"> The starting index in the char array. </param>
            <param name="count"> The character count in the char array. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">  index or count is less than zero.</exception> 
            <exception cref="T:System.ArgumentNullException">  buffer is null..</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteComment(System.String)">
            <summary>
            writes text one buffer at a time..
            </summary>
            <param name="text">String containing text to write.</param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <summary>
            writes the DOCTYPE declaration with the specified name and optional attributes.
            </summary>
            <param name="name"> The name of the DOCTYPE. This must be non-empty. </param>
            <param name="pubid"> If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments. </param>
            <param name="sysid"> If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument. </param>
            <param name="subset"> If non-null it writes [subset] where subset is replaced with the value of this argument. </param>
            <exception cref="T:System.InvalidOperationException">   This method was called outside the prolog (after the root element).</exception>            
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteElementString(System.String,System.String)">
            <summary>
            writes an element with the specified local name and value.
            </summary>
            <param name="name"> The local name of the element.</param>
            <param name="value">The value of the element.</param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
            <summary>
            writes an element with the specified local name and value.
            </summary>
            <param name="name"> The local name of the element.</param>
            <param name="ns">The namespace URI of the element.</param>
            <param name="value">The value of the element.</param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
            <summary>
            writes an element with the specified prefix local name and value.
            </summary>
            <param name="prefix">The namespace prefix of the element.</param>
            <param name="name"> The local name of the element.</param>
            <param name="ns">The namespace URI of the element.</param>
            <param name="value">The value of the element.</param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteEndAttribute">
            <summary>
            closes the previous WriteStartAttribute call.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteEndDocument">
            <summary>
            closes any open elements or attributes and puts the writer back in the Start state.
            </summary>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteEndElement">
            <summary>
            closes one element and pops the corresponding namespace scope.
            </summary>
            <exception cref="T:System.InvalidOperationException">   This method was called outside the prolog (after the root element).</exception>            
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteEntityRef(System.String)">
            <summary>
            writes out an entity reference as name;.
            </summary>
            <param name="name"> The name of the entity reference. </param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteFullEndElement">
            <summary>
            closes one element and pops the corresponding namespace scope.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteName(System.String)">
            <summary>
            writes out the specified name,
            ensuring it is a valid name according to the W3C XML 1.0 recommendation 
            (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).Namespace:  System.Xml
            </summary>
            <param name="name"> The name to write. </param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteNmToken(System.String)">
             <summary>
            writes out the specified name, 
            ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation 
            (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).
             </summary>
             <param name="name"> The name to write. </param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteNode(Crestron.SimplSharp.CrestronXml.XmlReader,System.Boolean)">
             <summary>
            copies everything from the reader to the writer 
            and moves the reader to the start of the next sibling. 
             </summary>
             <param name="reader"> The XmlReader to read from. </param>
             <param name="defattr"> true to copy the default attributes from the XmlReader; otherwise, false. </param>
             <exception cref="T:System.ArgumentNullException">  buffer is null..</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
             <summary>
            writes out a processing instruction 
            with a space between the name and text as follows: <?name text?>. 
             </summary>
             <param name="name">String containing the name of the processing instruction.</param>
             <param name="text">String containing the text of the processing instruction.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteQualifiedName(System.String,System.String)">
            <summary>
            writes out the namespace-qualified name. 
            This method looks up the prefix that is in scope for the given namespace. 
            </summary>
            <param name="localName"> The local name of the element.</param>
            <param name="ns">The namespace URI of the element.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteRaw(System.String)">
            <summary>
            writes raw markup manually from a string.
            </summary>
            <param name="data"> String containing the text to write. </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <summary>
            writes raw markup manually from a string.
            </summary>
            <param name="buffer"> Character array containing the text to write. </param>
            <param name="index"> The position within the buffer indicating the start of the text to write. </param>
            <param name="count"> The number of characters to write. </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartAttribute(System.String)">
             <summary>
            writes out all the attributes found at the current position in the XmlReader.
             </summary>
             <param name="localName"> The local name of the element.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartAttribute(System.String,System.String)">
             <summary>
            writes out the attribute with the specified local name and value
             </summary>
             <param name="localName"> The local name of the element.</param>
             <param name="ns">The namespace URI of the element.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
             <summary>
            writes an attribute with the specified local name, namespace URI, and value
             </summary>
             <param name="prefix">The namespace prefix of the element.</param>
             <param name="localName"> The local name of the element.</param>
             <param name="ns">The namespace URI of the element.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartDocument">
             <summary>
            writes the XML declaration with the version "1.0".
             </summary>
             <exception cref="T:System.InvalidOperationException">   This method was called outside the prolog (after the root element).</exception>            
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartDocument(System.Boolean)">
             <summary>
            writes the XML declaration with the version "1.0" and the standalone attribute.
             </summary>
             <param name="standalone"> If true, it writes "standalone=yes"; if false, it writes "standalone=no". </param>
             <exception cref="T:System.InvalidOperationException">   This method was called outside the prolog (after the root element).</exception>            
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartElement(System.String)">
             <summary>
            writes out a start tag with the specified local name.
             </summary>
             <exception cref="T:System.InvalidOperationException">   This method was called outside the prolog (after the root element).</exception>            
             
             <param name="localName"> The local name of the element.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartElement(System.String,System.String)">
             <summary>
            writes the specified start tag and associates it with the given namespace.
             </summary>
             <param name="localName"> The local name of the element.</param>
             <param name="ns">The namespace URI of the element.</param>
             <exception cref="T:System.InvalidOperationException">   This method was called outside the prolog (after the root element).</exception>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>
            Writes the specified start tag and associates it with the given namespace and prefix.
            </summary>
            <param name="prefix"> The namespace prefix of the element. </param>
            <param name="localName"> The local name of the element.</param>
            <param name="ns"> The namespace URI to associate with the element.</param>
            <exception cref="T:System.InvalidOperationException"> Writer is closed</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteString(System.String)">
             <summary>
            writes the given text content.
             </summary>
             <param name="text">String containing text to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
             <summary>
            generates and writes the surrogate character entity for the surrogate character pair.
             </summary>
             <param name="highChar"> The high surrogate. This must be a value between 0xD800 and 0xDBFF. </param>
             <param name="lowChar"> The low surrogate. This must be a value between 0xDC00 and 0xDFFF. </param>
             <exception cref="T:System.Exception">An invalid surrogate character pair was passed.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.Boolean)">
             <summary>
            Writes a Boolean value
             </summary>
             <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.DateTime)">
             <summary>
            Writes a DateTime value.
             </summary>
             <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.Decimal)">
             <summary>
            Writes a Decimal value.
             </summary>
             <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.Double)">
             <summary>
            Writes a Double value.
             </summary>
             <param name="value">The <see cref="T:System.Double"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.Int32)">
             <summary>
            Writes a Int32 value.
             </summary>
             <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.Int64)">
             <summary>
            Writes a Int64 value
             </summary>
             <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.Object)">
             <summary>
            Writes the object value.
             </summary>
             <param name="value">The <see cref="T:System.Object"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.Single)">
             <summary>
            Writes a single-precision floating-point number.
             </summary>
             <param name="value">The <see cref="T:System.Single"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteValue(System.String)">
             <summary>
            Writes a String value.
             </summary>
             <param name="value">The <see cref="T:System.String"/> value to write.</param>
             <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
             
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteWhitespace(System.String)">
            <summary>
            Writes out the given white space.
            </summary>
            <param name="ws"> The string of white space characters. </param>
            <exception cref="T:System.ArgumentException"> The xml:space or xml:lang attribute value is invalid.</exception>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriter.LookupPrefix(System.String)">
            <summary>
                 When overridden in a derived class, returns the closest prefix defined in
                 the current namespace scope for the namespace URI.
            </summary>
             <param name="ns">
                 The namespace URI whose prefix you want to find.
            </param>
            <returns>
                 The matching prefix or null if no matching namespace URI is found in the
                 current scope.
            </returns>
             <exception cref="T:System.ArgumentException">
                 ns is either null or String.Empty.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriter.WriteState">
            <summary>
            gets the state of the reader.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriter.Settings">
            <summary>
            Gets the XmlWriterSettings object used to create this XmlWriter instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriter.XmlLang">
            <summary>
            Gets the current xml:lang scope.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriter.XmlSpace">
            <summary>
            Gets the current xml:space scope.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlWriterSettings">
            <summary>
            SimplSharp.CrestronXml XmlReader Instance of a file supporting Xml Reading.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.#ctor">
            <summary>
            Initialize the XmlReaderSettings to default settings
            </summary>
            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.Clone">
            <summary>
            Creates a copy of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlWriterSettings"/> instance.
            </summary>
            <returns>The cloned <see cref="T:Crestron.SimplSharp.CrestronXml.XmlWriterSettings"/> object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.Reset">
            <summary>
            Resets the members of the settings class to their default values.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.op_Equality(Crestron.SimplSharp.CrestronXml.XmlWriterSettings,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Checks for referential equality between two XmlWriterSettings
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XmlWriterSettings are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.op_Inequality(Crestron.SimplSharp.CrestronXml.XmlWriterSettings,Crestron.SimplSharp.CrestronXml.XmlWriterSettings)">
            <summary>
            Checks for referential inequality between two XmlWriterSettings
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XmlWriterSettings are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.GetHashCode">
            <summary>
            Gets the hash code for this XmlWriterSettings
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XmlWriterSettings
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XmlWriterSettings; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.CheckCharacters">
             <summary>
            Gets or sets a value indicating whether to do character checking.
             </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.CloseOutput">
            <summary>
            Gets or sets a value indicating whether the underlying stream or TextReader should be closed when the reader is closed.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.ConformanceLevel">
            <summary>
            Gets or sets the level of conformance which the XmlReader will comply.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.Encoding">
            <summary>
            Gets or sets the type of text encoding to use.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.Indent">
            <summary>
            Gets or sets a value indicating whether to ignore processing instructions.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.IndentChars">
            <summary>
            Gets or sets the character string to use when indenting. 
            This setting is used when the Indent property is set to true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.NewLineChars">
            <summary>
            Gets or sets line number offset of the XmlReader object.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.NewLineHandling">
            <summary>
            Gets or sets line position offset of the XmlReader object.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.NewLineOnAttributes">
            <summary>
            Gets or sets the XmlNameTable used for atomized string comparisons.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.OmitXmlDeclaration">
            <summary>
            Gets or sets a value indicating whether to write an XML declaration.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWriterSettings.OutputMethod">
            <summary>
            Gets a value indicating the schema validation settings. 
            This setting applies to schema validating XmlReader objects 
            (ValidationType property set to ValidationType.Schema).
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlConvert">
            <summary> Encodes and decodes XML names and provides methods for converting between
                 common language runtime types and XML Schema definition language (XSD) types.
                 When converting data types the values returned are locale independent.
             </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.DecodeName(System.String)">
             <summary>Decodes a name. This method does the reverse of the XmlConvert.EncodeName(System.String)
              and XmlConvert.EncodeLocalName(System.String) methods.
             </summary>     
            <param name="name">The name to be transformed. </param>
            <returns>The decoded name. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.EncodeLocalName(System.String)">
            <summary>Converts the name to a valid XML local name.</summary>
            <param name="name"> The name to be encoded.</param>
            <returns> The encoded name</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.EncodeName(System.String)">
            <summary> Converts the name to a valid XML name.</summary>
            <param name="name"> A name to be translated.</param>
            <returns> Returns the name with any invalid characters replaced by an escape string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.EncodeNmToken(System.String)">
            <summary>
            Verifies the name is valid according to the XML specification.
            </summary>
            <param name="name"> The name to be encoded</param>
            <returns> The encoded name </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToBoolean(System.String)">
            <summary>
            Converts the System.String to a System.Boolean equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> A Boolean value, that is, true or false.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s does not represent a Boolean value.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToByte(System.String)">
            <summary>
            Converts the System.String to a System.Byte equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> A byte equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.Byte.MinValue or greater than System.Byte.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToChar(System.String)">
            <summary>
            Converts the System.String to a System.Char equivalent.
            </summary>
            <param name="s"> The string containing a single char to convert</param>
            <returns> A char representing the single character.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s contains more than one character.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToDateTime(System.String,System.String)">
            <summary>
            Converts the System.String to a System.DateTime equivalent.
            </summary>
            <param name="s"> The string  to convert</param>
            <param name="format"> The format structure to apply to the converted DateTime. Valid formats include
               "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets. The string is validated against
               this format.</param>
            <returns> A DateTime equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException">  s or format is String.Empty -or- s does not contain a date and time that
               corresponds to format.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToDateTime(System.String,System.String[])">
            <summary>
            Converts the System.String to a System.DateTime equivalent.
            </summary>
            <param name="s"> The string  to convert</param>
            <param name="formats">  An array containing the format structures to apply to the converted DateTime. Valid formats include
               "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets. </param>
            <returns> A DateTime equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException">  s or format is String.Empty -or- s does not contain a date and time that
                corresponds to format.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToDateTime(System.String,Crestron.SimplSharp.CrestronXml.XmlDateTimeSerializationMode)">
            <summary>
             Converts the System.String to a System.DateTime using the XmlDateTimeSerializationMode
                specified </summary>
            <param name="s"> The string value to convert</param>
            <param name="dateTimeOption">  One of the XmlDateTimeSerializationMode values that specify whether
                the date should be converted to local time or preserved as Coordinated Universal
                Time (UTC), if it is a UTC date. </param>
            <returns> A DateTime equivalent of the string.</returns>
            <exception cref="T:System.NullReferenceException"> s is null</exception>
            <exception cref="T:System.ArgumentNullException"> The dateTimeOption is null</exception>
            <exception cref="T:System.FormatException"> s is an empty string or is not in a valid format.  .</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToDecimal(System.String)">
            <summary>
            Converts the System.String to a System.Decimal equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> A decimal equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.Decimal.MinValue or greater than System.Decimal.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToDouble(System.String)">
            <summary>
            Converts the System.String to a System.Double equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> A double equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.Double.MinValue or greater than System.Double.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToGuid(System.String)">
            <summary>
            Converts the System.String to a System.Guid equivalent.
            </summary>
            <param name="s"> The string to convert.</param>
            <returns> A Guid equivalent of the string.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToInt16(System.String)">
            <summary>
            Converts the System.String to a System.Int16 equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> An Int16 equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.Int16.MinValue or greater than System.Int16.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToInt32(System.String)">
            <summary>
            Converts the System.String to a System.Int32 equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> An Int32 equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.Int32.MinValue or greater than System.Int32.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToInt64(System.String)">
            <summary>
            Converts the System.String to a System.Int64 equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> An Int64 equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.Int64.MinValue or greater than System.Int64.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToSByte(System.String)">
            <summary>
            Converts the System.String to a System.SByte equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> An SByte equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.SByte.MinValue or greater than System.SByte.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToSingle(System.String)">
            <summary>
            Converts the System.String to a System.Single equivalent.
            </summary>
            <param name="s"> The string to convert</param>
            <returns> A Single equivalent of the string.</returns>
            <exception cref="T:System.ArgumentNullException"> s is null</exception>
            <exception cref="T:System.FormatException"> s is not in the correct format.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.Single.MinValue or greater than System.Single.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Boolean)">
            <summary>
            Converts the System.Boolean to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Boolean, that is, "true" or "false".</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Byte)">
            <summary>
            Converts the System.Byte to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the byte.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Char)">
            <summary>
            Converts the System.Char to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Char.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Decimal)">
            <summary>
            Converts the System.Decimal to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Decimal.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Double)">
            <summary>
            Converts the System.Double to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Double.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Single)">
            <summary>
            Converts the System.Single to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Single.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Guid)">
            <summary>
            Converts the System.Guid to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Guid.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Int32)">
            <summary>
            Converts the System.Int32 to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Int32.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Int64)">
            <summary>
            Converts the System.Int64 to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Int64.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.SByte)">
            <summary>
            Converts the System.SByte to a System.String.
            </summary>
            <param name="value"> The value to convert.</param>
            <returns> A string representation of the SByte.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.Int16)">
            <summary>
            Converts the System.Int16 to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the Int16.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.TimeSpan)">
            <summary>
            Converts the System.TimeSpan to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <returns> A string representation of the TimeSpan.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.UInt32)">
            <summary>
            Converts the System.UInt32 to a System.String.
            </summary>
            <param name="value"> The value to convert.</param>
            <returns> A string representation of the UInt32.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.UInt64)">
            <summary>
            Converts the System.UInt64 to a System.String.
            </summary>
            <param name="value"> The value to convert.</param>
            <returns> A string representation of the UInt64.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.UInt16)">
            <summary>
            Converts the System.UInt16 to a System.String.
            </summary>
            <param name="value"> The value to convert.</param>
            <returns> A string representation of the UInt16.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.DateTime,System.String)">
            <summary>
            Converts the System.DateTime to a System.String.
            </summary>
            <param name="value"> The value to convert</param>
            <param name="format"> The format structure that defines how to display the converted string. Valid
                formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</param>
            <returns> A string representation of the DateTime in the specified format.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToString(System.DateTime,Crestron.SimplSharp.CrestronXml.XmlDateTimeSerializationMode)">
            <summary>
            Converts the System.DateTime to a System.String using the XmlDateTimeSerializationMode specified.
            </summary>
            <param name="value"> The DateTime value to convert</param>
            <param name="dateTimeOption"> One of the XmlDateTimeSerializationMode values that specify how
                to treat the System.DateTime value.</param>
            <returns> A string equivalent of the System.DateTime.</returns>
            <exception cref="T:System.ArgumentException"> The dateTimeOption value is not valid.</exception>
            <exception cref="T:System.ArgumentNullException"> The value or dateTimeOption value is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToTimeSpan(System.String)">
            <summary>
            Converts the System.DateTime to a System.TimeSpan equivalent.
            </summary>
            <param name="s"> The string to convert. The string format must conform to the W3C XML Schema
                Part 2: Datatypes recommendation for duration. </param>
            <returns> A TimeSpan equivalent of the string.</returns>
            <exception cref="T:System.FormatException"> s is not in correct format to represent a TimeSpan value.</exception>
            <exception cref="T:System.ArgumentNullException"> The value or dateTimeOption value is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToUInt16(System.String)">
            <summary>
            Converts the System.String to a System.UInt16 equivalent.
            </summary>
            <param name="s"> The string to convert. </param>
            <returns> A UInt16 equivalent of the string.</returns>
            <exception cref="T:System.FormatException"> s is not in correct format.</exception>
            <exception cref="T:System.ArgumentNullException"> s is null.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.UInt16.MinValue or greater than System.UInt16.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToUInt32(System.String)">
            <summary>
            Converts the System.String to a System.UInt32 equivalent.
            </summary>
            <param name="s"> The string to convert. </param>
            <returns> A UInt32 equivalent of the string.</returns>
            <exception cref="T:System.FormatException"> s is not in correct format.</exception>
            <exception cref="T:System.ArgumentNullException"> s is null.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.UInt32.MinValue or greater than System.UInt32.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.ToUInt64(System.String)">
            <summary>
            Converts the System.String to a System.UInt64 equivalent.
            </summary>
            <param name="s"> The string to convert. </param>
            <returns> A UInt64 equivalent of the string.</returns>
            <exception cref="T:System.FormatException"> s is not in correct format.</exception>
            <exception cref="T:System.ArgumentNullException"> s is null.</exception>
            <exception cref="T:System.OverflowException"> s represents a number less than System.UInt64.MinValue or greater than System.UInt64.MaxValue.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.VerifyName(System.String)">
            <summary>
            Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.
            </summary>
            <param name="name"> The name to verify</param>
            <returns> The name, if it is a valid XML name..</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException"> name is not a valid XmlName.</exception>
            <exception cref="T:System.ArgumentNullException">  name is null or String.Empty.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.VerifyNCName(System.String)">
            <summary>
            Verifies that the name is a valid NCName according to the W3C Extended Markup Language recommendation.
            </summary>
            <param name="name"> The name to verify</param>
            <returns> The name, if it is a valid NCname..</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException"> name is not a valid NCName.</exception>
            <exception cref="T:System.ArgumentNullException">  name is null or String.Empty.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.VerifyNMTOKEN(System.String)">
            <summary>
            Verifies that the name is a valid NMTOKEN according to the W3C XML Schema
                Part2: Datatypes recommendation
            </summary>
            <param name="name"> The string to verify</param>
            <returns> The name token, if it is a valid NMTOKEN.</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException"> name is not a valid name token.</exception>
            <exception cref="T:System.ArgumentNullException">  name is null or String.Empty.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlConvert.VerifyTOKEN(System.String)">
            <summary>
            Verifies that the string is a valid token according to the W3C XML Schema
                Part2: Datatypes recommendation.
            </summary>
            <param name="token"> The string to verify</param>
            <returns> The token, if it is a valid token.</returns>
            <exception cref="T:Crestron.SimplSharp.XmlException"> String value is not a valid token.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlTextReader">
            <summary>
                 Represents a reader that provides fast, non-cached, forward-only access to
                 XML data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor">
            <summary>
                 Initializes a new instance of the XmlTextReader.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified stream.
            </summary>
             <param name="input">
                 The stream containing the XML data to read.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 input is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified file.
            </summary>
             <param name="url">
                 The URL for the file containing the XML data. The XmlTextReader.BaseURI
                 is set to this value.
            </param>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The specified file cannot be found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 Part of the filename or directory cannot be found.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 url is an empty string.
            </exception>
             <exception cref="T:System.Net.WebException">
                 The remote filename cannot be resolved.-or-An error occurred while processing
                 the request.
            </exception>
             <exception cref="T:System.UriFormatException">
                 url is not a valid URI.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(Crestron.SimplSharp.CrestronIO.TextReader)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified System.CrestronIO.TextReader.
            </summary>
             <param name="input">
                 The TextReader containing the XML data to read.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified XmlNameTable.
            </summary>
             <param name="nt">
                 The XmlNameTable to use.
            </param>
            <exception cref="T:System.ArgumentException">Unable to create XmlTextReader with the XmlNameTable</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified stream and XmlNameTable.
            </summary>
             <param name="input">
                 The stream containing the XML data to read.
            </param>
             <param name="nt">
                 The XmlNameTable to use.
            </param>
             <exception cref="T:System.NullReferenceException">
                 The input or nt value is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified URL and stream.
            </summary>
             <param name="url">
                 The URL to use for resolving external resources. The XmlTextReader.BaseURI
                 is set to this value.
            </param>
             <param name="input">
                 The stream containing the XML data to read.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 input is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(System.String,Crestron.SimplSharp.CrestronIO.TextReader)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified URL and System.CrestronIO.TextReader.
            </summary>
             <param name="url">
                 The URL to use for resolving external resources. The XmlTextReader.BaseURI
                 is set to this value.
            </param>
             <param name="input">
                 The TextReader containing the XML data to read.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified file and XmlNameTable.
            </summary>
             <param name="url">
                 The URL for the file containing the XML data to read.
            </param>
             <param name="nt">
                 The XmlNameTable to use.
            </param>
             <exception cref="T:System.NullReferenceException">
                 The nt value is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">
                 The specified file cannot be found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 Part of the filename or directory cannot be found.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 url is an empty string.
            </exception>
             <exception cref="T:System.Net.WebException">
                 The remote filename cannot be resolved.-or-An error occurred while processing
                 the request.
            </exception>
             <exception cref="T:System.UriFormatException">
                 url is not a valid URI.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified System.CrestronIO.TextReader and XmlNameTable.
            </summary>
             <param name="input">
                 The TextReader containing the XML data to read.
            </param>
             <param name="nt">
                 The XmlNameTable to use.
            </param>
             <exception cref="T:System.NullReferenceException">
                 The nt value is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlNodeType,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified stream, XmlNodeType, and XmlParserContext.
            </summary>
             <param name="xmlFragment">
                 The stream containing the XML fragment to parse.
            </param>
             <param name="fragType">
                 The XmlNodeType of the XML fragment. This also determines what
                 the fragment can contain. (See table below.)
            </param>
             <param name="context">
                 The XmlParserContext in which the xmlFragment is to be parsed.
                 This includes the XmlNameTable to use, encoding, namespace scope,
                 the current xml:lang, and the xml:space scope.
            </param>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 fragType is not an Element, Attribute, or Document XmlNodeType.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 xmlFragment is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(System.String,Crestron.SimplSharp.CrestronIO.Stream,Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified URL, stream and XmlNameTable.
            </summary>
             <param name="url">
                 The URL to use for resolving external resources. The XmlTextReader.BaseURI
                 is set to this value. If url is null, BaseURI is set to String.Empty.
            </param>
             <param name="input">
                 The stream containing the XML data to read.
            </param>
             <param name="nt">
                 The XmlNameTable to use.
            </param>
             <exception cref="T:System.NullReferenceException">
                 The input or nt value is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(System.String,Crestron.SimplSharp.CrestronIO.TextReader,Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified URL, System.CrestronIO.TextReader and XmlNameTable.
            </summary>
             <param name="url">
                 The URL to use for resolving external resources. The XmlTextReader.BaseURI
                 is set to this value. If url is null, BaseURI is set to String.Empty.
            </param>
             <param name="input">
                 The TextReader containing the XML data to read.
            </param>
             <param name="nt">
                 The XmlNameTable to use.
            </param>
             <exception cref="T:System.NullReferenceException">
                 The nt value is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlNodeType,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>
                 Initializes a new instance of the XmlTextReader class with the
                 specified string, XmlNodeType, and XmlParserContext.
            </summary>
             <param name="xmlFragment">
                 The string containing the XML fragment to parse.
            </param>
             <param name="fragType">
                 The XmlNodeType of the XML fragment. This also determines what
                 the fragment string can contain. (See table below.)
            </param>
             <param name="context">
                 The XmlParserContext in which the xmlFragment is to be parsed.
                 This includes the XmlNameTable to use, encoding, namespace scope,
                 the current xml:lang, and the xml:space scope.
            </param>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 fragType is not an Element, Attribute, or DocumentXmlNodeType.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 xmlFragment is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.Close">
            <summary>
                 Changes the XmlReader.ReadState to Closed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.GetAttribute(System.Int32)">
            <summary>
                 Gets the value of the attribute with the specified index.
            </summary>
             <param name="i">
                 The index of the attribute. The index is zero-based. (The first attribute
                 has index 0.)
            </param>
            <returns>
                 The value of the specified attribute.
            </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The i parameter is less than 0 or greater than or equal to XmlTextReader.AttributeCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.GetAttribute(System.String)">
            <summary>
                 Gets the value of the attribute with the specified name.
            </summary>
             <param name="name">
                 The qualified name of the attribute.
            </param>
            <returns>
                 The value of the specified attribute. If the attribute is not found, null
                 is returned.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.GetAttribute(System.String,System.String)">
            <summary>
                 Gets the value of the attribute with the specified local name and namespace
                 URI.
            </summary>
             <param name="localName">
                 The local name of the attribute.
            </param>
             <param name="namespaceURI">
                 The namespace URI of the attribute.
            </param>
            <returns>
                 The value of the specified attribute. If the attribute is not found, null
                 is returned. This method does not move the reader.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.GetNamespacesInScope(Crestron.SimplSharp.CrestronXml.XmlNamespaceScope)">
            <summary>
                 Gets a collection that contains all namespaces currently in-scope.
            </summary>
             <param name="scope">
                 An XmlNamespaceScope value that specifies the type of namespace
                 nodes to return.
            </param>
            <returns>
                 An System.Collections.IDictionary object that contains all the current in-scope
                 namespaces. If the reader is not positioned on an element, an empty dictionary
                 (no namespaces) is returned.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.GetRemainder">
            <summary>
                 Gets the remainder of the buffered XML.
            </summary>
            <returns>
                 A System.CrestronIO.TextReader containing the remainder of the buffered XML.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.HasLineInfo">
            <summary>
                 Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
                 true if the class can return line information; otherwise, false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.LookupNamespace(System.String)">
            <summary>
                 Resolves a namespace prefix in the current element's scope.
            </summary>
             <param name="prefix">
                 The prefix whose namespace URI you want to resolve. To match the default
                 namespace, pass an empty string. This string does not have to be atomized.
            </param>
            <returns>
                 The namespace URI to which the prefix maps or null if no matching prefix
                 is found.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 The XmlTextReader.Namespaces property is set to true and the prefix
                 value is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.Crestron#SimplSharp#CrestronXml#IXmlNamespaceResolver#LookupPrefix(System.String)">
            <summary>
            Gets the prefix that is mapped to the specified namespace URI.
            </summary>
            <param name="namespaceName">The namespace URI whose prefix you wish to find.</param>
            <returns>The prefix that is mapped to the namespace URI; null if the namespace URI
             is not mapped to a prefix.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.MoveToAttribute(System.Int32)">
            <summary>
                 Moves to the attribute with the specified index.
            </summary>
             <param name="i">
                 The index of the attribute.
            </param>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The i parameter is less than 0 or greater than or equal to XmlReader.AttributeCount.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.MoveToAttribute(System.String)">
            <summary>
                 Moves to the attribute with the specified name.
            </summary>
             <param name="name">
                 The qualified name of the attribute.
            </param>
            <returns>
                 true if the attribute is found; otherwise, false. If false, the reader's
                 position does not change.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.MoveToAttribute(System.String,System.String)">
            <summary>
                 Moves to the attribute with the specified local name and namespace URI.
            </summary>
             <param name="localName">
                 The local name of the attribute.
            </param>
             <param name="namespaceURI">
                 The namespace URI of the attribute.
            </param>
            <returns>
                 true if the attribute is found; otherwise, false. If false, the reader's
                 position does not change.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.MoveToElement">
            <summary>
                 Moves to the element that contains the current attribute node.
            </summary>
            <returns>
                 true if the reader is positioned on an attribute (the reader moves to the
                 element that owns the attribute); false if the reader is not positioned on
                 an attribute (the position of the reader does not change).
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.MoveToFirstAttribute">
            <summary>
                 Moves to the first attribute.
            </summary>
            <returns>
                 true if an attribute exists (the reader moves to the first attribute); otherwise,
                 false (the position of the reader does not change).
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.MoveToNextAttribute">
            <summary>
                 Moves to the next attribute.
            </summary>
            <returns>
                 true if there is a next attribute; false if there are no more attributes.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.Read">
            <summary>
                 Reads the next node from the stream.
            </summary>
            <returns>
                 true if the next node was read successfully; false if there are no more nodes
                 to read.
            </returns>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 An error occurred while parsing the XML.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadAttributeValue">
            <summary>
                 Parses the attribute value into one or more Text, EntityReference, or EndEntity
                 nodes.
            </summary>
            <returns>
                 true if there are nodes to return.false if the reader is not positioned on
                 an attribute node when the initial call is made or if all the attribute values
                 have been read.An empty attribute, such as, misc="", returns true with a
                 single node with a value of String.Empty.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Decodes Base64 and returns the decoded binary bytes.
            </summary>
             <param name="array">
                 The array of characters that serves as the buffer to which the text contents
                 are written.
            </param>
             <param name="offset">
                 The zero-based index into the array specifying where the method can begin
                 to write to the buffer.
            </param>
             <param name="len">
                 The number of bytes to write into the buffer.
            </param>
            <returns>
                 The number of bytes written to the buffer.
            </returns>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 The Base64 sequence is not valid.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The value of array is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 <![CDATA[offset < 0, or len < 0, or len > array.Length- offset.]]>
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Decodes BinHex and returns the decoded binary bytes.
            </summary>
             <param name="array">
                 The byte array that serves as the buffer to which the decoded binary bytes
                 are written.
            </param>
             <param name="offset">
                 The zero-based index into the array specifying where the method can begin
                 to write to the buffer.
            </param>
             <param name="len">
                 The number of bytes to write into the buffer.
            </param>
            <returns>
                 The number of bytes written to your buffer.
            </returns>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 The BinHex sequence is not valid.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The value of array is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 <![CDATA[offset < 0, or len < 0, or len > array.Length- offset]]>.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
            <summary>
                 Reads the text contents of an element into a character buffer. This method
                 is designed to read large streams of embedded text by calling it successively.
            </summary>
             <param name="buffer">
                 The array of characters that serves as the buffer to which the text contents
                 are written.
            </param>
             <param name="index">
                 The position within buffer where the method can begin writing text contents.
            </param>
             <param name="count">
                 The number of characters to write into buffer.
            </param>
            <returns>
                 The number of characters read. This can be 0 if the reader is not positioned
                 on an element or if there is no more text content to return in the current
                 context.
            </returns>
             <exception cref="T:System.ArgumentException">
                 count is greater than the space specified in the buffer (buffer size - index).
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The buffer value is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 <![CDATA[index< 0 or count< 0.]]>
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads the content and returns the Base64 decoded binary bytes.
            </summary>
             <param name="buffer">
                 The buffer into which to copy the resulting text. This value cannot be null.
            </param>
             <param name="index">
                 The offset into the buffer where to start copying the result.
            </param>
             <param name="count">
                 The maximum number of bytes to copy into the buffer. The actual number of
                 bytes copied is returned from this method.
            </param>
            <returns>
                 The number of bytes written to the buffer.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 The buffer value is null.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
                 is not supported in the current node.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The index into the buffer or index + count is larger than the allocated buffer
                 size.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads the content and returns the BinHex decoded binary bytes.
            </summary>
             <param name="buffer">
                 The buffer into which to copy the resulting text. This value cannot be null.
            </param>
             <param name="index">
                 The offset into the buffer where to start copying the result.
            </param>
             <param name="count">
                 The maximum number of bytes to copy into the buffer. The actual number of
                 bytes copied is returned from this method.
            </param>
            <returns>
                 The number of bytes written to the buffer.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 The buffer value is null.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
                 is not supported on the current node.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The index into the buffer or index + count is larger than the allocated buffer
                 size.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 The XmlTextReader implementation does not support this method.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads the element and decodes the Base64 content.
            </summary>
             <param name="buffer">
                 The buffer into which to copy the resulting text. This value cannot be null.
            </param>
             <param name="index">
                 The offset into the buffer where to start copying the result.
            </param>
             <param name="count">
                 The maximum number of bytes to copy into the buffer. The actual number of
                 bytes copied is returned from this method.
            </param>
            <returns>
                 The number of bytes written to the buffer.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 The buffer value is null.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The current node is not an element node.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The index into the buffer or index + count is larger than the allocated buffer
                 size.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 The XmlTextReader implementation does not support this method.
            </exception>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 The element contains mixed-content.
            </exception>
             <exception cref="T:System.FormatException">
                 The content cannot be converted to the requested type.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Reads the element and decodes the BinHex content.
            </summary>
             <param name="buffer">
                 The buffer into which to copy the resulting text. This value cannot be null.
            </param>
             <param name="index">
                 The offset into the buffer where to start copying the result.
            </param>
             <param name="count">
                 The maximum number of bytes to copy into the buffer. The actual number of
                 bytes copied is returned from this method.
            </param>
            <returns>
                 The number of bytes written to the buffer.
            </returns>
             <exception cref="T:System.ArgumentNullException">
                 The buffer value is null.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The current node is not an element node.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 The index into the buffer or index + count is larger than the allocated buffer
                 size.
            </exception>
             <exception cref="T:System.NotSupportedException">
                 The XmlReader implementation does not support this method.
            </exception>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 The element contains mixed-content.
            </exception>
             <exception cref="T:System.FormatException">
                 The content cannot be converted to the requested type.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadString">
            <summary>
                 Reads the contents of an element or a text node as a string.
            </summary>
            <returns>
                 The contents of the element or text node. This can be an empty string if
                 the reader is positioned on something other than an element or text node,
                 or if there is no more text content to return in the current context.Note:
                 The text node can be either an element or an attribute text node.
            </returns>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 An error occurred while parsing the XML.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 An invalid operation was attempted.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ResetState">
            <summary>
                 Resets the state of the reader to ReadState.Initial.
            </summary>
             <exception cref="T:System.InvalidOperationException">
                 Calling ResetState if the reader was constructed using an XmlParserContext.
            </exception>
             <exception cref="T:Crestron.SimplSharp.XmlException">
                 Documents in a single stream do not share the same encoding.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.ResolveEntity">
            <summary>
                 Resolves the entity reference for EntityReference nodes.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextReader.Skip">
            <summary>
                 Skips the children of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.AttributeCount">
            <summary>
                 Gets the number of attributes on the current node.
            </summary>
            <returns>
                 The number of attributes on the current node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.BaseURI">
            <summary>
                 Gets the base URI of the current node.
            </summary>
            <returns>
                 The base URI of the current node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.CanReadBinaryContent">
            <summary>
                 Gets a value indicating whether the XmlTextReader implements the
                 binary content read methods.
            </summary>
            <returns>
                 true if the binary content read methods are implemented; otherwise false.
                 The XmlTextReader class always returns true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.CanReadValueChunk">
            <summary>
                 Gets a value indicating whether the XmlTextReader implements the
                 XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
                 method.
            </summary>
            <returns>
                 true if the XmlTextReader implements the XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
                 method; otherwise false. The XmlTextReader class always returns
                 false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.CanResolveEntity">
            <summary>
                 Gets a value indicating whether this reader can parse and resolve entities.
            </summary>
            <returns>
                 true if the reader can parse and resolve entities; otherwise, false. The
                 XmlTextReader class always returns true.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Depth">
            <summary>
                 Gets the depth of the current node in the XML document.
            </summary>
            <returns>
                 The depth of the current node in the XML document.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Encoding">
            <summary>
                 Gets the encoding of the document.
            </summary>
            <returns>
                 The encoding value. If no encoding attribute exists, and there is no byte-order
                 mark, this defaults to UTF-8.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.EntityHandling">
            <summary>
                 Gets or sets a value that specifies how the reader handles entities.
            </summary>
            <returns>
                 One of the EntityHandling values. If no EntityHandling is specified,
                 it defaults to EntityHandling.ExpandCharEntities.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.EOF">
            <summary>
                 Gets a value indicating whether the reader is positioned at the end of the
                 stream.
            </summary>
            <returns>
                 true if the reader is positioned at the end of the stream; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.HasValue">
            <summary>
                 Gets a value indicating whether the current node can have a XmlTextReader.Value
                 other than String.Empty.
            </summary>
            <returns>
                 true if the node on which the reader is currently positioned can have a Value;
                 otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.IsDefault">
            <summary>
                 Gets a value indicating whether the current node is an attribute that was
                 generated from the default value defined in the DTD or schema.
            </summary>
            <returns>
                 This property always returns false. (XmlTextReader does not expand
                 default attributes.)
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.IsEmptyElement">
            <summary>
                 Gets a value indicating whether the current node is an empty element (for
                 example, <MyElement/>).
            </summary>
            <returns>
                 true if the current node is an element (XmlTextReader.NodeType
                 equals XmlNodeType.Element) that ends with />; otherwise, false.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.LineNumber">
            <summary>
                 Gets the current line number.
            </summary>
            <returns>
                 The current line number.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.LinePosition">
            <summary>
                 Gets the current line position.
            </summary>
            <returns>
                 The current line position.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.LocalName">
            <summary>
                 Gets the local name of the current node.
            </summary>
            <returns>
                 The name of the current node with the prefix removed.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Name">
            <summary>
                 Gets the qualified name of the current node.
            </summary>
            <returns>
                 The qualified name of the current node. The name returned is dependent on the XmlTextReader.NodeType
                 of the node. The following node types return the listed values. All other
                 node types return an empty string.Node Type Name AttributeThe name of the
                 attribute. DocumentTypeThe document type name. ElementThe tag name. EntityReferenceThe
                 name of the entity referenced. ProcessingInstructionThe target of the processing
                 instruction. XmlDeclarationThe literal string xml.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Namespaces">
            <summary>
                 Gets or sets a value indicating whether to do namespace support.
            </summary>
            <returns>
                 true to do namespace support; otherwise, false. The default is true.
            </returns>
             <exception cref="T:System.InvalidOperationException">
                 Setting this property after a read operation has occurred (XmlTextReader.ReadState
                 is not ReadState.Initial).
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.NamespaceURI">
            <summary>
                 Gets the namespace URI (as defined in the W3C Namespace specification) of
                 the node on which the reader is positioned.
            </summary>
            <returns>
                 The namespace URI of the current node; otherwise an empty string.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.NameTable">
            <summary>
                 Gets the XmlNameTable associated with this implementation.
            </summary>
            <returns>
                 The XmlNameTable enabling you to get the atomized version of a string within
                 the node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.NodeType">
            <summary>
                 Gets the type of the current node.
            </summary>
            <returns>
                 One of the XmlNodeType values representing the type of the current
                 node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Normalization">
            <summary>
                 Gets or sets a value indicating whether to normalize white space and attribute
                 values.
            </summary>
            <returns>
                 true to normalize; otherwise, false. The default is false.
            </returns>
             <exception cref="T:System.InvalidOperationException">
                 Setting this property when the reader is closed (XmlTextReader.ReadState
                 is ReadState.Closed).
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Prefix">
            <summary>
                 Gets the namespace prefix associated with the current node.
            </summary>
            <returns>
                 The namespace prefix associated with the current node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.QuoteChar">
            <summary>
                 Gets the quotation mark character used to enclose the value of an attribute
                 node.
            </summary>
            <returns>
                 The quotation mark character (" or ') used to enclose the value of an attribute
                 node.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.ReadState">
            <summary>
                 Gets the state of the reader.
            </summary>
            <returns>
                 One of the ReadState values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Settings">
            <summary>
                 Gets the XmlReaderSettings object used to create this XmlTextReader
                 instance.
            </summary>
            <returns>
                 The XmlReaderSettings object used to create this XmlTextReader
                 instance; null if the reader was not created using the Overload:XmlReader.Create
                 method.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.Value">
            <summary>
                 Gets the text value of the current node.
            </summary>
            <returns>
                 The value returned depends on the XmlTextReader.NodeType of the
                 node. The following table lists node types that have a value to return. All
                 other node types return String.Empty.Node Type Value AttributeThe value of
                 the attribute. CDATA The content of the CDATA section. Comment The content
                 of the comment. DocumentType The internal subset. ProcessingInstruction The
                 entire content, excluding the target. SignificantWhitespace The white space
                 within an xml:space= 'preserve' scope. Text The content of the text node.
                 Whitespace The white space between markup. XmlDeclarationThe content of the
                 declaration.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.WhitespaceHandling">
            <summary>
                 Gets or sets a value that specifies how white space is handled.
            </summary>
            <returns>
                 One of the WhitespaceHandling values. The default is WhitespaceHandling.All
                 (returns Whitespace and SignificantWhitespace nodes).
            </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 Invalid value specified.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 Setting this property when the reader is closed (XmlTextReader.ReadState
                 is ReadState.Closed).
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.XmlLang">
            <summary>
                 Gets the current xml:lang scope.
            </summary>
            <returns>
                 The current xml:lang scope.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.XmlResolver">
            <summary>
                 Sets the XmlResolver used for resolving DTD references.
            </summary>
            <returns>
                 The XmlResolver to use. If set to null, external resources are not resolved.In
                 version 1.1 of the .NET Framework, the caller must be fully trusted in order
                 to specify an XmlResolver.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextReader.XmlSpace">
            <summary>
                 Gets the current xml:space scope.
            </summary>
            <returns>
                 One of the XmlSpace values. If no xml:space scope exists, this
                 property defaults to XmlSpace.None.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlTextWriter">
            <summary>
                 Represents a writer that provides a fast, non-cached, forward-only way of
                 generating streams or files containing XML data that conforms to the W3C
                 Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.#ctor(Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
                 Creates an instance of the XmlTextWriter class using the specified System.CrestronIO.TextWriter.
            </summary>
             <param name="w">
                 The TextWriter to write to. It is assumed that the TextWriter is already
                 set to the correct encoding.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.Text.Encoding)">
            <summary>
                 Creates an instance of the XmlTextWriter class using the specified stream
                 and encoding.
            </summary>
             <param name="w">
                 The stream to which you want to write.
            </param>
             <param name="encoding">
                 The encoding to generate. If encoding is null it writes out the stream as
                 UTF-8 and omits the encoding attribute from the ProcessingInstruction.
            </param>
             <exception cref="T:System.ArgumentException">
                 The encoding is not supported or the stream cannot be written to.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 w is null.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
            <summary>
                 Creates an instance of the XmlTextWriter class using the specified
                 file.
            </summary>
             <param name="filename">
                 The filename to write to. If the file exists, it truncates it and overwrites
                 it with the new content.
            </param>
             <param name="encoding">
                 The encoding to generate. If encoding is null it writes the file out as UTF-8,
                 and omits the encoding attribute from the ProcessingInstruction.
            </param>
             <exception cref="T:System.ArgumentException">
                 The encoding is not supported; the filename is empty, contains only white
                 space, or contains one or more invalid characters.
            </exception>
             <exception cref="T:System.UnauthorizedAccessException">
                 Access is denied.
            </exception>
             <exception cref="T:System.ArgumentNullException">
                 The filename is null.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">
                 The directory to write to is not found.
            </exception>
             <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">
                 The filename includes an incorrect or invalid syntax for file name, directory
                 name, or volume label syntax.
            </exception>
             <exception cref="T:System.Security.SecurityException">
                 The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.Close">
            <summary>
                 Closes this stream and the underlying stream.
            </summary>
             <exception cref="T:System.InvalidOperationException">
                 A call is made to write more output after Close has been called or the result
                 of this call is an invalid XML document.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.Flush">
            <summary>
                 Flushes whatever is in the buffer to the underlying streams and also flushes
                 the underlying stream.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.LookupPrefix(System.String)">
            <summary>
                 Returns the closest prefix defined in the current namespace scope for the
                 namespace URI.
            </summary>
             <param name="ns">
                 Namespace URI whose prefix you want to find.
            </param>
            <returns>
                 The matching prefix. Or null if no matching namespace URI is found in the
                 current scope.
            </returns>
             <exception cref="T:System.ArgumentException">
                 ns is either null or String.Empty.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Encodes the specified binary bytes as base64 and writes out the resulting
                 text.
            </summary>
             <param name="buffer">
                 Byte array to encode.
            </param>
             <param name="index">
                 The position within the buffer indicating the start of the bytes to write.
            </param>
             <param name="count">
                 The number of bytes to write.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is less than zero.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The XmlTextWriter.WriteState is Closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Encodes the specified binary bytes as binhex and writes out the resulting
                 text.
            </summary>
             <param name="buffer">
                 Byte array to encode.
            </param>
             <param name="index">
                 The position in the buffer indicating the start of the bytes to write.
            </param>
             <param name="count">
                 The number of bytes to write.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentException">
                 The buffer length minus index is less than count.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is less than zero.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The XmlTextWriter.WriteState is Closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteCData(System.String)">
            <summary>
                 Writes out a <![CDATA[...]]> block containing the specified text.
            </summary>
             <param name="text">
                 Text to place inside the CDATA block.
            </param>
             <exception cref="T:System.ArgumentException">
                 The text would result in a non-well formed XML document.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The XmlTextWriter.WriteState is Closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteCharEntity(System.Char)">
            <summary>
                 Forces the generation of a character entity for the specified Unicode character
                 value.
            </summary>
             <param name="ch">
                 Unicode character for which to generate a character entity.
            </param>
             <exception cref="T:System.ArgumentException">
                 The character is in the surrogate pair character range, 0xd800 - 0xdfff;
                 or the text would result in a non-well formed XML document.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The XmlTextWriter.WriteState is Closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>
                 Writes text one buffer at a time.
            </summary>
             <param name="buffer">
                 Character array containing the text to write.
            </param>
             <param name="index">
                 The position in the buffer indicating the start of the text to write.
            </param>
             <param name="count">
                 The number of characters to write.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is less than zero. -or-The buffer length minus index is less
                 than count; the call results in surrogate pair characters being split or
                 an invalid surrogate pair being written.
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The XmlTextWriter.WriteState is Closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteComment(System.String)">
            <summary>
                 Writes out a comment <![CDATA[<!--...-->]]> containing the specified text.
            </summary>
             <param name="text">
                 Text to place inside the comment.
            </param>
             <exception cref="T:System.ArgumentException">
                 The text would result in a non-well formed XML document
            </exception>
             <exception cref="T:System.InvalidOperationException">
                 The XmlTextWriter.WriteState is Closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <summary>
                 Writes the DOCTYPE declaration with the specified name and optional attributes.
            </summary>
             <param name="name">
                 The name of the DOCTYPE. This must be non-empty.
            </param>
             <param name="pubid">
                 If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are
                 replaced with the value of the given arguments.
            </param>
             <param name="sysid">
                 If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid
                 is replaced with the value of this argument.
            </param>
             <param name="subset">
                 If non-null it writes [subset] where subset is replaced with the value of
                 this argument.
            </param>
             <exception cref="T:System.InvalidOperationException">
                 This method was called outside the prolog (after the root element).
            </exception>
             <exception cref="T:System.ArgumentException">
                 name is null or String.Empty-or- the value for name would result in invalid
                 XML.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteEndAttribute">
            <summary>
                 Closes the previous XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)
                 call.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteEndDocument">
            <summary>
                 Closes any open elements or attributes and puts the writer back in the Start
                 state.
            </summary>
             <exception cref="T:System.ArgumentException">
                 The XML document is invalid.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteEndElement">
            <summary>
                 Closes one element and pops the corresponding namespace scope.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteEntityRef(System.String)">
            <summary>
                 Writes out an entity reference as name.
            </summary>
             <param name="name">
                 Name of the entity reference.
            </param>
             <exception cref="T:System.ArgumentException">
                 The text would result in a non-well formed XML document or name is either
                 null or String.Empty.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteFullEndElement">
            <summary>
                 Closes one element and pops the corresponding namespace scope.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteName(System.String)">
            <summary>
                 Writes out the specified name, ensuring it is a valid name according to the
                 W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).
            </summary>
             <param name="name">
                 Name to write.
            </param>
             <exception cref="T:System.ArgumentException">
                 name is not a valid XML name; or name is either null or String.Empty.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteNmToken(System.String)">
            <summary>
                 Writes out the specified name, ensuring it is a valid NmToken according to
                 the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).
            </summary>
             <param name="name">
                 Name to write.
            </param>
             <exception cref="T:System.ArgumentException">
                 name is not a valid NmToken; or name is either null or String.Empty.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
            <summary>
                 Writes out a processing instruction with a space between the name and text
                 as follows: <?name text?>.
            </summary>
             <param name="name">
                 Name of the processing instruction.
            </param>
             <param name="text">
                 Text to include in the processing instruction.
            </param>
             <exception cref="T:System.ArgumentException">
                 The text would result in a non-well formed XML document.name is either null
                 or String.Empty.This method is being used to create an XML declaration after
                 XmlTextWriter.WriteStartDocument() has already been called.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
            <summary>
                 Writes out the namespace-qualified name. This method looks up the prefix
                 that is in scope for the given namespace.
            </summary>
             <param name="localName">
                 The local name to write.
            </param>
             <param name="ns">
                 The namespace URI to associate with the name.
            </param>
             <exception cref="T:System.ArgumentException">
                 localName is either null or String.Empty.localName is not a valid name according
                 to the W3C Namespaces spec.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteRaw(System.String)">
            <summary>
                 Writes raw markup manually from a string.
            </summary>
             <param name="data">
                 String containing the text to write.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <summary>
                 Writes raw markup manually from a character buffer.
            </summary>
             <param name="buffer">
                 Character array containing the text to write.
            </param>
             <param name="index">
                 The position within the buffer indicating the start of the text to write.
            </param>
             <param name="count">
                 The number of characters to write.
            </param>
             <exception cref="T:System.ArgumentNullException">
                 buffer is null.
            </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
                 index or count is less than zero.-or-The buffer length minus index is less
                 than count.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
            <summary>
                 Writes the start of an attribute.
            </summary>
             <param name="prefix">
                 Namespace prefix of the attribute.
            </param>
             <param name="localName">
                 LocalName of the attribute.
            </param>
             <param name="ns">
                 NamespaceURI of the attribute
            </param>
             <exception cref="T:System.ArgumentException">
                 localName is either null or String.Empty.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteStartDocument">
            <summary>
                 Writes the XML declaration with the version "1.0".
            </summary>
             <exception cref="T:System.InvalidOperationException">
                 This is not the first write method called after the constructor.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteStartDocument(System.Boolean)">
            <summary>
                 Writes the XML declaration with the version "1.0" and the standalone attribute.
            </summary>
             <param name="standalone">
                 If true, it writes "standalone=yes"; if false, it writes "standalone=no".
            </param>
             <exception cref="T:System.InvalidOperationException">
                 This is not the first write method called after the constructor.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>
                 Writes the specified start tag and associates it with the given namespace
                 and prefix.
            </summary>
             <param name="prefix">
                 The namespace prefix of the element.
            </param>
             <param name="localName">
                 The local name of the element.
            </param>
             <param name="ns">
                 The namespace URI to associate with the element. If this namespace is already
                 in scope and has an associated prefix then the writer automatically writes
                 that prefix also.
            </param>
             <exception cref="T:System.InvalidOperationException">
                 The writer is closed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteString(System.String)">
            <summary>
                 Writes the given text content.
            </summary>
             <param name="text">
                 Text to write.
            </param>
             <exception cref="T:System.ArgumentException">
                 The text string contains an invalid surrogate pair.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
            <summary>
                 Generates and writes the surrogate character entity for the surrogate character
                 pair.
            </summary>
             <param name="lowChar">
                 The low surrogate. This must be a value between 0xDC00 and 0xDFFF.
            </param>
             <param name="highChar">
                 The high surrogate. This must be a value between 0xD800 and 0xDBFF.
            </param>
             <exception cref="T:System.Exception">
                 An invalid surrogate character pair was passed.
            </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteWhitespace(System.String)">
            <summary>
                 Writes out the given white space.
            </summary>
             <param name="ws">
                 The string of white space characters.
            </param>
             <exception cref="T:System.ArgumentException">
                 The string contains non-white space characters.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.BaseStream">
            <summary>
                 Gets the underlying stream object.
            </summary>
            <returns>
                 The stream to which the XmlTextWriter is writing or null if the XmlTextWriter
                 was constructed using a System.CrestronIO.TextWriter that does not inherit from the
                 System.CrestronIO.StreamWriter class.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.Formatting">
            <summary>
                 Indicates how the output is formatted.
            </summary>
            <returns>
                 One of the Formatting values. The default is Formatting.None (no
                 special formatting).
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.Indentation">
            <summary>
                 Gets or sets how many IndentChars to write for each level in the hierarchy
                 when XmlTextWriter.Formatting is set to Formatting.Indented.
            </summary>
            <returns>
                 Number of IndentChars for each level. The default is 2.
            </returns>
             <exception cref="T:System.ArgumentException">
                 Setting this property to a negative value.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.IndentChar">
            <summary>
                 Gets or sets which character to use for indenting when XmlTextWriter.Formatting
                 is set to Formatting.Indented.
            </summary>
            <returns>
                 The character to use for indenting. The default is space.The XmlTextWriter
                 allows you to set this property to any character. To ensure valid XML, you
                 must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.Namespaces">
            <summary>
                 Gets or sets a value indicating whether to do namespace support.
            </summary>
            <returns>
                 true to support namespaces; otherwise, false.The default is true.
            </returns>
             <exception cref="T:System.InvalidOperationException">
                 You can only change this property when in the WriteState.Start state.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.QuoteChar">
            <summary>
                 Gets or sets which character to use to quote attribute values.
            </summary>
            <returns>
                 The character to use to quote attribute values. This must be a single quote
                 (') or a double quote ("). The default is a double quote.
            </returns>
             <exception cref="T:System.ArgumentException">
                 Setting this property to something other than either a single or double quote.
            </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.WriteState">
            <summary>
                 Gets the state of the writer.
            </summary>
            <returns>
                 One of the WriteState values.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.XmlLang">
            <summary>
                 Gets the current xml:lang scope.
            </summary>
            <returns>
                 The current xml:lang or null if there is no xml:lang in the current scope.
            </returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlTextWriter.XmlSpace">
            <summary>
                 Gets an XmlSpace representing the current xml:space scope.
            </summary>
            <returns>
                 An XmlSpace representing the current xml:space scope.Value Meaning None This
                 is the default if no xml:space scope exists. Default The current scope is
                 xml:space="default". Preserve The current scope is xml:space="preserve".
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager">
            <summary>
            Resolves, adds, and removes namespaces to a collection 
            and provides scope management for these namespaces
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager._nsManager">
            <summary>
            The underlying System.Xml.XmlNamespaceManager
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager._nametable">
            <summary>
            The XmlNameTable used to create this XmlNamespaceManager
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.#ctor(System.Xml.XmlNamespaceManager)">
            <summary>
            Initializes an XmlNamespaceManager from another namespace manager, for internal use
            </summary>
            <param name="namespacemanager">The XmlNamespaceManager to create a new namespace manager from</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
            Initializes a new instance of the XmlNamespaceManager class with the specified XmlNameTable
            </summary>
            <param name="table">The XmlNameTable to use</param>
            <exception cref="T:System.ArgumentNullException">table is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
            <summary>
            Adds the given namespace to the collection
            </summary>
            <param name="prefix">The prefix to associate with the namespace being added.  Use String.Empty to add a default namespace.</param>
            <param name="uri">The namespace to add</param>
            <exception cref="T:System.ArgumentException">The value for prefix is "xml" or "xmlns"</exception>
            <exception cref="T:System.ArgumentNullException">The uri is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.GetEnumerator">
            <summary>
            Returns an enumerator to use to iterate through the namespaces in the XmlNamespaceManager.
            </summary>
            <returns>An IEnumerator containing the prefixes stored by the XmlNamespaceManager</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.GetNamespacesInScope(Crestron.SimplSharp.CrestronXml.XmlNamespaceScope)">
            <summary>
            Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.
            </summary>
            <param name="scope">Specifies the type of namespace nodes to return</param>
            <returns>An IDictionary object containing a collection of namespace and prefix pairs currently in scope</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.HasNamespace(System.String)">
            <summary>
            Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope
            </summary>
            <param name="prefix">The prefix of the namespace to find</param>
            <returns>Returns true if there is a namespace defined</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.LookupNamespace(System.String)">
            <summary>
            Gets the namespace URI for the specified prefix.
            </summary>
            <param name="prefix">The prefix whose namespace URI you want to resolve.  Pass String.Empty to match the default namespace</param>
            <returns>Returns an atomized string containing the namespace URI for prefix, or null if there is no mapped namespace</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.LookupPrefix(System.String)">
            <summary>
            Finds the prefix declared for the given namespace URI.
            </summary>
            <param name="uri">The namespace to resolve for the prefix</param>
            <returns>The matching prefix.  If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then null is returned</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.PopScope">
            <summary>
            Pops a namespace scope off the stack.
            </summary>
            <returns>true if there are namespace scopes left on the stack, false if not</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.PushScope">
            <summary>
            Pushes a namespace scope onto the stack.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
            <summary>
            Removes the given namespace for the given prefix
            </summary>
            <param name="prefix">The prefix for the namespace</param>
            <param name="uri">The namespace to remove for the given prefix</param>
            <exception cref="T:System.ArgumentNullException">The value of prefix or uri is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.op_Equality(Crestron.SimplSharp.CrestronXml.XmlNamespaceManager,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager)">
            <summary>
            Checks for referential equality between two XmlNamespaceManagers
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XmlNamespaceManagers are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.op_Inequality(Crestron.SimplSharp.CrestronXml.XmlNamespaceManager,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager)">
            <summary>
            Checks for referential inequality between two XmlNamespaceManagers
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XmlNamespaceManagers are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.GetHashCode">
            <summary>
            Gets the hash code for this XmlNamespaceManager
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XmlNamespaceManager
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XmlNamespaceManager; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.DefaultNamespace">
            <summary>
            Gets the namespace URI for the default namespace.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNamespaceManager.NameTable">
            <summary>
            Gets the XmlNameTable associated with this object.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNameTable">
            <summary>
            Table of atomized string objects
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNameTable._nametable">
            <summary>
            The underlying System.Xml.XmlNameTable
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.#ctor">
            <summary>
            Instantiates the XmlNameTable class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.Add(System.String)">
            <summary>
            When overridden in a derived class, atomizes the specified string and adds it to the XmlNameTable
            </summary>
            <param name="array">The name to add</param>
            <returns>The new atomized string or the existing one if it already exists</returns>
            <exception cref="T:System.ArgumentNullException">array is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, atomizes the specified string and adds it to the XmlNameTable
            </summary>
            <param name="array">The char array containing the name to add</param>
            <param name="offset">zero based index into the array specifying the first character of the name</param>
            <param name="length">The number of characters in the name</param>
            <exception cref="T:System.ArgumentOutOfRangeException">length is less than zero</exception>
            <exception cref="T:System.IndexOutOfRangeException">offset is invalid or length is greater than array length</exception>
            <returns>The new atomized string or the existing one if it already exists. If length is zero, String.Empty is returned</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.Get(System.String)">
            <summary>
            When overridden in a derived class, gets the atomized string containing the same value as the specified string
            </summary>
            <param name="array">The name to look up</param>
            <exception cref="T:System.ArgumentNullException">array is null</exception>
            <returns>The atomized string or null if the string has not already been atomized</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array
            </summary>
            <param name="array">The character array containing the name to look up</param>
            <param name="offset">Zero based index into the array specifying the first character of the name</param>
            <param name="length">The number of characters in the name</param>
            <exception cref="T:System.ArgumentOutOfRangeException">length is less than zero</exception>
            <exception cref="T:System.IndexOutOfRangeException">offset is invalid or length is greater than array length</exception>
            <returns>The atomized string or null if the string has not already been atomized. If length is zero, String.Empty is returned</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.op_Equality(Crestron.SimplSharp.CrestronXml.XmlNameTable,Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
            Checks for referential equality between two XmlNameTables
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XmlNameTables are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.op_Inequality(Crestron.SimplSharp.CrestronXml.XmlNameTable,Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
            Checks for referential inequality between two XmlNameTables
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XmlNameTables are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.GetHashCode">
            <summary>
            Gets the hash code for this XmlNameTable
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTable.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XmlNameTable
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XmlNameTable; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTableImpl.#ctor(System.Xml.XmlNameTable)">
            <summary>
            Instantiates a XmlNameTable, for internal use
            </summary>
            <param name="table">The XmlNameTable to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTableImpl.Add(System.String)">
            <summary>
            When overridden in a derived class, atomizes the specified string and adds it to the XmlNameTable
            </summary>
            <param name="array">The name to add</param>
            <returns>The new atomized string or the existing one if it already exists</returns>
            <exception cref="T:System.ArgumentNullException">array is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTableImpl.Add(System.Char[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, atomizes the specified string and adds it to the XmlNameTable
            </summary>
            <param name="array">The char array containing the name to add</param>
            <param name="offset">zero based index into the array specifying the first character of the name</param>
            <param name="length">The number of characters in the name</param>
            <exception cref="T:System.ArgumentOutOfRangeException">length is less than zero</exception>
            <exception cref="T:System.IndexOutOfRangeException">offset is invalid or length is greater than array length</exception>
            <returns>The new atomized string or the existing one if it already exists. If length is zero, String.Empty is returned</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTableImpl.Get(System.String)">
            <summary>
            When overridden in a derived class, gets the atomized string containing the same value as the specified string
            </summary>
            <param name="array">The name to look up</param>
            <exception cref="T:System.ArgumentNullException">array is null</exception>
            <returns>The atomized string or null if the string has not already been atomized</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNameTableImpl.Get(System.Char[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array
            </summary>
            <param name="array">The character array containing the name to look up</param>
            <param name="offset">Zero based index into the array specifying the first character of the name</param>
            <param name="length">The number of characters in the name</param>
            <exception cref="T:System.ArgumentOutOfRangeException">length is less than zero</exception>
            <exception cref="T:System.IndexOutOfRangeException">offset is invalid or length is greater than array length</exception>
            <returns>The atomized string or null if the string has not already been atomized. If length is zero, String.Empty is returned</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.NameTable">
            <summary>
            <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNameTable"/> abstract class implementation for user.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.NameTable.#ctor(System.Xml.XmlNameTable)">
            <summary>
            Instantiates a NameTable class, for internal use
            </summary>
            <param name="table">The NameTable to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.NameTable.#ctor">
            <summary>
            Instantiates a NameTable class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.NameTable.Add(System.String)">
            <summary>
            Atomizes the specified string and adds it to the XmlNameTable
            </summary>
            <param name="array">The name to add</param>
            <returns>The new atomized string or the existing one if it already exists</returns>
            <exception cref="T:System.ArgumentNullException">array is null</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
            <summary>
            Atomizes the specified string and adds it to the XmlNameTable
            </summary>
            <param name="array">The char array containing the name to add</param>
            <param name="offset">zero based index into the array specifying the first character of the name</param>
            <param name="length">The number of characters in the name</param>
            <exception cref="T:System.ArgumentOutOfRangeException">length is less than zero</exception>
            <exception cref="T:System.IndexOutOfRangeException">offset is invalid or length is greater than array length</exception>
            <returns>The new atomized string or the existing one if it already exists. If length is zero, String.Empty is returned</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.NameTable.Get(System.String)">
            <summary>
            Gets the atomized string containing the same value as the specified string
            </summary>
            <param name="array">The name to look up</param>
            <exception cref="T:System.ArgumentNullException">array is null</exception>
            <returns>The atomized string or null if the string has not already been atomized</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
            <summary>
            Gets the atomized string containing the same characters as the specified range of characters in the given array
            </summary>
            <param name="array">The character array containing the name to look up</param>
            <param name="offset">Zero based index into the array specifying the first character of the name</param>
            <param name="length">The number of characters in the name</param>
            <exception cref="T:System.ArgumentOutOfRangeException">length is less than zero</exception>
            <exception cref="T:System.IndexOutOfRangeException">offset is invalid or length is greater than array length</exception>
            <returns>The atomized string or null if the string has not already been atomized. If length is zero, String.Empty is returned</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlParserContext">
            <summary>
            Provides all the context information required by the XmlReader to parse an XML Fragment
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,Crestron.SimplSharp.CrestronXml.XmlSpace,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the XmlParserContext class with the specified XmlNameTable, 
            XmlNamespaceManager, base URI, xml lang, xml space, encoding, and document type values.
            </summary>
            <param name="nt">The XmlNameTable to use to atomize strings, if null the name table used to construct
            mg is used instead</param>
            <param name="mg">The XmlNamespaceManager to use for looking up namespace information, this value can be null</param>
            <param name="docTypeName">The name of the document type declaration</param>
            <param name="publicId">The public identifier</param>
            <param name="systemId">The system identifier</param>
            <param name="internalSubset">The internal DTD subset, used for entity resolution</param>
            <param name="baseURI">The location from which the fragment was loaded</param>
            <param name="xmlLang">The xml lang scope</param>
            <param name="space">An XmlSpace value</param>
            <param name="enc">An Encoding object indicating the encoding setting.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">nt is not the same XmlNameTable used to construct mg</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager,System.String,Crestron.SimplSharp.CrestronXml.XmlSpace)">
            <summary>
            Initializes a new instance of the XmlParserContext class with the specified XmlNameTable, XmlNamespaceManager, 
            xml lang, and XmlSpace values.
            </summary>
            <param name="nt">The XmlNameTable to use to atomize strings, if null the name table used to construct
            mg is used instead</param>
            <param name="mg">The XmlNamespaceManager to use for looking up namespace information, this value can be null</param>
            <param name="xmlLang">The Xml lang scope</param>
            <param name="space">An XmlSpace value</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">nt is not the same XmlNameTable used to construct mg</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager,System.String,Crestron.SimplSharp.CrestronXml.XmlSpace,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the XmlParserContext class with the specified XmlNameTable, XmlNamespaceManager, 
            xml lang, XmlSpace, and encoding.
            </summary>
            <param name="nt">The XmlNameTable to use to atomize strings, if null the name table used to construct
            mg is used instead</param>
            <param name="mg">The XmlNamespaceManager to use for looking up namespace information, this value can be null</param>
            <param name="xmlLang">The Xml lang scope</param>
            <param name="space">An XmlSpace value</param>
            <param name="enc">An Encoding object indicating the encoding setting.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">nt is not the same XmlNameTable used to construct mg</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,Crestron.SimplSharp.CrestronXml.XmlSpace)">
            <summary>
            Initializes a new instance of the XmlParserContext class with the specified XmlNameTable, 
            XmlNamespaceManager, base URI, xml lang, xml space, encoding, and document type values.
            </summary>
            <param name="nt">The XmlNameTable to use to atomize strings, if null the name table used to construct
            mg is used instead</param>
            <param name="mg">The XmlNamespaceManager to use for looking up namespace information, this value can be null</param>
            <param name="docTypeName">The name of the document type declaration</param>
            <param name="publicId">The public identifier</param>
            <param name="systemId">The system identifier</param>
            <param name="internalSubset">The internal DTD subset, used for entity resolution</param>
            <param name="baseURI">The location from which the fragment was loaded</param>
            <param name="xmlLang">the xml lang scope</param>
            <param name="space">An XmlSpace value</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">nt is not the same XmlNameTable used to construct mg</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.op_Equality(Crestron.SimplSharp.CrestronXml.XmlParserContext,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>
            Checks for referential equality between two XmlParserContext
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XmlParserContexts are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.op_Inequality(Crestron.SimplSharp.CrestronXml.XmlParserContext,Crestron.SimplSharp.CrestronXml.XmlParserContext)">
            <summary>
            Checks for referential inequality between two XmlParserContexts
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XmlParserContexts are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.GetHashCode">
            <summary>
            Gets the hash code for this XmlParserContext
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlParserContext.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XmlParserContext
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XmlParserContext; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.BaseURI">
            <summary>
            Gets or sets the base URI
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.DocTypeName">
            <summary>
            Gets or sets the document type declaration
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.Encoding">
            <summary>
            Gets or sets the Encoding type
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.InternalSubset">
            <summary>
            Gets or sets the internal DTD subset
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.NamespaceManager">
            <summary>
            Gets or sets the XmlNamespaceManager
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.NameTable">
            <summary>
            Gets or sets the XmlNameTable
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.PublicId">
            <summary>
            Gets or sets the public identifier
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.SystemId">
            <summary>
            Gets or sets the system identifier
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.XmlLang">
            <summary>
            Gets or sets the current xml lang scope
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlParserContext.XmlSpace">
            <summary>
            Gets or sets the current XmlSpace scope
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNode">
            <summary>
            Represents a single node in the XML document.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNode._xmlnode">
            <summary>
            The underlying System.Xml.XmlNode
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlNode
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.#ctor(System.Xml.XmlNode)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlNode using the specified System.Xml.XmlNode
            </summary>
            <param name="node">The System XmlNode to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.AppendChild(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Adds the specified node to the end of the list of child nodes, of this node.
            </summary>
            <param name="newChild">The node to add. 
            All the contents of the node to be added are moved into the specified location.</param>
            <returns>The node added.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node.
            and the newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node.
            Or this node is read-only.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.Clone">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <returns>The cloned node.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.CloneNode(System.Boolean)">
            <summary>
            When overridden in a derived class, creates a duplicate of the node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
            <returns>The cloned node.</returns>
            <exception cref="T:System.InvalidOperationException">The node type cannot be cloned.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.GetEnumerator">
            <summary>
            Provides support for the for each style iteration over the nodes in the XmlNode.
            </summary>
            <returns>An System.Collections.IEnumerator</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.GetNamespaceOfPrefix(System.String)">
            <summary>
            Looks up the closest xmlns declaration for the given prefix that is in scope for the current node 
            and returns the namespace URI in the declaration.
            </summary>
            <param name="prefix">Prefix whose namespace URI you want to find.</param>
            <returns>The namespace URI of the specified prefix.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.GetPrefixOfNamespace(System.String)">
            <summary>
            Looks up the closest xmlns declaration for the given namespace URI that is in scope for the current node 
            and returns the prefix defined in that declaration.
            </summary>
            <param name="namespaceURI">Namespace URI whose prefix you want to find.</param>
            <returns>The prefix for the specified namespace URI.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.InsertAfter(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Inserts the specified node immediately after the specified reference node.
            </summary>
            <param name="newChild">The XmlNode to insert.</param>
            <param name="refChild">The XmlNode that is the reference node. The newNode is placed after the refNode.</param>
            <returns>The node being inserted.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node.
            Or the newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node,
            or the refChild is not a child of this node,
            or this node is read-only.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.InsertBefore(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Inserts the specified node immediately before the specified reference node.
            </summary>
            <param name="newChild">The XmlNode to insert.</param>
            <param name="refChild">The XmlNode that is the reference node. The newChild is placed before this node.</param>
            <returns>The node being inserted.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node.
            Or the newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node,
            or the refChild is not a child of this node,
            or this node is read-only.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.Normalize">
            <summary>
            Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" 
            form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) 
            separates XmlText nodes, that is, there are no adjacent XmlText nodes.
            </summary>
            <remarks>This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, 
            and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.PrependChild(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Adds the specified node to the beginning of the list of child nodes for this node.
            </summary>
            <param name="newChild">The node to add. All the contents of the node to be added are moved into the specified location.</param>
            <returns>The node added.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node
            or the newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node or 
            the node is read-only</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.RemoveAll">
            <summary>
            Removes all the child nodes and/or attributes of the current node.
            </summary>
            <remarks>If a removed attribute is known to have a default value, 
            an attribute immediately appears containing the default value and, 
            if applicable, the corresponding namespace URI, local name, and prefix.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.RemoveChild(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Removes specified child node.
            </summary>
            <param name="oldChild">The node being removed.</param>
            <returns>The node removed.</returns>
            <exception cref="T:System.ArgumentException">The oldChild is not a child of this node. Or this node is read-only.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.ReplaceChild(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Replaces the child node oldChild with newChild node.
            </summary>
            <param name="newChild">The new node to put in the child list.</param>
            <param name="oldChild">The node being replaced in the list.</param>
            <returns>The node replaced.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node
            or the newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node or 
            the node is read-only or oldChild is not a child of this node.</exception>
            <remarks>If the newChild is already in the tree, it is first removed.</remarks>
            <remarks>If the newChild was created from another document, you can use XmlDocument.ImportNode to import the node 
            to the current document. The imported node can then be passed to the ReplaceChild method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.SelectSingleNode(System.String)">
            <summary>
            Selects the first XmlNode that matches the XPath expression.
            </summary>
            <param name="xpath">The XPath expression.</param>
            <returns>The first XmlNode that matches the XPath query or null if no matching node is found. 
            The XmlNode should not be expected to be connected "live" to the XML document. 
            That is, changes that appear in the XML document may not appear in the XmlNode, and vice versa.</returns>
            <exception cref="T:System.Xml.XPath.XPathException">The XPath expression contains a prefix.</exception>
            <remarks>If the XPath expression requires namespace resolution, 
            you must use the SelectSingleNode overload which takes an XmlNamespaceManager as its argument. 
            The XmlNamespaceManager is used to resolve namespaces.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.SelectSingleNode(System.String,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager)">
            <summary>
            Selects the first XmlNode that matches the XPath expression. 
            Any prefixes found in the XPath expression are resolved using the supplied XmlNamespaceManager.
            </summary>
            <param name="xpath">The XPath expression.</param>
            <param name="nsmgr">An XmlNamespaceManager to use for resolving namespaces for prefixes in the XPath expression.</param>
            <returns>The first XmlNode that matches the XPath query or null if no matching node is found. 
            The XmlNode should not be expected to be connected "live" to the XML document. 
            That is, changes that appear in the XML document may not appear in the XmlNode, and vice versa.</returns>
            <exception cref="T:System.Xml.XPath.XPathException">The XPath expression contains a prefix which is not defined in the XmlNamespaceManager.</exception>
            <remarks>XPath expressions can include namespaces. Namespace resolution is supported using the XmlNamespaceManager. 
            If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the XmlNamespaceManager.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.Supports(System.String,System.String)">
            <summary>
            Test if the DOM implementation implements a specific feature.
            </summary>
            <param name="feature">The package name of the feature to test. This name is not case-sensitive.</param>
            <param name="version">This is the version number of the package name to test. 
            If the version is not specified (null), supporting any version of the feature causes the method to return true.</param>
            <returns>true if the feature is implemented in the specified version; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            When overridden in a derived class, saves all the child nodes of the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            When overridden in a derived class, saves the current node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.System#ICloneable#Clone">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <returns>The cloned node.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.SelectNodes(System.String)">
            <summary>
            Selects a list of nodes matching the XPath expression
            </summary>
            <param name="xpath">The XPath expression</param>
            <returns>An XmlNodeList containing a collection of nodes matching the XPath query</returns>
            <exception cref="T:System.Xml.XPath.XPathException">The XPath expression contains a prefix</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.SelectNodes(System.String,Crestron.SimplSharp.CrestronXml.XmlNamespaceManager)">
            <summary>
            Selects a list of nodes matching the XPath expression. Any prefixes found in the XPath expression are resolved using the supplied XmlNamespaceManager
            </summary>
            <param name="xpath">The XPath expression</param>
            <param name="nsManager">An XmlNamespaceManager to use for resolving namespaces for prefixes in the XPath expression</param>
            <returns>An XmlNodeList containing a collection of nodes matching the XPath query</returns>
            <exception cref="T:System.Xml.XPath.XPathException">The XPath expression contains a prefix which is not defined in the XmlNamespaceManager</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.op_Equality(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Checks for referential equality between two XmlNodes
            </summary>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>true if the XmlNodes are the same reference; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.op_Inequality(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Checks for referential inequality between two XmlNodes
            </summary>
            <param name="obj1">The left value</param>
            <param name="obj2">The right value</param>
            <returns>true if the XmlNodes are different references; false otherwise</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.GetHashCode">
            <summary>
            Gets the hash code for this XmlNode
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNode.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the current XmlNode
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object is equal to the current XmlNode; false otherwise</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.Attributes">
            <summary>
            Gets an XmlAttributeCollection containing the attributes of this node.
            </summary>
            <value>An XmlAttributeCollection containing the attributes of the node.
            If the node is of type XmlNodeType.Element, the attributes of the node are returned. Otherwise, this property returns null.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.BaseURI">
            <summary>
            Gets the base URI of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.FirstChild">
            <summary>
            Gets the first child of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.HasChildNodes">
            <summary>
            Gets a value indicating whether this node has any child nodes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.InnerText">
            <summary>
            Gets or sets the concatenated values of the node and all its child nodes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.InnerXml">
            <summary>
            Gets or sets the markup representing only the child nodes of this node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.IsReadOnly">
            <summary>
            Gets a value indicating whether the node is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.LastChild">
            <summary>
            Gets the last child of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.LocalName">
            <summary>
            When overridden in a derived class, gets the local name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.Name">
            <summary>
            When overridden in a derived class, gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.NamespaceURI">
            <summary>
            Gets the namespace URI of this node.
            </summary>
            <remarks>This is the namespace URI specified at creation time.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.NextSibling">
            <summary>
            Gets the node immediately following this node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.NodeType">
            <summary>
            When overridden in a derived class, gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.OuterXml">
            <summary>
            Gets the markup representing this node and all its child nodes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.OwnerDocument">
            <summary>
            Gets the XmlDocument to which this node belongs.
            </summary>
            <remarks>When adding nodes to the current node, 
            use the XmlDocument returned by the OwnerDocument property to create the node.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.ParentNode">
            <summary>
            Gets the parent of this node (for nodes that can have parents).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.Prefix">
            <summary>
            Gets or sets the namespace prefix of this node.
            </summary>
            <exception cref="T:System.ArgumentException">This node is read-only.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The specified prefix is invalid</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.PreviousSibling">
            <summary>
            Gets the node immediately preceding this node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.Value">
            <summary>
            Gets or sets the value of the node.
            </summary>
            <exception cref="T:System.ArgumentException">Setting the value of a node that is read-only.</exception>
            <exception cref="T:System.InvalidOperationException">Setting the value of a node that is not supposed to have a value 
            (for example, an Element node).</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.ChildNodes">
            <summary>
            Gets all the child nodes of the node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.Item(System.String)">
            <summary>
            Gets the first child element with the specified Name
            </summary>
            <param name="name">The qualified name of the element to retrieve</param>
            <returns>The first <see cref="T:Crestron.SimplSharp.CrestronXml.XmlElement"/> that matches the specified name</returns>
            <remarks>This property returns null if a matching element was not found</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNode.Item(System.String,System.String)">
            <summary>
            Gets the first child element with the specified LocalName and NamespaceURI
            </summary>
            <param name="localname">The local name of the element</param>
            <param name="ns">The namespace URI of the element</param>
            <returns>The first <see cref="T:Crestron.SimplSharp.CrestronXml.XmlElement"/> with the matching localname and ns</returns>
            <remarks>This property returns null if a matching element was not found</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlImplementation">
            <summary>
            Defines the context for a set of XmlDocument objects.
            </summary>
            <remarks>XmlDocument objects that are created from the same implementation share the same XmlNameTable. This enables users to compare attribute and element names between the objects more efficiently.
            Although the XmlDocument objects share the same implementation, to move nodes from one document to another, you must use the ImportNode method.</remarks>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlImplementation._xmlImplementation">
            <summary>
            The underlying System.Xml.XmlImplementation
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlImplementation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlImplementation"/> class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlImplementation.#ctor(System.Xml.XmlImplementation)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlImplementation"/> using the specified System.Xml.XmlImplementation
            </summary>
            <param name="node">The System XmlImplementation to use.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlImplementation.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlImplementation"/> using the specified <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNameTable"/>.
            </summary>
            <param name="nametable">An XmlNameTable object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlImplementation.CreateDocument">
            <summary>
            Creates a new XmlDocument.
            </summary>
            <returns>The new XmlDocument object.</returns>
            <remarks>XmlDocument objects created from the same implementation share the same name table. This enables users to compare attribute and element names between the objects more efficiently.
            Although the XmlDocument objects share the same implementation, to move nodes from one document to another, you must use the ImportNode method.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlImplementation.HasFeature(System.String,System.String)">
            <summary>
            Tests if the Document Object Model (DOM) implementation implements a specific feature.
            </summary>
            <param name="strFeature">The package name of the feature to test. This name is not case-sensitive.</param>
            <param name="strVersion">This is the version number of the package name to test. If the version is not specified (null), supporting any version of the feature causes the method to return true.</param>
            <returns>true if the feature is implemented in the specified version; otherwise, false.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlQualifiedName">
            <summary>
            Represents an XML qualified name.
            </summary>
            <remarks>An XML qualified name is a namespace qualified local name in the format of namespace:localname.
            Because prefixes are only required when XML is persisted or read, they are irrelevant for XmlQualifiedName objects. This class assumes that prefixes are irrelevant. It is the responsibility of the user to ensure the local name does not contain a ":".</remarks>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlQualifiedName._xmlQualifiedName">
            <summary>
            The underlying System.Xml.XmlQualifiedName
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.#ctor">
            <summary>
            Default constructor for the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlQualifiedName"/>
            </summary>
            <remarks>The object created has no name or namespace defined.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Internal default constructor for the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlQualifiedName"/> using the <see cref="T:System.Xml.XmlQualifiedName"/>.
            </summary>
            <remarks>The object created has no name or namespace defined.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlQualifiedName"/> using the specified name.
            </summary>
            <param name="name">The local name to use as the name of the XmlQualifiedName object.</param>
            <remarks>The object created does not have a namespace defined.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.#ctor(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlQualifiedName"/> using the specified name and namespace.
            </summary>
            <param name="name">The local name to use as the name of the XmlQualifiedName object.</param>
            <param name="ns">The namespace for the XmlQualifiedName object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.Equals(System.Object)">
            <summary>
            Determines whether the specified XmlQualifiedName object is equal to the current XmlQualifiedName object.
            </summary>
            <param name="other">The XmlQualifiedName to compare.</param>
            <returns>true if the two are the same instance object; otherwise, false.</returns>
            : It is probably possible to compare against a null object, also if it is a Crestron XmlQualifiedName this method will never return true, need to reference the inner object
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.GetHashCode">
            <summary>
            Returns the hash code for the XmlQualifiedName.
            </summary>
            <returns>A hash code for this object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.ToString">
            <summary>
            Returns the string value of the XmlQualifiedName.
            </summary>
            <returns>The string value of the XmlQualifiedName in the format of namespace:localname. If the object does not have a namespace defined, this method returns just the local name.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.ToString(System.String,System.String)">
            <summary>
            Returns the string value of the XmlQualifiedName.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="ns">The namespace of the object.</param>
            <returns>The string value of the XmlQualifiedName in the format of namespace:localname. If the object does not have a namespace defined, this method returns just the local name.</returns>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.Empty">
            <summary>
            Provides an empty XmlQualifiedName.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.op_Equality(Crestron.SimplSharp.CrestronXml.XmlQualifiedName,Crestron.SimplSharp.CrestronXml.XmlQualifiedName)">
            <summary>
            Compares two XmlQualifiedName objects.
            </summary>
            <param name="a">An XmlQualifiedName to compare.</param>
            <param name="b">An XmlQualifiedName to compare.</param>
            <returns>true if the two objects have the same name and namespace values; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.op_Inequality(Crestron.SimplSharp.CrestronXml.XmlQualifiedName,Crestron.SimplSharp.CrestronXml.XmlQualifiedName)">
            <summary>
            Compares two XmlQualifiedName objects.
            </summary>
            <param name="a">An XmlQualifiedName to compare.</param>
            <param name="b">An XmlQualifiedName to compare.</param>
            <returns>true if the name and namespace values for the two objects differ; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.IsEmpty">
            <summary>
            Gets a value indicating whether the XmlQualifiedName is empty.
            </summary>
            <value>true if name and namespace are empty strings; otherwise, false.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.Name">
            <summary>
            Gets a string representation of the qualified name of the XmlQualifiedName.
            </summary>
            <value>A string representation of the qualified name or String.Empty if a name is not defined for the object.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlQualifiedName.Namespace">
            <summary>
            Gets a string representation of the namespace of the XmlQualifiedName.
            </summary>
            <value>A string representation of the namespace or String.Empty if a namespace is not defined for the object.</value>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment">
            <summary>
            Represents a lightweight object that is useful for tree insert operations.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlDocumentFragment
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.#ctor(System.Xml.XmlDocumentFragment)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlDocumentFragment using the specified System.Xml.XmlDocumentFragment
            </summary>
            <param name="documentFragment">The System XmlDocumentFragment to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
            <returns>The cloned node.</returns>
            <remarks>CloneNode serves as a copy constructor for nodes. To see how this method behaves with other node types, see XmlNode.CloneNode.
            The cloned node has no parent (ParentNode returns null).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The specified XmlWriter is null.</exception>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The specified XmlWriter is null.</exception>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.InnerXml">
            <summary>
            Gets or sets the markup representing the children of this node.
            </summary>
            <value>The markup of the children of this node.</value>
            <exception cref="T:Crestron.SimplSharp.XmlException">The XML specified when setting this property is not well-formed.</exception>
            <remarks>Setting this property replaces the children of the node with the parsed contents of the given string. The parsing is done in the current namespace context.
            This property is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
            <value>For XmlDocumentFragment nodes, the local name is #document-fragment.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
            <value>For XmlDocumentFragment, the name is #document-fragment.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
            <value>For XmlDocumentFragment nodes, this value is XmlNodeType.DocumentFragment.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.OwnerDocument">
            <summary>
            Gets the XmlDocument to which this node belongs.
            </summary>
            <value>The XmlDocument to which this node belongs.</value>
            <remarks>When adding nodes to the current node, use the XmlDocument returned by the OwnerDocument property to create the node.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment.ParentNode">
            <summary>
            Gets the parent of this node (for nodes that can have parents).
            </summary>
            <value>The parent of this node. For XmlDocumentFragment nodes, this property is always null.</value>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap">
            <summary>
            Represents a collection of nodes that can be accessed by name or index.
            </summary>
            <remarks>XmlNamedNodeMap is returned by the following three properties.
            XmlElement.Attributes - Returns XmlAttributeCollection, a class which inherits from XmlNamedNodeMap.
            XmlDocumentType.Entities - Returns an XmlNamedNodeMap containing XmlEntity objects. The XmlNamedNodeMap is read-only.
            XmlDocumentType.Notations - Returns an XmlNamedNodeMap containing XmlNotation objects. The XmlNamedNodeMap is read-only.</remarks>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap._xmlnodemap">
            <summary>
            The underlying System.Xml.XmlNamedNodeMap
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlAttributeCollection
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.#ctor(System.Xml.XmlNamedNodeMap)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap using the specified System.Xml.XmlNamedNodeMap
            </summary>
            <param name="nodemap">The System XmlNamedNodeMap to use.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.GetEnumerator">
            <summary>
            Provides support for the "foreach" style iteration over the collection of nodes in the XmlNamedNodeMap.
            </summary>
            <returns>An enumerator object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.GetNamedItem(System.String)">
            <summary>
            Retrieves an XmlNode specified by name.
            </summary>
            <param name="name">The qualified name of the node to retrieve. It is matched against the Name property of the matching node.</param>
            <returns>An XmlNode with the specified name or null if a matching node is not found.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
            <summary>
            Retrieves a node with the matching LocalName and NamespaceURI.
            </summary>
            <param name="localName">The local name of the node to retrieve.</param>
            <param name="namespaceUri">The namespace Uniform Resource Identifier (URI) of the node to retrieve.</param>
            <returns>An XmlNode with the matching local name and namespace URI or null if a matching node was not found.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.Item(System.Int32)">
            <summary>
            Retrieves the node at the specified index in the XmlNamedNodeMap.
            </summary>
            <param name="index">The index position of the node to retrieve from the XmlNamedNodeMap. The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is Count -1.</param>
            <returns>The XmlNode at the specified index. If index is less than 0 or greater than or equal to the Count property, null is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
            <summary>
            Removes the node from the XmlNamedNodeMap.
            </summary>
            <param name="name">The qualified name of the node to remove. The name is matched against the Name property of the matching node.</param>
            <returns>The XmlNode removed from this XmlNamedNodeMap or null if a matching node was not found.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
            <summary>
            Removes a node with the matching LocalName and NamespaceURI.
            </summary>
            <param name="localName">The local name of the node to remove.</param>
            <param name="namespaceUri">The namespace URI of the node to remove.</param>
            <returns>The XmlNode removed or null if a matching node was not found.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.SetNamedItem(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Adds an XmlNode using its Name property.
            </summary>
            <param name="node">An XmlNode to store in the XmlNamedNodeMap. If a node with that name is already present in the map, it is replaced by the new one.</param>
            <returns>If the node replaces an existing node with the same name, the old node is returned; otherwise, null is returned.</returns>
            <exception cref="T:System.ArgumentException">The node was created from a different XmlDocument than the one that created the XmlNamedNodeMap; or the XmlNamedNodeMap is read-only.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNamedNodeMap.Count">
            <summary>
            Gets the number of nodes in the XmlNamedNodeMap.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection">
            <summary>
            Represents a collection of nodes that can be accessed by name or index.
            </summary>
            <remarks>XmlAttributeCollection extends the XmlNamedNodeMap class by adding strongly typed helper methods. You can use this class to add, remove, or modify attributes in the collection. XmlAttributeCollection is returned by the XmlElement.Attributes property.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlAttributeCollection
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.#ctor(System.Xml.XmlAttributeCollection)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlAttributeCollection using the specified System.Xml.XmlAttributeCollection
            </summary>
            <param name="nodeAttributeCollection">The System XmlAttributeCollection to use.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.Append(Crestron.SimplSharp.CrestronXml.XmlAttribute)">
            <summary>
            Inserts the specified attribute as the last node in the collection.
            </summary>
            <param name="node">The XmlAttribute to insert.</param>
            <returns>The XmlAttribute to append to the collection.</returns>
            <exception cref="T:System.ArgumentException">node was created from a document different from the one that created this collection.</exception>
            <exception cref="T:System.NullReferenceException">The XmlAttribute to insert is specified as null.</exception>
            <remarks>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and node is added to the end of the collection.
            This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.CopyTo(Crestron.SimplSharp.CrestronXml.XmlAttribute[],System.Int32)">
            <summary>
            Copies all the XmlAttribute objects from this collection into the given array.
            </summary>
            <param name="array">The array that is the destination of the objects copied from this collection.</param>
            <param name="index">The index in the array where copying begins.</param>
            <exception cref="T:System.ArgumentNullException">The array is passed as null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index value passed is not valid.</exception>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.InsertAfter(Crestron.SimplSharp.CrestronXml.XmlAttribute,Crestron.SimplSharp.CrestronXml.XmlAttribute)">
            <summary>
            Inserts the specified attribute immediately after the specified reference attribute.
            </summary>
            <param name="newNode">The XmlAttribute to insert.</param>
            <param name="refNode">The XmlAttribute that is the reference attribute. newNode is placed after the refNode.</param>
            <returns>The XmlAttribute to insert into the collection.</returns>
            <exception cref="T:System.ArgumentException">The newNode was created from a document different from the one that created this collection. Or the refNode is not a member of this collection.</exception>
            <exception cref="T:System.ArgumentNullException">The XmlAttribute to insert or the reference attribute is specified as null.</exception>
            <remarks>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and newNode is inserted into the collection. If refNode is null, newNode is inserted at the beginning of the collection.
            This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.InsertBefore(Crestron.SimplSharp.CrestronXml.XmlAttribute,Crestron.SimplSharp.CrestronXml.XmlAttribute)">
            <summary>
            Inserts the specified attribute immediately before the specified reference attribute.
            </summary>
            <param name="newNode">The XmlAttribute to insert.</param>
            <param name="refNode">The XmlAttribute that is the reference attribute. newNode is placed before the refNode.</param>
            <returns>The XmlAttribute to insert into the collection.</returns>
            <exception cref="T:System.ArgumentException">The newNode was created from a document different from the one that created this collection. Or the refNode is not a member of this collection.</exception>
            <exception cref="T:System.ArgumentNullException">The XmlAttribute to insert or the reference attribute is specified as null.</exception>
            <remarks>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and newNode is inserted into the collection. If refNode is null, newNode is inserted at the end of the collection.
            This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.Prepend(Crestron.SimplSharp.CrestronXml.XmlAttribute)">
            <summary>
            Inserts the specified attribute as the first node in the collection.
            </summary>
            <param name="node">The XmlAttribute to insert.</param>
            <returns>The XmlAttribute added to the collection.</returns>
            <exception cref="T:System.ArgumentNullException">The XmlAttribute to insert is specified as null.</exception>
            <remarks>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and node is added to the beginning of the collection.
            This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.Remove(Crestron.SimplSharp.CrestronXml.XmlAttribute)">
            <summary>
            Removes the specified attribute from the collection.
            </summary>
            <param name="node">The XmlAttribute to remove.</param>
            <returns>The node removed or null if it is not found in the collection.</returns>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.RemoveAll">
            <summary>
            Removes all attributes from the collection.
            </summary>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the attribute corresponding to the specified index from the collection.
            </summary>
            <param name="i">The index of the node to remove. The first node has index 0.</param>
            <returns>Returns null if there is no attribute at the specified index.</returns>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.SetNamedItem(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Adds a XmlNode using its Name property
            </summary>
            <param name="node">An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</param>
            <returns>If the node replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</returns>
            <exception cref="T:System.ArgumentException">node was created from a different XmlDocument than the one that created this collection.
            This XmlAttributeCollection is read-only.</exception>
            <exception cref="T:System.InvalidOperationException">node is an XmlAttribute that is already an attribute of another XmlElement object. To re-use attributes in other elements, you must clone the XmlAttribute objects you want to re-use.</exception>
            <exception cref="T:System.NullReferenceException">The specified XmlNode to be added is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the XmlAttribute objects from this collection into the given array.
            </summary>
            <param name="array">The array that is the destination of the objects copied from this collection.</param>
            <param name="index">The index in the array where copying begins.</param>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.Item(System.Int32)">
            <summary>
            Gets the attribute with the specified index.
            </summary>
            <param name="i">The index of the attribute.</param>
            <exception cref="T:System.IndexOutOfRangeException">The index being passed in is out of range.</exception>
            <remarks>This property is a Microsoft extension to the Document Object Model (DOM). It is equivalent to calling XmlNamedNodeMap.Item.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.Item(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="name">The qualified name of the attribute.</param>
            <remarks>The XmlAttribute with the specified name. If the attribute does not exist, this property returns null.</remarks>
            <remarks>This property is a Microsoft extension to the Document Object Model (DOM). It is equivalent to calling GetNamedItem.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.Item(System.String,System.String)">
            <summary>
            Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).
            </summary>
            <param name="localName">The local name of the attribute.</param>
            <param name="namespaceUri">The namespace URI of the attribute.</param>
            <returns>The XmlAttribute with the specified local name and namespace URI. If the attribute does not exist, this property returns null.</returns>
            <remarks>This property is a Microsoft extension to the Document Object Model (DOM). It is equivalent to calling GetNamedItem.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.System#Collections#ICollection#Count">
            <summary>
            Gets the number of nodes in the XmlNamedNodeMap.
            </summary>
            <value>The number of nodes.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
            <value>Returns true if the collection is synchronized.</value>
            <remarks>This member is an explicit interface member implementation. It can be used only when the XmlAttributeCollection instance is cast to an ICollection interface.</remarks>
            <remarks>SyncRoot returns an object, which can be used to synchronize access to the ICollection.
            Most collection classes in the System.Collections namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.
            Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
            <value>Returns the Object that is the root of the collection.</value>
            <remarks>This member is an explicit interface member implementation. It can be used only when the XmlAttributeCollection instance is cast to an ICollection interface.</remarks>
            <remarks>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance. Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's SyncRoot property.
            Most collection classes in the System.Collections namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection. However, derived classes can provide their own synchronized version of the collection using the SyncRoot property. The synchronizing code must perform operations on the SyncRoot property of the collection, not directly on the collection. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlLinkedNode">
            <summary>
            Gets the node immediately preceding or following this node.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlLinkedNode.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlLinkedNode
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlLinkedNode.#ctor(System.Xml.XmlLinkedNode)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlLinkedNode using the specified System.Xml.XmlLinkedNode
            </summary>
            <param name="node">The System XmlLinkedNode to use.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlLinkedNode.NextSibling">
            <summary>
            Gets the node immediately following this node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlLinkedNode.PreviousSibling">
            <summary>
            Gets the node immediately preceding this node.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlEntityReference">
            <summary>
            Represents an entity reference node.
            </summary>
            <remarks>Do not instantiate an XmlEntityReference directly; instead, use methods such as CreateEntityReference.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlEntityReference.#ctor(System.Xml.XmlEntityReference)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlEntityReference"/> using <see cref="T:System.Xml.XmlEntityReference"/>.
            </summary>
            <param name="xmlEntityReference">The System XmlEntityReference to use.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlEntityReference.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlEntityReference"/> using a specified name and an <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDocument"/>.
            </summary>
            <param name="name">The name of the entity reference; see the Name property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlEntityReference.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself. Because XmlDeclaration nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.</param>
            <returns>The cloned node.</returns>
            <exception cref="T:System.InvalidOperationException">The node type cannot be cloned.</exception>
            <remarks>CloneNode serves as a copy constructor for nodes. To see how this method behaves with other node types, see XmlNode.CloneNode.
            The cloned node has no parent (ParentNode returns null).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlEntityReference.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the children of the node to the specified XmlWriter. Because XmlDeclaration nodes do not have children, this method has no effect.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlEntityReference.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
            <remarks>The value of the encoding and standalone attributes are determined by the Encoding and Standalone properties. If either of the properties is not set, the corresponding attribute is not written. The version attribute is always written out with a value of 1.0.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlEntityReference.BaseURI">
            <summary>
            Gets the base Uniform Resource Identifier (URI) of the current node.
            </summary>
            <value>The location from which the node was loaded.</value>
            <remarks>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places. The BaseURI tells you where these nodes came from. If there is no base URI for the nodes being returned (maybe they were parsed from an in-memory string), Empty is returned.
            BaseURI walks the node tree looking for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the XmlDocument in all cases.
            For additional information on BaseURI and how it behaves with other node types, see XmlNode.BaseURI.
            This property is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlEntityReference.IsReadOnly">
            <summary>
            Gets a value indicating whether the node is read-only.
            </summary>
            <value>true if the node is read-only; otherwise false.
            Because XmlEntityReference nodes are read-only, this property always returns true.</value>
            <remarks>A read-only node is one whose properties, attributes, or children cannot be changed. However, you can remove a read-only node from the tree and insert it somewhere else.
            This property is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlEntityReference.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
            <value>For XmlEntityReference nodes, this property returns the name of the entity referenced.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlEntityReference.Name">
            <summary>
            Gets the name of the node.
            </summary>
            <value>The name of the entity referenced.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlEntityReference.NodeType">
            <summary>
            Gets the type of the node.
            </summary>
            <value>The node type. For XmlEntityReference nodes, the value is XmlNodeType.EntityReference.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlEntityReference.Value">
            <summary>
            Gets or sets the value of the node.
            </summary>
            <value>The value of the node. For XmlEntityReference nodes, this property returns null.</value>
            <exception cref="T:System.ArgumentException">Node is read-only.</exception>
            <exception cref="T:System.InvalidOperationException">Setting the property.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlDeclaration">
            <summary>
            Represents the XML declaration node &lt;?xml version='1.0'...?&gt;.
            </summary>
            <remarks>This class is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDeclaration.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlDeclaration
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDeclaration.#ctor(System.Xml.XmlDeclaration)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlDeclaration using the specified System.Xml.XmlDeclaration
            </summary>
            <param name="node">The System XmlDeclaration to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDeclaration.#ctor(System.String,System.String,System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlDeclaration.
            </summary>
            <param name="version">The XML version; see the Version property.</param>
            <param name="encoding">The encoding scheme; see the Encoding property.</param>
            <param name="standalone">Indicates whether the XML document depends on an external DTD; see the Standalone property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDeclaration.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself. Because XmlDeclaration nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.</param>
            <returns>The cloned node.</returns>
            <exception cref="T:System.InvalidOperationException">The node type cannot be cloned.</exception>
            <remarks>CloneNode serves as a copy constructor for nodes. To see how this method behaves with other node types, see XmlNode.CloneNode.
            The cloned node has no parent (ParentNode returns null).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDeclaration.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the children of the node to the specified XmlWriter. Because XmlDeclaration nodes do not have children, this method has no effect.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDeclaration.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
            <remarks>The value of the encoding and standalone attributes are determined by the Encoding and Standalone properties. If either of the properties is not set, the corresponding attribute is not written. The version attribute is always written out with a value of 1.0.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.Encoding">
            <summary>
            Gets or sets the encoding level of the XML document.
            </summary>
            <remarks>This value is optional. If a value is not set, this property returns String.Empty.
            If an encoding attribute is not included, UTF-8 encoding is assumed when the document is written or saved out.</remarks>
            <remarks>Unlike most XML attributes, encoding attribute values are not case-sensitive. This is because encoding character names follow ISO and Internet Assigned Numbers Authority (IANA) standards.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.InnerText">
            <summary>
            Gets or sets the concatenated values of the XmlDeclaration.
            </summary>
            <exception cref="T:Crestron.SimplSharp.XmlException">The specified text was invalid</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.Standalone">
            <summary>
            Gets or sets the value of the standalone attribute.
            </summary>
            <remarks>Valid values are yes if all entity declarations required by the XML document are contained within the document or no if an external document type definition (DTD) is required. If a standalone attribute is not present in the XML declaration, this property returns String.Empty.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.Value">
            <summary>
            Gets or sets the value of the XmlDeclaration.
            </summary>
            <remarks>The contents of the XmlDeclaration (that is, everything between &lt;?xml and ?&gt;).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDeclaration.Version">
            <summary>
            Gets the XML version of the document.
            </summary>
            <remarks>The value is always 1.0.</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlAttribute">
            <summary>
            Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlAttribute
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.#ctor(System.Xml.XmlAttribute)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlAttribute using the specified System.Xml.XmlAttribute
            </summary>
            <param name="node">The System XmlAttribute to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.#ctor(System.String,System.String,System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlAttribute
            </summary>
            <param name="prefix">The namespace prefix.</param>
            <param name="localName">The local name of the attribute.</param>
            <param name="namespaceUri">The namespace uniform resource identifier (URI).</param>
            <param name="doc">The parent XML document.</param>
            <remarks>Do not instantiate an XmlAttribute directly; instead, use methods such as CreateAttribute.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.AppendChild(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Adds the specified node to the end of the list of child nodes, of this node.
            </summary>
            <param name="newChild">The XmlNode to add.</param>
            <returns>The XmlNode added.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node.
            The newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node.
            This node is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">The newChild is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself</param>
            <returns>The duplicate node.</returns>
            <remarks>This method serves as a copy constructor for nodes. The cloned node has no parent (ParentNode returns null).
            Cloning an unspecified attribute returns a specified attribute (Specified returns true).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.InsertAfter(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Inserts the specified node immediately after the specified reference node.
            </summary>
            <param name="newChild">The XmlNode to insert.</param>
            <param name="refChild">The XmlNode that is the reference node. The newChild is placed after the refChild.</param>
            <returns>The XmlNode inserted.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node.
            The newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node.
            The refChild is not a child of this node. This node is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">The newChild or refChild is not initialized.</exception>
            <remarks>If refChild is null, insert newChild at the beginning of the list of child nodes. If newChild is an XmlDocumentFragment object, its child nodes are inserted, in the same order, after refChild. If the newChild is already in the tree, it is first removed.
            If the node being inserted was created from another document, you can use XmlDocument.ImportNode to import the node to the current document. The imported node can then be inserted into the current document.
            This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.InsertBefore(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Inserts the specified node immediately before the specified reference node.
            </summary>
            <param name="newChild">The XmlNode to insert.</param>
            <param name="refChild">The XmlNode that is the reference node. The newChild is placed before this node.</param>
            <returns>The XmlNode inserted.</returns>
            <exception cref="T:System.InvalidOperationException">The current node is of a type that does not allow child nodes of the type of the newChild node.
            The newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node.
            The refChild is not a child of this node. This node is read-only.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.PrependChild(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Adds the specified node to the beginning of the list of child nodes for this node.
            </summary>
            <param name="newChild">The XmlNode to add. If it is an XmlDocumentFragment, the entire contents of the document fragment are moved into the child list of this node.</param>
            <returns>The XmlNode added.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node.
            The newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node.
            This node is read-only.</exception>
            <remarks>If the newChild is already in the tree, it is first removed.
            If the node being inserted was created from another document, you can use XmlDocument.ImportNode to import the node to the current document. The imported node can then be inserted into the current document.
            This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.RemoveChild(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Removes the specified child node.
            </summary>
            <param name="oldChild">The XmlNode to remove.</param>
            <returns>The XmlNode removed.</returns>
            <exception cref="T:System.ArgumentException">The oldChild is not a child of this node. Or this node is read-only.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.ReplaceChild(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Replaces the child node specified with the new child node specified.
            </summary>
            <param name="newChild">The new child XmlNode.</param>
            <param name="oldChild">The XmlNode to replace.</param>
            <returns>The XmlNode replaced.</returns>
            <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the newChild node.
            The newChild is an ancestor of this node.</exception>
            <exception cref="T:System.ArgumentException">The newChild was created from a different document than the one that created this node.
            This node is read-only.
            The oldChild is not a child of this node.</exception>
            <remarks>If the newChild is already in the tree, it is first removed.
            If the newChild was created from another document, you can use XmlDocument.ImportNode to import the node to the current document.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM). It is functionally equivalent to the InnerXml property.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlAttribute.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM). It is functionally equivalent to the XmlNode.OuterXml property.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.BaseURI">
            <summary>
            Gets the base Uniform Resource Identifier (URI) of the node.
            </summary>
            <remarks>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places. The BaseURI tells you where these nodes came from.
            For additional information on BaseURI and how it behaves with other node types, see XmlNode.BaseURI.
            This property is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.InnerText">
            <summary>
            Sets the concatenated values of the node and all its children.
            </summary>
            <remarks>Setting this property replaces all the children with the parsed contents of the given string.
            This property is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.InnerXml">
            <summary>
            Sets the value of the attribute.
            </summary>
            <exception cref="T:Crestron.SimplSharp.XmlException">The XML specified when setting this property is not well-formed.</exception>
            <remarks>This property is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
            <remarks>If the node does not have a prefix, LocalName is the same as Name.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.NamespaceURI">
            <summary>
            Gets the namespace URI of this node.
            </summary>
            <remarks>An attribute does not inherit its namespace from the element it is attached to. If an attribute is not explicitly given a namespace, the namespace URI is considered to be String.Empty.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.OwnerDocument">
            <summary>
            Gets the XmlDocument to which this node belongs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.OwnerElement">
            <summary>
            Gets the XmlElement to which the attribute belongs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.ParentNode">
            <summary>
            Gets the parent of this node. For XmlAttribute nodes, this property always returns null.
            </summary>
            <remarks>Use the OwnerElement property to get the XmlElement to which the attribute belongs.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.Prefix">
            <summary>
            Gets or sets the namespace prefix of this node.
            </summary>
            <exception cref="T:System.ArgumentException">This node is read-only.</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The specified prefix contains an invalid character.
            The specified prefix is malformed.
            The namespaceURI of this node is null.
            The specified prefix is "xml", and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".
            This node is an attribute, the specified prefix is "xmlns", and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/".
            This node is an attribute, and the qualifiedName of this node is "xmlns" [Namespaces].</exception>
            <remarks>Because changing the prefix of an attribute does not change its namespace URI, changing the prefix
            of an attribute that is known to have a default value does not create a new attribute with the default 
            value and the original prefix.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.SchemaInfo">
            <summary>
            Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.Specified">
            <summary>
            Gets a value indicating whether the attribute value was explicitly set.
            </summary>
            <remarks>true if this attribute was explicitly given a value in the original instance document; otherwise, false. A value of false indicates that the value of the attribute came from the DTD.</remarks>
            <remarks>The implementation is in charge of this property, not the user. If the user changes the value of the attribute (even if it ends up having the same value as the default/fixed value), then the specified flag is automatically flipped to true. To re-specify the attribute as the default/fixed value from the DTD, the user must delete the attribute. The implementation then makes a new attribute available with specified set to false and the default/fixed value (if one exists).
            In summary:
            If the attribute has an assigned value in the document, Specified is true, and the value is the assigned value.
            If the attribute has no assigned value in the document and has a default/fixed value in the DTD, Specified is false, and the value is the default/fixed value in the DTD.
            Otherwise, the attribute does not appear in the structure model of the document.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlAttribute.Value">
            <summary>
            Gets or sets the value of the node.
            </summary>
            <exception cref="T:System.ArgumentException">The node is read-only and a set operation is called.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction">
            <summary>
            Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.#ctor(System.Xml.XmlProcessingInstruction)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlElement using the specified System.Xml.XmlProcessingInstruction
            </summary>
            <param name="node">The System XmlProcessingInstruction to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.#ctor(System.String,System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.
            </summary>
            <param name="target">The target of the processing instruction; see the Target property.</param>
            <param name="data">The content of the instruction; see the Data property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
            <returns>The cloned node.</returns>
            <exception cref="T:System.InvalidOperationException">The node type cannot be cloned.</exception>
            <remarks>CloneNode serves as a copy constructor for nodes. For processing instruction nodes, the cloned node always includes the target and data. To see how this method behaves with other node types, see the CloneNode method in the XmlNode class.
            The cloned node has no parent (ParentNode returns null).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter. Because ProcessingInstruction nodes do not have children, this method has no effect.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.Data">
            <summary>
            Gets or sets the content of the processing instruction, excluding the target.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.InnerText">
            <summary>
            Gets or sets the concatenated values of the node and all its children.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.Target">
            <summary>
            Gets the target of the processing instruction.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlProcessingInstruction.Value">
            <summary>
            Gets or sets the value of the node.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlElement">
            <summary>
            Represents an element.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlElement
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.#ctor(System.Xml.XmlElement)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlElement using the specified System.Xml.XmlElement
            </summary>
            <param name="node">The System XmlElement to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.#ctor(System.String,System.String,System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlElement.
            </summary>
            <param name="prefix">The namespace prefix; see the Prefix property.</param>
            <param name="localName">The local name; see the LocalName property.</param>
            <param name="namespaceUri">The namespace URI; see the NamespaceURI property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself (and its attributes if the node is an XmlElement).</param>
            <returns>The cloned node.</returns>
            <exception cref="T:System.InvalidOperationException">The node type cannot be cloned.</exception>
            <remarks>This method serves as a copy constructor for nodes. The duplicate node has no parent (ParentNode returns null).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.GetAttribute(System.String)">
            <summary>
            Returns the value for the attribute with the specified name
            </summary>
            <param name="name">The qualified name of the attribute to retrieve, it is matched against the Name 
            property of the matching node</param>
            <returns>The value of the specified attribute, an empty string is returned if no matching attributes were 
            found or if the attribute doesn't have a default or specified value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.GetAttribute(System.String,System.String)">
            <summary>
            Returns the value for the attribute with the specified local name and namespace URI
            </summary>
            <param name="localName">The local name of the attribute to retrieve</param>
            <param name="namespaceUri">The namespace URI of the attribute to retrieve</param>
            <returns>The value of the specified attribute, an empty string is returned if no matching attributes were 
            found or if the attribute doesn't have a default or specified value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.GetAttributeNode(System.String)">
            <summary>
            Returns the XmlAttribute with the specified name
            </summary>
            <param name="name">The qualified name of the attribute to retrieve, it is matched against the Name 
            property of the matching node</param>
            <returns>The specified XmlAttribute or null if a matching attribute was not found</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.GetAttributeNode(System.String,System.String)">
            <summary>
            Returns the XmlAttribute with the specified local name and namespace URI
            </summary>
            <param name="localName">The local name of the attribute</param>
            <param name="namespaceUri">The namespace URI of the attribute</param>
            <returns>The specified XmlAttribute or null if a matching attribute was not found</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.HasAttribute(System.String)">
            <summary>
            Determines whether the current node has an attribute with the specified name
            </summary>
            <param name="name">The qualified name of the attribute to retrieve, it is matched against the Name 
            property of the matching node</param>
            <returns>true if the current node has the specified attribute; otherwise, false</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.HasAttribute(System.String,System.String)">
            <summary>
            Determines whether the current node has an attribute with the specified local name and namespace URI
            </summary>
            <param name="localName">The local name of the attribute to find</param>
            <param name="namespaceUri">The namespace URI of the attribute to find.</param>
            <returns>true if the current node has the specified attribute; otherwise, false</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.RemoveAll">
            <summary>
            Removes all specified attributes and children of the current node. Default attributes are not removed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.RemoveAllAttributes">
            <summary>
            Removes all specified attributes from the element. Default attributes are not removed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.RemoveAttribute(System.String)">
            <summary>
            Removes an attribute by name
            </summary>
            <param name="name">The qualified name of the attribute to remove, this is matched against 
            the Name property of the matching node</param>
            <exception cref="T:System.ArgumentException">The node is real-only</exception>
            <remarks>If the removed attribute has a default value, it is immediately replaced</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.RemoveAttribute(System.String,System.String)">
            <summary>
            Removes an attribute with the specified local name and namespace URI
            </summary>
            <param name="localName">The local name of the attribute to remove</param>
            <param name="namespaceUri">The namespace URI of the attribute to remove</param>
            <exception cref="T:System.ArgumentException">The node is real-only</exception>
            <remarks>If the removed attribute has a default value, it is immediately replaced</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.RemoveAttributeAt(System.Int32)">
            <summary>
            Removes the attribute node with the specified index from the element
            </summary>
            <param name="i">The index of the node to remove, The first node has index 0</param>
            <returns>The attribute node removed or null if there is no node at the given index</returns>
            <remarks>If the removed attribute has a default value, it is immediately replaced</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.RemoveAttributeNode(Crestron.SimplSharp.CrestronXml.XmlAttribute)">
            <summary>
            Removes the specified XmlAttribute
            </summary>
            <param name="oldAttr">The XmlAttribute to remove</param>
            <returns>The removed XmlAttribute or null if oldAttr is not an attribute node of the XmlElement</returns>
            <remarks>If the removed attribute has a default value, it is immediately replaced</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.RemoveAttributeNode(System.String,System.String)">
            <summary>
            Removes the XmlAttribute specified by the local name and namespace URI
            </summary>
            <param name="localName">The local name of the attribute</param>
            <param name="namespaceUri">The namespace URI of the attribute</param>
            <returns>The removed XmlAttribute or null if the XmlElement does not have a matching attribute node</returns>
            <remarks>If the removed attribute has a default value, it is immediately replaced</remarks>
            <exception cref="T:System.ArgumentException">The node is real-only</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.SetAttribute(System.String,System.String)">
            <summary>
            Sets the value of the attribute with the specified name
            </summary>
            <param name="name">The qualified name of the attribute to create or alter. If the 
            name contains a colon it is parsed into prefix and local name components</param>
            <param name="value">The value to set the attribute</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">The specified name contains an invalid character</exception>
            <exception cref="T:System.ArgumentException">The node is read-only</exception>
            <remarks>If an attribute with the specified name already exists it's value is overwritten with the 
            specified value</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.SetAttribute(System.String,System.String,System.String)">
            <summary>
            Sets the value of the attribute with the specified local name and namespace URI
            </summary>
            <param name="localName">The local name of the attribute</param>
            <param name="namespaceUri">The namespace URI of the attribute</param>
            <param name="value">The value to set for the attribute</param>
            <returns>The value to set the attribute</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.SetAttributeNode(Crestron.SimplSharp.CrestronXml.XmlAttribute)">
            <summary>
            Adds the specified XmlAttribute
            </summary>
            <param name="newAttr">The XmlAttribute node to add to the attribute collection for this element</param>
            <returns>If the attribute replaces an existing attribute with the same name, the old XmlAttribute is 
            returned; otherwise, null is returned</returns>
            <exception cref="T:System.ArgumentException">The newAttr was created from a different document than the one 
            that created this XmlElement.  Or this node is read-only</exception>
            <exception cref="T:System.InvalidOperationException">The newAttr is already an attribute of another XmlElement, 
            you must explicitly clone the XmlAttribute to re-use them in other XmlElement objects</exception>
            <remarks>If an attribute with that name is already present in the element, it is replaced by the new one</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.SetAttributeNode(System.String,System.String)">
            <summary>
            Adds the specified XmlAttribute
            </summary>
            <param name="localName">The local name of the attribute</param>
            <param name="namespaceUri">The namespace URI of the attribute</param>
            <returns>The XmlAttribute to add</returns>
            <remarks>The XmlAttribute does not have any children. Use Value to assign a text value to the 
            attribute or use AppendChild (or a similar method) to add children to the attribute</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the current node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The XmlWriter argument is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.GetElementsByTagName(System.String)">
            <summary>
            Returns an XmlNodeList containing a list of all descendant elements that match the specified Name
            </summary>
            <param name="name">The name tag to match. This is a qualified name. It is matched against the Name property of the matching node. The asterisk (*) is a special value that matches all tags</param>
            <returns>An XmlNodeList containing a list of all matching nodes</returns>
            <remarks>The nodes are placed in the order in which they would be encountered in a preorder traversal of the XmlElement tree</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlElement.GetElementsByTagName(System.String,System.String)">
            <summary>
            Returns an XmlNodeList containing a list of all descendant elements that match the specified LocalName and NamespaceURI
            </summary>
            <param name="localName">The local name to match. The asterisk (*) is a special value that matches all tags</param>
            <param name="namespaceURI">The namespace URI to match</param>
            <returns>An XmlNodeList containing a list of all matching nodes</returns>
            <remarks>The nodes are placed in the order in which they would be encountered in a preorder traversal of the XmlElement tree</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.Attributes">
            <summary>
            Gets an XmlAttributeCollection containing the list of attributes for this node.
            </summary>
            <value>XmlAttributeCollection containing the list of attributes for this node.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.HasAttributes">
            <summary>
            Gets a boolean value indicating whether the current node has any attributes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.InnerText">
            <summary>
            Gets or sets the concatenated values of the node and all its children.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.InnerXml">
            <summary>
            Gets or sets the markup representing just the children of this node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.IsEmpty">
            <summary>
            Gets or sets the tag format of the element
            </summary>
            <remarks>Returns true if the element is to be serialized in the short tag format, 
            false for the long format</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.LocalName">
            <summary>
            Gets the local name of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.NamespaceURI">
            <summary>
            Gets the namespace URI of this node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.NextSibling">
            <summary>
            Gets the XmlNode immediately following this element.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.OwnerDocument">
            <summary>
            Gets the XmlDocument to which this node belongs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.ParentNode">
            <summary>
            Gets the parent of this node (for nodes that can have parents).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.Prefix">
            <summary>
            Gets or sets the namespace prefix of this node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlElement.SchemaInfo">
            <summary>
            Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlCharacterData">
            <summary>
            Provides text manipulation methods that are used by several classes.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlCharacterData
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.#ctor(System.Xml.XmlCharacterData)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlCharacterData using the specified System.Xml.XmlCharacterData
            </summary>
            <param name="node">The System XmlCharacterData to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlCharacterData.
            </summary>
            <param name="data">The content of the instruction; see the Data property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.AppendData(System.String)">
            <summary>
            Appends the specified string to the end of the character data of the node.
            </summary>
            <param name="strData">The string to insert into the existing string.</param>
            <remarks>This method raises the XmlNodeChangedAction.Change event.</remarks>
            Notes to Inheritors: When overriding AppendData in a derived class, in order for events to be raised correctly, you must either raise the event yourself or call the base version of this method.
            <exception cref="T:System.ArgumentNullException">strData is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
            <summary>
            Removes a range of characters from the node.
            </summary>
            <param name="offset">The position within the string to start deleting.</param>
            <param name="count">The number of characters to delete.</param>
            <remarks>This method raises the XmlNodeChangedAction.Change event.</remarks>
            Notes to Inheritors: When overriding DeleteData in a derived class, in order for events to be raised correctly, you must either raise the event yourself or call the base version of this method.
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.InsertData(System.Int32,System.String)">
            <summary>
            Inserts the specified string at the specified character offset.
            </summary>
            <param name="offset">The position within the string to insert the supplied string data.</param>
            <param name="strData">The string data that is to be inserted into the existing string.</param>
            <remarks>This method raises the XmlNodeChangedAction.Change event.</remarks>
            Notes to Inheritors: When overriding InsertData in a derived class, in order for events to be raised correctly, you must either raise the event yourself or call the base version of this method.
            <exception cref="T:System.ArgumentNullException">strData is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces the specified number of characters starting at the specified offset with the specified string.
            </summary>
            <param name="offset">The position within the string to start replacing.</param>
            <param name="count">The number of characters to replace.</param>
            <param name="strData">The new data that replaces the old string data.</param>
            <remarks>This method raises the XmlNodeChangedAction.Change event.</remarks>
            Note to Inheritors: When overriding ReplaceData in a derived class, in order for events to be raised correctly, you must either raise the event yourself or call the base version of this method.
            <exception cref="T:System.ArgumentNullException">strData is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCharacterData.Substring(System.Int32,System.Int32)">
            <summary>
            Retrieves a substring of the full string from the specified range.
            </summary>
            <param name="offset">The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data.</param>
            <param name="count">The number of characters to retrieve.</param>
            <returns>The substring corresponding to the specified range.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCharacterData.InnerText">
            <summary>
            Contains the data of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCharacterData.Data">
            <summary>
            Contains the data of the node.
            </summary>
            <remarks>The data returned is equivalent to the Value property.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCharacterData.Length">
            <summary>
            Gets the length of the data, in characters.
            <remarks>The length, in characters, of the string in the Data property. The length may be zero; that is, CharacterData nodes can be empty.</remarks>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCharacterData.Value">
            <summary>
            Gets or sets the value of the node.
            </summary>
            <exception cref="T:System.ArgumentException">Node is read-only.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlCDataSection">
            <summary>
            Represents a CDATA section.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCDataSection.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlCDataSection
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCDataSection.#ctor(System.Xml.XmlCDataSection)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlCDataSection using the specified System.Xml.XmlCDataSection
            </summary>
            <param name="node">The System XmlCDataSection to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCDataSection.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Initializes a new instance of the XmlCDataSection class.
            </summary>
            <param name="data">The content of the instruction; see the Data property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCDataSection.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself. Because CDATA nodes do not have children, regardless of the parameter setting, the cloned node will always include the data content.</param>
            <returns>The cloned node.</returns>
            <remarks>CloneNode serves as a copy constructor for nodes. To see how this method behaves with other node types, see the CloneNode method in the XmlNode class.
            The cloned node has no parent (ParentNode returns null).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCDataSection.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the children of the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <remarks>Because CDATA nodes do not have children, WriteContentTo has no effect.
            This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlCDataSection.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCDataSection.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCDataSection.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCDataSection.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlCDataSection.ParentNode">
            <summary>
            Gets the parent of this node (for nodes that can have parents).
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlComment">
            <summary>
            Represents the content of an XML comment.
            </summary>
            <remarks>Do not instantiate a XmlComment directly; instead, use methods such as CreateNode.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlComment.#ctor">
            <summary>
            Internal default constructor for the Crestron.SimplSharp.CrestronXml.XmlComment
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlComment.#ctor(System.Xml.XmlComment)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlComment using the specified System.Xml.XmlComment
            </summary>
            <param name="node">The System XmlCDataSection to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlComment.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Initializes a new instance of the XmlComment class.
            </summary>
            <param name="comment">The content of the comment element.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlComment.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself. Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting.</param>
            <returns>The cloned node.</returns>
            <remarks>CloneNode serves as a copy constructor for nodes. To see how this method behaves with other node types, see the CloneNode method in the XmlNode class.
            The cloned node has no parent (ParentNode returns null).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlComment.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter. Because comment nodes do not have children, this method has no effect.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlComment.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlComment.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
            <remarks>For comment nodes, the value is #comment.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlComment.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
            <remarks>For comment nodes, the value is #comment.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlComment.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
            <remarks>For comment nodes, the value is XmlNodeType.Comment.</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeList">
            <summary>
            Represents an ordered collection of nodes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeList._xmlnodelist">
            <summary>
            The internal System.Xml.XmlNodeList
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeList.#ctor(System.Xml.XmlNodeList)">
            <summary>
            Initializes a new instance using the specified System.Xml.XmlNodeList
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNodeList"/> class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeList.Item(System.Int32)">
            <summary>
            Retrieves a node at the given index
            </summary>
            <param name="index">Zero-based index into the list of nodes</param>
            <returns>The XmlNode in the collection</returns>
            <remarks>If index is greater than or equal to length of the collection, NULL is returned</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeList.GetEnumerator">
            <summary>
            Provides a simple "foreach" style iteration over the collection of nodes in the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNodeList"/>
            </summary>
            <returns>An IEnumerator</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeList.ItemOf(System.Int32)">
            <summary>
            Retrieves a node at the given index
            </summary>
            <param name="i">Zero based index into the list of nodes</param>
            <returns>The XmlNode in the collection</returns>
            <remarks>If index is greater than or equal to length of the collection, NULL is returned</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeList.Count">
            <summary>
            Gets the number of nodes in the XmlNodeList
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeListEnumerator">
            <summary>
            Provides "foreach" enumeration through an XmlNodeList
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeReader">
            <summary>
            Represents a reader that provides fast, non-cached forward only access to XML data in an XmlNode
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeReader._nodereader">
            <summary>
            The underlying System.Xml.XmlNodeReader
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.#ctor(Crestron.SimplSharp.CrestronXml.XmlNode)">
            <summary>
            Creates an instance of the Crestron.SimplSharp.CrestronXml.XmlNodeReader class using the specified System.Xml.XmlNode
            </summary>
            <param name="node">The XmlNode to be read.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Close">
            <summary>
            Changes the ReadState to Closed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.GetAttribute(System.Int32)">
            <summary>
            Gets the value of the attribute with the specified index.
            </summary>
            <param name="attributeIndex">The index of the attribute. The index is zero-based. (The first attribute has index 0.)</param>
            <returns>The value of the specified attribute.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified index is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.GetAttribute(System.String,System.String)">
            <summary>
            Gets the value of the attribute with the specified local name and namespace URI.
            </summary>
            <param name="name">The local name of the attribute.</param>
            <param name="namespaceURI">The namespace URI of the attribute.</param>
            <returns>The value of the specified attribute. If the attribute is not found, null is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.GetAttribute(System.String)">
            <summary>
            Gets the value of the attribute with the specified name.
            </summary>
            <param name="name">The qualified name of the attribute.</param>
            <returns>The value of the specified attribute. If the attribute is not found, null is returned.</returns>
            <remarks>This method does not move the reader. If the reader is positioned on a DocumentType node, this method can be used to get the PUBLIC and SYSTEM literals, for example, reader.GetAttribute("PUBLIC")</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.LookupNamespace(System.String)">
            <summary>
            Resolves a namespace prefix in the current element's scope.
            </summary>
            <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.</param>
            <returns>The namespace URI to which the prefix maps or null if no matching prefix is found.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.MoveToAttribute(System.Int32)">
            <summary>
            Moves to the attribute with the specified index.
            </summary>
            <param name="attributeIndex">The index of the attribute to move to.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified index is invalid</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
            <summary>
            Moves to the attribute with the specified local name and namespace URI.
            </summary>
            <param name="name">The local name of the attribute.</param>
            <param name="namespaceURI">The namespace URI of the attribute.</param>
            <returns>true if the attribute is found; otherwise, false. If false, the reader's position does not change.</returns>
            <remarks>After calling this method, the Name, NamespaceURI, and Prefix properties reflect the properties of that attribute.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.MoveToAttribute(System.String)">
            <summary>
            Moves to the attribute with the specified name.
            </summary>
            <param name="name">The qualified name of the attribute.</param>
            <returns>true if the attribute is found; otherwise, false. If false, the reader's position does not change.</returns>
            <remarks>After calling this method, the Name, NamespaceURI, and Prefix properties reflect the properties of that attribute.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.MoveToElement">
            <summary>
            Moves to the element that contains the current attribute node.
            </summary>
            <returns>true if the reader is positioned on an attribute (the reader moves to the element that owns the attribute);
            false if the reader is not positioned on an attribute (the position of the reader does not change).</returns>
            <remarks>Use this method to return to an element after navigating through its attributes.
            This method moves the reader to one of the following node types: Element, DocumentType, or XmlDeclaration.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.MoveToFirstAttribute">
            <summary>
            Moves to the first attribute.
            </summary>
            <returns>true if an attribute exists (the reader moves to the first attribute);
            otherwise, false (the position of the reader does not change).</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.MoveToNextAttribute">
            <summary>
            Moves to the next attribute.
            </summary>
            <returns>true if there is a next attribute; false if there are no more attributes.</returns>
            <remarks>If the current node is not an attribute node, this method is equivalent to MoveToFirstAttribute.
            If MoveToNextAttribute returns true, the reader moves to the next attribute; 
            otherwise, the position of the reader does not change.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Read">
            <summary>
            Reads the next node from the stream.
            </summary>
            <returns>true if the next node was read successfully; false if there are no more nodes to read.</returns>
            <remarks>When a reader is first created and initialized, there is no information available.
            You must call Read to read the first node.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ReadAttributeValue">
            <summary>
            Parses the attribute value into one or more Text, EntityReference, or EndEntity nodes.
            </summary>
            <returns>true if there are nodes to return.
            false if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</returns>
            <remarks>Use this method after calling MoveToAttribute to read through the text or entity reference nodes 
            that make up the attribute value. The Depth of the attribute value nodes is one plus the depth of the attribute node;
            it increments and decrements by one when you step into and out of general entity references.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the content and returns the Base64 decoded binary bytes.
            </summary>
            <param name="buffer">The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count">The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The specified buffer is null</exception>
            <exception cref="T:System.InvalidOperationException">This method is not supported on the current node</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is greater than the buffer length</exception>
            <remarks>This method is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the content and returns the BinHex decoded binary bytes.
            </summary>
            <param name="buffer">The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count">The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The specified buffer is null</exception>
            <exception cref="T:System.InvalidOperationException">This method is not supported on the current node</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is greater than the buffer length</exception>
            <remarks>This method is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the element and decodes the Base64 content.
            </summary>
            <param name="buffer">The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count">The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The specified buffer is null</exception>
            <exception cref="T:System.InvalidOperationException">The current node is not an element node.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is greater than the buffer length</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The element contains mixed content</exception>
            <exception cref="T:System.FormatException">The content cannot be converted to the requested type.</exception>
            <remarks>This method is very similar to the ReadContentAsBase64 method except that it can only be called on element node types. 
            The element cannot have child elements.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the element and decodes the BinHex content.
            </summary>
            <param name="buffer">The buffer into which to copy the resulting text. This value cannot be null.</param>
            <param name="index">The offset into the buffer where to start copying the result.</param>
            <param name="count">The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</param>
            <returns>The number of bytes written to the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">The specified buffer is null</exception>
            <exception cref="T:System.InvalidOperationException">The current node is not an element node.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is greater than the buffer length</exception>
            <exception cref="T:Crestron.SimplSharp.XmlException">The element contains mixed content</exception>
            <exception cref="T:System.FormatException">The content cannot be converted to the requested type.</exception>
            <remarks>This method is very similar to the ReadContentAsBinHex method except that it can only be called on element node types. 
            The element cannot have child elements.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ReadString">
            <summary>
            Reads the contents of an element or text node as a string.
            </summary>
            <returns>The contents of the element or text-like node (This can include CDATA, Text nodes, and so on).
            This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.
            Note: The text node can be either an element or an attribute text node.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ResolveEntity">
            <summary>
            Resolves the entity reference for EntityReference nodes.
            </summary>
            <exception cref="T:System.InvalidOperationException">The reader is not positioned on an EntityReference node.</exception>
            <remarks>After calling this method, if the entity is part of an attribute value, you must call ReadAttributeValue to step into the entity.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Skip">
            <summary>
            Skips the children of the current node.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Crestron#SimplSharp#CrestronXml#IXmlNamespaceResolver#GetNamespacesInScope(Crestron.SimplSharp.CrestronXml.XmlNamespaceScope)">
            <summary>
            Implementation of IXmlNamespaceResolver.GetNamespacesInScope
            </summary>
            <param name="scope">The scope</param>
            <returns>A IDictionary</returns>
            <remarks>This member is an explicit interface member implementation. 
            It can be used only when the XmlNodeReader instance is cast to an IXmlNamespaceResolver interface.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Crestron#SimplSharp#CrestronXml#IXmlNamespaceResolver#LookupPrefix(System.String)">
            <summary>
            Implementation of IXmlNamespaceResolver.LookupPrefix
            </summary>
            <param name="namespaceName">The namespace to retrieve the prefix for</param>
            <returns>The prefix for the specified namespace</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.AttributeCount">
            <summary>
            Gets the number of attributes on the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.BaseURI">
            <summary>
            Gets the base URI of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.CanReadBinaryContent">
            <summary>
            Gets a value indicating whether the XmlNodeReader implements the binary content read methods.
            </summary>
            <remarks>true if the binary content read methods are implemented; otherwise false. 
            The XmlNodeReader class always returns true.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.CanResolveEntity">
            <summary>
            Gets a value indicating whether this reader can parse and resolve entities.
            </summary>
            <remarks>true if the reader can parse and resolve entities; otherwise, false. XmlNodeReader always returns true.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Depth">
            <summary>
            Gets the depth of the current node in the XML document.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.EOF">
            <summary>
            Gets a value indicating whether the reader is positioned at the end of the stream.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.HasAttributes">
            <summary>
            Gets a value indicating whether the current node has any attributes.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.HasValue">
            <summary>
            Gets a value indicating whether the current node can have a Value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.IsDefault">
            <summary>
            Gets a value indicating whether the current node is an attribute that was generated from the default value 
            defined in the document type definition (DTD) or schema.
            </summary>
            <remarks>This property applies to attribute nodes only. 
            If the reader is not positioned on an attribute node, this property returns false.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.IsEmptyElement">
            <summary>
            Gets a value indicating whether the current node is an empty element (for example, <MyElement/>).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.LocalName">
            <summary>
            Gets the local name of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Name">
            <summary>
            Gets the qualified name of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.NamespaceURI">
            <summary>
            Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.NameTable">
            <summary>
            Gets the XmlNameTable associated with this implementation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Prefix">
            <summary>
            Gets the namespace prefix associated with the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.ReadState">
            <summary>
            Gets the state of the reader.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.Value">
            <summary>
            Gets the text value of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.XmlLang">
            <summary>
            Gets the current xml:lang scope.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeReader.XmlSpace">
            <summary>
            Gets the current xml:space scope.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlDocument">
            <summary>
            Represents an XML document
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.#ctor(System.Xml.XmlDocument)">
            <summary>
            Creates a Crestron.SimplSharp.CrestronXml.XmlDocument using the specified System.Xml.XmlNode
            </summary>
            <param name="doc">System.Xml.XmlNode to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.#ctor">
            <summary>
            Initializes a new instance of the XmlDocument class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.#ctor(Crestron.SimplSharp.CrestronXml.XmlNameTable)">
            <summary>
            Initializes a new instance of the XmlDocument class with the specified XmlNameTable.
            </summary>
            <param name="nt">The XmlNameTable to use.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
            <returns>The cloned XmlDocument node.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateNode(System.String,System.String,System.String)">
            <summary>
            Creates an XmlNode with the specified node type, Name, and NamespaceURI.
            </summary>
            <param name="nodeTypeString">String version of the XmlNodeType of the new node.</param>
            <param name="name">The qualified name of the new node. If the name contains a colon, 
            it is parsed into Prefix and LocalName components.</param>
            <param name="namespaceUri">The namespace URI of the new node.</param>
            <returns>The new XmlNode.</returns>
            <exception cref="T:System.ArgumentException">The name was not provided and the XmlNodeType requires a name; 
            or nodeTypeString is not one of the strings listed below.</exception>
            <exception cref="T:System.NullReferenceException">If name is assigned null will throw NullReferenceException or NotSupportedException. 
            </exception>
            <exception cref="T:System.NotSupportedException">If name is assigned null will throw NotSupportedException or NullReferenceException. 
            </exception>
            <remarks>This method does not automatically add the new object to the document tree, 
            to add you must explicitly call one of the node insert methods.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateNode(Crestron.SimplSharp.CrestronXml.XmlNodeType,System.String,System.String,System.String)">
            <summary>
            Creates a XmlNode with the specified XmlNodeType, Prefix, Name, and NamespaceURI.
            </summary>
            <param name="type">The XmlNodeType of the new node.</param>
            <param name="prefix">The prefix of the new node.</param>
            <param name="name">The local name of the new node.</param>
            <param name="namespaceURI">The namespace URI of the new node.</param>
            <returns>The new XmlNode.</returns>
            <exception cref="T:System.ArgumentException">The name was not provided and the XmlNodeType requires a name.</exception>
            <remarks>This method does not automatically add the new object to the document tree, 
            to add you must explicitly call one of the node insert methods.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateNode(Crestron.SimplSharp.CrestronXml.XmlNodeType,System.String,System.String)">
            <summary>
            Creates an XmlNode with the specified XmlNodeType, Name, and NamespaceURI.
            </summary>
            <param name="type">The XmlNodeType of the new node.</param>
            <param name="name">The qualified name of the new node. If the name contains a colon then it is parsed into Prefix and LocalName components.</param>
            <param name="namespaceUri">The namespace URI of the new node.</param>
            <returns>The new XmlNode.</returns>
            <exception cref="T:System.ArgumentException">The name was not provided and the XmlNodeType requires a name.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateAttribute(System.String)">
            <summary>
            Creates an XmlAttribute with the specified Name
            </summary>
            <param name="name">The qualified name of the attribute</param>
            <returns>The new XmlAttribute</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateAttribute(System.String,System.String)">
            <summary>
            Creates an XmlAttribute with the specified qualified name and NamespaceURI
            </summary>
            <param name="qualifiedName">The qualified name of the attribute</param>
            <param name="namespaceURI">The namespaceURI of the attribute</param>
            <returns>The new XmlAttribute</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Creates an XmlAttribute with the specified Prefix, LocalName, and NamespaceURI
            </summary>
            <param name="prefix">The prefix of the attribute, String.Empty and null are equivalent</param>
            <param name="localName">The local name of the attribute</param>
            <param name="namespaceURI">The namespace URI of the attribute</param>
            <returns>The new XmlAttribute</returns>
            <remarks>If prefix is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; 
            otherwise an exception is thrown.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateElement(System.String,System.String,System.String)">
            <summary>
            Creates an element with the specified Prefix, LocalName, and NamespaceURI
            </summary>
            <param name="prefix">The prefix of the new element, String.Empty and null are equivalent</param>
            <param name="localName">The local name of the new element</param>
            <param name="namespaceURI">The namespace URI of the new element, String.Empty and null are equivalent</param>
            <returns>The new XmlElement</returns>
            <remarks>The returned XmlElement is created in context of the XmlDocument but not automatically
            added it, you must explicitly call one of the insert methods</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateElement(System.String)">
            <summary>
            Creates an element with the specified name
            </summary>
            <param name="name">The qualified name of the element. If the name contains a colon then the 
            Prefix property reflects the part of the name preceding the colon and the LocalName property 
            reflects the part of the name after the colon. The qualified name cannot include a prefix of'xmlns'</param>
            <returns>The new XmlElement</returns>
            <remarks>The returned XmlElement is created in context of the XmlDocument but not automatically
            added it, you must explicitly call one of the insert methods</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateElement(System.String,System.String)">
            <summary>
            Creates an XmlElement with the qualified name and NamespaceURI
            </summary>
            <param name="qualifiedName">The qualified name of the element. If the name contains a colon then 
            the Prefix property will reflect the part of the name preceding the colon and the LocalName property 
            will reflect the part of the name after the colon. The qualified name cannot include a prefix of'xmlns'</param>
            <param name="namespaceUri">The namespace URI of the element</param>
            <returns>The new XmlElement</returns>
            <remarks>The returned XmlElement is created in context of the XmlDocument but not automatically
            added it, you must explicitly call one of the insert methods</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateEntityReference(System.String)">
            <summary>
            Creates an XmlEntityReference with the specified name.
            </summary>
            <param name="name">The name of the entity reference.</param>
            <returns>The new XmlEntityReference.</returns>
            <exception cref="T:System.ArgumentException">The name is invalid (for example, names starting with'#' are invalid.)</exception>
            <remarks>If the referenced entity is known, the child list of the XmlEntityReference node is made the same as that of the corresponding XmlEntity node.
            The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateCDataSection(System.String)">
            <summary>
            Creates an XmlCDataSection containing the specified data
            </summary>
            <param name="data">The content of the XmlCDataSection to create</param>
            <returns>The new XmlCDataSection</returns>
            <remarks>The returned XmlCDataSection is created in context of the XmlDocument but not automatically
            added it, you must explicitly call one of the insert methods</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
            <summary>
            Creates an XmlProcessingInstruction with the specified name and data
            </summary>
            <param name="target">The name of the processing instruction</param>
            <param name="data">The data for the processing instruction</param>
            <returns>The new XmlProcessingInstruction</returns>
            <remarks>The returned XmlProcessingInstruction is created in context of the XmlDocument but not automatically
            added it, you must explicitly call one of the insert methods</remarks>
            <remarks>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), 
            ProcessingInstruction nodes are only allowed within Document and Element nodes</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateDocumentFragment">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment"/>
            </summary>
            <returns>Returns a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDocumentFragment"/></returns>
            <remarks>DocumentFragment nodes cannot be inserted into a document, 
            However, you can insert children of the DocumentFragment node into a document</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDeclaration"/> with the specified values
            </summary>
            <param name="version">The version must be "1.0"</param>
            <param name="encoding">The value of the encoding attribute. This is the encoding that is used when 
            you save the XmlDocument to a file or a stream; therefore, it must be set to a string supported by 
            the Encoding class, otherwise Save fails. If this is null or String.Empty, the Save method does not 
            write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used</param>
            <param name="standalone">The value must be either "yes" or "no". If this is null or String.Empty, 
            the Save method does not write a standalone attribute on the XML declaration</param>
            <returns>Returns a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDeclaration"/></returns>
            <exception cref="T:System.ArgumentException">The version or standalone parameters have invalid values</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateComment(System.String)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlComment"/> with the specified data
            </summary>
            <param name="data">The content of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlComment"/></param>
            <returns>The new <see cref="T:Crestron.SimplSharp.CrestronXml.XmlComment"/></returns>
            <remarks>Although this method creates the new object in the context of the document, 
            it does not automatically add the new object to the document tree. To add the new object, you must 
            explicitly call one of the node insert methods</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateSignificantWhitespace(System.String)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace"/> node
            </summary>
            <param name="text">The string must contain one or more space characters, carriage returns, line feeds, or tabs</param>
            <returns>A new <see cref="T:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace"/> node</returns>
            <remarks>Although this method creates the new object in the context of the document, 
            it does not automatically add the new object to the document tree. To add the new object, you must 
            explicitly call one of the node insert methods</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateWhitespace(System.String)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlWhitespace"/> node
            </summary>
            <param name="text">The string must contain one or more space characters, carriage returns, line feeds, or tabs</param>
            <returns>A new <see cref="T:Crestron.SimplSharp.CrestronXml.XmlWhitespace"/> node</returns>
            <remarks>This method is a Microsoft extension to the Document Object Model (DOM).
            It is used when you want to manually format your document.
            Although this method creates the new object in the context of the document, 
            it does not automatically add the new object to the document tree. To add the new object, you must 
            explicitly call one of the node insert methods</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.CreateTextNode(System.String)">
            <summary>
            Creates a <see cref="T:Crestron.SimplSharp.CrestronXml.XmlText"/> with the specified text.
            </summary>
            <param name="text">The text for the Text node.</param>
            <returns>The new <see cref="T:Crestron.SimplSharp.CrestronXml.XmlText"/> node</returns>
            <remarks>Although this method creates the new object in the context of the document, 
            it does not automatically add the new object to the document tree. To add the new object, 
            you must explicitly call one of the node insert methods.
            According to the W3C Extensible Markup Language (XML) 1.0 recommendation
            www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute
            and EntityReference nodes.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.ImportNode(Crestron.SimplSharp.CrestronXml.XmlNode,System.Boolean)">
            <summary>
            Imports a node from another document to the current document.
            </summary>
            <param name="node">The node being imported.</param>
            <param name="deep">true to perform a deep clone; otherwise, false.</param>
            <returns>The imported XmlNode.</returns>
            <exception cref="T:System.InvalidOperationException">Calling this method on a node type which cannot be imported.</exception>
            <remarks>The returned node has no parent. The source node is not altered or removed from the original document; 
            ImportNode creates a copy of the source node.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Load(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Loads the XML document from the specified stream.
            </summary>
            <param name="inStream">The stream containing the XML document to load.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">There is a load or parse error in the XML. 
            In this case, a FileNotFoundException is raised.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Load(Crestron.SimplSharp.CrestronIO.TextReader)">
            <summary>
            Loads the XML document from the specified TextReader.
            </summary>
            <param name="txtReader">The TextReader used to feed the XML data into the document.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">There is a load or parse error in the XML.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Load(System.String)">
            <summary>
            Loads the XML document from the specified URL.
            </summary>
            <param name="filename">URL for the file containing the XML document to load. 
            The URL can be either a local file or an HTTP URL.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">There is a load or parse error in the XML. In this case, a FileNotFoundException is raised.</exception>
            <exception cref="T:System.ArgumentException">The URI contains invalid characters</exception>
            <exception cref="T:System.ArgumentNullException">the URI is null</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.PathTooLongException">The URI path is long</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.DirectoryNotFoundException">The path is invalid</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.IOException">An I/O error occurred while opening the file</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permissions</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file was not found</exception>
            <exception cref="T:System.NotSupportedException">The URI is in an invalid format</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Load(Crestron.SimplSharp.CrestronXml.XmlReader)">
            <summary>
            Loads the XML document from the specified XmlReader.
            </summary>
            <param name="reader">The XmlReader used to feed the XML data into the document.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">There is a load or parse error in the XML.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.LoadXml(System.String)">
            <summary>
            Loads the XML document from the specified string.
            </summary>
            <param name="xml">String containing the XML document to load.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">There is a load or parse error in the XML.</exception>
            <exception cref="T:System.NotSupportedException">There was an error parsing the XML.</exception>
            <remarks>By default the LoadXml method does not preserve white space or significant white space.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.ReadNode(Crestron.SimplSharp.CrestronXml.XmlReader)">
            <summary>
            Creates an XmlNode based on the information in the XmlReader, 
            the reader must be positioned on a node or attribute
            </summary>
            <param name="reader">The XML source</param>
            <returns>The new XmlNode or null if no more nodes exist</returns>
            <exception cref="T:System.NullReferenceException">The reader is positioned on a node type that does not 
            translate to a valid DOM node, ex. EndElement or EndEntity</exception>
            <remarks>Reads an XmlNode from the reader and advances the position to the next node</remarks>
            <remarks>If the reader is in the initial state ReadNode advances the reader to the first node and 
            operates on that node</remarks>
            <remarks>If the reader is positioned on an attribute this method does not move to the next attribute</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves the XML document to the specified stream.
            </summary>
            <param name="outStream">The stream to which you want to save.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">The operation would not result in a well formed XML document 
            (for example, no document element or duplicate XML declarations).</exception>
            <remarks>White space is preserved only if PreserveWhitespace is set to true.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Save(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the XML document to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">The operation would not result in a well formed XML document 
            (for example, no document element or duplicate XML declarations).</exception>
            <remarks>White space is preserved only if PreserveWhitespace is set to true.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Save(System.String)">
            <summary>
            Saves the XML document to the specified file.
            </summary>
            <param name="filename">The path to the file where you want to save the document.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">The operation would not result in a well formed XML document 
            (for example, no document element or duplicate XML declarations).</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Invalid directory location passed.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">The file was not found</exception>
            <remarks>White space is preserved only if PreserveWhitespace is set to true.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.Save(Crestron.SimplSharp.CrestronIO.TextWriter)">
            <summary>
            Saves the XML document to the specified TextWriter.
            </summary>
            <param name="writer">The TextWriter to which you want to save.</param>
            <exception cref="T:Crestron.SimplSharp.XmlException">The operation would not result in a well formed XML document 
            (for example, no document element or duplicate XML declarations).</exception>
            <remarks>The encoding of the XmlDeclaration node is replaced by the encoding of the TextWriter</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the XmlDocument node to the specified XmlWriter.
            </summary>
            <param name="xw">The XmlWriter to which you want to save.</param>
            <remarks>The XmlDeclaration.Encoding property determines the encoding that is written out. 
            If the Encoding property does not have a value, the XmlDocument is written out without an encoding attribute.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the XmlDocument node to the specified XmlWriter.
            </summary>
            <param name="w">The XmlWriter to which you want to save.</param>
            <remarks>The XmlDeclaration.Encoding property determines the encoding that is written out. 
            If the Encoding property does not have a value, the XmlDocument is written out without an encoding attribute.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.GetElementsByTagName(System.String)">
            <summary>
            Returns an XmlNodeList containing a list of all descendant elements that match the specified Name
            </summary>
            <param name="name">The qualified name to match. It is matched against the Name property of the matching node. The special value "*" matches all tags</param>
            <returns>A <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNodeList"/> containing a list of all matching nodes. If no nodes match name, the returned collection will be empty</returns>
            <remarks>The nodes are placed in the order in which they would be encountered in the document</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlDocument.GetElementsByTagName(System.String,System.String)">
            <summary>
            Returns an XmlNodeList containing a list of all descendant elements that match the specified LocalName and NamespaceURI
            </summary>
            <param name="localName">The LocalName to match. The special value "*" matches all tags</param>
            <param name="namespaceURI">NamespaceURI to match</param>
            <returns>A <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNodeList"/> containing a list of all matching nodes. If no nodes match the specified localName and namespaceURI, the returned collection will be empty</returns>
            <remarks>The nodes are placed in the order in which they would be encountered in the document tree</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.DocumentElement">
            <summary>
            Gets the root XmlElement for the document
            </summary>
            <remarks>A null is returned if no root exists</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.BaseURI">
            <summary>
            Gets the base URI of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.InnerXml">
            <summary>
            Gets or sets the markup representing the children of the current node.
            </summary>
            <exception cref="T:Crestron.SimplSharp.XmlException">The XML specified when setting this property is not well-formed.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.IsReadOnly">
            <summary>
            Gets a value indicating whether the current node is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.Name">
            <summary>
            Gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.LocalName">
            <summary>
            Gets the local name of the node.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.NameTable">
            <summary>
            Gets the XmlNameTable associated with this implementation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.OwnerDocument">
            <summary>
            Gets the XmlDocument to which the current node belongs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.ParentNode">
            <summary>
            Gets the parent node of this node (for nodes that can have parents).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.PreserveWhitespace">
            <summary>
            Gets or sets a value indicating whether to preserve white space in element content.
            </summary>
            <remarks>This property determines how white space is handled during the load and save process.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlDocument.Implementation">
            <summary>
            Gets the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlImplementation"/> object for the current document
            </summary>
            <remarks>XmlDocument objects created from the same <see cref="T:Crestron.SimplSharp.CrestronXml.XmlImplementation"/> share the same <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNameTable"/>. 
            This allows users to compare attribute and element names as objects rather than strings</remarks>
            <remarks>Although the XmlDocument objects share the same implementation, 
            to move nodes from one document to another you must use the ImportNode method.</remarks>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronXml.XmlDocument.NodeChanged">
            <summary>
            Occurs when the Value of a node belonging to this document has been changed
            </summary>
            <remarks>This event only applies to nodes that have a value</remarks>
            <remarks>All nodes created by this document, whether or not they have been inserted into the document, are included in this event</remarks>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronXml.XmlDocument.NodeChanging">
            <summary>
            Occurs when the Value of a node belonging to this document is about to be changed
            </summary>
            <remarks>This event allows the user to do extra checking and, if necessary, throw an exception 
            to stop the operation. If an exception is thrown the XmlDocument returns to its original state. 
            This event only applies to nodes that have a value</remarks>
            <remarks>All nodes created by this document, whether or not they have been inserted into the document, are included in this event</remarks>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronXml.XmlDocument.NodeInserted">
            <summary>
            Occurs when a node belonging to this document has been inserted into another node
            </summary>
            <remarks>All nodes created by this document, whether or not they have been inserted into the document, are included in this event</remarks>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronXml.XmlDocument.NodeInserting">
            <summary>
            Occurs when a node belonging to this document is about to be inserted into another node
            </summary>
            <remarks>This event allows the user to do extra checking and, if necessary, throw an exception 
            to stop the operation. If an exception is thrown the XmlDocument returns to its original state. 
            This event only applies to nodes that have a value</remarks>
            <remarks>All nodes created by this document, whether or not they have been inserted into the document, are included in this event</remarks>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronXml.XmlDocument.NodeRemoved">
            <summary>
            Occurs when a node belonging to this document has been removed from its parent
            </summary>
            <remarks>All nodes created by this document, whether or not they have been inserted into the document, are included in this event</remarks>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronXml.XmlDocument.NodeRemoving">
            <summary>
            Occurs when a node belonging to this document is about to be removed from the document
            </summary>
            <remarks>This event allows the user to do extra checking and, if necessary, throw an exception 
            to stop the operation. If an exception is thrown the XmlDocument returns to its original state. 
            This event only applies to nodes that have a value</remarks>
            <remarks>All nodes created by this document, whether or not they have been inserted into the document, are included in this event</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace">
            <summary>
            Represents white space between markup in a mixed content node or white space 
            within an xml:space= 'preserve' scope. This is also referred to as significant white space
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.#ctor(System.Xml.XmlSignificantWhitespace)">
            <summary>
            For internal use
            </summary>
            <param name="whitespace">The System.Xml.XmlSignificantWhitespace to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace"/> class
            </summary>
            <param name="strData">The white space characters of the node</param>
            <param name="doc">The <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDocument"/> object</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; 
            false to clone only the node itself. For significant white space nodes, 
            the cloned node always includes the data value, regardless of the parameter setting</param>
            <returns>The cloned node</returns>
            <remarks>The cloned node has no parent. ParentNode returns null</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter
            </summary>
            <param name="w">The XmlWriter to which you want to save</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter
            </summary>
            <param name="w">The XmlWriter to which you want to save</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.LocalName">
            <summary>
            Gets the local name of the node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.Name">
            <summary>
            Gets the qualified name of the node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.NodeType">
            <summary>
            Gets the type of the current node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.ParentNode">
            <summary>
            Gets the parent of the current node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlSignificantWhitespace.Value">
            <summary>
            Gets or sets the value of the node
            </summary>
            <exception cref="T:System.ArgumentException">Setting Value to invalid white space characters</exception>
            <remarks>When setting this property, valid white space characters must be specified. 
            White space can consist of one or more space characters, carriage returns, line feeds, or tabs</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlWhitespace">
            <summary>
            Represents white space in element content.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWhitespace.#ctor(System.Xml.XmlWhitespace)">
            <summary>
            For internal use
            </summary>
            <param name="whitespace">The System.Xml.XmlWhitespace to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWhitespace.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlWhitespace"/> class
            </summary>
            <param name="strData">The white space characters of the node</param>
            <param name="doc">The <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDocument"/> object</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWhitespace.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; 
            false to clone only the node itself. For white space nodes,
            the cloned node always includes the data value, regardless of the parameter setting.</param>
            <returns>The cloned node</returns>
            <remarks>The cloned node has no parent. ParentNode returns null</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWhitespace.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter
            </summary>
            <param name="w">The XmlWriter to which you want to save</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlWhitespace.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter
            </summary>
            <param name="w">The XmlWriter to which you want to save</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWhitespace.LocalName">
            <summary>
            Gets the local name of the node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWhitespace.Name">
            <summary>
            Gets the qualified name of the node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWhitespace.NodeType">
            <summary>
            Gets the type of the current node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWhitespace.ParentNode">
            <summary>
            Gets the parent of the current node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlWhitespace.Value">
            <summary>
            Gets or sets the value of the node
            </summary>
            <exception cref="T:System.ArgumentException">Setting Value to invalid white space characters</exception>
            <remarks>When setting this property, valid white space characters must be specified. 
            White space can consist of one or more space characters, carriage returns, line feeds, or tabs</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlText">
            <summary>
            Represents the text content of an element or attribute.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlText.#ctor(System.Xml.XmlText)">
            <summary>
            For internal use
            </summary>
            <param name="text">The System.Xml.XmlText to use</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlText.#ctor(System.String,Crestron.SimplSharp.CrestronXml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlText"/> class
            </summary>
            <param name="strData">The content of the node; see the Value property.</param>
            <param name="doc">The parent<see cref="T:Crestron.SimplSharp.CrestronXml.XmlDocument"/> document</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlText.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; 
            false to clone only the node itself.</param>
            <returns>The cloned node</returns>
            <remarks>
            CloneNode serves as a copy constructor for nodes. For text nodes, the cloned node always 
            includes the data value. To see how this method behaves with other node types, 
            see the CloneNode method in the XmlNode class.
            The cloned node has no parent. (ParentNode returns null)
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlText.WriteContentTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter
            </summary>
            <param name="w">The XmlWriter to which you want to save</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlText.WriteTo(Crestron.SimplSharp.CrestronXml.XmlWriter)">
            <summary>
            Saves the node to the specified XmlWriter
            </summary>
            <param name="w">The XmlWriter to which you want to save</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlText.LocalName">
            <summary>
            Gets the local name of the node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlText.Name">
            <summary>
            Gets the qualified name of the node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlText.NodeType">
            <summary>
            Gets the type of the current node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlText.ParentNode">
            <summary>
            Gets the parent of the current node
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlText.Value">
            <summary>
            Gets or sets the value of the node
            </summary>
            <remarks>The content of the text node.</remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs">
            <summary>
            Provides data for the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlDocument"/> node events
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs._nodeChangedEventArgs">
            <summary>
            For internal use
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNodeChangedEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="args">The System.Xml.XmlNodeChangedEventArgs to initialize with</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.#ctor(Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode,Crestron.SimplSharp.CrestronXml.XmlNode,System.String,System.String,Crestron.SimplSharp.CrestronXml.XmlNodeChangedAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs"/> class
            </summary>
            <param name="node">The <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNode"/> that generated the event</param>
            <param name="oldParent">The old parent of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNode"/> that generated the event</param>
            <param name="newParent">The new parent of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNode"/> that generated the event</param>
            <param name="oldValue">The old value of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNode"/> that generated the event</param>
            <param name="newValue">The new value of the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNode"/> that generated the event</param>
            <param name="action">The <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNodeChangedAction"/></param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.Action">
            <summary>
            Gets a value indicating what type of node change event is occurring
            </summary>
            <remarks>The Action value does not differentiate between when the event occurred (before or after). 
            You can create separate event handlers to handle both instances</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.NewParent">
            <summary>
            Gets the value of the ParentNode after the operation completes
            </summary>
            <value>The value of the ParentNode after the operation completes. 
            This property returns null if the node is being removed.</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.NewValue">
            <summary>
            Gets the new value of the node
            </summary>
            <value>The new value of the node. 
            This property returns null if the node is neither an attribute nor a text node, or if the node is being removed.
            If called in a NodeChanging event, NewValue returns the value of the node if the change is successful. 
            If called in a NodeChanged event, NewValue returns the current value of the node</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.Node">
            <summary>
            Gets the <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNode"/> that is being added, removed or changed
            </summary>
            <value>The <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNode"/> that is being added, removed or changed; 
            this property never returns null</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.OldParent">
            <summary>
            Gets the value of the ParentNode before the operation began
            </summary>
            <value>The value of the ParentNode before the operation began. 
            This property returns null if the node did not have a parent</value>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs.OldValue">
            <summary>
            Gets the original value of the node
            </summary>
            <value>The original value of the node. 
            This property returns null if the node is neither an attribute nor a text node, or if the node is being inserted.
            If called in a NodeChanging event, OldValue returns the current value of the node that will be replaced if the change is successful. 
            If called in a NodeChanged event, OldValue returns the value of node prior to the change</value>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventHandler">
            <summary>
            Represents the method that handles NodeChanged, NodeChanging, NodeInserted, NodeInserting, NodeRemoved and NodeRemoving events
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">An <see cref="T:Crestron.SimplSharp.CrestronXml.XmlNodeChangedEventArgs"/> containing the event data</param>
        </member>
        <member name="T:Crestron.SimplSharp.XmlException">
            <summary>
            Exception used when an Xml error occurs. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.XmlException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.XmlException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.XmlException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
            <param name="lineNumber">The line number indicating where the error occurred.</param>
            <param name="linePosition">The line position indicating where the error occurred.</param>
        </member>
        <member name="P:Crestron.SimplSharp.XmlException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.XmlException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage">
            <summary>
            Represents SSH_MSG_SERVICE_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage.#ctor(Crestron.SimplSharp.Ssh.Messages.ServiceName)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.ServiceRequestMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeGroup">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_GROUP message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeGroup.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SafePrime">
            <summary>
            Gets or sets the safe prime.
            </summary>
            <value>
            The safe prime.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SubGroup">
            <summary>
            Gets or sets the generator for subgroup in GF(p).
            </summary>
            <value>
            The sub group.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ObjectIdentifier">
            <summary>
            Describes object identifier for DER encoding
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ObjectIdentifier.#ctor(System.UInt64[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ObjectIdentifier"/> class.
            </summary>
            <param name="identifiers">The identifiers.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ObjectIdentifier.Identifiers">
            <summary>
            Gets the object identifier.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Extensions">
            <summary>
            Collection of different extension method
            </summary>
            <summary>
            Collection of different extension method specific for .NET 3.5
            </summary>
            <summary>
            Collection of different extension method specific for .NET 4.0
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.IsEqualTo``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Checks whether a collection is the same as another collection
            </summary>
            <param name="value">The current instance object</param>
            <param name="compareList">The collection to compare with</param>
            <param name="comparer">The comparer object to use to compare each item in the collection.  If null uses EqualityComparer(T).Default</param>
            <returns>True if the two collections contain all the same items in the same order</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.IsEqualTo``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Checks whether a collection is the same as another collection
            </summary>
            <param name="value">The current instance object</param>
            <param name="compareList">The collection to compare with</param>
            <returns>True if the two collections contain all the same items in the same order</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.DebugPrint(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Prints out 
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.TrimLeadingZero(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Trims the leading zero from bytes array.
            </summary>
            <param name="data">The data.</param>
            <returns>Data without leading zeros.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.CreateInstance``1(System.Type)">
            <summary>
            Creates an instance of the specified type using that type's default constructor.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <param name="type">Type of the instance to create.</param>
            <returns>A reference to the newly created object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.GetBytes(System.UInt16)">
            <summary>
            Returns the specified 16-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 2.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.GetBytes(System.UInt32)">
            <summary>
            Returns the specified 32-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 4.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.GetBytes(System.UInt64)">
            <summary>
            Returns the specified 64-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.GetBytes(System.Int64)">
            <summary>
            Returns the specified 64-bit signed integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.Dispose(System.Net.Sockets.Socket)">
            <summary>
            Disposes the specified socket.
            </summary>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.Dispose(System.Threading.WaitHandle)">
            <summary>
            Disposes the specified handle.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.Dispose(System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Disposes the specified algorithm.
            </summary>
            <param name="algorithm">The algorithm.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.Clear(System.Text.StringBuilder)">
            <summary>
                Clears the contents of the string builder.
            </summary>
            <param name="value">
                The <see cref="T:System.Text.StringBuilder"/> to clear.
            </param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Extensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Determines whether [is null or white space] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if [is null or white space] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.IListener">
            <summary>
            IListener is a generic network listener interface. The default implementation provides facilities for listening on a server socket.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.IListener.Listen">
            <summary>
            Start listening for incoming connections.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.IListener.ListeningSocket">
            <summary>
            Represents the socket which is listened for an incoming connection.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.IAsyncWorker">
            <summary>
            IAsyncWorker Interface
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.IAsyncWorker.Setup">
            <summary>
            Represents the method which disconnects an asynchronous client and tries to connect it again in the heritable class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.IAsyncWorker.DataConnection">
            <summary>
            Represents a connection property of the heritable class.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.IConnectionFactory">
            <summary>
            IConnectionFactory Interface.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.IConnectionFactory.CreateServerConnection(System.Net.Sockets.Socket)">
            <summary>
            Creates the connection to the server.
            </summary>
            <returns>A <see cref="T:System.Net.Sockets.Socket"/> object.</returns>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.IConnectionFactory.CreateClientConnection(Crestron.SimplSharp.Net.Binding)">
            <summary>
            Creates the connection to the client.
            </summary>
            <param name="aBinding">A <see cref="T:Crestron.SimplSharp.Net.Binding"/> object.</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SocketDefault">
            <summary>
            Enum for the default socket parameters
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketDefault.SOCKET_DEFAULT_BUFFER_SIZE">
            <summary>
            Default socket buffer size
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketDefault.SOCKET_DEFAULT_MAX_TCP_CLIENTS">
            <summary>
            Max number of TCP clients supported
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.ServerState">
            <summary>
            Enum for the TCP Server state
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.ServerState.SERVER_NOT_LISTENING">
            <summary>
            Server is not listening
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.ServerState.SERVER_LISTENING">
            <summary>
            Server listening for connections
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.ServerState.SERVER_CONNECTED">
            <summary>
            Server has active connections
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes">
            <summary>
            Enum for error codes returned by the socket functions
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_OK">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_INVALID_STATE">
            <summary>
            Client, Server or UDP not in initial state
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_NO_HOSTNAME_RESOLVE">
            <summary>
            Could not resolve specified hostname
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_INVALID_PORT_NUMBER">
            <summary>
            Port not in range of 0-65535.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_NOT_CONNECTED">
            <summary>
            Unable to establish a connection
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_BUFFER_NOT_ALLOCATED">
            <summary>
            Unable to allocate socket buffer
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_ADDRESS_NOT_SPECIFIED">
            <summary>
            Address not specified
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_OUT_OF_MEMORY">
            <summary>
            Out of memory
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_CONNECTION_IN_PROGRESS">
            <summary>
            Socket connection in progress
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_UDP_SERVER_RECEIVE_ONLY">
            <summary>
            UDP Server is receive only - cannot send to it
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_NOT_ALLOWED_IN_SECURE_MODE">
            <summary>
            Indicates that the sockets are not allowed in the secure mode
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_SPECIFIED_PORT_ALREADY_IN_USE">
            <summary>
            Indicates that the specified port is already in use. This is for a TCP Server Only
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_INVALID_CLIENT_INDEX">
            <summary>
            Indicates that the client (socket) index is invalid
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_MAX_CONNECTIONS_REACHED">
            <summary>
            Indicates that the client connections reached the MAX
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_INVALID_ADDRESS_ADAPTER_BINDING">
            <summary>
            Indicates that the address specified and the EthernetAdapterToBindTo do not match
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketErrorCodes.SOCKET_OPERATION_PENDING">
            <summary>
            Indicates that a socket operation is pending
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SocketStatus">
            <summary>
            Enum for the socket status
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_NO_CONNECT">
            <summary>
            Not Connected
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_WAITING">
            <summary>
            Waiting for Connection
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_CONNECTED">
            <summary>
            Connected
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_CONNECT_FAILED">
            <summary>
            Connection Failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_BROKEN_REMOTELY">
            <summary>
            Connection Broken Remotely
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_BROKEN_LOCALLY">
            <summary>
            Connection Broken Locally
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_DNS_LOOKUP">
            <summary>
            Performing DNS Lookup
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_DNS_FAILED">
            <summary>
            DNS Lookup Failed
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_DNS_RESOLVED">
            <summary>
            DNS Name Resolved
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_LINK_LOST">
            <summary>
            Link lost
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SocketStatus.SOCKET_STATUS_SOCKET_NOT_EXIST">
            <summary>
            Invalid (Client) Socket Index/Socket does not exist
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.eSplusSocketType">
            <summary>
            Enum for the different socket types
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.eSplusSocketType.e_SOCKET_TYPE_CLIENT">
            <summary>
            TCP Client
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.eSplusSocketType.e_SOCKET_TYPE_SERVER">
            <summary>
            TCP Server
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.eSplusSocketType.e_SOCKET_TYPE_UDP">
            <summary>
            UDP Server
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClientSendCallback">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesSent"> Number of bytes actually sent.0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClientSendCallback">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesSent"> Number of bytes actually sent.0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClientSendCallbackEx">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesSent"> Number of bytes actually sent.0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClientSendCallbackEx">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesSent"> Number of bytes actually sent.0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClientReceiveCallback">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClientReceiveCallback">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClientReceiveCallbackEx">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClientReceiveCallbackEx">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myTCPClient"> TCP client </param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClientConnectCallback">
            <summary>
            Callback which is invoked whenever a TCP client gets connected to the server
            </summary>
            <param name="myTCPClient"> TCP client</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClientConnectCallback">
            <summary>
            Callback which is invoked whenever a TCP client gets connected to the server
            </summary>
            <param name="myTCPClient"> TCP client</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClientConnectCallbackEx">
            <summary>
            Callback which is invoked whenever a TCP client gets connected to the server
            </summary>
            <param name="myTCPClient"> TCP client</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClientConnectCallbackEx">
            <summary>
            Callback which is invoked whenever a TCP client gets connected to the server
            </summary>
            <param name="myTCPClient"> TCP client</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClientSocketStatusChangeEventHandler">
            <summary>
            Delegate which is invoked whenever the TCP client connection status changes
            </summary>
            <param name="myTCPClient">TCP Client</param>
            <param name="clientSocketStatus"> Status of the TCP Client</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClientSocketStatusChangeEventHandler">
            <summary>
            Delegate which is invoked whenever the TCP client connection status changes
            </summary>
            <param name="myTCPClient">TCP Client</param>
            <param name="clientSocketStatus"> Status of the TCP Client</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServerSocketStatusChangeEventHandler">
            <summary>
            Delegate which is invoked whenever the TCP server connection status changes.
            </summary>
            <param name="myTCPServer">TCP server</param>
            <param name="clientIndex">Client Index</param>
            <param name="serverSocketStatus"> Status of the TCP server socket</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServerSocketStatusChangeEventHandler">
            <summary>
            Delegate which is invoked whenever the Secure TCP server connection status changes.
            </summary>
            <param name="mySecureTCPServer">Secure TCP server</param>
            <param name="clientIndex">Client Index</param>
            <param name="serverSocketStatus"> Status of the Secure TCP server socket</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServerSendCallback">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myTCPServer"> TCP server </param>
            <param name="clientIndex"> Client Index</param>
            <param name="numberOfBytesSent"> Number of bytes actually sent.0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallback">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="mySecureTCPServer">Secure TCP server </param>
            <param name="clientIndex">Client Index</param>
            <param name="numberOfBytesSent">Number of bytes actually sent. 0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServerSendCallbackEx">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myTCPServer"> TCP server </param>
            <param name="clientIndex"> Client Index</param>
            <param name="numberOfBytesSent"> Number of bytes actually sent.0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallbackEx">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="mySecureTCPServer"> Secure TCP server </param>
            <param name="clientIndex"> Client Index</param>
            <param name="numberOfBytesSent"> Number of bytes actually sent. 0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallback">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myTCPServer"> TCP server </param>
            <param name="clientIndex"> Client Index</param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallback">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="mySecureTCPServer"> Secure TCP server </param>
            <param name="clientIndex"> Client Index</param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallbackEx">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myTCPServer"> TCP server </param>
            <param name="clientIndex"> Client Index</param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallbackEx">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="mySecureTCPServer"> Secure TCP server </param>
            <param name="clientIndex"> Client Index</param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates that the socket got closed.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback">
            <summary>
            Callback which is invoked whenever a client gets connected
            </summary>
            <param name="myTCPServer"> TCP Server</param>
            <param name="clientIndex"> A unique Index which is associated with the specific client which got connected. 0 indicates error</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback">
            <summary>
            Callback which is invoked whenever a client gets connected
            </summary>
            <param name="mySecureTCPServer"> Secure TCP Server</param>
            <param name="clientIndex"> A unique Index which is associated with the specific client which got connected. 0 indicates error</param> 
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallbackEx">
            <summary>
            Callback which is invoked whenever a client gets connected
            </summary>
            <param name="myTCPServer"> TCP Server</param>
            <param name="clientIndex"> A unique Index which is associated with the specific client which got connected. 0 indicates error</param>
            <param name="userSpecifiedObject"> User Specified Object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallbackEx">
            <summary>
            Callback which is invoked whenever a client gets connected
            </summary>
            <param name="mySecureTCPServer"> Secure TCP Server</param>
            <param name="clientIndex"> A unique Index which is associated with the specific client which got connected. 0 indicates error</param>
            <param name="userSpecifiedObject"> User Specified Object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.UDPServerSendCallback">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myUDPServer">UDP Server</param>
            <param name="numberOfBytesSent">Number of bytes actually received. 0 or Negative count indicates an error.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.UDPServerSendCallbackEx">
            <summary>
            Callback for the asynchronous Send function
            </summary>
            <param name="myUDPServer">UDP Server</param>
            <param name="numberOfBytesSent">Number of bytes actually received. 0 or Negative count indicates an error.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.UDPServerReceiveCallback">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myUDPServer"> UDP Server</param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates an error.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.UDPServerReceiveCallbackEx">
            <summary>
            Callback for the asynchronous receive function
            </summary>
            <param name="myUDPServer"> UDP Server</param>
            <param name="numberOfBytesReceived"> Number of bytes actually received. 0 or Negative count indicates an error.</param>
            <param name=" userSpecifiedObject"> User specified object</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.EthernetAdapterFiguringOutClass">
            <summary>
            Internal class to figure out which side of the interface do we lie upon
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.EthernetAdapterFiguringOutClass.GetExternalOrUsbAdapterBasedOnAddress(System.String,System.String@)">
            <summary>
            Function to grab the external Adapter based on the address
            </summary>
            <param name="addressToCheck">IP Address to match</param>
            <param name="localEndpointAddress"> Returns local address of adapter</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.EthernetAdapterFiguringOutClass.GetInternalAdapterBasedOnAddress(System.String,System.String@)">
            <summary>
            Function to grab the internal Adapter based on the address
            </summary>
            <param name="addressToCheck">IP Address to match</param>
            <param name="localAddressOfEndpoint"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.EthernetAdapterFiguringOutClass.IsAddressOnSpecifiedNetwork(System.Net.IPAddress,System.UInt32,System.UInt32)">
            <summary>
            IsAddressOnSameNetwork - Checks to see if the source of the incoming packet is on the same 
            subnet
            </summary>
            <param name="remoteEndpointAddress"></param>
            <param name="specificIPAddress"></param>
            <param name="specificSubnetMask"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.EthernetAdapterFiguringOutClass.CheckIfIPNotBlocked(System.Net.IPEndPoint)">
            <summary>
            Check if the IP is blocked. If it is, then we return false here. If it isn't blocked, then we return true.
            </summary>
            <param name="remoteEndPoint"></param>
            <returns>true, if IP is fine. False, if the IP is blocked</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.EthernetAdapterFiguringOutClass.AreWeOnTheRightEthernetAdapter(System.Net.IPEndPoint,System.String,Crestron.SimplSharp.EthernetAdapterType,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Check if we are receving an connection on the right ethernet adapter, if we are, everything is fine, and we can continue the connection
            This function is used for all server instances that are listening for connections. Depending on how they are configured, and what types of adapters are plugged in and licenced, the server will either accept or reject the connection
            </summary>
            <param name="remoteEndPoint"></param>
            <param name="addressToConnectTo"></param>
            <param name="m_eEthernetAdapterToBindToEnum"></param>
            <param name="m_ulSpecificIPAddress"></param>
            <param name="m_ulSpecificSubnetMask"></param>
            <param name="CheckOnlySpecificSide"></param>
            <returns>true, if we are on the right ethernet adapter; false if we aren't</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.EthernetAdapterFiguringOutClass.CheckForAddressBlocking(System.Net.IPEndPoint)">
            <summary>
            Check to see if the specific IP address was blocked.
            </summary>
            <param name="remoteEndPoint"> Remote endpoint</param>
            <returns>true if the IP is blocked. False otherwise</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.AsyncCallbackObject`1">
            <summary>
            Async callback Object class
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServer">
            <summary>
            Multiple client TCP Server class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor for the TCP Server
            </summary>
            <param name="portNumber">Server TCP Port.</param>
            <param name="numberOfConnections">Number of client connections supported.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for the TCP server.
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="addressToAcceptConnectionFrom">Client's IP Address or '0.0.0.0' for any client.</param>
            <param name="portNumber">TCP Port.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32)">
            <summary>
            Constructor for the TCP server
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="endPointForClient">IP end point for client.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(System.String,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the TCP server
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="addressToAcceptConnectionFrom">Client's IP Address or '0.0.0.0' for any client.</param>
            <param name="portNumber">TCP Port.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo">Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the TCP server
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="endPointForClient">IP end point for client.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(System.String,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType,System.Int32)">
            <summary>
            Constructor for the TCP server
            </summary>
            <param name="addressToAcceptConnectionFrom">Client's IP Address or '0.0.0.0' for any client.</param>
            <param name="portNumber">TCP Port.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
            <param name="numberOfConnections">Number of client connections supported.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32,Crestron.SimplSharp.EthernetAdapterType,System.Int32)">
            <summary>
            Constructor for the TCP server
            </summary>
            <param name="endPointForClient">IP end point for client.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo">Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
            <param name="numberOfConnections">Number of client connections supported.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor(System.Int32)">
            <summary>
            Constructor for the TCP Server
            Allocates buffer of default size
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="portNumber">Server TCP Port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.#ctor">
            <summary>
            Default constructor for the TCP Server 
            Initializes the port number to be a invalid value.
            Allocates buffer of default size
            Sets the maximum number of clients supported to be 1
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call and will block until a connection is made or an
            error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <returns>SocketErrorCode indicating success or an error</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection(System.UInt32@)">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call and will block until a connection is made or an
            error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <returns>SocketErrorCode indicating success or an error</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectionAsync(Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectionAsync(Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallbackEx,System.Object)">
            <summary>
            Function to accept an incoming connection on the server. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <param name="userSpecifiedObject"> User specified callback object passed to the callback </param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection(System.String)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection(System.String,System.UInt32@)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientIndex"> Client Index</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection(Crestron.SimplSharp.IPAddress)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection(Crestron.SimplSharp.IPAddress,System.UInt32@)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientIndex"> Client Index</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectFunctionCallback(System.IAsyncResult)">
            <summary>
            Callback for the wait For connect function
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectionsAlways(Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback)">
            <summary>
            Function that accepts all incoming connections and triggers the given callback per connection that is accepted.
            This will stop running once the Max socket number is reached.
            </summary>
            <param name="clientConnectedCallbackHandler">Customer callback function</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectionAsync(System.String,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectionAsync(Crestron.SimplSharp.IPAddress,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectionAsync(System.String,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallbackEx,System.Object)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <param name="userSpecifiedObject"> User specified callback object passed to the callback</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnectionAsync(Crestron.SimplSharp.IPAddress,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallbackEx,System.Object)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <param name="userSpecifiedObject"> User specified callback object passed to the callback</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.doPostConnectErrorChecking(System.Net.IPEndPoint,System.String,System.Net.Sockets.Socket,System.Boolean,System.UInt32,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback,System.UInt32@)">
            <summary>
            Function to do basic postConnectErrorChecking
            </summary>
            <param name="remoteEndPoint"></param>
            <param name="addressToConnectTo"></param>
            <param name="socketConnectedToServer"></param>
            <param name="portOnWanSide"></param>
            <param name="clientSocketKey"></param>
            <param name="clientConnectedCallbackHandler"></param>
            <param name="clientIndexForParticularServer"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.doPreConnectErrorChecking(System.String,System.Boolean@,System.String@)">
            <summary>
            
            </summary>
            <param name="addressToAcceptConnectionFrom"></param>
            <param name="portOnWanSide"></param>
            <param name="addressToConnectTo"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.MakeConnection(System.String,System.UInt32@,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback)">
            <summary>
            Private function to accept an incoming connection on the server. This is a blocking call. This invokes the callback once a connection gets established
            The callback needs to exit or else this function will not return. 
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientIndexForSocket">Client Index for the connected socket.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection(System.String,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call. This invokes the callback once a connection gets established
            The callback needs to exit or else this function will not return. 
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.WaitForConnection(Crestron.SimplSharp.IPAddress,Crestron.SimplSharp.CrestronSockets.TCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call. This invokes the callback once a connection gets established
            The callback needs to exit or else this function will not return. 
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.UpdateDSMemoryRegion(System.UInt32,System.String,Crestron.SimplSharp.CrestronSockets.SocketStatus,System.DateTime,Crestron.Infrastructure.EthernetCommandUtilityNativeInterface.ETHERNET_ADAPTERS)">
            <summary>
            Update the socket info also
            </summary>
            <param name="clientIndex"></param>
            <param name="address"></param>
            <param name="currentValue"></param>
            <param name="socketConnectTime"></param>
            <param name="adapter"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.GetAddressServerAcceptedConnectionFromForSpecificClient(System.UInt32)">
            <summary>
            Address of the client which got connected to the server at the specified index 
            </summary>
            <param name="clientIndex"> Unique Client Index</param>
            <returns>string or null</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.GetLocalAddressServerAcceptedConnectionFromForSpecificClient(System.UInt32)">
            <summary>
            Local Address of server that got connected to the client at the specified index
            </summary>
            <param name="clientIndex">Unique Client Index</param>
            <returns>string or null</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.GetPortNumberServerAcceptedConnectionFromForSpecificClient(System.UInt32)">
            <summary>
            Source Port number of client which got connected to the server at the specified index 
            </summary>
            <param name="clientIndex"> Unique Client Index</param>
            <returns>port number or zero</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.GetIncomingDataBufferForSpecificClient(System.UInt32)">
            <summary>
            Incoming data buffer for the client at the specified index
            </summary>
            <param name="clientIndex"> Unique client Index</param>
            <returns>byte array or null</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.GetServerSocketStatusForSpecificClient(System.UInt32)">
            <summary>
            Function to get the socket status for the client at the specified index
            </summary>
            <param name="clientIndex"> Unique client Index</param>
            <returns> Socket status ...</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendData(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Function to send data to a client at the specified index
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendData(System.UInt32,System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Function to send data to a client at the specified index
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="timeout">Timeout duration in milliseconds for testing whether sending is possible prior to writing the data.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendData(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Function to send data to a client at the specified index
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendData(System.Byte[],System.Int32)">
            <summary>
            Function to send data to a client
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallbackEx">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallbackEx">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsyncCallback(System.IAsyncResult)">
            <summary>
            Callback for the async send
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.TCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallbackEx">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.Disconnect">
            <summary>
            Function to disconnect the client from the server
            This assumes a single client is connected to the server and will close that client
            </summary>
            <returns>SocketErrorCodes indicating a failure or a success</returns>
            <remarks> The TCP Server handles disconnecting of the client automatically in cases where there is an error.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.Disconnect(System.UInt32)">
            <summary>
            Function to disconnect a specific client at the specified index
            </summary>
            <param name="clientIndex"> Unique client Index</param>
            <returns>SocketErrorCodes indicating a failure or a success</returns>
            <remarks> The TCP Server handles disconnecting of the client automatically in cases where there is an error.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.DisconnectAll">
            <summary>
            Function to disconnect all the sockets and to stop the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.Pending">
            <summary>
            Determines if there are pending connection requests.
            </summary>
            <returns>true if connections are pending; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException"> The server has not been started using "WaitForConnection" or "WaitForConnectionAsync".</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.Stop">
            <summary>
            Function to stop the TCP server, but leave the existing connections in place
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveData(System.UInt32,System.Int32)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="offset"> Offset into the packet to start receive</param>
            <returns>Number of bytes received.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveData(System.UInt32)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <returns>Number of bytes received.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallback)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This assumes a single client is connected to the server and reads data from that client.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This assumes a single client is connected to the server and reads data from that client.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveDataAsyncCallback(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="iar"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallback,System.Int32)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset into the packet to start receive</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallback)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallbackEx,System.Int32,System.Object)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset into the packet to start receive</param>
            <param name="userSpecifiedCallbackObject"> User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.TCPServerReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallbackEx"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="userSpecifiedCallbackObject"> User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.GetIfDataAvailableForSpecificClient(System.UInt32)">
            <summary>
            Function to return whether data is available to be read from the client at the specified index              
            </summary>
            <param name="clientIndex">Client Index</param>
            <returns> True if there is data available or false</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ReceiveData">
            <summary>
            Function to read data from the client
            This assumes a single client is connected to the server and reads data from that client.
            This function will clear out the buffer before reading in new data.
            </summary>
            <returns>Number of bytes received.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ClientConnected(System.UInt32)">
            <summary>
            Function to check if a client at the specified index is connected or not
            </summary>
            <param name="clientIndex"> Client Index</param>
            <returns>true or false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.HandleLinkUp">
            <summary>
            Handle link up on a TCP Server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.HandleLinkLoss">
            <summary>
            Handle link loss on a TCP Server
            Closes the socket and sets the status to be SOCKET_STATUS_LINK_LOST
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.AddressToAcceptConnectionFrom">
            <summary>
            Address to accept connection from (the server's address)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.State">
            <summary>
            Indicates the state of the server
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.SocketSendOrReceiveTimeOutInMs">
            <summary>
            Timeout period in milli second for socket send or receive
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.PortNumber">
            <summary>
            Port Number for the server port
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.MaxNumberOfClientSupported">
            <summary>
            Max number of clients supported
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.NumberOfClientsConnected">
            <summary>
            Indicates number of clients connected at the current time.
            This will return -1 if we are unable to get the count.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.Nagle">
            <summary>
            Gets or Sets the current state of the Nagle Algorithm for the server socket.
            Enabling Nagle will delay when send or receive buffers are not full.
            Note: Nagle is not enabled by default.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.TCPServer.m_iSocketStatusChange">
            <summary>
            Socket status change event that is fired when the status changes
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.TCPServer.SocketStatusChange">
            <summary>
            Event triggered when the status of the socket changes
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.EthernetAdapterToBindTo">
            <summary>
            Indicates if the user wants to bind to a specific adapter
            This is valid on systems which support multiple adapters. 
            Ignored on systems which do not support multiple adapters.
            Only valid if the address of the TCP server is defined as 0.0.0.0 - Ignored otherwise
            Set to EthernetAdapterType.EthernetUnknownAdapter if no specific binding is required.
            On units which just have a single adapter - we can accept a connection from anywhere
                 - In this case this setting is ignored
            On units which have multiple adapters 
                 - If the user specified EthernetCSAdapter then accept connection from Control Subnet side only
                 - If the user specified EthernetLAN2Adapter then accept connection from LAN2 side only
                 - If the user specified EthernetLANAdapter, then accept connections from anywhere but from the Control subnet side and LAN2            
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.LocalAddressServerAcceptedConnectionFrom">
            <summary>
            Local Address of server that accepted a connection.
            This assumes a single client is connected to the server and returns the local address of that server connection.
            If no client is connected - it returns String.Empty.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.AddressServerAcceptedConnectionFrom">
            <summary>
            Address of the client which got connected to the server.
            This assumes a single client is connected to the server and returns the address of that client.
            If no client is connected - it returns String.Empty
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.PortNumberServerAcceptedConnectionFrom">
            <summary>
            Source Port number of the client which got connected to the server.
            This assumes a single client is connected to the server and returns the source port number of that client.
            If no client is connected - it returns 0.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.IncomingDataBuffer">
            <summary>
            Incoming data buffer for the client connected to the server
            This assumes a single connection to the TCP Server
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.ServerSocketStatus">
            <summary>
            Function to get a socket status 
            This assumes a single client is connected to the server and returns the address of that client
            </summary>
            <returns> Socket status ...</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPServer.DataAvailable">
            <summary>
            Indicates whether data is available on the client to be read.
            This assumes a single client is connected to the server and returns true if there is data which can be read from that specific client.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPServer.ActiveSocket">
            <summary>
            private class for the active socket 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPServer.ActiveSocket.SocketTimerFunction(System.Object)">
            <summary>
            Socket timer timeout function
            </summary>
            <param name="currentSocket"> current active socket</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTcpListener2">
            <summary>
            Listens for secure connections from TCP network clients.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTcpListener2.#ctor(System.Net.IPAddress,System.Int32,Crestron.CrestronSecureSockets.SecurityOptions)">
            <summary>
            Initializes a new instance of the SecureTcpListener class that listens to the specified IP address and port.
            </summary>
            <param name="localaddr">The local IP address.</param>
            <param name="port">The port on which to listen.</param>
            <param name="options">The security options to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="localaddr"/> is a null reference (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not between MinPort and MaxPort.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTcpListener2.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Initializes a new instance of the SecureTcpListener class that listens to the specified IP address and port.
            </summary>
            <param name="localaddr">The local IP address.</param>
            <param name="port">The port on which to listen.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="localaddr"/> is a null reference (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not between MinPort and MaxPort.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTcpListener2.SecurityOptions">
            <summary>
            Gets the security options that are used for incoming connections.
            </summary>
            <value>A <see cref="P:Crestron.SimplSharp.CrestronSockets.SecureTcpListener2.SecurityOptions"/> instance.</value>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServer">
            <summary>
            Multiple client Secure TCP Server class
            <remarks>SecureTCPServer requires firmware version 1.500.0005 or above</remarks>
            <remarks>If no user certificate is provided, the SecureTCPServer will use the SSL state of the control system to determine which certificate to use. i.e. SSL Self will use the self signed certificate of the control system. SSL must be enabled on the controller.
            </remarks>
            <example>
            This code snippet shows how one might instantiate and use a SecureTCPServer object
            <code>
            using System;
            using System.Text;                                       // for ASCIIEncoding      
            using Crestron.SimplSharp;                               // for CrestronConsole
            using Crestron.SimplSharp.CrestronSockets;               
            
            /* ...Startup code for a SecureTCPServer... */
            
            int port = 8000;
            int bufsize = 100;
            int max_connections = 10;
            
            SecureTCPServer server = new SecureTCPServer(port, bufsize, EthernetAdapterType.EthernetUnknownAdapter, max_connections);
            server.SocketStatusChange += new SecureTCPServerSocketStatusChangeEventHandler(ServerSocketStatusChanged);
            
            // ServerConnectedCallback will get invoked once a client either  
            // connects successfully or if the connection encounters an error
            SocketErrorCodes err = server.WaitForConnectionAsync(ServerConnectedCallback);
            CrestronConsole.PrintLine("WaitForConnectionAsync returned: " + err);
            
            /* ...Callback methods... */
            
            public void ServerSocketStatusChanged(SecureTCPServer server, uint clientIndex, SocketStatus status)
            {
            	// A single SecureTCPServer may be handling many different sockets (up to server.MaxNumberOfClientSupported) at once. 
            	// This event handler is called whenever the status of any one of these sockets changes. clientIndex
            	// uniquely identifies which socket has received a new status.
            
            	if (status == SocketStatus.SOCKET_STATUS_CONNECTED)
            	{
            		CrestronConsole.PrintLine("ServerSocketStatusChanged: Client " + clientIndex + " connected.");
            	}
            	else
            	{
            		CrestronConsole.PrintLine("ServerSocketStatusChange for client " + clientIndex + ": " + status + ".");
            	}
            }
            
            public void ServerConnectedCallback(SecureTCPServer server, uint clientIndex)
            {
            	if (clientIndex != 0)
            	{
            		CrestronConsole.PrintLine("Server listening on port " + server.PortNumber + " has connected with a client (client #"+ clientIndex + ")");
            		server.ReceiveDataAsync(clientIndex, ServerDataReceivedCallback);
            		if (server.MaxNumberOfClientSupported == server.NumberOfClientsConnected)
            		{
            			CrestronConsole.PrintLine("Client limit reached.");
            			// This call to Stop() causes the server.State flag, SERVER_NOT_LISTENING, to be set
            			server.Stop();
            			CrestronConsole.PrintLine("After calling server.Stop(), the server state is: " + server.State);
            		}
            		// If the client limit is reached, WaitForConnectionAsync will return SOCKET_MAX_CONNECTIONS_REACHED
            		// and the ServerConnectedCallback will not be registered. Otherwise, the call to WaitForConnectionAsync
            		// causes the server to keep listening for more clients.
            		SocketErrorCodes err = server.WaitForConnectionAsync(ServerConnectedCallback);
            		CrestronConsole.PrintLine("WaitForConnectionAsync returned: " + err); 
            	}
            	// A clientIndex of 0 could mean that the server is no longer listening, or that the TLS handshake failed when a client tried to connect.
            	// In the case of a TLS handshake failure, wait for another connection so that other clients can still connect
            	else
            	{
            		CrestronConsole.Print("Error in ServerConnectedCallback: ");
            		if ((server.State &amp; ServerState.SERVER_NOT_LISTENING) &gt; 0)
            		{
            			CrestronConsole.PrintLine("Server is no longer listening.");
            		}
            		else
            		{
            			CrestronConsole.PrintLine("Unable to make connection with client.");
            			// This connection failed, but keep waiting for another
            			server.WaitForConnectionAsync(ServerConnectedCallback);
            		}
            	}
            }
            
            public void ServerDataReceivedCallback(SecureTCPServer server, uint clientIndex, int bytesReceived)
            {
            	if (bytesReceived &lt;= 0) {
            		CrestronConsole.PrintLine("ServerDataReceivedCallback error: server's connection with client " + clientIndex + " has been closed.");
            		server.Disconnect(clientIndex);
            		// A connection has closed, so another client may connect if the server stopped listening 
            		// due to the maximum number of clients connecting
            		if ((server.State &amp; ServerState.SERVER_NOT_LISTENING) &gt; 0)
            			server.WaitForConnectionAsync(ServerConnectedCallback);     
            	}
            	else {
            		CrestronConsole.PrintLine("\n------ incoming message -----------");
            		byte[] recvd_bytes = new byte[bytesReceived];
            
            		// Copy the received bytes into a local buffer so that they can be echoed back.
            		// Do not pass the reference to the incoming data buffer itself to the SendDataAsync method
            		Array.Copy(server.GetIncomingDataBufferForSpecificClient(clientIndex), recvd_bytes, bytesReceived);
            
            		// The server in this example expects ASCII text from the client, but any other encoding is possible
            		string recvd_msg = ASCIIEncoding.ASCII.GetString(recvd_bytes, 0, bytesReceived);
            		CrestronConsole.PrintLine("Client " + clientIndex + " says: " + recvd_msg + "\r\nEchoing back to client " + clientIndex + "...");
            		
            		// echo the received message back to the client who sent it
            		server.SendDataAsync(clientIndex, recvd_bytes, recvd_bytes.Length, ServerDataSentCallback);
            
            		// Begin waiting for another message from that same client
            		server.ReceiveDataAsync(clientIndex, ServerDataReceivedCallback);
            
            		CrestronConsole.PrintLine("---------- end of message ----------");
            	}
            }
            
            public void ServerDataSentCallback(SecureTCPServer server, uint clientIndex, int bytesSent)
            {
            	if (bytesSent &lt;= 0)
            	{
            		CrestronConsole.PrintLine("Error sending message. Connection has been closed");
            	}
            	else
            	{
            		CrestronConsole.PrintLine("Echoed message to client " + clientIndex + " (" + bytesSent + " byte(s))");
            	}
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor for the TCP Server
            </summary>
            <param name="portNumber">Server TCP Port.</param>
            <param name="numberOfConnections">Number of client connections supported.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for the Secure TCP server.
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="addressToAcceptConnectionFrom">Client's IP Address or '0.0.0.0' for any client.</param>
            <param name="portNumber">TCP Port.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32)">
            <summary>
            Constructor for the TCP server
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="endPointForClient">IP end point for client.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(System.String,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the TCP server
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="addressToAcceptConnectionFrom">Client's IP Address or '0.0.0.0' for any client.</param>
            <param name="portNumber">TCP Port.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo">Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the TCP server
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="endPointForClient">IP end point for client.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType,System.Int32)">
            <summary>
            Constructor for the TCP server
            </summary>
            <param name="portNumber">TCP Port.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
            <param name="numberOfConnections">Number of client connections supported.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(System.String,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType,System.Int32)">
            <summary>
            Constructor for the TCP server
            </summary>
            <param name="addressToAcceptConnectionFrom">Client's IP Address or '0.0.0.0' for any client.</param>
            <param name="portNumber">TCP Port.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
            <param name="numberOfConnections">Number of client connections supported.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32,Crestron.SimplSharp.EthernetAdapterType,System.Int32)">
            <summary>
            Constructor for the TCP server
            </summary>
            <param name="endPointForClient">IP end point for client.</param>
            <param name="bufferSize">Size of internal buffer to store received data.</param>
            <param name="ethernetAdapterToBindTo">Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Only valid if address is 0.0.0.0 and we have multiple adapters.
            Set to EthernetUnknownAdapter if no specific binding is required.</param>
            <param name="numberOfConnections">Number of client connections supported.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor(System.Int32)">
            <summary>
            Constructor for the TCP Server
            Allocates buffer of default size
            Sets the maximum number of clients supported to be 1
            </summary>
            <param name="portNumber">Server TCP Port.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.#ctor">
            <summary>
            Default constructor for the TCP Server 
            Initializes the port number to be a invalid value.
            Allocates buffer of default size
            Sets the maximum number of clients supported to be 1
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SetServerCertificate(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Sets Server Security Certificate associated with this object.
            </summary>
            <param name="cert">The client x509 certificate object in binary (DER) format</param>
            <remarks>
            <see cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate"/> object does not contain the corresponding private key so that it must be provided using a SetServerPrivateKey method.
            This method requires firmware version 1.500.0007 or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SetServerPrivateKey(System.Byte[])">
            <summary>
            Sets the Private Key corresponding to the Server Certificate
            </summary>
            <param name="key">The private key in binary (DER) format</param>
            <remarks>
            This method requires firmware version 1.500.0007 or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call and will block until a connection is made or an
            error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <returns>SocketErrorCode indicating success or an error</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection(System.UInt32@)">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call and will block until a connection is made or an
            error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <returns>SocketErrorCode indicating success or an error</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectionAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectionAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallbackEx,System.Object)">
            <summary>
            Function to accept an incoming connection on the server. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <param name="userSpecifiedObject"> User specified callback object passed to the callback </param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection(System.String)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection(System.String,System.UInt32@)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientIndex"> Client Index</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection(Crestron.SimplSharp.IPAddress)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection(Crestron.SimplSharp.IPAddress,System.UInt32@)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a blocking call and will block until
            a connection is made or an error occurs.
            Invoking WaitForConnection multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientIndex"> Client Index</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectFunctionCallback(System.IAsyncResult)">
            <summary>
            Callback for the wait For connect function
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectionsAlways(Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback)">
            <summary>
            Function that accepts all incoming connections and triggers the given callback per connection that is accepted.
            This will stop running once the Max socket number is reached.
            </summary>
            <param name="clientConnectedCallbackHandler">Customer callback function</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectionAsync(System.String,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectionAsync(Crestron.SimplSharp.IPAddress,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectionAsync(System.String,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallbackEx,System.Object)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <param name="userSpecifiedObject"> User specified callback object passed to the callback</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnectionAsync(Crestron.SimplSharp.IPAddress,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallbackEx,System.Object)">
            <summary>
            Function to accept an incoming connection on the server from the specified address. This is a non blocking call. The call will 
            check for the parameters and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            Invoking WaitForConnectionAsync multiple times will throw a SOCKET_MAX_CONNECTIONS_REACHED error, if the server already has the max number 
            of connections active as specified by the MaxNumberOfClientSupported property.
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <param name="userSpecifiedObject"> User specified callback object passed to the callback</param>
            <returns> Socket Error Code indicating operation is pending or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.doPostConnectErrorChecking(System.Net.IPEndPoint,System.String,Crestron.CrestronSecureSockets.SecureTcpClient,System.Boolean,System.UInt32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback,System.UInt32@)">
            <summary>
            Function to do basic postConnectErrorChecking
            </summary>
            <param name="remoteEndPoint"></param>
            <param name="addressToConnectTo"></param>
            <param name="socketConnectedToServer"></param>
            <param name="portOnWanSide"></param>
            <param name="clientSocketKey"></param>
            <param name="clientConnectedCallbackHandler"></param>
            <param name="clientIndexForParticularServer"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.doPreConnectErrorChecking(System.String,System.Boolean@,System.String@,System.Boolean@)">
            <summary>
            Parameter checking before attempting to connect to the specified address.
            </summary>
            <param name="addressToAcceptConnectionFrom"></param>
            <param name="portOnWanSide"></param>
            <param name="addressToConnectTo">Target IP address to connect to.</param>
            <param name="isHostName">Indicating whether addressToAcceptConnectionFrom is a host name, not IP address.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SSLHandshakeNegotiationTimer(System.Object)">
            <summary>
            Callback for the SSLHandshakeNegotiationTimer
            </summary>
            <param name="userSpecific"> Secure TCP Client socket to close</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.MakeConnection(System.String,System.UInt32@,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback)">
            <summary>
            Private function to accept an incoming connection on the server. This is a blocking call. This invokes the callback once a connection gets established
            The callback needs to exit or else this function will not return. 
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientIndexForSocket">Client Index for the connected socket.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
            <exception cref="T:System.ArgumentException">If a user certificate and key are provided with the SetServerCertificate and SetServerPrivateKey functions, respectively, and there is an issue with the formatting and/or parsing, this exception will be thrown. Also, if a user certificate and key aren't provided when the SSL mode of the controller is OFF, there is no certificate on the control system to use, and thus an exception will be thrown.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection(System.String,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call. This invokes the callback once a connection gets established
            The callback needs to exit or else this function will not return. 
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.WaitForConnection(Crestron.SimplSharp.IPAddress,Crestron.SimplSharp.CrestronSockets.SecureTCPServerClientConnectCallback)">
            <summary>
            Function to accept an incoming connection on the server. This is a blocking call. This invokes the callback once a connection gets established
            The callback needs to exit or else this function will not return. 
            </summary>
            <param name="addressToAcceptConnectionFrom">Specific IP Address or '0.0.0.0' to accept a connection from any IP Address.</param>
            <param name="clientConnectedCallbackHandler"> Callback invoked when the client gets connected.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.UpdateDSMemoryRegion(System.UInt32,System.String,Crestron.SimplSharp.CrestronSockets.SocketStatus,System.DateTime,Crestron.Infrastructure.EthernetCommandUtilityNativeInterface.ETHERNET_ADAPTERS)">
            <summary>
            Update the socket info also
            </summary>
            <param name="clientIndex"></param>
            <param name="address"></param>
            <param name="currentValue"></param>
            <param name="socketConnectTime"></param>
            <param name="adapter"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.GetAddressServerAcceptedConnectionFromForSpecificClient(System.UInt32)">
            <summary>
            Address of the client which got connected to the server at the specified index 
            </summary>
            <param name="clientIndex"> Unique Client Index</param>
            <returns>string or null</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.GetLocalAddressServerAcceptedConnectionFromForSpecificClient(System.UInt32)">
            <summary>
            Local Address of server that got connected to the client at the specified index
            </summary>
            <param name="clientIndex">Unique Client Index</param>
            <returns>string or null</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.GetPortNumberServerAcceptedConnectionFromForSpecificClient(System.UInt32)">
            <summary>
            Source Port number of client which got connected to the server at the specified index 
            </summary>
            <param name="clientIndex"> Unique Client Index</param>
            <returns>port number or zero</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.GetIncomingDataBufferForSpecificClient(System.UInt32)">
            <summary>
            Incoming data buffer for the client at the specified index
            </summary>
            <param name="clientIndex"> Unique client Index</param>
            <returns>byte array or null</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.GetServerSocketStatusForSpecificClient(System.UInt32)">
            <summary>
            Function to get the socket status for the client at the specified index
            </summary>
            <param name="clientIndex"> Unique client Index</param>
            <returns> Socket status ...</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendData(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Function to send data to a client at the specified index
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendData(System.UInt32,System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Function to send data to a client at the specified index
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="timeout">Timeout duration in milliseconds for testing whether sending is possible prior to writing the data.</param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendData(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Function to send data to a client at the specified index
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendData(System.Byte[],System.Int32)">
            <summary>
            Function to send data to a client
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns> Socket Error Code indicating success or failure.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallbackEx">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Count of bytes to send</param>
            <param name="pFunctionCallbackEx">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsyncCallback(System.IAsyncResult)">
            <summary>
            Callback for the async send
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallback)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset"> Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SendDataAsync(System.UInt32,System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to a client at the specified index
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallbackEx">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.Disconnect">
            <summary>
            Function to disconnect the client from the server
            This assumes a single client is connected to the server and will close that client
            </summary>
            <returns>SocketErrorCodes indicating a failure or a success</returns>
            <remarks> The TCP Server handles disconnecting of the client automatically in cases where there is an error.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.Disconnect(System.UInt32)">
            <summary>
            Function to disconnect a specific client at the specified index
            </summary>
            <param name="clientIndex"> Unique client Index</param>
            <returns>SocketErrorCodes indicating a failure or a success</returns>
            <remarks> The TCP Server handles disconnecting of the client automatically in cases where there is an error.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.DisconnectAll">
            <summary>
            Function to disconnect all the sockets and to stop the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.Pending">
            <summary>
            Determines if there are pending connection requests.
            </summary>
            <returns>true if connections are pending; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException"> The server has not been started using "WaitForConnection" or "WaitForConnectionAsync".</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.Stop">
            <summary>
            Function to stop the TCP server, but leave the existing connections in place
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveData(System.UInt32,System.Int32)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="offset"> Offset into the packet to start receive</param>
            <returns>Number of bytes received.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveData(System.UInt32)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <returns>Number of bytes received.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallback)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This assumes a single client is connected to the server and reads data from that client.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This assumes a single client is connected to the server and reads data from that client.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveDataAsyncCallback(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="iar"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallback,System.Int32)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset into the packet to start receive</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallback)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallbackEx,System.Int32,System.Object)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset into the packet to start receive</param>
            <param name="userSpecifiedCallbackObject"> User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveDataAsync(System.UInt32,Crestron.SimplSharp.CrestronSockets.SecureTCPServerReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data from the client at the specified index
            This function will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="clientIndex"> Client Index</param>
            <param name="pReceiveCallbackEx"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="userSpecifiedCallbackObject"> User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.GetIfDataAvailableForSpecificClient(System.UInt32)">
            <summary>
            Function to return whether data is available to be read from the client at the specified index              
            </summary>
            <param name="clientIndex">Client Index</param>
            <returns> True if there is data available or false</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ReceiveData">
            <summary>
            Function to read data from the client
            This assumes a single client is connected to the server and reads data from that client.
            This function will clear out the buffer before reading in new data.
            </summary>
            <returns>Number of bytes received.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ClientConnected(System.UInt32)">
            <summary>
            Function to check if a client at the specified index is connected or not
            </summary>
            <param name="clientIndex"> Client Index</param>
            <returns>true or false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.HandleLinkUp">
            <summary>
            Handle link up on a TCP Server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.HandleLinkLoss">
            <summary>
            Handle link loss on a TCP Server
            Closes the socket and sets the status to be SOCKET_STATUS_LINK_LOST
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.AddressToAcceptConnectionFrom">
            <summary>
            Address to accept connection from (the server's address)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.State">
            <summary>
            Indicates the state of the server
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.HandshakeTimeout">
            <summary>
            Property to set the SSL Handshake timeout in seconds. This controls the maximum time allowed for the SSL handshake to complete
            before the socket is closed. The default timeout is <see cref="F:Crestron.SimplSharp.Timeout.Infinite"/> which means that the SSL handshake
            process will block forever. The range of permitted values is 30 seconds to <see cref="F:Crestron.SimplSharp.Timeout.Infinite"/>.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> Timeout cannot be less then 30 seconds</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SocketSendOrReceiveTimeOutInMs">
            <summary>
            Timeout period in milli second for socket send or receive
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.PortNumber">
            <summary>
            Port Number for the server port
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.MaxNumberOfClientSupported">
            <summary>
            Max number of clients supported
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.NumberOfClientsConnected">
            <summary>
            Indicates number of clients connected at the current time.
            This will return -1 if we are unable to get the count.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.Nagle">
            <summary>
            Gets or Sets the current state of the Nagle Algorithm for the server socket
            Enabling Nagle will delay when send or receive buffers are not full.
            Note: Nagle is not enabled by default.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.m_iSocketStatusChange">
            <summary>
            Socket status change event that is fired when the status changes
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.SocketStatusChange">
            <summary>
            Event triggered when the status of the socket changes
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.EthernetAdapterToBindTo">
            <summary>
            Indicates if the user wants to bind to a specific adapter
            This is valid on systems which support multiple adapters. 
            Ignored on systems which do not support multiple adapters.
            Only valid if the address of the TCP server is defined as 0.0.0.0 - Ignored otherwise
            Set to EthernetAdapterType.EthernetUnknownAdapter if no specific binding is required.
            On units which just have a single adapter - we can accept a connection from anywhere
                 - In this case this setting is ignored
            On units which have multiple adapters 
                 - If the user specified EthernetCSAdapter then accept connection from Control Subnet side only
                 - If the user specified EthernetLAN2Adapter then accept connection from LAN2 side only
                 - If the user specified EthernetLANAdapter, then accept connections from anywhere but from the Control subnet side and LAN2            
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.LocalAddressServerAcceptedConnectionFrom">
            <summary>
            Local Address of server that accepted a connection.
            This assumes a single client is connected to the server and returns the local address of that server connection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.AddressServerAcceptedConnectionFrom">
            <summary>
            Address of the client which got connected to the server.
            This assumes a single client is connected to the server and returns the address of that client
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.PortNumberServerAcceptedConnectionFrom">
            <summary>
            Source Port number of the client which got connected to the server.
            This assumes a single client is connected to the server and returns the source port number of that client
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.IncomingDataBuffer">
            <summary>
            Incoming data buffer for the client connected to the server
            This assumes a single connection to the TCP Server
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ServerSocketStatus">
            <summary>
            Function to get a socket status 
            This assumes a single client is connected to the server and returns the address of that client
            </summary>
            <returns> Socket status ...</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.DataAvailable">
            <summary>
            Indicates whether data is available on the client to be read.
            This assumes a single client is connected to the server and returns true if there is data which can be read from that specific client.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ActiveSocket">
            <summary>
            private class for the active socket 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPServer.ActiveSocket.SocketTimerFunction(System.Object)">
            <summary>
            Socket timer timeout function
            </summary>
            <param name="currentSocket"> current active socket</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.TCPClient">
            <summary>
            Class for the TCP Client
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.TCPClient.m_iSocketIdForDumpingPurpose">
            <summary>
            For reporting in WHO command
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.UpdateDSMemoryRegion(System.String,Crestron.SimplSharp.CrestronSockets.SocketStatus)">
            <summary>
            
            </summary>
            <param name="address"></param>
            <param name="currentValue"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.#ctor">
            <summary>
            Default Constructor for the TCP Client
            Initializes port number to be an invalid value
            Allocates buffer of default size
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for the TCP Client
            </summary>
            <param name="addressToConnectTo">IP Address of TCP Server to connect to.</param>
            <param name="portNumber">TCP Port number.</param>
            <param name="bufferSize">Size of the internal buffer to hold received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32)">
            <summary>
            Constructor for the TCP Client
            </summary>
            <param name="endPointToConnectTo">IP end point of TCP Server to connect to.</param>
            <param name="bufferSize">Size of the internal buffer to hold received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SocketTimerFunction(System.Object)">
            <summary>
            Socket timer timeout function
            </summary>
            <param name="currentClient"> A tcp client</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.doPreConnectErrorChecking(System.String@)">
            <summary>
            Function to validate the parameters before we initiate a connection.
            </summary>
            <param name="addressToConnectTo"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ConnectToServer">
            <summary>
            Have the Client Connect to the specified server.
            </summary>
            <returns>SocketErrorCodes indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.TCPClientCallBackMethodExAsync(System.IAsyncResult)">
            <summary>
            Callback method for the Begin Connect ...
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ConnectToServerAsync(Crestron.SimplSharp.CrestronSockets.TCPClientConnectCallback)">
            <summary>
            Function to connect to the server asynchronously. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ConnectToServerAsync(Crestron.SimplSharp.CrestronSockets.TCPClientConnectCallbackEx,System.Object)">
            <summary>
            Function to connect to the server asynchronously. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <param name="userSpecifiedObject">User specified object passed to the callback</param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.DisconnectFromServer">
            <summary>
            Function to disconnect from an already connected socket
            </summary>
            <returns>SocketErrorCodes  indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.TCPClientReceiveCallback,System.Int32)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset to read the data from</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.TCPClientReceiveCallback)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.TCPClientReceiveCallbackEx,System.Int32,System.Object)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset to read the data from</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.TCPClientReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallbackEx"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ReceiveData(System.Int32)">
            <summary>
            Function to read data from the TCP client
            This will clear out the buffer before reading in new data.
            </summary>
            <param name="offset"> Offset to read the data from</param>
            <returns>The number of bytes received by the client.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.ReceiveData">
            <summary>
            Function to read data from the TCP client
            This will clear out the buffer before reading in new data.
            </summary>
            <returns>The number of bytes received by the client.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SendData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Function to send data to the server
            </summary>
            <param name="pBufferToSend">Buffer of bytes</param>
            <param name="offset">Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns>SocketErrorCodes  indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SendData(System.Byte[],System.Int32)">
            <summary>
            Function to send data to the server
            </summary>
            <param name="pBufferToSend">Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns>SocketErrorCodes  indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SendDataAsyncCallback(System.IAsyncResult)">
            <summary>
            Callback for the async send
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.TCPClientSendCallback)">
            <summary>
            Function to send data asynchronously to the server
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset">Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.TCPClientSendCallback)">
            <summary>
            Function to send data asynchronously to the server
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.TCPClientSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to the server.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset">Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallbackWithUserSpecifiedObject">Callback function to invoke when send completes</param>
            <param name="userSpecifiedObject"> User specified object that is passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.TCPClientSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to the server.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallbackWithUserSpecifiedObject">Callback function to invoke when send completes</param>
            <param name="userSpecifiedObject"> User specified object that is passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.HandleLinkUp">
            <summary>
            Handle link up on a TCP client
            Sets the state to be SOCKET_STATUS_NO_CONNECT
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.HandleLinkLoss">
            <summary>
            Handle link loss on a TCP client
            Disconnects the socket and sets the status to be SOCKET_STATUS_LINK_LOST
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.Dispose">
            <summary>
            free resources and disconnect
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.TCPClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the TcpClient  and optionally releases the managed resources.
            </summary>
            <param name="disposing"> Set to true to release both managed and unmanaged resources; false to release
             only unmanaged resources.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.AddressClientConnectedTo">
            <summary>
            Sets the address of server to connect to.
            Returns the address of the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.SocketSendOrReceiveTimeOutInMs">
            <summary>
            Timeout period in milli second for socket send or receive
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.LocalAddressOfClient">
            <summary>
            Indicates the local IP address of the client.            
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.LocalPortNumberOfClient">
            <summary>
            Indicates the local port number used
            Only valid after the client is connected to the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.PortNumber">
            <summary>
            Port number
            This is the port number of the server to connect to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.IncomingDataBuffer">
            <summary>
            Buffer for Incoming Data
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.ClientStatus">
            <summary>
            Socket status
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.TCPClient.m_iSocketStatusChange">
            <summary>
            Socket status change event that is fired when the status changes
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.TCPClient.SocketStatusChange">
            <summary>
            Event triggered when the status of the socket changes
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.Nagle">
            <summary>
            Gets or Sets the current state of the Nagle Algorithm for the client
            Enabling Nagle will delay when send or receive buffers are not full.
            Note: Nagle is not enabled by default.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.EthernetAdapter">
            <summary>
            Returns the Ethernet adapter on which the socket resides
            EthernetAdapterType.EthernetLANAdapter indicates that the socket is on the LAN Adapter
            EthernetAdapterType.EthernetCSAdapter indicates the Control Subnet side (for a system with a router)
            EthernetAdapterType.EthernetUnknownAdapter indicates that the socket is not initialized as yet
            EthernetAdapterType.EthernetLAN2Adapter indicates the second LAN Adapter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.TCPClient.DataAvailable">
            <summary>
            Indicates whether data is available on the client to be read.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.SecureTCPClient">
            <summary>
            Class for the Secure TCP Client
            <example>
            This code snippet shows how one might instantiate and use a SecureTCPClient object
            <code>
            using System;
            using System.Text;                                       // for ASCIIEncoding      
            using Crestron.SimplSharp;                               // for CrestronConsole
            using Crestron.SimplSharp.CrestronSockets;               // for SecureTCPClient
            
            /* ...Startup code for a SecureTCPClient... */
            
            SecureTCPClient client = new SecureTCPClient("localhost", 8000, 100); // provide hostname, port, and size of the incoming data buffer
            client.SocketStatusChange += new SecureTCPClientSocketStatusChangeEventHandler(clientSocketStatusChange);
            
            SocketErrorCodes err;
            
            ErrorLog.Notice("Trying to connect with server...");
            try
            {
            	// clientConnectCallback gets invoked once client either  
            	// connects successfully or encounters an error
            	err = client.ConnectToServerAsync(clientConnectCallback);
            	CrestronConsole.PrintLine("ConnectToServerAsync returned: " + err);
            }
            catch (Exception e)
            {
            	CrestronConsole.PrintLine("Error connecting to server: " + e.Message);
            }
            
            /* ...Callback methods... */
            
            public void clientSocketStatusChange(SecureTCPClient client, SocketStatus clientSocketStatus)
             {
                CrestronConsole.PrintLine("Client Socket Status Change - Socket State is now " + clientSocketStatus);
             }
            
            public void clientConnectCallback(SecureTCPClient client)
            {
            	CrestronConsole.PrintLine("clientConnectCallback: ClientStatus is: " + client.ClientStatus);
            	if (client.ClientStatus == SocketStatus.SOCKET_STATUS_CONNECTED)
            	{
            		CrestronConsole.PrintLine("clientConnectCallback: Connected to " + client.AddressClientConnectedTo + " on port " + client.PortNumber);
            		// Once connected, begin waiting for packets from the server.
            		// This call to ReceiveDataAsync is necessary to receive the FIN packet from the server in the event
            		// that the TLS handshake fails and the connection cannot be made. If you do not call ReceiveDataAsync here,
            		// the client will remain "connected" from its perspective, though no connection has been made.
            		client.ReceiveDataAsync(clientReceiveCallback);
            	}
            	else
            	{
            		CrestronConsole.PrintLine("clientConnectCallback: No connection could be made with the server.");
            	}
            }
            
            public void clientReceiveCallback(SecureTCPClient client, int bytes_recvd)
            {
            	if (bytes_recvd &lt;= 0) // 0 or negative byte count indicates the connection has been closed
            	{
            		CrestronConsole.PrintLine("clientReceiveCallback: Could not receive message- connection closed");
            	}
            	else
            	{
            		try
            		{
            			CrestronConsole.PrintLine("Received " + bytes_recvd + " bytes from " + client.AddressClientConnectedTo + " port " + client.PortNumber);
            			string received = ASCIIEncoding.ASCII.GetString(client.IncomingDataBuffer, 0, client.IncomingDataBuffer.Length);
            			CrestronConsole.PrintLine("Server says: " + received);
            		}
            		catch (Exception e)
            		{
            			CrestronConsole.PrintLine("Exception in clientReceiveCallback: " + e.Message);
            		}
            		// Wait for another message
            		client.ReceiveDataAsync(clientReceiveCallback);
            	}
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.m_iSocketIdForDumpingPurpose">
            <summary>
            For reporting in WHO command
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.UpdateDSMemoryRegion(System.String,Crestron.SimplSharp.CrestronSockets.SocketStatus)">
            <summary>
            
            </summary>
            <param name="address"></param>
            <param name="currentValue"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.#ctor">
            <summary>
            Default Constructor for the Secure TCP Client
            Initializes port number to be an invalid value
            Allocates buffer of default size
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for the Secure TCP Client
            </summary>
            <param name="addressToConnectTo">IP Address of TCP Server to connect to.</param>
            <param name="portNumber">TCP Port number.</param>
            <param name="bufferSize">Size of the internal buffer to hold received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32)">
            <summary>
            Constructor for the TCP Client
            </summary>
            <param name="endPointToConnectTo">IP end point of TCP Server to connect to.</param>
            <param name="bufferSize">Size of the internal buffer to hold received data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SetClientCertificate(Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Sets Client Security Certificate associated with this object.
            </summary>
            <param name="cert">The client x509 certificate object in binary (DER) format</param>
            <remarks>
            <see cref="T:Crestron.SimplSharp.Cryptography.X509Certificates.X509Certificate"/> object does not contain the corresponding private key so it must be provided using a SetClientPrivateKey method.
            This method requires firmware version 1.502.xxxx or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SetClientPrivateKey(System.Byte[])">
            <summary>
            Sets the Private Key corresponding to the Client Certificate
            </summary>
            <param name="key">The private key in binary (DER) format</param>
            <remarks>
            This method requires firmware version 1.502.0048 or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SocketTimerFunction(System.Object)">
            <summary>
            Socket timer timeout function
            </summary>
            <param name="currentClient"> A tcp client</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.doPreConnectErrorChecking(System.String@,System.Boolean@)">
            <summary>
            Function to validate the parameters before we initiate a connection.
            </summary>
            <param name="addressToConnectTo">Target IP address to connect to.</param>
            <param name="isHostName">Indicating whether <see cref="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.AddressClientConnectedTo"/> is a host name, not IP address.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ConnectToServer">
            <summary>
            Have the Client Connect to the specified server.
            </summary>
            <returns>SocketErrorCodes indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.TCPClientCallBackMethodExAsync(System.IAsyncResult)">
            <summary>
            Callback method for the Begin Connect ...
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ConnectToServerAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPClientConnectCallback)">
            <summary>
            Function to connect to the server asynchronously. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
            <remarks>
            This method requires firmware version 1.502.xxxx or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ConnectToServerAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPClientConnectCallbackEx,System.Object)">
            <summary>
            Function to connect to the server asynchronously. This is a non blocking call. The call will check for the parameters
            and will start an asynchronous operation. The callback gets invoked when the connection succeeds or an error occurs.
            </summary>
            <param name="pCallBackFunction"> Callback invoked when the client gets connected or an error occurred.</param>
            <param name="userSpecifiedObject">User specified object passed to the callback</param>
            <returns>SocketErrorCode indicating socket operation pending or an error </returns>
            <remarks>
            This method requires firmware version 1.502.xxxx or later
            </remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.DisconnectFromServerInternal">
            <summary>
            Internal method - will not check for the state at all.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.DisconnectFromServer">
            <summary>
            Function to disconnect from an already connected socket
            </summary>
            <returns>SocketErrorCodes  indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPClientReceiveCallback,System.Int32)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset to read the data from</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPClientReceiveCallback)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPClientReceiveCallbackEx,System.Int32,System.Object)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="offset"> Offset to read the data from</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.SecureTCPClientReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data asynchronously from the TCP client. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallbackEx"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ReceiveData(System.Int32)">
            <summary>
            Function to read data from the TCP client
            This will clear out the buffer before reading in new data.
            </summary>
            <param name="offset"> Offset to read the data from</param>
            <returns>The number of bytes received by the client.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ReceiveData">
            <summary>
            Function to read data from the TCP client
            This will clear out the buffer before reading in new data.
            </summary>
            <returns>The number of bytes received by the client.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SendData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Function to send data to the server
            </summary>
            <param name="pBufferToSend">Buffer of bytes</param>
            <param name="offset">Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns>SocketErrorCodes  indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SendData(System.Byte[],System.Int32)">
            <summary>
            Function to send data to the server
            </summary>
            <param name="pBufferToSend">Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns>SocketErrorCodes  indicating a success or a failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SendDataAsyncCallback(System.IAsyncResult)">
            <summary>
            Callback for the async send
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPClientSendCallback)">
            <summary>
            Function to send data asynchronously to the server
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset">Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPClientSendCallback)">
            <summary>
            Function to send data asynchronously to the server
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SendDataAsync(System.Byte[],System.Int32,System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPClientSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to the server.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="offset">Start at the specified offset</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallbackWithUserSpecifiedObject">Callback function to invoke when send completes</param>
            <param name="userSpecifiedObject"> User specified object that is passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.SecureTCPClientSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to the server.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pFunctionCallbackWithUserSpecifiedObject">Callback function to invoke when send completes</param>
            <param name="userSpecifiedObject"> User specified object that is passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.HandleLinkUp">
            <summary>
            Handle link up on a TCP client
            Sets the state to be SOCKET_STATUS_NO_CONNECT
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.HandleLinkLoss">
            <summary>
            Handle link loss on a TCP client
            Disconnects the socket and sets the status to be SOCKET_STATUS_LINK_LOST
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.Dispose">
            <summary>
            free resources and disconnect
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the SecureTCPClient  and optionally releases the managed resources.
            </summary>
            <param name="disposing"> Set to true to release both managed and unmanaged resources; false to release
             only unmanaged resources.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.AddressClientConnectedTo">
            <summary>
            Sets the address of server to connect to.
            Returns the address of the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SocketSendOrReceiveTimeOutInMs">
            <summary>
            Timeout period in milli second for socket send or receive
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.LocalAddressOfClient">
            <summary>
            Indicates the local IP address of the client.            
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.LocalPortNumberOfClient">
            <summary>
            Indicates the local port number used
            Only valid after the client is connected to the server.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.PortNumber">
            <summary>
            Port number
            This is the port number of the server to connect to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.IncomingDataBuffer">
            <summary>
            Buffer for Incoming Data
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.ClientStatus">
            <summary>
            Socket status
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.getSSLStream">
            <summary>
            Returns Secure Stream used for Ssl Connection.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.m_iSocketStatusChange">
            <summary>
            Socket status change event that is fired when the status changes
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.SocketStatusChange">
            <summary>
            Event triggered when the status of the socket changes
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.Nagle">
            <summary>
            Gets or Sets the current state of the Nagle Algorithm for the client
            Enabling Nagle will delay when send or receive buffers are not full.
            Note: Nagle is not enabled by default.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.EthernetAdapter">
            <summary>
            Returns the Ethernet adapter on which the socket resides
            EthernetAdapterType.EthernetLANAdapter indicates that the socket is on the LAN Adapter
            EthernetAdapterType.EthernetCSAdapter indicates the Control Subnet side (for a system with a router)
            EthernetAdapterType.EthernetUnknownAdapter indicates that the socket is not initialized as yet
            EthernetAdapterType.EthernetLAN2Adapter indicates the second LAN Adapter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.SecureTCPClient.DataAvailable">
            <summary>
            Indicates whether data is available on the client to be read.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSockets.UDPServer">
            <summary>
            Class for the UDP Server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor">
            <summary>
            Default Constructor for the UDP Server
            Initializes port number to be an invalid value
            Allocates buffer of default size
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local and the remote port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(Crestron.SimplSharp.IPAddress,System.Int32,System.Int32)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local and the remote port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>      
            <param name="remotePortNumber"> Indicates the remote port number </param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32,System.Int32)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="endPointToAcceptConnectionFrom"> Indicates IP end point we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>      
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(System.String,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local and the remote port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Set to 
            EthernetUnknownAdapter if no specific binding is required. Only valid if address is 0.0.0.0 / 255.255.255.255 or a multicast socket</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(Crestron.SimplSharp.IPAddress,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local and the remote port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Set to 
            EthernetUnknownAdapter if no specific binding is required. Only valid if address is 0.0.0.0 / 255.255.255.255 or a multicast socket</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(System.String,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType,System.Int32)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Set to 
            EthernetUnknownAdapter if no specific binding is required. Only valid if address is 0.0.0.0 / 255.255.255.255 or a multicast socket</param>
            <param name="remotePortNumber"> Indicates the remote port number</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.#ctor(Crestron.SimplSharp.IPEndPoint,System.Int32,System.Int32,Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Constructor for the UDP server
            </summary>
            <param name="endPointToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="portNumber"> Indicates the local port number</param>
            <param name="bufferSize">Size of internal buffer to store received data. </param>
            <param name="ethernetAdapterToBindTo"> Ethernet adapter to bind to. Based on the EthernetAdapterType enum. Set to 
            EthernetUnknownAdapter if no specific binding is required. Only valid if address is 0.0.0.0 / 255.255.255.255 or a multicast socket</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SocketTimerFunction(System.Object)">
            <summary>
            Socket timer timeout function
            </summary>
            <param name="currentUDPServer"> UDP server</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.EnableUDPServer">
            <summary>
            Function to enable the UDP server
            </summary>
            <returns>SocketErrorCodes indicating a success or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.IsIPAddressMulticast(System.Net.IPAddress)">
            <summary>
            IsIpAddressMulticast - Function to determine if the specified IP address is a multicast address 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.EnableUDPServer(System.String,System.Int32,System.Int32)">
            <summary>
            Function to enable the UDP server for the specified remote address using the specified local and remote port number
            </summary>
            <param name="addressToAcceptConnectionFrom">Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="localPortNumber">Indicates the local port number. Can be set to 0 to use the next available port number</param>
            <param name="remotePortNumber">Indicates the remote port number.</param>
            <returns>SocketErrorCodes indicating a success or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.EnableUDPServer(Crestron.SimplSharp.IPAddress,System.Int32,System.Int32)">
            <summary>
            Function to enable the UDP server for the specified remote address using the specified local and remote port number
            </summary>
            <param name="addressToAcceptConnectionFrom">Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="localPortNumber">Indicates the local port number. Can be set to 0 to use the next available port number</param>
            <param name="remotePortNumber">Indicates the remote port number.</param>
            <returns>SocketErrorCodes indicating a success or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.EnableUDPServer(System.String,System.Int32)">
            <summary>
            Function to enable the UDP server for the specified remote address and the portnumber.
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="localAndRemotePortNumber">  Indicates the local and the remote port number </param>
            <returns>SocketErrorCodes indicating a success or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.EnableUDPServer(Crestron.SimplSharp.IPAddress,System.Int32)">
            <summary>
            Function to enable the UDP server for the specified remote address and the portnumber.
            </summary>
            <param name="addressToAcceptConnectionFrom"> Indicates address we accept data from. This could be a unicast/multicast/broadcast address or 0.0.0.0 to listen to any remote address.</param>
            <param name="localAndRemotePortNumber">  Indicates the local and the remote port number </param>
            <returns>SocketErrorCodes indicating a success or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.DisableUDPServer">
            <summary>
            Function to uninitialize the UDP server and free all resources
            </summary>
            <returns>SocketErrorCodes indicating a success or failure </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.UDPServerReceiveCallback)">
            <summary>
            Function to read data asynchronously from the UDP Server. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.ReceiveDataAsync(Crestron.SimplSharp.CrestronSockets.UDPServerReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data asynchronously from the UDP Server. This is a non-blocking call.
            This will clear out the buffer before reading in new data.
            The callback function gets invoked once the read succeeds or an error occurs.
            </summary>
            <param name="pReceiveCallback"> Callback function to get invoked when data has been received or an error occurs</param>
            <param name="userSpecifiedCallbackObject"> User specified callback object that is passed to the callback</param>
            <returns> Socket error code indicating operation pending or an error </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.ReceiveDataAsync(System.Byte[],Crestron.SimplSharp.CrestronSockets.UDPServerReceiveCallback)">
            <summary>
            Function to read data from the socket. The Callback function gets invoked when the read succeeds or an error
            occurs.
            </summary>
            <param name="pBufferToReadDataInto"> Byte array to read the data into</param>
            <param name="pReceiveCallback"> Receive Callback to invoke.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.ReceiveDataAsync(System.Byte[],Crestron.SimplSharp.CrestronSockets.UDPServerReceiveCallbackEx,System.Object)">
            <summary>
            Function to read data from the socket. The Callback function gets invoked when the read succeeds or an error
            occurs.
            </summary>
            <param name="pBufferToReadDataInto"> Byte array to read the data into</param>
            <param name="pReceiveCallback"> Receive Callback to invoke.</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.ParseIncomingData(System.Int32,System.Net.EndPoint)">
            <summary>
            Function to make sure that the UDP is parsed properly before it is passed on ...
            </summary>
            <param name="numOfBytesRead"></param>
            <param name="remoteEndpoint"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.ReceiveData">
            <summary>
            Function to read data from the UDP Server. This is a blocking call.
            This will clear out the buffer before reading in new data.
            </summary>
            <returns>Returns the number of bytes read</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataEx(System.Byte[],System.Int32)">
            <summary>
            Function to send data to the remote IP Address and port number where the last packet was received from.
            Uses the IPAddressLastMessageReceivedFrom and the IPPortLastMessageReceivedFrom
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <returns> SocketErrorCodes indicating success or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataExAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.UDPServerSendCallback)">
            <summary>
            Function to send data asynchronously to the remote IP Address and port number where the last packet was received from.
            Uses the IPAddressLastMessageReceivedFrom and the IPPortLastMessageReceivedFrom.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.ReceiveDataAsyncCallback(System.IAsyncResult)">
            <summary>
            Receive data callback
            </summary>
            <param name="iar"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataAsyncCallback(System.IAsyncResult)">
            <summary>
            Callback for the send Data Async call
            </summary>
            <param name="iar"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataAsync(System.Byte[],System.Int32,System.String,System.Int32,Crestron.SimplSharp.CrestronSockets.UDPServerSendCallback)">
            <summary>
            Function to send data asynchronously to the specified address and port number.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="addressToSendTo"> Address to send to</param>
            <param name="portNumberToSendTo">Port number to send to</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.IPEndPoint,Crestron.SimplSharp.CrestronSockets.UDPServerSendCallback)">
            <summary>
            Function to send data asynchronously to the specified address and port number.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="endPointToSendTo"> IP end point to send to</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataAsync(System.Byte[],System.Int32,System.String,System.Int32,Crestron.SimplSharp.CrestronSockets.UDPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to the specified address and port number.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="addressToSendTo"> Address to send to</param>
            <param name="portNumberToSendTo">Port number to send to</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.IPEndPoint,Crestron.SimplSharp.CrestronSockets.UDPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data asynchronously to the specified address and port number.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="endPointToSendTo"> IP end point to send to</param>
            <param name="pFunctionCallback">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns> SocketErrorCodes indicating socket send pending or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.doBasicErrorChecking(System.String,System.Int32,System.Boolean,System.String@)">
            <summary>
            Function to do basic error checking.
            </summary>
            <param name="addressToSendTo"></param>
            <param name="portNumberToSendTo"></param>
            <param name="resolveAddress"></param>
            <param name="addressToSendToResolved"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendData(System.Byte[],System.Int32,System.String,System.Int32)">
            <summary>
            Function to send data to a specified remote address on the specified port number
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="addressToSendTo"> Address to send to</param>
            <param name="portNumberToSendTo">Port number to send to</param>
            <returns> SocketErrorCodes indicating success or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendData(System.Byte[],System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Function to send data to a specified remote address on the specified port number
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="addressToSendTo"> Address to send to</param>
            <param name="portNumberToSendTo">Port number to send to</param>
            <param name="resolveHostname">Indicates that the address is a hostname and needs to be resolved.</param>
            <returns> SocketErrorCodes indicating success or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendData(System.Byte[],System.Int32,Crestron.SimplSharp.IPEndPoint)">
            <summary>
            Function to send data to a specified remote address on the specified port number
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend"> Number of bytes to send</param>
            <param name="endPointToSendTo"> IP end point to send to</param>
            <returns> SocketErrorCodes indicating success or specific failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendData(System.Byte[],System.Int32)">
            <summary>
            Function to send data to the server
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <returns>SocketErrorCodes indicating a success or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.UDPServerSendCallback)">
            <summary>
            Function to send data to the server asynchronously.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pCallbackFunction">Callback function to invoke when send completes</param>
            <returns>SocketErrorCodes indicating a operation pending or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.SendDataAsync(System.Byte[],System.Int32,Crestron.SimplSharp.CrestronSockets.UDPServerSendCallbackEx,System.Object)">
            <summary>
            Function to send data to the server asynchronously.
            The callback function gets invoked once the send succeeds or an error occurs.
            </summary>
            <param name="pBufferToSend"> Buffer of bytes</param>
            <param name="numBytesToSend">Count of bytes to send </param>
            <param name="pCallbackFunction">Callback function to invoke when send completes</param>
            <param name="userSpecifiedCallbackObject">User specified callback object passed to the callback</param>
            <returns>SocketErrorCodes indicating a operation pending or failure</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.HandleLinkUp">
            <summary>
            Handle link up on a UDP Server
            Sets the status to SOCKET_STATUS_NO_CONNECT
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.HandleLinkLoss">
            <summary>
            Handle link loss on a UDP Server
            Sets the status to be SOCKET_STATUS_LINK_LOST
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.Dispose">
            <summary>
            free up resources and disable the server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronSockets.UDPServer.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the UdpServer  and optionally releases the managed resources.
            </summary>
            <param name="disposing"> Set to true to release both managed and unmanaged resources; false to release
             only unmanaged resources.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.AddressToAcceptConnectionFrom">
            <summary>
            Address to accept connection from 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.LocalAddressOfServer">
            <summary>
            Indicates the local IP address of the client.            
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.SocketSendOrReceiveTimeOutInMs">
            <summary>
            Timeout period in milli second for socket send or receive
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.PortNumber">
            <summary>
            Port number - This is the local and remote port number if the RemotePortNumber property 
            is not used. If the RemotePortNumber is defined, then this is just the local port number.
            When used as the local port number - it can set as 0. In this case, we will use the next available port number.
            Cannot be set to 0 when used as both the local and remote port number.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.RemotePortNumber">
            <summary>
            Remote port number
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.IncomingDataBuffer">
            <summary>
            Buffer for Incoming Data
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.ServerStatus">
            <summary>
            Socket status
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.EthernetAdapterToBindTo">
            <summary>
            Indicates if the user wants to bind to a specific adapter
            This is valid on systems which support multiple adapters. 
            Undefined on systems which do not support multiple adapters.
            Only valid if the address of the UDP server is defined as 0.0.0.0/255.255.255.255/ Multicast socket - Ignored otherwise.
            Set to EthernetAdapterType.EthernetUnknownAdapter if no specific binding is required.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.IPAddressLastMessageReceivedFrom">
            <summary>
            String indicating the source address that the last UDP Packet was received from.
            Valid only after a packet has been received from the remote side. 
            Used within the SendDataEx function to send data back to the remote endpoint where the last data was received from. 
            This will return String.Empty if no packet has been received from the remote end
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.IPPortLastMessageReceivedFrom">
            <summary>
            This indicates source port that the last UDP Packet was received from.
            Valid only after a packet has been received from the remote side.
            Used within the SendDataEx function to send data back to the remote endpoint where the last data was received from.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronSockets.UDPServer.DataAvailable">
            <summary>
            Indicates whether data is available on the UDP server
            </summary>
        </member>
        <member name="T:CrestronSharp.CrestronXmlSerializerNamespaces">
            <summary>
            Contains the XML namespaces and prefixes that the <see cref="T:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization"/> uses to generate qualified names in an XML-document instance.
            </summary>
        </member>
        <member name="M:CrestronSharp.CrestronXmlSerializerNamespaces.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> class.
            </summary>
        </member>
        <member name="M:CrestronSharp.CrestronXmlSerializerNamespaces.#ctor(CrestronSharp.CrestronXmlQualifiedName[])">
            <summary>
            Initializes a new instance of the <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> class, using the specified instance of <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> containing the collection of prefix and namespace pairs.
            </summary>
            <param name="paramNamespaces">An array of XmlQualifiedName objects.</param>
        </member>
        <member name="M:CrestronSharp.CrestronXmlSerializerNamespaces.#ctor(CrestronSharp.CrestronXmlSerializerNamespaces)">
            <summary>
            Initializes a new instance of the <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> class, using the specified instance of <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> containing the collection of prefix and namespace pairs.
            </summary>
            <param name="paramNamespaces">An instance of the <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> containing the namespace and prefix pairs.</param>
        </member>
        <member name="M:CrestronSharp.CrestronXmlSerializerNamespaces.Add(System.String,System.String)">
            <summary>
            Adds a prefix and namespace pair to an <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> object.
            </summary>
            <param name="prefix">The prefix associated with an XML namespace.</param>
            <param name="ns">An XML namespace.</param>
            <remarks>If you want the <see cref="T:Crestron.SimplSharp.CrestronXml.Serialization.CrestronXMLSerialization"/> to qualify the element and attribute names in an XML document, you must 
             Add the prefix and namespace pairs to a <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> object. Any namespaces 
             that you add must conform to the www.w3.org specification Namespaces in XML.</remarks>
        </member>
        <member name="M:CrestronSharp.CrestronXmlSerializerNamespaces.ToArray">
            <summary>
            Gets the array of prefix and namespace pairs in a <see cref="T:CrestronSharp.CrestronXmlSerializerNamespaces"/> object.
            </summary>
            <returns>An array of <see cref="T:System.Xml.XmlQualifiedName"/> objects that are used as qualified names in an XML document.</returns>
        </member>
        <member name="P:CrestronSharp.CrestronXmlSerializerNamespaces.Count">
            <summary>
            Gets the number of prefix and namespace pairs in the collection.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.UserThreadStartDelegateWrapper">
            <summary>
            Thread start delegate 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.UserThreadStartDelegateWrapper.#ctor(Crestron.SimplSharp.CrestronSharpHelperDelegate,System.Object)">
            <summary>
            Constructor for the UserThreadStartDelegateWrapper
            </summary>
            <param name="userCallbackFunc"></param>
            <param name="userSpecificObject"></param>
        </member>
        <member name="M:Crestron.SimplSharp.UserThreadStartDelegateWrapper.TimerCallbackFunction(System.Object)">
            <summary>
            TimerCallbackFunction - This is the timer callback for the user specified function
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Crestron.SimplSharp.UserThreadStartDelegateWrapper.Start">
            <summary>
            Function to start the timer
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSharpHelperDelegate">
            <summary>
            Delegate for the callback for the Invoke functionality for the Crestron Sharp Helper
            </summary>
            <param name="pSpecificParameter"> User specified Specific Parameter</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronInvoke">
            <summary>
            Crestron Invoke class - Provides BeginInvoke functionality
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronInvoke.BeginInvoke(Crestron.SimplSharp.CrestronSharpHelperDelegate)">
            <summary>
            Function to Invoke the user specified callback
            </summary>
            <param name="callbackFunction"> Callback function to be invoked</param>
            <returns> Object to the specific callback - Reserved for future use </returns>
            <exception cref="T:System.ArgumentNullException"> callbackFunction cannot be NULL </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronInvoke.BeginInvoke(Crestron.SimplSharp.CrestronSharpHelperDelegate,System.Object)">
            <summary>
            Function to Invoke the user specified callback
            </summary>
            <param name="callbackFunction"> Callback function to be invoked </param>
            <param name="callbackSpecificParameter"> Parameter to be passes to the callback function</param>
            <returns> Object to the specific callback - Reserved for future use </returns>
            <exception cref="T:System.ArgumentNullException"> callbackFunction cannot be NULL </exception>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation">
            <summary>
            Contains File system information exposed by statvfs@openssh.com request.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.#ctor(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation"/> class.
            </summary>
            <param name="bsize">The bsize.</param>
            <param name="frsize">The frsize.</param>
            <param name="blocks">The blocks.</param>
            <param name="bfree">The bfree.</param>
            <param name="bavail">The bavail.</param>
            <param name="files">The files.</param>
            <param name="ffree">The ffree.</param>
            <param name="favail">The favail.</param>
            <param name="sid">The sid.</param>
            <param name="flag">The flag.</param>
            <param name="namemax">The namemax.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.TotalBlocks">
            <summary>
            Gets the total blocks.
            </summary>
            <value>
            The total blocks.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.FreeBlocks">
            <summary>
            Gets the free blocks.
            </summary>
            <value>
            The free blocks.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.AvailableBlocks">
            <summary>
            Gets the available blocks.
            </summary>
            <value>
            The available blocks.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.TotalNodes">
            <summary>
            Gets the total nodes.
            </summary>
            <value>
            The total nodes.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.FreeNodes">
            <summary>
            Gets the free nodes.
            </summary>
            <value>
            The free nodes.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.AvailableNodes">
            <summary>
            Gets the available nodes.
            </summary>
            <value>
            The available nodes.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.Sid">
            <summary>
            Gets the sid.
            </summary>
            <value>
            The sid.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.SupportsSetUid">
            <summary>
            Gets a value indicating whether [supports set uid].
            </summary>
            <value>
              <c>true</c> if [supports set uid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpFileSystemInformation.MaxNameLength">
            <summary>
            Gets the max name length.
            </summary>
            <value>
            The max name length.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Sftp.SftpDownloadAsyncResult">
            <summary>
            Encapsulates the results of an asynchronous download operation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpDownloadAsyncResult.#ctor(Crestron.SimplSharp.CrestronIO.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Sftp.SftpDownloadAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Sftp.SftpDownloadAsyncResult.Update(System.UInt64)">
            <summary>
            Updates asynchronous operation status information.
            </summary>
            <param name="downloadedBytes">Number of downloaded bytes.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpDownloadAsyncResult.IsDownloadCanceled">
            <summary>
            Gets or sets a value indicating whether to cancel asynchronous download operation.
            </summary>
            <value>
            <c>true</c> if download operation to be canceled; otherwise, <c>false</c>.
            </value>
            <remarks>
            Download operation will be canceled after finishing uploading current buffer.
            </remarks>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Sftp.SftpDownloadAsyncResult.DownloadedBytes">
            <summary>
            Gets the number of downloaded bytes.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman">
            <summary>
            Represents base class for Diffie Hellman key exchange algorithm
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman._clientPayload">
            <summary>
            Specifies client payload
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman._serverPayload">
            <summary>
            Specifies server payload
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman._clientExchangeValue">
            <summary>
            Specifies client exchange number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman._serverExchangeValue">
            <summary>
            Specifies server exchange number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman._randomValue">
            <summary>
            Specifies random generated number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman._hostKey">
            <summary>
            Specifies host key data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman._signature">
            <summary>
            Specifies signature data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman.Start(Crestron.SimplSharp.Ssh.Session,Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>
            true if exchange hash is valid; otherwise false.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.KeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply">
            <summary>
            Populates the client exchange value.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Paddings.PKCS7Padding">
            <summary>
            Implements PKCS7 cipher padding
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Paddings.PKCS7Padding.Pad(System.Int32,System.Byte[])">
            <summary>
            Transforms the specified input.
            </summary>
            <param name="blockSize">Size of the block.</param>
            <param name="input">The input.</param>
            <returns>
            Padded data array.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CfbCipherMode">
            <summary>
            Implements CFB cipher mode
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CfbCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CfbCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhReplyMessage">
            <summary>
            Represents SSH_MSG_KEXECDH_REPLY message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhReplyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhReplyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhReplyMessage.KS">
            <summary>
            Gets a string encoding an X.509v3 certificate containing the server's ECDSA public host key
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhReplyMessage.QS">
            <summary>
            Gets the the server's ephemeral contribution to the ECDH exchange, encoded as an octet string.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhReplyMessage.Signature">
            <summary>
            Gets the an octet string containing the server's signature of the newly established exchange hash value.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo">
            <summary>
            Represents "subsystem" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
            <param name="subsystem">The subsystem.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.SubsystemRequestInfo.SubsystemName">
            <summary>
            Gets the name of the subsystem.
            </summary>
            <value>
            The name of the subsystem.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.EndOfWriteRequestInfo">
            <summary>
            Represents "eow@openssh.com" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.EndOfWriteRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.EndOfWriteRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.EndOfWriteRequestInfo"/> class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.EndOfWriteRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.SuccessMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_SUCCESS message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.SuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.SuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.PublicKeyMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PK_OK message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.PublicKeyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.PublicKeyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.PublicKeyMessage.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.PublicKeyMessage.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationRequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_REQUEST message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationRequestMessage.Name">
            <summary>
            Gets information request name.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationRequestMessage.Instruction">
            <summary>
            Gets information request instruction.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationRequestMessage.Language">
            <summary>
            Gets information request language.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Authentication.InformationRequestMessage.Prompts">
            <summary>
            Gets information request prompts.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SshPassPhraseNullOrEmptyException">
            <summary>
            The exception that is thrown when pass phrase for key file is empty or null
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshPassPhraseNullOrEmptyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException">
            <summary>
            The exception that is thrown when authentication failed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ChannelRequestEventArgs">
            <summary>
            Provides data for <see cref="E:Crestron.SimplSharp.Ssh.Channels.Channel.RequestReceived"/> event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ChannelRequestEventArgs.#ctor(Crestron.SimplSharp.Ssh.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ChannelRequestEventArgs"/> class.
            </summary>
            <param name="info">Request information.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ChannelRequestEventArgs.Info">
            <summary>
            Gets request information.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt">
            <summary>
            Provides prompt information when <see cref="E:Crestron.SimplSharp.Ssh.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> is raised
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt.#ctor(System.Int32,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt"/> class.
            </summary>
            <param name="id">The sequence id.</param>
            <param name="isEchoed">if set to <c>true</c> the user input should be echoed.</param>
            <param name="request">The request.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt.Id">
            <summary>
            Gets the prompt sequence id.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt.IsEchoed">
            <summary>
            Gets or sets a value indicating whether the user input should be echoed as characters are typed.
            </summary>
            <value>
              <c>true</c> if the user input should be echoed as characters are typed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt.Request">
            <summary>
            Gets server information request.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.AuthenticationPrompt.Response">
            <summary>
            Gets or sets server information response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Net.DnsResolveType">
            <summary>
            This enumeration defines the values of how frequently the HostName should be looked up.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.DnsResolveType.Once">
            <summary>
            The specified HostName should be looked up once per application run. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Net.DnsResolveType.Always">
            <summary>
            The HostName will be resolved again for each subsequent connect. 
            This value is preferable if you anticipate the System.Net.IPAddress of the target host to change frequently.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager">
            <summary>
            Crestron License manager class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CheckForDefaultLicense(System.UInt32,System.UInt32)">
            <summary>
            Method to check to see if this is a default license. if a default license then we do not indicate that the
            unit is licensed.
            </summary>
            <param name="vendorid"> Vendor Id</param>
            <param name="moduleid"> Module Id</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.ValidateLicense(System.UInt32,System.UInt32)">
            <summary>
            <remarks> Validate license information </remarks>
            </summary>
            <param name="vendorid">Vendor Identifier</param>
            <param name="moduleid">Module Identifier</param>
            <returns>A <see cref="T:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo"/>.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo">
            <summary>
            Crestron License manager information data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.m_payload">
            <summary>
            License payload data
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.m_name">
            <summary>
            License name string
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.m_info">
            <summary>
            License info string
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.m_valid">
            <summary>
            license is valid flag 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.m_vendorid">
            <summary> 
            License vendor id 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.m_moduleid">
            <summary> 
            License module id 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.Valid">
            <summary>
            Get license is valid flag for last license validation check (true=valid)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.VendorId">
            <summary>
            Get module id for last license validation access  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.ModuleId">
            <summary>
            Get module id for last license validation access  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.PayLoad">
            <summary>
            Get payload data for last license validation access  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.Info">
            <summary>
            Get/Set info string for last license validation access  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronLicenseManager.LicenseManager.CrestronLicenseInfo.Name">
            <summary>
            Get/Set name string for last license validation access  
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CyclicRedundancy.Calculate16BitCrcUsingTable(System.Byte*,System.Byte*,System.Byte@,System.Byte@)">
            <summary>
            Calculates the 16 bit CRC of a packet using a table.
            </summary>
            <param name="paramPointerToPacket">A pointer to the packet that the CRC will be calculated for.</param>
            <param name="paramPointerToWhereCrcWillGo">A pointer to where the CRC will go.</param>
            <param name="paramCrcHi">Variable that the CrcHi will be put into.</param>
            <param name="paramCrcLo">Variable that the CrcLo will be put into.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.RsaCipher">
            <summary>
            Implements RSA cipher algorithm.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.RsaCipher.#ctor(Crestron.SimplSharp.Ssh.Security.RsaKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.RsaCipher"/> class.
            </summary>
            <param name="key">The RSA key.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.RsaCipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Encrypted data.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.RsaCipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data.
            </returns>
            <exception cref="T:System.NotSupportedException">Only block type 01 or 02 are supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when decrypted block type is not supported.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CbcCipherMode">
            <summary>
            Implements CBC cipher mode
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CbcCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CbcCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CbcCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.Modes.CbcCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.AesCipher">
            <summary>
            AES cipher implementation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.AesCipher.#ctor(System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.AesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.AesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is null.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is too short.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.AesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is null.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is too short.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod">
            <summary>
            Provides functionality to perform password authentication.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="password"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="password"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.Authenticate(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>
            Result of authentication  process.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Crestron.SimplSharp.Ssh.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.Ssh.PasswordAuthenticationMethod.PasswordExpired">
            <summary>
            Occurs when user's password has expired and needs to be changed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason">
            <summary>
            Provides list of disconnect reason as specified by the protocol.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.None">
            <summary>
            Disconnect reason is not provided.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.HostNotAllowedToConnect">
            <summary>
            SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.ProtocolError">
            <summary>
            SSH_DISCONNECT_PROTOCOL_ERROR
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.KeyExchangeFailed">
            <summary>
            SSH_DISCONNECT_KEY_EXCHANGE_FAILED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.Reserved">
            <summary>
            SSH_DISCONNECT_RESERVED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.MacError">
            <summary>
            SSH_DISCONNECT_MAC_ERROR
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.CompressionError">
            <summary>
            SSH_DISCONNECT_COMPRESSION_ERROR
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.ServiceNotAvailable">
            <summary>
            SSH_DISCONNECT_SERVICE_NOT_AVAILABLE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.ProtocolVersionNotSupported">
            <summary>
            SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.HostKeyNotVerifiable">
            <summary>
            SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.ConnectionLost">
            <summary>
            SSH_DISCONNECT_CONNECTION_LOST
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.ByApplication">
            <summary>
            SSH_DISCONNECT_BY_APPLICATION
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.TooManyConnections">
            <summary>
            SSH_DISCONNECT_TOO_MANY_CONNECTIONS
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.AuthenticationCanceledByUser">
            <summary>
            SSH_DISCONNECT_AUTH_CANCELLED_BY_USER
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.NoMoreAuthenticationMethodsAvailable">
            <summary>
            SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Transport.DisconnectReason.IllegalUserName">
            <summary>
            SSH_DISCONNECT_ILLEGAL_USER_NAME
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EOF message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.ScpDownloadEventArgs">
            <summary>
            Provides data for the Downloading event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.ScpDownloadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.ScpDownloadEventArgs"/> class.
            </summary>
            <param name="filename">The downloaded filename.</param>
            <param name="size">The downloaded file size.</param>
            <param name="downloaded">The number of downloaded bytes so far.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ScpDownloadEventArgs.Filename">
            <summary>
            Gets the downloaded filename.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ScpDownloadEventArgs.Size">
            <summary>
            Gets the downloaded file size.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.ScpDownloadEventArgs.Downloaded">
            <summary>
            Gets number of downloaded bytes so far.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.TcpClient">
            <summary>
            TCPClient Class provides client connections for TCP (Transmission Control Protocol) network services.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.TcpClient.#ctor">
            <summary>
            TCP Client base constructor
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CMutex">
            <summary>
            Class for the crestron Mutex
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.#ctor">
            <summary>
            Constructor for the Crestron Mutex
            Mutex is not initially owned - Use WaitForMutex to get ownership
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.#ctor(System.Boolean)">
            <summary>
            Constructor for the Crestron Mutex
            </summary>
            <param name="bGrabMutexOnStartUp"> True to give the calling thread initial ownership of the mutex; otherwise false.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.Finalize">
            <summary>
            Destructor for the CMutex class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.Dispose">
            <summary>
            Clean up of unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.Dispose(System.Boolean)">
            <summary>
            Dispose implementation
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.Close">
            <summary>
            Closes the mutex
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.ReleaseMutex">
            <summary>
            Function to release the mutex
            Throws 
            </summary>
            <exception cref="T:System.ObjectDisposedException"> Object is already disposed </exception>
            <exception cref="T:System.ApplicationException"> Calling thread does not own the mutex </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.WaitForMutex">
            <summary>
            Function to acquire the specified mutex. This will block indefinitely until the mutex can be acquired
            </summary>
            <returns> True - if we can acquire the mutex / False - if we cannot acquire the mutex </returns>
            <exception cref="T:System.ObjectDisposedException"> Object is already disposed </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CMutex.WaitForMutex(System.Int32)">
            <summary>
            Function to acquire the specified mutex. This will block for the specified timeout In ms
            </summary>
            <param name="timeOutInms"> Time to wait for in Milliseconds </param>
            <returns> True - if we can acquire the mutex / False - if we cannot acquire the mutex</returns>
            <exception cref="T:System.ObjectDisposedException"> Object is already disposed </exception>
        </member>
        <member name="T:Crestron.SimplSharp.CNamedMutex">
            <summary>
            Class for the crestron Named Mutex
            A named mutex can be shared across multiple programs
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor for the Crestron named Mutex
            This can be used to synchronize across multiple programs
            Mutex is not initially owned - Use WaitForMutex to get ownership
            </summary>
            <param name="mutexName">Name of the mutex</param>
            <param name="bLogInfoIfMutexAlreadyExists">If true will log an info message if the mutex already exists (created by another program)</param>
            <exception cref="T:System.Exception">Unable to create mutex</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.#ctor(System.Boolean,System.String,System.Boolean)">
            <summary>
            Constructor for the Crestron Mutex
            </summary>
            <param name="bInitialOwner"> True to give the calling thread initial ownership of the mutex; otherwise false.</param>
            <param name="mutexName">Name of the mutex</param>
            <param name="bLogInfoIfMutexAlreadyExists">If true will log an info message if the mutex already exists (created by another program)</param>
            <exception cref="T:System.Exception">Unable to create mutex</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.Finalize">
            <summary>
            Destructor for the CMutex class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.Dispose">
            <summary>
            Clean up of unmanaged resources.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.Dispose(System.Boolean)">
            <summary>
            Dispose implementation
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.Close">
            <summary>
            Closes the mutex
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.ReleaseMutex">
            <summary>
            Function to release the mutex
            </summary>
            <exception cref="T:System.ObjectDisposedException"> Object is already disposed </exception>
            <exception cref="T:System.ApplicationException"> Calling thread does not own the mutex </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.WaitForMutex">
            <summary>
            Function to acquire the specified mutex. This will block indefinitely until the mutex can be acquired
            </summary>
            <returns> True - if we can acquire the mutex / False - if we cannot acquire the mutex </returns>
            <exception cref="T:System.ObjectDisposedException"> Object is already disposed </exception>
        </member>
        <member name="M:Crestron.SimplSharp.CNamedMutex.WaitForMutex(System.Int32)">
            <summary>
            Function to acquire the specified mutex. This will block for the specified timeout In ms
            </summary>
            <param name="timeOutInms"> Time to wait for in Milliseconds </param>
            <returns> True - if we can acquire the mutex / False - if we cannot acquire the mutex</returns>
            <exception cref="T:System.ObjectDisposedException"> Object is already disposed </exception>
        </member>
        <member name="P:Crestron.SimplSharp.CNamedMutex.Name">
            <summary>
            Property to get the name of the mutex
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.EthernetAdapterType">
            <summary>
            Enums for the Ethernet Adapter Type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAdapterType.EthernetUnknownAdapter">
            <summary>
            Error - Indicates adapter is unknown or ignored
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAdapterType.EthernetLANAdapter">
            <summary>
            Indicates Ethernet LAN Adapter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAdapterType.EthernetCSAdapter">
            <summary>
            Indicates Ethernet Control Subnet Adapter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAdapterType.EthernetWIFIAdapter">
            <summary>
            Indicates WIFI Adapter
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAdapterType.EthernetLAN2Adapter">
            <summary>
            Indicates second EthernetLANAdapter
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEthernetHelper">
            <summary>
            Crestron Ethernet Helper library 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PORT_FOR_TOOL_CS_CONNECTION_MAX_BUFFER_SIZE">
            <summary>
            maximum buffer size for toolbox and control system connection ethernet settings
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PORT_FORWARDING_MAX_BUFFER_SIZE">
            <summary>
            maximum buffer size for port forwarding ethernet settings
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.GetAdapterTypeForSpecifiedId(System.Int16)">
            <summary>
            Function to map the passed in adapter Id to the EthernetAdapterType
            </summary>
            <param name="adapterId"> Adapter Id to map to a valid EthernetAdapterType</param>
            <returns> EthernetAdapterType based on the passed in adapter Id.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> Invalid adapter Id specified</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.GetAdapterdIdForSpecifiedAdapterType(Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Function to return the adapter Id for the given adapter Type
            </summary>
            <param name="eAdapterType"> Adapter Type to map to an adapter Id</param>
            <returns> Adapter Id corresponding to the specified adapter type</returns>
            <exception cref="T:System.ArgumentException"> Invalid adapter type specified</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.SetEthernetParameter(Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET,System.Int16,System.String,Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary>
            Function to set the specified ethernet parameter for the specific device Id
            </summary>
            <param name="ethernetParameterToSet"> Ethernet parameter to set </param>
            <param name="adapterID">adapter Id - 0 Based</param>
            <param name="valueToBeSet"> value to be set</param>\
            <param name="userToken"> user credential token. </param>
            <returns>true if the operation succeeds; otherwise, false </returns>
            <exception cref="T:System.ArgumentException"> User Token is not valid </exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException"> User is not administrator.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.SetEthernetParameter(Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET,System.Int16,System.String)">
            <summary>
            Function to set the specified ethernet parameter for the specific device Id
            </summary>
            <param name="ethernetParameterToSet"> Ethernet parameter to set </param>
            <param name="adapterID">adapter Id - 0 Based</param>
            <param name="valueToBeSet"> value to be set</param>
            <returns>true if the operation succeeds; otherwise, false </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.GetEthernetParameter(Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET,System.Int16)">
            <summary>
            Function to get the specified ethernet parameter
            </summary>
            <param name="ethernetParameterToGet"> ethernet parameter to get</param>
            <param name="adapterID"> adapter Id - 0 Based</param>
            <returns>String containing the Ethernet parameter value.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.SetStartingPortForToolBoxCSConnection(System.UInt16)">
            <summary>
            Configure the starting port number for toolbox control system connection 
            </summary>
            <param name="PortNum"> The User PAT starting port number </param>
            <returns> returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.GetStartingPortForToolBoxCSConnection(System.UInt16@)">
            <summary>
            Get the starting port number for toolbox control system connection 
            </summary>
            <param name="PortNum"> The User PAT starting port number </param>
            <returns> returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.AddPortForwarding(System.UInt16,System.UInt16,System.String,Crestron.SimplSharp.CrestronEthernetHelper.ePortMapTransport)">
            <summary>
            Add port forwarding
            </summary>
            <param name="ExternalPort">Port number on the LAN side  </param>
            <param name="InternalPort">Port number on the control sub-net side </param>
            <param name="IPAddress">IP address (in dot decimal notation) of the device on the LAN side of Router </param>
            <param name="paramProtocol">IP protocol for the portmap service (TCP | UDP) </param>
            <returns>Returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.AddPortForwarding(System.UInt16,System.UInt16,System.String,System.String)">
            <summary>
            Add port forwarding
            </summary>
            <param name="ExternalPort"> Port number on the LAN side  </param>
            <param name="InternalPort"> Port number on the control sub-net side </param>
            <param name="IPAddress"> IP address (in dot decimal notation) of the device on the LAN side of Router </param>
            <param name="IPProtocol"> IP protocol for the portmap service (TCP | UDP) </param>
            <returns> Returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.RemovePortForwarding(System.UInt16,System.UInt16,System.String,Crestron.SimplSharp.CrestronEthernetHelper.ePortMapTransport)">
            <summary>
            Remove port forwarding
            </summary>
            <param name="ExternalPort">Port number on the LAN side  </param>
            <param name="InternalPort">Port number on the control sub-net side </param>
            <param name="IPAddress">IP address (in dot decimal notation) of the device on the LAN side of Router </param>
            <param name="paramProtocol">IP protocol for the portmap service (TCP | UDP) </param>
            <returns>Returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.RemovePortForwarding(System.UInt16,System.UInt16,System.String,System.String)">
            <summary>
            Remove port forwarding 
            </summary>
            <param name="ExternalPort"> Port number on the LAN side </param>
            <param name="InternalPort"> Port number on the control sub-net side </param>
            <param name="IPAddress"> IP address (in dot decimal notation) of the device on the LAN side of Router </param>
            <param name="IPProtocol"> IP protocol for the portmap service (TCP | UDP) </param>
            <returns> Returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.ModifyPortMap(System.Boolean,System.UInt32,Crestron.SimplSharp.CrestronEthernetHelper.ePortMapTransport)">
            <summary>
            Add or Remote a port map for this control system's router. Please wait for the router to be present before using this function.  
            </summary>
            <param name="paramAddRemove">'true' Add the following port map, 'false' remove the following map.</param>
            <param name="paramPort">Port to add or remove based on the value of 'paramAddRemove'.</param>
            <param name="paramProtocol">Network protocol this port maps to.</param>
            <returns>'true' the port map was successfully modified, 'false' there was an error making the modification.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.ListPortForward(System.Collections.Generic.List{Crestron.SimplSharp.CrestronEthernetHelper.PortForward}@)">
            <summary>
            Get list of port forwarding entries
            </summary>
            <param name="PfL"> where the port forward information is returned </param>
            <returns> returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.ListPortsOpenedForToolboxCSConnection(System.Collections.Generic.List{Crestron.SimplSharp.CrestronEthernetHelper.UserPAT}@)">
            <summary>
            Get list of ports opened for toolbox control system connections
            </summary>
            <param name="UPL"> where the toolbox and cs connection information is returned </param>
            <returns> returns PortForwardingUserPatRetCodes.NoErr if successful </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.GetCSCIDRNotation(System.Text.StringBuilder@)">
            <summary>
            Function to the Get the CS side CIDR notation
            </summary>
            <param name="csSideCIDRNotationString"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.SetCSCIDRNotation(System.String)">
            <summary>
            Function to set the CS side CIDR notation
            </summary>
            <param name="csSideCIDRNotationString"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEthernetHelper.GetListOfConnectedIpAddressesForIPID(System.UInt32)">
            <summary>
            Get list of IP Addresses connected to a specified IPID.
            This function is not valid for a UDP connection.
            </summary>
            <param name="ipid"> The IPID to query IP Addresses for.</param>
            <returns>String array populated with IP Address(es) of connected device(s).  
            Empty string array means nothing is connected to the IPID or an invalid IPID
            Returns null in error condition</returns>
            <remarks>This functionality requires a minimum firmware version of 1.011.0010</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.IsControlSubnetInAutomaticMode">
            <summary>
             Indicates if the ControlSubnet is in the Automatic mode
             This is only for systems which have a router.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET">
            <summary>
            Enum for ethernet parameters which we can set
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_STATIC_IPADDRESS">
            <summary>
            Set Static IP Address
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_STATIC_IPMASK">
            <summary>
            Set Static IP Mask
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_STATIC_DEFROUTER">
            <summary>
            Set Static Default Router
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_HOSTNAME">
            <summary>
            Set HostName
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_DOMAINNAME">
            <summary>
            Set Domain Name
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_ETHERNET_STATE">
            <summary>
            Set Ethernet State 
            Valid States are ON/OFF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_DHCP_STATE">
            <summary>
            Set DHCP State
            Valid States are ON/OFF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_CIP_PORT">
            <summary>
            Set CIP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_CTP_PORT">
            <summary>
            Set CTP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_WEB_PORT">
            <summary>
            Set Web Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_SECURE_CIP_PORT">
            <summary>
            Set Secure CIP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_SECURE_CTP_PORT">
            <summary>
            Set Secure CTP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_SECURE_WEB_PORT">
            <summary>
            Set Secure Web Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_WEBSERVER_STATE">
            <summary>
            Set Webserver State
            Valid States are ON / OFF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_SSL_STATE">
            <summary>
            Set SSL State
            Can be SET to OFF / CA or SELF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.ADD_DNS_SERVER">
            <summary>
            Adds the specified DNS Server
            DNS server specified in A.B.C.D format
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.REMOVE_DNS_SERVER">
            <summary>
            Removes the specified DNS Server
            DNS server specified in A.B.C.D format
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_SET.SET_CONTROL_SUBNET_ROUTER_PREFIX">
            <summary>
            Sets the CS side router prefix
            Only valid on systems which have a router
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET">
            <summary>
            Enum for ethernet parameters which we can get
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_STATIC_IPADDRESS">
            <summary>
            Returns the statically assigned IP Address
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_STATIC_IPMASK">
            <summary>
            Returns the statically assigned IP Mask
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_STATIC_ROUTER">
            <summary>
            Returns the statically assigned Default Router
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_CURRENT_IP_ADDRESS">
            <summary>
            Returns the current IP Address
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_CURRENT_IP_MASK">
            <summary>
            Returns the current IP Mask
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_CURRENT_ROUTER">
            <summary>
            Returns the current Router
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_HOSTNAME">
            <summary>
            Returns the current HostName
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_DOMAIN_NAME">
            <summary>
            Returns the current Domain Name
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_DHCP_SERVER">
            <summary>
            Returns the current DHCP Server
            Only valid if the current DHCP state is enabled
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_CIP_PORT">
            <summary>
            Returns the current CIP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_CTP_PORT">
            <summary>
            Returns the current CTP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_WEB_PORT">
            <summary>
            Returns the current Webserver port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_SECURE_CIP_PORT">
            <summary>
            Returns the current Secure CIP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_SECURE_CTP_PORT">
            <summary>
            Returns the current Secure CTP Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_SECURE_WEB_PORT">
            <summary>
            Returns the currentSecure WebServer Port
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_WEBSERVER_STATUS">
            <summary>
            Returns the current Webserver status
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_SSL_SELF_STATUS">
            <summary>
            Get SSL SELF Status
            Returns ON / OFF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_SSL_TYPE">
            <summary>
            Get SSL Type 
            Returns None / Self / CA
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_SSL_CA_STATUS">
            <summary>
            Get SSL CA status
            Returns ON / OFF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_SSL_OFF_STATUS">
            <summary>
            Get SSL OFF Status
            Returns ON / OFF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_DNS_SERVER">
            <summary>
            Get DNS Servers
            List of "," separated DNS servers
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_MAC_ADDRESS">
            <summary>
            Get MAC address
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_STARTUP_DHCP_STATUS">
            <summary>
            Returns DHCP state on system startup
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_CURRENT_DHCP_STATE">
            <summary>
            Returns the current DHCP state
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_ETHERNET_STATUS">
            <summary>
            Returns the current Ethernet State
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_LINK_STATUS">
            <summary>
             Returns the current Link Status
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ETHERNET_PARAMETER_TO_GET.GET_CONTROL_SUBNET_ROUTER_PREFIX">
            <summary>
            Get the CS side router prefix
            Only valid on systems which have a router
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes">
            <summary>
            Port forwarding and SetStartingPortForToolBoxCSConnection function return codes 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.NoErr">
            <summary>
            User PAT call was successful
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.GenErr">
            <summary>
            General error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.RouterErr">
            <summary>
            Router is not preset
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.RouterRetErr">
            <summary>
            Router returned error
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.ExtPortErr">
            <summary>
            External port number is invalid 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.IntPortErr">
            <summary>
            Internal port number is invalid
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.HostNameErr">
            <summary>
            Host name is invalid
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.ProtocolErr">
            <summary>
            Invalid protocol or unsupported protocol selected
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.PortErr">
            <summary>
            Port number is invalid
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.IpAddrErr">
            <summary>
            IP address is invalid
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.PortForwardingUserPatRetCodes.IsolateNetworkModeActiveErr">
            <summary>
            Isolate Network mode is active
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEthernetHelper.PortForward">
            <summary>
            Port forwarding parameters
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.PortForward.ExternalPort">
            <summary>
            Port number on the LAN side 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.PortForward.InternalPort">
            <summary>
            Port number on the control sub-net side 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.PortForward.IPAddress">
            <summary>
            IP address
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.PortForward.IPProtocol">
            <summary>
            IP protocol e.g. TCP, UDP etc...
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.PortForward.Owner">
            <summary>
            Indicates the owner 
            Can be either User or System
            User indicates that this entry can be deleted
            System indicates that this entry cannot be deleted
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEthernetHelper.UserPAT">
            <summary>
            User PAT (protocol address translation) mapping parameters
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.UserPAT.LANIFPORT">
            <summary>
            LAN interface port number
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.UserPAT.IPProtocol">
            <summary>
            IP protocol e.g. TCP, UDP etc...
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.UserPAT.DestinationHost">
            <summary>
            Destination host name on the control sub-net side
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.UserPAT.DestinationPort">
            <summary>
            Destination port number on the control sub-net side
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEthernetHelper.UserPAT.Connections">
            <summary>
            Number of active connections being forwarded from the LAN side
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEthernetHelper.ePortMapTransport">
            <summary>
            Enumeration to define valid network protocols for the <see cref="M:Crestron.SimplSharp.CrestronEthernetHelper.ModifyPortMap(System.Boolean,System.UInt32,Crestron.SimplSharp.CrestronEthernetHelper.ePortMapTransport)"/> method.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ePortMapTransport.TCP">
            <summary>
            Transmission Control Protocol (TCP)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEthernetHelper.ePortMapTransport.UDP">
            <summary>
            User Datagram Protocol (UDP)
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.EthernetAutodiscovery">
            <summary>
            Ethernet Autodiscovery class
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAutodiscovery.m_ADOperationCriticalSection">
            <summary>
            Prevent concurrent access to the AD functions
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.Query">
            <summary>
            Function to initiate an Autodiscovery query on all the adapters. Will populate the DiscoveredElementsList.
            This function needs to be invoked before a call can be made to any of the autodiscovery related functions.
            </summary>
            <remarks> On a successful response , the DiscoveredElementsList gets populated.</remarks>
            <returns>eAutoDiscoveryErrors - enum indicating return value</returns>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.Query(Crestron.SimplSharp.EthernetAdapterType)">
            <summary>
            Function to initiate an Autodiscovery query on the specified adapter. Will populate the DiscoveredElementsList.
            This function needs to be invoked before a call can be made to any of the autodiscovery related functions.
            The parameter is only supported on firmware version 1.502.0018 and higher.
            </summary>
            <param name="adapterToQuery">Indicates which adapter to query. The valid values are <see cref="F:Crestron.SimplSharp.EthernetAdapterType.EthernetLANAdapter"/> for LAN side ,
            <see cref="F:Crestron.SimplSharp.EthernetAdapterType.EthernetCSAdapter"/> for CS side and <see cref="F:Crestron.SimplSharp.EthernetAdapterType.EthernetUnknownAdapter"/> for both sides. 
             <see cref="F:Crestron.SimplSharp.EthernetAdapterType.EthernetUnknownAdapter"/> is the default value. This value is only used for a unit with a router. For all other
             units this value is ignored.</param>
            <remarks> On a successful response , the DiscoveredElementsList gets populated.</remarks>
            <returns>eAutoDiscoveryErrors - enum indicating return value</returns>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.GetDeviceElementForSpecifiedAddress(System.String)">
            <summary>
            Function to return the device element at the specified IP Address
            </summary>
            <param name="IPAddressForSpecificElement"> IP address </param>
            <returns> Element in the discovered list corresponding to the specified address or NULL</returns>
            <remarks> Invoke the "Query" function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.GetDeviceElementForSpecifiedHostName(System.String)">
            <summary>
            Function to return the device element with the specified hostname
            </summary>
            <param name="hostNameForSpecificElement"> hostname to search for </param>
            <returns> Element in the discovered list corresponding to the specified address or NULL</returns>
            <remarks> Invoke the "Query" function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.SetIPTableEntryOnSpecifiedDevice(Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement,System.UInt16,System.Int32)">
            <summary>
            Function to send an IP Table entry for this control system to the specified device. 
            <para>The device will require its setup (or equivalent) button pressed to acknowledge and process the new entry.</para>
            </summary>
            <param name="discoveredElement">Specific device within <see cref="P:Crestron.SimplSharp.EthernetAutodiscovery.DiscoveredElementsList"/>.</param>
            <param name="newIdInHexToSetSpecifiedDeviceTo">IP ID of the entry to send. Adds/Modifies an entry within the IPTable on the device</param>
            <param name="timeOutInMilliSeconds">Timeout in ms for the device the respond to the autodiscovery command. This call will block until the timeout expires or the device responds to the autodiscovery. 
            <para>0 specifies no timeout. <see cref="F:Crestron.SimplSharp.Timeout.Infinite"/> specifies this call will block until the device responds to the autodiscovery request.</para>
            </param>       
            <returns><see cref="T:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors"/> enum indicating failure or success</returns>
            <remarks>Call will return when autodiscovery stop function is invoked, timeout expires, or the device responds to the autodiscovery command.
            <para>Invoke the <see cref="M:Crestron.SimplSharp.EthernetAutodiscovery.Query"/> or <see cref="M:Crestron.SimplSharp.EthernetAutodiscovery.Query(Crestron.SimplSharp.EthernetAdapterType)"/> to populate the discovered element list.</para></remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.LightSpecifiedDevice(Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement,System.Int32)">
            <summary>
            Function to light the specified device.This will help the user to locate a specific device
            </summary>
            <param name="discoveredElement"> Specific device within the discovered list</param>
            <param name="timeOutInMilliSeconds"> Timeout in ms for the device the respond to the autodiscovery command. This call will block until the timeout expires
            or the device responds to the autodiscovery. 0 specifies no timeout. Infinite specifies call will block until the device responds to the autodiscovery request.
            </param>
            <returns> eAutoDiscoveryErrors Enum indicating failure or success</returns>
            <remarks> Call will return when we invoke the stop function / timeout expires / device responds to the autodiscovery command.
            This requires a minimum firmware version of 1.011.0011 and higher.
            Invoke the "Query" function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.ClearIPTableEntryOnSpecifiedDevice(Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement)">
            <summary>
            Function to clear the IP table entry on the specified device.
            </summary>
            <param name="discoveredElement"> Specific device within the discovered list</param>
            <returns> Boolean indicating failure or success</returns>
            <remarks> Invoke the "Query" function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.SetIPTableEntryOnSpecifiedDeviceType(System.String,System.UInt16,System.Int32,System.Boolean)">
            <summary>
            Function to send an IP Table entry for this control system to all devices of the specified type. 
            <para>The devices will require their setup (or equivalent) button pressed to acknowledge and process the new entry.</para>
            </summary>
            <param name="deviceType">Indicates the device type. This type must be present in the currnet <see cref="P:Crestron.SimplSharp.EthernetAutodiscovery.DiscoveredElementsList"/>.</param>
            <param name="newIdInHexToSetSpecifiedDeviceTo">New IP ID of the entry to send. Adds/Modifies an entry within the IPTable on the device.</param>
            <param name="timeOutInMilliSeconds">Timeout in ms for the device the respond to the autodiscovery command. This call will block until the timeout expires or the device responds to the autodiscovery.  
            <para>0 specifies no timeout. <see cref="F:Crestron.SimplSharp.Timeout.Infinite"/> specifies this call will block until the device responds to the autodiscovery request.</para>
            </param>
            <param name="noForceAllDevices">If set to true, the controller will not force all devices on the network into light and poll mode if the specified device type is not found. This requires firmware version 1.013.0000 and higher.</param>
            <returns><see cref="T:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors"/> enum indicating failure or success.</returns>
            <remarks>Call will return when autodiscovery stop function is invoked, timeout expires, or the device responds to the autodiscovery command.
            <para>Invoke the <see cref="M:Crestron.SimplSharp.EthernetAutodiscovery.Query"/> or <see cref="M:Crestron.SimplSharp.EthernetAutodiscovery.Query(Crestron.SimplSharp.EthernetAdapterType)"/> to populate the discovered element list.</para></remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.SetIPTableEntryOnSpecifiedDeviceType(System.String,System.UInt16,System.Int32)">
            <summary>
            Function to send an IP Table entry for this control system to all devices of the specified type. 
            <para>The devices will require their setup (or equivalent) button pressed to acknowledge and process the new entry.</para>
            </summary>
            <param name="deviceType">Indicates the device type. This type must be present in the currnet <see cref="P:Crestron.SimplSharp.EthernetAutodiscovery.DiscoveredElementsList"/>.</param>
            <param name="newIdInHexToSetSpecifiedDeviceTo">New IP ID of the entry to send. Adds/Modifies an entry within the IPTable on the device.</param>
            <param name="timeOutInMilliSeconds">Timeout in ms for the device the respond to the autodiscovery command. This call will block until the timeout expires or the device responds to the autodiscovery. 
            <para>0 specifies no timeout. <see cref="F:Crestron.SimplSharp.Timeout.Infinite"/> specifies this call will block until the device responds to the autodiscovery request.</para>
            </param>
            <returns><see cref="T:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors"/> enum indicating failure or success.</returns>
            <remarks>Call will return when autodiscovery stop function is invoked, timeout expires, or the device responds to the autodiscovery command.
            <para>Invoke the <see cref="M:Crestron.SimplSharp.EthernetAutodiscovery.Query"/> or <see cref="M:Crestron.SimplSharp.EthernetAutodiscovery.Query(Crestron.SimplSharp.EthernetAdapterType)"/> to populate the discovered element list.</para></remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.ClearIPTableEntryOnSpecifiedDeviceType(System.String)">
            <summary>
            Function to clear the IP Table Entry on the specified device defined by the device Type
            </summary>
            <param name="deviceType">Indicates the device type</param>
            <returns> eAutoDiscoveryErrors enum indicating failure or success</returns>
            <remarks> Invoke the "Query" function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.ForceIPTableEntryOnSpecifiedDeviceType(System.String,System.UInt16)">
            <summary>
            Function to force the IPTableEntry on the specified device defined by the device type
            </summary>
            <param name="deviceType">Indicates the device type </param>
            <param name="newIdInHexToSetSpecifiedDeviceTo"> New IP Id to set the device to. Adds/Modifies an entry within the IPTable on the device</param>        
            <returns> eAutoDiscoveryErrors enum indicating failure or success</returns>
            <remarks> Forces an iptable entry on the device of the specified type.
            Invoke the "Query" function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.StopLightAndPoll">
            <summary>
            Function to stop the Autodiscovery functionality on the controller
            </summary>
            <returns>  eAutoDiscoveryErrors enum indicating failure or success</returns>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.EthernetAutodiscovery.SetHostNameOnSpecifiedDevice(Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement,System.String)">
            <summary>
            Function to set the hostname on the specified device
            </summary>
            <param name="discoveredElement">Specific device within the discovered list</param>
            <param name="newHostNameForSpecifiedDevice"> New hostname to set on the device</param>
            <returns>eAutoDiscoveryErrors enum indicating failure or success</returns>
            <remarks> The device might not accept the new hostname until a reboot.
            Invoke the "Query" function to populate the discovered element list.</remarks>
            <exception cref="T:System.NotSupportedException">Ethernet autodiscovery is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetAutodiscovery.DiscoveredElementsList">
            <summary>
            List of elements discovered by issuing a query command
            Need to invoke the <see cref="M:Crestron.SimplSharp.EthernetAutodiscovery.Query"/> before this list is populated.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement">
            <summary>
            One Autodiscovered Ethernet device
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement.IPAddress">
            <summary>
            IP Address of the device
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement.IPId">
            <summary>
            IP Id of the device.
            If non zero, indicates that the device has an IP Table entry for this specific controller.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement.HostName">
            <summary>
            Hostname of the device
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement.DeviceIdString">
            <summary>
            Device Identification string 
            Includes device type / Version and additional device specific information
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.EthernetAutodiscovery.AutoDiscoveredDeviceElement.AdapterType">
            <summary>
            Indicates the adapter on which the specific device lies
            Default is LAN.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors">
            <summary>
            Enum for return codes from the Autodiscovery operation
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors.AutoDiscoveryNotSupported">
            <summary>
            Indicates Autodiscovery not supported
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors.AutoDiscoveryOperationSuccess">
            <summary>
            Indicates Autodiscovery operation was successful
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors.AutoDiscoveryOperationTimeOut">
            <summary>
            Indicates Autodiscovery operation timed out
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors.AutoDiscoveryUnknownError">
            <summary>
            Indicates unknown error.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.EthernetAutodiscovery.eAutoDiscoveryErrors.AutoDiscoveryInvalidParameter">
            <summary>
            Indicates invalid parameter(s) were passed in to the calls
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ErrorLog">
            <summary>
            Class to allow the CustomApplication to log errors.
            Starting with firmware version 1.500 and higher, the contents 
            of the error log will also get posted to the Remote Sys Logger 
            if it is enabled.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ErrorLog.ErrLogger">
            <summary>
            Static Handle to the Error Log
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Error(System.String)">
            <summary>
            Log a user generated error to the system's error log.
            </summary>
            <param name="message">String containing the error information</param>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Error(System.String,System.String)">
            <summary>
            Function to log an error
            </summary>
            <param name="msginfo">Method Name or other Context information</param>
            <param name="errorstring">String containing the error information</param>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Error(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            error log using the specified format information.
            </summary>
            <param name="message">A composite format string for error information.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Warn(System.String)">
            <summary>
            Log a user generated warning to the system's error log.
            </summary>
            <param name="message">String containing the warning information</param>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Warn(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            error log using the specified format information.
            </summary>
            <param name="message">A composite format string for warning information.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Notice(System.String)">
            <summary>
            Log a user generated notice to the system's error log.
            </summary>
            <param name="message">String containing the notice information</param>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Notice(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            error log using the specified format information.
            </summary>
            <param name="message">A composite format string for notice information.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Ok(System.String)">
            <summary>
            Log a user generated OK message to the system's error log.
            </summary>
            <param name="message">String containing the Ok information</param>
            <remarks> This function is only available on firmware versions 1.500.0004 and higher.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Ok(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            error log using the specified format information.
            </summary>
            <param name="message">A composite format string for Ok information.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
            <remarks> This function is only available on firmware versions 1.500.0004 and higher.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Exception(System.String,System.Exception)">
            <summary>
            Function to log an exception 
            </summary>
            <param name="msg">Function Name</param>
            <param name="ex">Exception information.</param>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Info(System.String)">
            <summary>
            Log Info Message
            </summary>
            <param name="message">String containing the information</param>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.Info(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            error log using the specified format information.
            </summary>
            <param name="message">A composite format string for information.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ErrorLog.InitializeErrorLogClass">
            <summary>
            Initialize the error log class.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.RemoteSysLogging">
            <summary>
            Class to allow the CustomApplication to log errors to Remote System Log server
            This will not log the errors to the error log.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.InitializeRemoteSysLoggingClass">
            <summary>
            Initialize the remote system logging class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.BuildLogMsg(System.String,System.String)">
            <summary>
            Build an error log message with necessary information
            </summary>
            <param name="errorLevel"></param>
            <param name="logMsg"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Error(System.String)">
            <summary>
            Log a user generated error to the remote system error log.
            </summary>
            <param name="message">String containing the error information</param>
            <returns>Returns true if successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Error(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            the remote system logger using the specified format information.
            </summary>
            <param name="format">A composite format string for error information.</param>
            <param name="args">An array of objects to write using format.</param>
            <returns>Returns true if successful</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Info(System.String)">
            <summary>
            Log Info Message
            </summary>
            <param name="message">String containing the information</param>
            <returns>Returns true if successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Info(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            the remote system logger using the specified format information.
            </summary>
            <param name="format">A composite format string for information.</param>
            <param name="args">An array of objects to write using format.</param>
            <returns>Returns true if successful</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Ok(System.String)">
            <summary>
            Log Ok Message
            </summary>
            <param name="message">String containing the information</param>
            <returns>Returns true if successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Ok(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            the remote system logger using the specified format information.
            </summary>
            <param name="format">A composite format string for information.</param>
            <param name="args">An array of objects to write using format.</param>
            <returns>Returns true if successful</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Warn(System.String)">
            <summary>
            Log a user generated warning to the remote system error log.
            </summary>
            <param name="message">String containing the warning information</param>
            <returns>Returns true if successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Warn(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            the remote system logger using the specified format information.
            </summary>
            <param name="format">A composite format string for warning information.</param>
            <param name="args">An array of objects to write using format.</param>
            <returns>Returns true if successful</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Notice(System.String)">
            <summary>
            Log a user generated notice to the remote system error log.
            </summary>
            <param name="message">String containing the notice information</param>
            <returns>Returns true if successful</returns>
        </member>
        <member name="M:Crestron.SimplSharp.RemoteSysLogging.Notice(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects to 
            the remote system logger using the specified format information.
            </summary>
            <param name="format">A composite format string for notice information.</param>
            <param name="args">An array of objects to write using format.</param>
            <returns>Returns true if successful</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">Format is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.RemoteSysLogging.Enabled">
            <summary>
            Property to indicate the remote system logger is enabled or not
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.RemoteSysLogging.Connected">
            <summary>
            Property to indicate the remote system logger is connected or not
            </summary>
            <remarks>This property is only available on firmware version 1.500.0009 and higher</remarks>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.Ok">
            <summary>
            SSH_FX_OK
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.Eof">
            <summary>
            SSH_FX_EOF
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.NoSuchFile">
            <summary>
            SSH_FX_NO_SUCH_FILE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.PermissionDenied">
            <summary>
            SSH_FX_PERMISSION_DENIED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.Failure">
            <summary>
            SSH_FX_FAILURE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.BadMessage">
            <summary>
            SSH_FX_BAD_MESSAGE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.NoConnection">
            <summary>
            SSH_FX_NO_CONNECTION
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.ConnectionLost">
            <summary>
            SSH_FX_CONNECTION_LOST
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.OperationUnsupported">
            <summary>
            SSH_FX_OP_UNSUPPORTED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.InvalidHandle">
            <summary>
            SSH_FX_INVALID_HANDLE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.NoSuchPath">
            <summary>
            SSH_FX_NO_SUCH_PATH
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.FileAlreadyExists">
            <summary>
            SSH_FX_FILE_ALREADY_EXISTS
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.WriteProtect">
            <summary>
            SSH_FX_WRITE_PROTECT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.NoMedia">
            <summary>
            SSH_FX_NO_MEDIA
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.NoSpaceOnFilesystem">
            <summary>
            SSH_FX_NO_SPACE_ON_FILESYSTEM
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.QuotaExceeded">
            <summary>
            SSH_FX_QUOTA_EXCEEDED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.UnknownPrincipal">
            <summary>
            SSH_FX_UNKNOWN_PRINCIPAL
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.LockConflict">
            <summary>
            SSH_FX_LOCK_CONFLICT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.DirNotEmpty">
            <summary>
            SSH_FX_DIR_NOT_EMPTY
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.NotDirectory">
            <summary>
            SSH_FX_NOT_A_DIRECTORY
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.InvalidFilename">
            <summary>
            SSH_FX_INVALID_FILENAME
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.LinkLoop">
            <summary>
            SSH_FX_LINK_LOOP
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.CannotDelete">
            <summary>
            SSH_FX_CANNOT_DELETE
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.InvalidParameter">
            <summary>
            SSH_FX_INVALID_PARAMETER
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.FileIsADirectory">
            <summary>
            SSH_FX_FILE_IS_A_DIRECTORY
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.ByteRangeLockConflict">
            <summary>
            SSH_FX_BYTE_RANGE_LOCK_CONFLICT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.ByteRangeLockRefused">
            <summary>
            SSH_FX_BYTE_RANGE_LOCK_REFUSED
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.DeletePending">
            <summary>
            SSH_FX_DELETE_PENDING
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.FileCorrupt">
            <summary>
            SSH_FX_FILE_CORRUPT
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.OwnerInvalid">
            <summary>
            SSH_FX_OWNER_INVALID
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.GroupInvalid">
            <summary>
            SSH_FX_GROUP_INVALID
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Sftp.StatusCodes.NoMatchingByteRangeLock">
            <summary>
            SSH_FX_NO_MATCHING_BYTE_RANGE_LOCK
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeSha1">
            <summary>
            Represents "diffie-hellman-group-exchange-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher">
            <summary>
            Blowfish cipher implementation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher._s0">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher._s1">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher._s2">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher._s3">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher._p">
            <summary>
            The p-array
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher.#ctor(System.Byte[],Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherMode,Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.Ciphers.BlowfishCipher.ProcessTable(System.UInt32,System.UInt32,System.UInt32[])">
            <summary>
            apply the encryption cycle to each value pair in the table.
            </summary>
            <param name="xl">The xl.</param>
            <param name="xr">The xr.</param>
            <param name="table">The table.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.NetConfClient">
            <summary>
            Contains operation for working with NetConf server.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.NetConfClient._netConfSession">
            <summary>
            Holds SftpSession instance that used to communicate to the SFTP server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.#ctor(Crestron.SimplSharp.Ssh.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.#ctor(System.String,System.Int32,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.#ctor(System.String,System.String,Crestron.SimplSharp.Ssh.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.SendReceiveRpc(System.Xml.XmlDocument)">
            <summary>
            Sends the receive RPC.
            </summary>
            <param name="rpc">The RPC.</param>
            <returns>Reply message to RPC request</returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.SendReceiveRpc(System.String)">
            <summary>
            Sends the receive RPC.
            </summary>
            <param name="xml">The XML.</param>
            <returns>Reply message to RPC request</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.SendCloseRpc">
            <summary>
            Sends the close RPC.
            </summary>
            <returns>Reply message to closing RPC request</returns>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.NetConfClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.NetConfClient.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>The operation timeout.</value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.NetConfClient.ServerCapabilities">
            <summary>
            Gets NetConf server capabilities.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.NetConfClient.ClientCapabilities">
            <summary>
            Gets NetConf client capabilities.
            </summary>
            <exception cref="T:Crestron.SimplSharp.Ssh.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.NetConfClient.AutomaticMessageIdHandling">
            <summary>
            Gets or sets a value indicating whether [automatic message id handling].
            </summary>
            <value>
            <c>true</c> if [automatic message id handling]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.MessageAttribute">
            <summary>
            Indicates that a class represents SSH message. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.MessageAttribute.#ctor(System.String,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.MessageAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="number">The number.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.MessageAttribute.Name">
            <summary>
            Gets or sets message name as defined in RFC 4250.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.MessageAttribute.Number">
            <summary>
            Gets or sets message number as defined in RFC 4250.
            </summary>
            <value>
            The number.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_FAILURE message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="description">The description.</param>
            <param name="reasonCode">The reason code.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage.Description">
            <summary>
            Gets description for failure.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ChannelOpenFailureMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.NetConfServerException">
            <summary>
            The exception that is thrown when there is something wrong with the server capabilities.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.NetConfServerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.NetConfServerException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.NetConfServerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.NetConfServerException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.NetConfServerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.NetConfServerException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.DerData">
            <summary>
            Base class for DER encoded data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.DerData"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.DerData"/> class.
            </summary>
            <param name="data">DER encoded data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.Encode">
            <summary>
            Encodes written data as DER byte array.
            </summary>
            <returns>DER Encoded array.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.ReadBigInteger">
            <summary>
            Reads next mpint data type from internal buffer.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.ReadInteger">
            <summary>
            Reads next int data type from internal buffer.
            </summary>
            <returns>int read.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.Write(System.Boolean)">
            <summary>
            Writes BOOLEAN data into internal buffer.
            </summary>
            <param name="data">UInt32 data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.Write(System.UInt32)">
            <summary>
            Writes UInt32 data into internal buffer.
            </summary>
            <param name="data">UInt32 data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.Write(Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Writes INTEGER data into internal buffer.
            </summary>
            <param name="data">BigInteger data to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.Write(System.Byte[])">
            <summary>
            Writes OCTETSTRING data into internal buffer.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.Write(Crestron.SimplSharp.Ssh.Common.ObjectIdentifier)">
            <summary>
            Writes OBJECTIDENTIFIER data into internal buffer.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.WriteNull">
            <summary>
            Writes NULL data into internal buffer.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.DerData.Write(Crestron.SimplSharp.Ssh.Common.DerData)">
            <summary>
            Writes DerData data into internal buffer.
            </summary>
            <param name="data">DerData data to write.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.DerData.IsEndOfData">
            <summary>
            Gets a value indicating whether end of data is reached.
            </summary>
            <value>
            	<c>true</c> if end of data is reached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsHeader">
            <summary>
            HttpsHeader holds Name and Value pairs for Request and Response Header fields.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeader.#ctor(System.String,System.String)">
            <summary>
            HTTPs Header constructor with Name and Value Parameters. 
            </summary>
            <param name="aName">String with the name of the HTTP header line.</param>
            <param name="aValue">String with the value of the HTTP header line.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeader.#ctor(System.String)">
            <summary>
            Creates an instance of the HTTPs Header Class with the HTTP Header line parameter.
            </summary>
            <param name="aLine">String with the entire HTTP header line.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeader.ToString">
            <summary>
            HTTPs Header ToString
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeader.Get(System.Int32)">
            <summary>
            Get a value from the HTTPs Header fields at the specified index.
            </summary>
            <param name="aIndex">Index to get</param>
            <returns>string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeader.Add(System.String)">
            <summary>
            Add a value to the HTTP Header field.
            </summary>
            <param name="aString">String containing HTTP Header field to add.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeader.Name">
            <summary>
            Get or set the HTTPs Header Name property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeader.Count">
            <summary>
            Get the HTTPs Header Count property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeader.Value">
            <summary>
            Get or set the HTTPs Header Value property.
            Setting this Value property will clear all old values of this HttpsHeader.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsHeaders">
            <summary>
            HttpsHeaders contains an array of HttpHeader objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.#ctor">
            <summary>
            Creates an instance of the HTTPsHeaders class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.Initialize">
            <summary>
            Initializes the HTTPs Header to a default of 100 HeaderLines.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.ParseFirstLine">
            <summary>
            Parse the first line of the HTTPs header.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.Clear">
            <summary>
            Delete the entries in the HttpHeaders Hashtable
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.ReadHeaderStream(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Reads the HTTPs Header for the incoming HTTPs request connection. 
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.ReadHeader(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Reads the HTTPs Header for the incoming HTTPs request connection. 
            </summary>
            <param name="connection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.WriteHeader(Crestron.SimplSharp.CrestronFileTransferClient)">
            <summary>
            Write the HTTPs Header Content out from the Connection.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.WriteHeader(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Write the HTTPs Header Content out from the Connection.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.SetResponseHeader(System.String,System.Int32,System.String)">
            <summary>
            Sets the HTTPs Response Header with the specified parameter values.
            </summary>
            <param name="aVersion">String for HTTP version number.</param>
            <param name="aResult">Int32 for HTTP response code.</param>
            <param name="aResultText">String for HTTP response text.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.SetRequestHeader(System.String,System.String,System.String)">
            <summary>
            Sets the specified RequestVersion, RequestType, RequestPath.
            </summary>
            <param name="aVersion">String for HTTP version number.</param>
            <param name="aRequestType">String for HTTP method.</param>
            <param name="aRequestPath">String for HTTP request path.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.ContainsHeaderValue(System.String)">
            <summary>
            Determines whether the HttpsHeaders object contains a specified value.
            </summary>
            <param name="aName">String containing an HTTP header name to look up</param>
            <returns>true if the HttpHeaders object contains a specified value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.SetHeaderValue(System.String,System.String)">
            <summary>
            Adds the specified name and value to the array.
            </summary>
            <param name="aName">String with the name of the HTTP header line.</param>
            <param name="aValue">String with the value of the HTTP header line.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.AddHeader(Crestron.SimplSharp.Net.Https.HttpsHeader)">
            <summary>
            Adds the HTTPSHeader object to the array of HTTPSHeaders.
            </summary> 
            <param name="aHTTPSHeader">HTTPSHeader object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.GetHeaderValue(System.String)">
            <summary>
            Gets the value associated with the specified name.
            </summary>
            <param name="aName">String containing an HTTP header name to look up</param>
            <returns>A string value associated with the specified name</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.ToString">
            <summary>
            ToString method for the HTTPs Header
            </summary>
            <returns>the HTTPS Header as a string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaders.GetEnumerator">
            <summary>
            Returns the Enumerator for the HTTPs Header Enumerator.
            </summary>
            <returns>An Enumerator for the HTTP Headers</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.RequestType">
            <summary>
            Gets or sets the method of the HTTPs request, usually "GET" or "POST".
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.RequestPath">
            <summary>
            Gets or sets the Request URL, not including the server URL.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.RequestVersion">
            <summary>
            Gets or sets the protocol version of the HTTPs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.ResponseCode">
            <summary>
            Returns the Status-Code of the Response message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.MaxHeaderLines">
            <summary>
            Determines the maximum HTTPs header count allowed.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.MaxHeaderLinesEnabled">
            <summary>
            Determines whether the MaxHeaderLines is enabled.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.ContentType">
            <summary>
            The mime type of this content. Used for Response headers. 
            It is composed of at least two parts: a type, a subtype and one or more optional parameters. For example: text/html; charset=utf-8.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.FirstHeader">
            <summary>
            Gets or sets the Status-Line of the Response message. 
            It consists of the protocol version followed by a numeric status code and its associated textual phrase.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.Count">
            <summary>
            Returns the number of elements contained in the array.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Https.HttpsHeaders.Item(System.String)">
            <summary>
            Returns the HTTP Header for the index provided.
            </summary>
            <param name="aKey">HTTP Header name to look up.</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Https.HttpsHeaderException">
            <summary>
            An Exception object that contains errors returned from one of the HttpsHeader or HttpsHeaders methods call.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaderException.#ctor">
            <summary>
            HTTPHeaderException default constructor 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaderException.#ctor(System.String)">
            <summary>
            HTTPsHttpHeaderException with message string parameter
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Https.HttpsHeaderException.#ctor(System.String,System.Exception)">
            <summary>
            HTTPsHttpHeaderException with message string and Exception parameters
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Net.DnsLookup">
            <summary>
            DNS Lookup class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.DnsLookup.ResolveFirst(System.String)">
            <summary>
            Resolves the given host name and returns the first IP address that matches it. 
            If the host could not be resolved, a DnsResolveException is thrown.
            </summary>
            <param name="aHostName"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.DnsLookup.ResolveRandom(System.String)">
            <summary>
            Resolves the given host name and - if multiple IP Addresses are available - returns a random IP address from the list. 
            This can be used in load balancing scenarios to hit a random of several available hosts. 
            If the host could not be resolved, a DnsResolveException is thrown.
            </summary>
            <param name="aHostName"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.DnsLookup.ResolveAll(System.String)">
            <summary>
            ResolveAll returns an array with all IP addresses for the given host name. 
            In load balancing scenarios, several IP addresses can be provided in the DNS servers for the same host name. 
            If the host name could not be resolved, an empty array is returned. 
            To retrieve one specific IP address, you will usually use ResolveFirst or ResolveAll.
            </summary>
            <param name="aHostName"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.DnsLookup.TryStringAsIPAddress(System.String)">
            <summary>
            Try to resolve the input parameter string as an IP address.
            </summary>
            <param name="aHostName"></param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.DnsLookup.ReverseResolve(System.Net.IPAddress)">
            <summary>
            Obtains the host name for a given IP address via reverse-dns, if possible.
            </summary>
            <param name="aIPAddress">IP Address</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.DnsResolveException">
            <summary>
            DnsResolveException class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.DnsResolveException.#ctor(System.String)">
            <summary>
            This type of exception is thrown in resolving of a host name or if the IP address fails.
            </summary>
            <param name="aMessage"></param>
        </member>
        <member name="T:Crestron.SimplSharp.MatchCriteriaType">
            <summary>
            Enum to specify the type of matching for a Gather operation
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.MatchCriteriaType.MatchDelimiter">
            <summary>
            This mode indicates that the match is based on a particular delimiter.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.MatchCriteriaType.MatchByLength">
            <summary>
            This mode indicates that the match is based on a set number of characters.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.MatchCriteria">
            <summary>
            Class to contain the criteria for a Gather match
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.MatchCriteria.#ctor(System.String,System.Int32)">
            <summary>
            Constructor to create a match criteria based on delimiter matching.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.MatchCriteria.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor to create a match criteria based on number of characters in buffer.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.MatchCriteria.CheckForMatch(System.Text.StringBuilder,System.Text.StringBuilder@)">
            <summary>
            Routine that handles the matching operation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.MatchCriteria.canSpawnEvent">
            <summary>
            This member controls the synchronizations of tasks.
            </summary>
            
        </member>
        <member name="F:Crestron.SimplSharp.MatchCriteria.GatherAsyncTimeout">
            <summary>
            Used to spawn the event handler with the timeout status set.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.MatchCriteria.RetriggerTimeout">
            <summary>
            Method to reset the Timeout timer for a Gather operation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.MatchCriteria.PauseTimeoutTimer">
            <summary>
            Method to pause the Timeout timer for a Gather operation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.MatchCriteria.WaitForSpawnEvent">
            <summary>
            Method to check for the canSpawnEvent
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.MatchCriteria.SetCanSpawnEvent">
            <summary>
            Method to check for the canSpawnEvent
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.MatchCriteria.Type">
            <summary>
            Property to return the type of matching set.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.MatchCriteria.MatchString">
            <summary>
            Property to return the delimiter when matching by delimiter
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.MatchCriteria.MatchNumChars">
            <summary>
            Property to return the number of characters to match when in that mode.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.MatchCriteria.MatchCriteriaTimeoutHandler">
            <summary>
            Delegate to be used to spawn the event handler with the timeout status set.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEnvironment">
            <summary>
            Methods to change the system's Date, Time, and Timezone.
            </summary>
            <summary>
            Provides information about the current environment.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetTime(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Function to change the current time of the system.
            </summary>
            <param name="Hours">The hour portion of the time to set the system time to. Valid range is from 0 to 23.</param>
            <param name="Minutes">The minutes portion of the time to set the system time to. Valid range is from 0 to 59.</param>
            <param name="Seconds">The seconds portion of the time to set the system time to. Valid range is from 0 to 59.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">One of the parameters is outside the valid range.</exception>
            <exception cref="T:System.NotSupportedException">Setting the time is not supported in this environment.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GetLocalTime">
            <summary>
            Function to get the current local time of the system.
            </summary>
            <returns> DateTime indicating local time</returns>
            <exception cref="T:System.InvalidOperationException">Internal Error getting local time.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetDate(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Function to change the current date of the system.
            </summary>
            <param name="Month">The month to which the date is set. Valid range is 1 through 12, corresponding to January through December.</param>
            <param name="Day">The dat of the month to which to date is set. The range varies from month to month, but always starts at 1 and does not go above 31.</param>
            <param name="Year">The year to which the date is set. The year is four digits, i.e. 2006.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">One of the parameters is outside the valid range.</exception>
            <exception cref="T:System.NotSupportedException">Setting the date is not supported in this environment.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetTimeAndDate(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Set the system time and date
            </summary>
            <param name="Hours">The hour portion of the time to set the system time to. Valid range is from 0 to 23.</param>
            <param name="Minutes">The minutes portion of the time to set the system time to. Valid range is from 0 to 59.</param>
            <param name="Seconds">The seconds portion of the time to set the system time to. Valid range is from 0 to 59.</param>
            <param name="Month">The month to which the date is set. Valid range is 1 through 12, corresponding to January through December.</param>
            <param name="Day">The dat of the month to which to date is set. The range varies from month to month, but always starts at 1 and does not go above 31.</param>
            <param name="Year">The year to which the date is set. The year is four digits, i.e. 2006.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">One of the parameters is outside the valid range.</exception>/// 
            <exception cref="T:System.NotSupportedException">Setting the time and date are not supported in this environment.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.ChangeSystemTime(NativeInterop.SYSTEMTIME@)">
            <summary>
            Function to actually set the time or date.
            </summary>
            <param name="systemTimeIn"></param>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEnvironment.TimeZoneListUpdateNeededDueToTimeChange">
            <summary>
            The flag indicates if it is needed to update TimeZone list due to system time changes
            <para>"0" means no system time changes and no TimeZoneList update is required,</para>
            <para>"1" means system time changed and TimeZoneList update is required.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SubscribeToProgramStatus(System.Action{Crestron.SimplSharp.eProgramStatusEventType})">
            <summary>
            Function to allow a subscription to the program status event AFTER the public facing <see cref="E:Crestron.SimplSharp.CrestronEnvironment.ProgramStatusEventHandler"/> event was triggered.
            </summary>
            <param name="programStatusFunction">Function to subscribe to the internal event.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.AllowOtherAppsToRun">
            <summary>
            This is a function that users will be allowed to call in order to be polite to the system and allow other applications to run.
            </summary>
            <returns>true if event was signaled, false if timeout or events are not created</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetSystemEvent(Crestron.SimplSharp.eSystemEventType)">
            <summary>
            System Event method to set the event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetEthernetEvent(Crestron.SimplSharp.EthernetEventArgs)">
            <summary>
            Ethernet Event method to set the event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetProgramEvent(Crestron.SimplSharp.eProgramStatusEventType)">
            <summary>
            Program Event method to set the event.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEnvironment._SimplEnvironment">
            <summary>
            Variable that is returned to the user to inform them of what environment their application is running in.
            Set to SimplSharpPro here as that is the default environment.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.Sleep(System.Int32)">
            <summary>
            Function to sleep for the specified time
            </summary>
            <param name="timeoutInMs"> Timeout in milli seconds</param>
            <exception cref="T:System.ArgumentOutOfRangeException"> The time-out value is negative and is not equal to Timeout.Infinite</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.ScaleWithLimits(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Scales a given input value that lies between a given set of input limits to an output value given a set of output limits.  
            This version works on unsigned integer arguments.
            </summary>
            <param name="InputValue">The uint input value to be converted.</param>
            <param name="InputUpperBound">The uint upper boundary of the domain from which the input value is to be converted.</param>
            <param name="InputLowerBound">The uint lower boundary of the domain from which the input value is to be converted.</param>
            <param name="OutputUpperBound">The uint upper boundary of the range into which the input value is to be converted.</param>
            <param name="OutputLowerBound">The uint lower boundary of the range into which the input value is to be converted.</param>
            <returns>
            <para>A scaled int value from the equation :</para>
            <para>OutputValue = OutputLowerBound + (( (InputValue - InputLowerBound) * (OutputUpperBound - OutputLowerBound) ) / (InputUpperBound - InputLowerBound))</para>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para>Cause: InputLowerBound &gt;= InputUpperBound</para>
            <para>Cause: OutputLowerBound &gt; OutputUpperBound </para>
            <para>Cause: InputUpperBound == InputLowerBound.</para>
            <para>Output overflow. (See message for overflow value.)</para></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.ScaleWithLimits(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Scales a given input value that lies between a given set of input limits to an output value given a set of output limits.  
            This version works on signed integer arguments.
            </summary>
            <param name="InputValue">The int input value to be converted.</param>
            <param name="InputUpperBound">The int upper boundary of the domain from which the input value is to be converted.</param>
            <param name="InputLowerBound">The int lower boundary of the domain from which the input value is to be converted.</param>
            <param name="OutputUpperBound">The int upper boundary of the range into which the input value is to be converted.</param>
            <param name="OutputLowerBound">The int lower boundary of the range into which the input value is to be converted.</param>
            <returns>
            <para>A scaled int value from the equation :</para>
            <para>OutputValue = OutputLowerBound + (( (InputValue - InputLowerBound) * (OutputUpperBound - OutputLowerBound) ) / (InputUpperBound - InputLowerBound))</para>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para>Cause: InputLowerBound &gt;= InputUpperBound</para>
            <para>Cause: OutputLowerBound &gt; OutputUpperBound </para>
            <para>Cause: InputUpperBound == InputLowerBound.</para>
            <para>Output under- or over- flow. (See message for output value.)</para>
            </exception>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEnvironment._TimeZoneRec">
            <summary>
            TimeZone list
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.PopulateTimeZoneList">
            <summary>
            Populate timezone list 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.PopulateTimeZoneListEx">
            <summary>
            Populate timezone list for FW v1.013.0000 and higher
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.PopulateTimeZoneListWithDSTDetails">
            <summary>
            Populate timezone list for FW v1.502.0000 and higher
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GetTimeZoneList">
            <summary>
            Function to get the current timezone list 
            </summary>
            <returns> Returns list of timezones </returns>
            <exception cref="T:System.NotSupportedException">The time zone list is not supported in this environment.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GetTimeZone">
            <summary>
            Get current timezone information
            </summary>
            <returns> Returns current timezone settings </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GetTimeZone(System.UInt32)">
            <summary>
            Get timezone information for the specified timezoneId
            </summary>
            <param name="timezoneId"> Id of the requested timezone from the timezone list </param>
            <returns> returns timezone settings based on the specified timezoneId  </returns>
            <exception cref="T:System.NotSupportedException">Time zone IDs are not supported in this environment.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GetTimeZoneDetail">
            <summary>
            Get current timezone detail settings 
            </summary>
            <returns> Returns current timezone details </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.PrintToAuditLog(System.UInt32,System.String,System.String,System.Object[])">
            <summary>
            Method to print the Audit log to the console through SimplSharpAPIs.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetTimeZone(System.Int32)">
            <summary> 
            Set local time to the timezone with given timezoneId
            </summary>
            <param name="timezoneId"> Id for the required timezone within the timezone list  </param>
            <returns> returns true if successful </returns>
            <exception cref="T:System.NotSupportedException">Setting the time zone is not supported in this environment.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SetTimeZoneLinux(System.Int32)">
            <summary>
            Method to set the timezone for the linux system.
            </summary>
            <param name="timezoneId"></param>
            <returns>'true' = the timezone was changes as expected. 'false' = the timezone was not valid or unable to set it.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.#cctor">
            <summary>
            Crestron Environment class constructor 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.ConvertTSIDToSerialNumber(System.String)">
            <summary>
            Method to convert the given TSID to the serial number.
            This method will only work on firmware versions greater then 1.503.0000.
            </summary>
            <param name="TSIDString"> TSID of the device to convert to the serial number.</param>
            <returns> String containing the serial number or 00000000 if the conversion failed.</returns>
            <exception cref="T:System.NotSupportedException">Indicates that the current firmware version does not meet the minimum required version</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.ProgramCompatibility">
            <summary>
            Indicates the compatibility of programs for this control system.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronEnvironment.SystemEventHandler">
            <summary>
            System Event Handler.
            Programmer needs to subscribe to this handler for receiving system events.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronEnvironment.EthernetEventHandler">
            <summary>
            Ethernet Event Handler.
            Programmer needs to subscribe to this handler for receiving ethernet events.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharp.CrestronEnvironment.ProgramStatusEventHandler">
            <summary>
            Program Event Handler.
            Programmer needs to subscribe to this handler for receiving program status events.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CurrentProgramState">
            <summary>
            Member to return the last received program state change. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.RuntimeEnvironment">
            <summary>
            Gets the runtime environment of the SIMPL# module.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform">
            <summary>
            Gets the platform SIMPL#/SIMPL# Pro is running on.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.NewLine">
            <summary>
            Gets the newline string defined for this environment.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.TickCount">
            <summary>
            Gets the number of milliseconds elapsed since the system started.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.Latitude">
            <summary>
            Property to set the latitude which is used by the native scheduling engine for the astronomical events.
            The Set feature is not supported on <see cref="F:Crestron.SimplSharp.eDevicePlatform.Server"/>. It will throw a <see cref="T:System.NotSupportedException"/>.
            This property requires a reboot for it to take into effect. This property is read on startup and could be
            out of sync if it was changed and the unit was not rebooted.
            This defaults to 41.000000 North
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Valid values are -90.0 to 90.0</exception>
            <exception cref="T:System.SystemException"> Unable to set Latitude.</exception>
            <exception cref="T:System.NotSupportedException"> Operation is not supported</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.Longitude">
            <summary>
            Property to set the longitude which is used by the native scheduling engine for the astronomical events.
            The Set feature is not supported on <see cref="F:Crestron.SimplSharp.eDevicePlatform.Server"/>. It will throw a <see cref="T:System.NotSupportedException"/>.
            This property requires a reboot for it to take into effect. This property is read on startup and could be
            out of sync if it was changed and the unit was not rebooted.
            This defaults to -73.933333 West
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Valid values are -180.0 to 180.0</exception>
            <exception cref="T:System.SystemException"> Unable to set Longitude.</exception>
            <exception cref="T:System.NotSupportedException"> Operation is not supported</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.TimeZoneRec">
            <summary>
            TimeZone list property
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEnvironment.AllowOtherAppsToRunSupport">
            <summary>
            Internal support class for the AllowOtherAppsToRun system events.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEnvironment.AllowOtherAppsToRunSupport.pIdleEvent">
            <summary>
            This is a system event that is used to signal the idle task that we want to give up time and be polite.
            We need to use an event through NativeInterop to gain access to the named event in the Watchdog.
            </summary>            
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEnvironment.AllowOtherAppsToRunSupport.pContinueEvent">
            <summary>
            This is a system event that is used to allow the current thread to continue once it is signaled by the watchdog.
            We need to use an event through NativeInterop to gain access to the named event in the Watchdog.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.AllowOtherAppsToRunSupport.#ctor">
            <summary>
            Constructor to initialize allow other apps to run events.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.AllowOtherAppsToRunSupport.Finalize">
            <summary>
            Destructor to clean up events.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEnvironment.OSVersion">
            <summary>
            Provides version information for the current operating system and firmware.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.OSVersion.Version">
            <summary>
            Gets a System.Version object that identifies the operating system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.OSVersion.Firmware">
            <summary>
            Returns the firmware version of the controller
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEnvironment.GC">
            <summary>
            Controls the system garbage collector, a service that automatically reclaims unused memory.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GC.SuppressFinalize(System.Object)">
            <summary>
             Requests that the system not call the finalizer for the specified object.
            </summary>
            <param name="objectToSuppress">The object that a finalizer must not be called for</param>
            <exception cref="T:System.ArgumentNullException">objectToSuppress is NULL</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GC.ReRegisterForFinalize(System.Object)">
            <summary>
             Requests that the system call the finalizer for the specified object for
              which GC.SuppressFinalize(System.Object) has previously been called.
            </summary>
            <param name="objectToSuppress">The object that a finalizer must be called for</param>
            <exception cref="T:System.ArgumentNullException">objectToSuppress is NULL</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.GC.GetTotalMemory">
            <summary>
            Method to retrieve the number of bytes currently thought to be allocated. 
            </summary>
            <returns>A number that is the best available approximation of the number of bytes currently allocated in managed memory.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo">
            <summary>
            timezone settings
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.ToString">
            <summary>
            String representation of this timezone.
            </summary> 
            <returns>The <see cref="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.Formatted"/> string for this timezone.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
            <summary>
            Returns a value indicating whether the specified date and time is within
            a daylight saving time period.  
            </summary>
            <param name="time">A date and time in current time zone.</param>
            <returns>true if time is in a daylight saving time period; otherwise, false.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.ID">
            <summary>
            Crestron timezone ID 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.Name">
            <summary>
            timezone name  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.Offset">
            <summary>
            timezone offset  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.NumericOffset">
            <summary>
            Timezone standard numeric offset from GMT in minute. It can be negative/positive.
            This property requires firmwares with version 1.013.0000 and higher.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.DaylightNumericOffset">
            <summary>
            Timezone daylight numeric offset from GMT in minute. It can be negative/positive.
            This property requires firmwares with version 1.013.0000 and higher.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.InDayLightSavings">
            <summary>
            Indicates if the current time zone is in DST.
            <para>This property is only valid for the current timezone, the system is in.</para>
            This property requires firmwares with version 1.013.0000 and higher.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.Bias">
            <summary>
            Timezone Bias
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.StandardBias">
            <summary>
            Timezone Standard Bias
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.DaylightBias">
            <summary>
            Timezone Daylight Bias
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.Formated">
            <summary>
            Formatted timezone string  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.Formatted">
            <summary>
            Formatted timezone string  
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.DSTEntry">
            <summary>
            Day light saving time starting day and time for a time zone in string format
            This property requires firmwares with version 1.502.0000 and higher.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.CrestronTimeZoneInfo.DSTExit">
            <summary>
            Day light saving time ending day and time for a time zone in string format
            This property requires firmwares with version 1.502.0000 and higher.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronEnvironment.SystemInfo">
            <summary>
            Class containing Crestron control system information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.m_sSerialNumber">
            <summary>
            Property to store the serial number
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.LoadTSID">
            <summary>
            Method to load the TSID 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.UseTSIDAsSerialNumber">
            <summary>
            Method to use the TSID as the serial number...
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.GetTSIDOrUnrestrictedSerialNumberOnLinux">
            <summary>
            Method to get the unrestricted serial number or TSID on linux
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.GetUnrestrictedSerialNumberOnCEIfExists">
            <summary>
            Method to get the unrestricted serial number on CE. This just makes the new call.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.GetTSIDOrUnrestrictedSerialNumberOnWinCE">
            <summary>
            Method to get the TSID or the unrestricted serial number
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.GetTSIDOrUnrestrictedSerialNumber">
            <summary>
            Method to get the TSID or serial number - this does the platform dependent check and calls the appropriate method.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.GetSerialNumberOfDevice">
            <summary>
            Method to get the serial number of the device
            </summary>
            <returns> A serial string representing the serial number</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.convertTSIDToNewSerial(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            This method will return the serial number.
            </summary>
            <param name="TSID"> Current TSID to convert to serial number</param>
            <param name="strSerial"> string to get the serial number</param>
            <param name="strSerialLength"> length of the buffer passed in ( Max size is 512)</param>
            <returns>0 for failure else success</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.ConvertTSIDToSerial(System.String)">
            <summary>
            Method to convert the TSID to serial...
            Calls into the utilities dll 
            </summary>
            <param name="tsidStringToConvert"></param>
            <returns></returns>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.RamFree">
            <summary>
            Get the amount of available RAM in bytes.
            This property is operationally expensive to use
            (as it takes a significant time hit).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.TotalRamSize">
            <summary>
            Get the total amount of RAM available in the controller
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronEnvironment.SystemInfo.SerialNumber">
            <summary>
            Property to return the serial number of the device.
            On firmware versions less then 1.503.0000, this returns the TSID of the device.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.eDeviceSecureBlobStatus">
            <summary>
            Crestron Secure Blob Status codes
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.Ok">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.InvalidParameter">
            <summary>
            A parameter provided is invalid.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.NotEnoughRoom">
            <summary>
            Not enough size of data buffer on read operation provided
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.DeviceUnavailable">
            <summary>
            The Secure Blob is not available
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.StoreFailure">
            <summary>
            An error occured while storing the data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.RetrieveFailure">
            <summary>
            An error occured while retrieving the data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.DeleteFailure">
            <summary>
            An error occured while deleting the data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.EncryptFailure">
            <summary>
            An error occured while encrypting the data.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDeviceSecureBlobStatus.DecryptFailure">
            <summary>
            An error occured while decryping the data.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.DeviceSecureBlob">
            <summary>
            The Secure Blob API that allows encrypting and storing of data.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.DeviceSecureBlobEncrypt(System.IntPtr,System.Byte[],System.IntPtr,System.Byte[],System.IntPtr,System.Byte[],System.IntPtr@,System.Boolean)">
             Encrypt a blob of data
             
             @param[in]     dataSize            -- sizeof unencrypted data
             @param[in]     dataBuf             -- pointer to unencrypted data buffer
             @param[in]     supplementalKeySize -- size of supplemental key (optional)
             @param[in]     supplementalKey     -- supplemental key (optional)
             @param[in/out] encryptedBufSize    -- sizeof encrypted data buffer
             @param[in/out] encryptedBuf        -- pointer to encrypted data buffer
             @param[out]    encryptedDataSize   -- sizeof encrypted data returned by API
             @param[in]     ownerOnly           -- indicates if the blob can only be decrypted by the current user
            
             @return return status code
            
             Additional notes:
              #1 -- The caller of this API is expected to allocate memory all data buffers
              #2 -- The implementation of this API is expected to generate and save a master key
                    on the local device.
             
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.DeviceSecureBlobDecrypt(System.IntPtr,System.Byte[],System.IntPtr,System.Byte[],System.IntPtr,System.Byte[],System.IntPtr@,System.Boolean)">
             Decrypt a blob of data
             
             @param[in] encryptedDataSize   -- sizeof encrypted data buffer
             @param[in] encryptedData       -- pointer to encrypted data buffer
             @param[in] supplementalKeySize -- size of supplemental key (optional)
             @param[in] supplementalKey     -- supplemental key (optional)
             @param[in/out] dataBufSize     -- sizeof unencrypted data buffer
             @param[in/out] dataBuf         -- pointer to unencrypted data buffer
             @param[out] dataSize           -- sizeof unencrypted data
             @param[in] ownerOnly           -- indicates if the blob can only be decrypted by the current user
            
             @return return status code
            
             Additional notes:
              #1 -- The caller of this API is expected to allocate memory all data buffers
              #2 -- The implementation of this API is expected to generate and save a master key
                    on the local device.
             
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.DeviceSecureBlobEncryptedSize(System.IntPtr)">
             Get size of encrypted data blob for a given unencrypted data block
             
             @param[in] dataSize  -- sizeof unencrypted data blob
            
             @return return size of encrypted data blob
            
             Additional notes:
              #1 -- the expected usage of this method would be to retrieve the possible size of
                    an encrypted data blob for a given size of unencrypted data
            
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.DeviceSecureBlobDecryptedMaxSize(System.IntPtr)">
             Get size of decrypted data blob for a given encrypted data block
             
             @param[in] encryptedDataSize  -- sizeof encrypted data blob
            
             @return return size of decrypted data blob
            
             Additional notes:
              #1 -- the expected usage of this method would be to retrieve the possible size of
                    an decrypted data blob for a given size of encrypted data
             
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.Store(System.String,System.Boolean,System.Byte[],System.Byte[])">
            <summary>
            Encrypts the input string given and passes back a base-64 encoded version of the resulting binary data
            </summary>
            <param name="tag">Unique string identifier to reference the data</param>
            <param name="global">Boolean to restrict access</param>
            <param name="input">Byte[] to be encrypted</param>
            <param name="key">Optional secure key</param>
            <returns>A eDeviceSecureBlobStatus value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.Retrieve(System.String,System.Boolean,System.Byte[],System.Byte[]@)">
            <summary>
            Decodes a byte[] represented previously encrypted data and passes back the original text that was encrypted.
            </summary>
            <param name="tag">Unique string identifier to reference the data</param>
            <param name="global">Boolean to restrict access</param>
            <param name="key">Optional secure key</param>
            <param name="outData">Byte[] that contains the retrieved data</param>
            <returns>A eDeviceSecureBlobStatus value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.Delete(System.String,System.Boolean)">
            <summary>
            Deletes a tag from the secure blob.
            </summary>
            <param name="tag">Unique string identifier to reference the data</param>
            <param name="global">Boolean to restrict access</param>
            <returns>A eDeviceSecureBlobStatus value.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.DeviceSecureBlob.Encrypt(System.Byte[],System.Byte[],System.Byte[]@)">
            <summary>
            Encrypts data from the provided input array and passes back the encrypted output.
            </summary>
            <param name="input">Byte[] that contains the data to be encrypted</param>
            <param name="key">Optional secure key</param>
            <param name="output">Byte[] that contains the encrpyed data.</param>
            <returns></returns>
        </member>
        <member name="P:Crestron.SimplSharp.DeviceSecureBlob.Supported">
            <summary>
            Returns True if DeviceSecureBlob is supported on this firmware.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronPrintDelegate">
            <summary>
            Delegate callback for printing to the console
            </summary>
            <param name="pStringToPrint">String to print to the console.</param>    
        </member>
        <member name="T:Crestron.SimplSharp.CrestronSimplSharpConsoleAccessDelegate">
            <summary>
            Delegate callback for printing to the console
            </summary>
            <param name="cmdToSend"> Command to Send</param>
            <param name="timeOut">Timeout to wait for a response </param>
            <param name="pResponse"> Response to the console command sent </param>
        </member>
        <member name="T:Crestron.SimplSharp.SimplSharpProConsoleCmdFunction">
            <summary>
            Delegate to hold a ConsoleCommand callback function
            </summary>                
            <param name="cmdParameters">Command line parameters received</param>    
        </member>
        <member name="T:Crestron.SimplSharp.ConsoleAccessLevelEnum">
            <summary>
            Console access levels
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ConsoleAccessLevelEnum.AccessOperator">
            <summary>
            users with OPERATOR right can execute
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ConsoleAccessLevelEnum.AccessProgrammer">
            <summary>
            users with PROGRAMMER right can execute
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.ConsoleAccessLevelEnum.AccessAdministrator">
            <summary>
            users with ADMINISTRATOR right can execute
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.ICrestronConsole">
            <summary>
            Interface to the Crestron Console.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.Print(System.String)">
            <summary>
            Function to print a message to the text console
            </summary>
            <param name="message">Message to print to the console</param>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.Print(System.String,System.Object[])">
            <summary>
            Function to print a formatted message to the text console.
            </summary>
            <param name="message">Message to print to the console</param>
            <param name="args">Array containing objects to format</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.PrintLine(System.String)">
            <summary>
            Function to print a formatted message to the text console including the end line characters.
            </summary>
            <param name="message">Message to print to the console</param>       
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.PrintLine(System.String,System.Object[])">
            <summary>
            Function to print a formatted message to the text console including the end line characters.
            </summary>
            <param name="message">Message to print to the console</param>
            <param name="args">Array containing objects to format</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.AddNewConsoleCommand(Crestron.SimplSharp.SimplSharpProConsoleCmdFunction,System.String,System.String,Crestron.SimplSharp.ConsoleAccessLevelEnum)">
            <summary>
            Function for the user to add console commands to the system.
            </summary>
            <param name="userFunction">Callback function the command will call.</param>
            <param name="userCmdName">Name of the console command. Spaces are not permitted.</param>
            <param name="userCmdHelp">Information on the console command.</param>
            <param name="userAccess">Authentication level of the command.</param>
            <exception cref="T:System.ArgumentException">Verify the Command name does not contain spaces.</exception>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro</exception>
            <returns>true if the operation succeeds; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.AddNewConsoleCommand(Crestron.SimplSharp.SimplSharpProConsoleCmdFunction,System.String,System.String,Crestron.SimplSharp.ConsoleAccessLevelEnum,System.Boolean)">
            <summary>
            Function for the user to add console commands to the system.
            </summary>
            <param name="userFunction">Callback function the command will call.</param>
            <param name="userCmdName">Name of the console command. Spaces are not permitted.</param>
            <param name="userCmdHelp">Information on the console command.</param>
            <param name="userAccess">Authentication level of the command.</param>
            <param name="bIsCommandHidden"> if true the command will be hidden and will not show up in help user</param>
            <exception cref="T:System.ArgumentException">Verify the Command name does not contain spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> Specified parameter is out of range.</exception>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
            <returns>true if the operation succeeds; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.RemoveConsoleCommand(System.String)">
            <summary>
            Function for the user to remove console commands from the system. 
            Only commands which have been registered by the user can be removed
            </summary>
            <param name="userCmdName"> Name of the console command to remove</param>
            <returns> true if the operation succeeds; otherwise false</returns>
            <exception cref="T:System.ArgumentException"> command name passed in was not registered by the user</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.ConsoleCommandResponse(System.String)">
            <summary>
            Function to print a message to the console, from the context of a console command function.
            </summary>
            <param name="message">Message to print</param>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.ConsoleCommandResponse(System.String,System.Object[])">
            <summary>
            Function to print a formatted message to the console, from the context of a console command function.
            </summary>
            <param name="message">Message to print.</param>
            <param name="args">Array containing objects to format.</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>           
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.SendControlSystemCommand(System.String,System.String@)">
            <summary>
            Function to allow the user to send a console command and receive a response from the control system.
            </summary>
            <param name="commandToSend">The console command to send; end line not needed.</param>
            <param name="pResponse">Reference to a string where the controller's response will be stored.</param>
            <returns>True/False if the command was sent correctly.</returns>
            <remarks>Can only execute commands that specify up to (and including) programmer access level.</remarks>
            <exception cref="T:System.NotSupportedException">Feature is unavailable.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.ICrestronConsole.SendControlSystemCommand(System.String,System.String@,System.UInt32)">
            <summary>
            Function to allow the user to send a console command and receive a response from the control system.
            </summary>
            <param name="commandToSend">The console command to send; end line not needed.</param>
            <param name="pResponse">Reference to a string where the controller's response will be stored.</param>
            <param name="timeOutInMsec">Timeout in millisec.</param>
            <returns>True/False if the command was sent correctly.</returns>
            <remarks>Can only execute commands that specify up to (and including) programmer access level.</remarks>
            <exception cref="T:System.NotSupportedException">Feature is unavailable.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.ICrestronConsole.ConsoleRegistered">
            <summary>
            Flag to determine if the console has been registered. Once registered adding new console commands is not allowed.
            </summary>        
        </member>
        <member name="T:Crestron.SimplSharp.CrestronConsole">
            <summary>
            Class to allow access to the Crestron Console.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronConsole._consoleAccessObject">
            <summary>
            Interface for the CrestronConsole.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.InitializeConsole(Crestron.SimplSharp.ICrestronConsole)">
            <summary>
            Function to initialize the internal ICrestronConsole.
            </summary>
            <param name="ConsoleIn">Object of the console boxed in the Console Interface</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.Print(System.String)">
            <summary>
            Function to print a message to the text console.
            </summary>
            <param name="message">Message to print to the console.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.Print(System.String,System.Object[])">
            <summary>
            Function to print a formatted message to the text console.
            </summary>
            <param name="message">Message to print to the console.</param>
            <param name="args">Array containing objects to format.</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.PrintLine(System.String)">
            <summary>
            Function to print a message to the text console including the end line characters.
            </summary>
            <param name="message">Message to print to the console.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.PrintLine(System.String,System.Object[])">
            <summary>
            Function to print a formatted message to the text console including the end line characters.
            </summary>
            <param name="message">Message to print to the console.</param>
            <param name="args">Array containing objects to format.</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.RemoveConsoleCommand(System.String)">
            <summary>
            Function for the user to remove console commands from the system. 
            Only commands which have been registered by the user can be removed
            </summary>
            <param name="userCmdName"> Name of the console command to remove</param>
            <returns> true if the operation succeeds; otherwise false</returns>
            <exception cref="T:System.ArgumentException"> command name passed in was not registered by the user or command name contains spaces</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> Specified parameter is out of range.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.AddNewConsoleCommand(Crestron.SimplSharp.SimplSharpProConsoleCmdFunction,System.String,System.String,Crestron.SimplSharp.ConsoleAccessLevelEnum,System.Boolean)">
            <summary>
            Function for the user to add console commands to the system.
            </summary>
            <param name="userFunction">Callback function the command will call.</param>
            <param name="userCmdName">Name of the console command. Spaces are not permitted.</param>
            <param name="userCmdHelp">Information on the console command.</param>
            <param name="userAccess">Authentication level of the command.</param>
            <param name="bIsCommandHidden"> if true the command will be hidden and will not show up in help user</param>
            <exception cref="T:System.ArgumentException">Verify the Command name does not contain spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> Specified parameter is out of range.</exception>
            <returns>true if the operation succeeds; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.AddNewConsoleCommand(Crestron.SimplSharp.SimplSharpProConsoleCmdFunction,System.String,System.String,Crestron.SimplSharp.ConsoleAccessLevelEnum)">
            <summary>
            Function for the user to add console commands to the system.
            </summary>
            <param name="userFunction">Callback function the command will call.</param>
            <param name="userCmdName">Name of the console command. Spaces are not permitted.</param>
            <param name="userCmdHelp">Information on the console command.</param>
            <param name="userAccess">Authentication level of the command.</param>
            <exception cref="T:System.ArgumentException">Verify the Command name does not contain spaces.</exception>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro</exception>
            <returns>true if the operation succeeds; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.ConsoleCommandResponse(System.String)">
            <summary>
            Function to print a message to the console, from the context of a console command function.
            </summary>
            <param name="message">Message to print.</param>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.ConsoleCommandResponse(System.String,System.Object[])">
            <summary>
            Function to print a message to the console, from the context of a console command function.
            </summary>
            <param name="message">Message to print.</param>
            <param name="args">Array containing objects to format.</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>           
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.SendControlSystemCommand(System.String,System.String@)">
            <summary>
            Function to allow the user to send a console command and receive a response from the control system.
            </summary>
            <param name="commandToSend">The console command to send; end line not needed.</param>
            <param name="pResponse">Reference to a string where the controller's response will be stored.</param>
            <returns>True/False if the command was sent correctly.</returns>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsole.SendControlSystemCommand(System.String,System.String@,System.UInt32)">
            <summary>
            Function to allow the user to send a console command and receive a response from the control system with timeout override (Only available on Mercury).
            </summary>
            <param name="commandToSend">The console command to send; end line not needed.</param>
            <param name="pResponse">Reference to a string where the controller's response will be stored.</param>
            <param name="timeOutInMsec">The time out in msec.</param>
            <returns>True/False if the command was sent correctly.</returns>
            <exception cref="T:System.NotSupportedException">This feature is only available in Mercury.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronConsole.ConsoleRegistered">
            <summary>
            Flag to determine if the console has been registered. Once registered adding new console commands is not allowed.
            </summary>        
        </member>
        <member name="T:Crestron.SimplSharp.CrestronConsoleSupportClass">
            <summary>
            Class to allow access to the Crestron Console from a SIMPL# library
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.Print(System.String)">
            <summary>
            Function to print a message to the text console.
            </summary>
            <param name="message">Message to console.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.Print(System.String,System.Object[])">
            <summary>
            Function to print a formatted message to the text console.
            </summary>
            <param name="message">Message to print to the console.</param>
            <param name="args">Array containing objects to format.</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.PrintLine(System.String)">
            <summary>
            Function to print a message to the text console including the end line characters.
            </summary>
            <param name="message">Message to print to the console.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.PrintLine(System.String,System.Object[])">
            <summary>
            Function to print a formatted message to the text console including the end line characters.
            </summary>
            <param name="message">Message to print to the console.</param>
            <param name="args">Array containing objects to format.</param>
            <exception cref="T:System.ArgumentNullException">Arguments message or args are null.</exception>
            <exception cref="T:System.FormatException">Format is invalid or the number of arguments does not match the argument number specified in the message.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.RemoveConsoleCommand(System.String)">
            <summary>
            RemoveConsoleCommand is not supported in SIMPL#
            </summary>
            <param name="userCmdName">irrelevant</param>
            <returns>irrelevant</returns>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.AddNewConsoleCommand(Crestron.SimplSharp.SimplSharpProConsoleCmdFunction,System.String,System.String,Crestron.SimplSharp.ConsoleAccessLevelEnum)">
            <summary>
            AddNewConsoleCommands is not supported in SIMPL#
            </summary>
            <param name="userFunction">irrelevant</param>
            <param name="userCmdName">irrelevant</param>
            <param name="userCmdHelp">irrelevant</param>
            <param name="userAccess">irrelevant</param>
            <returns>irrelevant</returns>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.AddNewConsoleCommand(Crestron.SimplSharp.SimplSharpProConsoleCmdFunction,System.String,System.String,Crestron.SimplSharp.ConsoleAccessLevelEnum,System.Boolean)">
            <summary>
            Function for the user to add console commands to the system.
            </summary>
            <param name="userFunction">Callback function the command will call.</param>
            <param name="userCmdName">Name of the console command. Spaces are not permitted.</param>
            <param name="userCmdHelp">Information on the console command.</param>
            <param name="userAccess">Authentication level of the command.</param>
            <param name="bIsCommandHidden"> if true the command will be hidden and will not show up in help user</param>
            <exception cref="T:System.ArgumentException">Verify the Command name does not contain spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> Specified parameter is out of range.</exception>
            <returns>true if the operation succeeds; otherwise, false.</returns>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.ConsoleCommandResponse(System.String)">
            <summary>
            ConsoleCommandResponse is not supported in SIMPL#
            </summary>
            <param name="message">irrelevant</param>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.ConsoleCommandResponse(System.String,System.Object[])">
            <summary>
            ConsoleCommandResponse is not supported in SIMPL#
            </summary>
            <param name="message">irrelevant</param>
            <param name="args">irrelevant</param>
            <exception cref="T:System.NotSupportedException">This feature is only available in SIMPL# Pro.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.SendControlSystemCommand(System.String,System.String@)">
            <summary>
            Function to allow the user to send a console command and receive a response from the control system.
            </summary>
            <param name="commandToSend">The console command to send; end line not needed.</param>
            <param name="pResponse">Reference to a string where the controller's response will be stored.</param>
            <returns>True/False if the command was sent correctly.</returns>
            <exception cref="T:System.NotSupportedException">Feature is unavailable.</exception>
            <remarks>Can only execute commands that specify up to (and including) programmer access level.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronConsoleSupportClass.SendControlSystemCommand(System.String,System.String@,System.UInt32)">
            <summary>
            Function to allow the user to send a console command and receive a response from the control system with timeout override (Only available on Mercury).
            </summary>
            <param name="commandToSend">The console command to send; end line not needed.</param>
            <param name="pResponse">Reference to a string where the controller's response will be stored.</param>
            <param name="timeOutInMsec">Timeout in Millisec.</param>
            <returns>True/False if the command was sent correctly.</returns>
            <exception cref="T:System.NotSupportedException">Feature is unavailable.</exception>
            <remarks>Can only execute commands that specify up to (and including) programmer access level. Only supported for Mercury</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronConsoleSupportClass.ConsoleRegistered">
            <summary>
            The Command Processor does not register in SIMPL# always return false
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA384Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA384Hash.InputBlockSize">
            <summary>
            When overridden in a derived class, gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA384Hash.OutputBlockSize">
            <summary>
            When overridden in a derived class, gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash">
            <summary>
            SHA256 algorithm implementation.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Security.Cryptography.SHA1"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Routes data written to the object into the hash algorithm for computing the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="ibStart">The offset into the byte array from which to begin using data.</param>
            <param name="cbSize">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> class.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.K">
            <summary>
            The SHA-256 Constants (represent the first 32 bits of the fractional parts of the cube roots of the first sixty-four prime numbers)
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Security.Cryptography.SHA256Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.UnimplementedMessage">
            <summary>
            Represents SSH_MSG_UNIMPLEMENTED message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.UnimplementedMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.UnimplementedMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhInitMessage">
            <summary>
            Represents SSH_MSG_KEXECDH_INIT message.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhInitMessage.#ctor(Crestron.SimplSharp.Ssh.Common.BigInteger,Crestron.SimplSharp.Ssh.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhInitMessage"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Transport.KeyExchangeEcdhInitMessage.QC">
            <summary>
            Gets the client's ephemeral contribution to the ECDH exchange, encoded as an octet string
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Messages.Connection.ShellRequestInfo">
            <summary>
            Represents "shell" type channel request information
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.Ssh.Messages.Connection.ShellRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Messages.Connection.ShellRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Messages.Connection.ShellRequestInfo"/> class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Messages.Connection.ShellRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Compression.Zlib">
            <summary>
            Represents "zlib" compression implementation
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Compression.Zlib.Init(Crestron.SimplSharp.Ssh.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Compression.Zlib.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException">
            <summary>
            The exception that is thrown when operation permission is denied.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException"/> class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Ssh.Common.PortForwardEventArgs">
            <summary>
            Provides data for <see cref="E:Crestron.SimplSharp.Ssh.ForwardedPort.RequestReceived"/> event.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Ssh.Common.PortForwardEventArgs.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Crestron.SimplSharp.Ssh.Common.PortForwardEventArgs"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PortForwardEventArgs.OriginatorHost">
            <summary>
            Gets request originator host.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Ssh.Common.PortForwardEventArgs.OriginatorPort">
            <summary>
            Gets request originator port.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Listener">
            <summary>
            The Listener class is used internally by the Server component. 
            For each port binding, one or more Listener instances are created. 
            Each runs in a separate thread and listens for incoming connections. 
            As soon as a connection is accepted, a Worker thread is created to handle this data connection, 
            and then, the Listener thread goes back to listening for new connections.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Listener.#ctor(Crestron.SimplSharp.Net.Server,System.Type)">
            <summary>
            Creates an instance of the Listener class using a Server and Type of Worker Class.
            </summary>
            <param name="aOwner">A <see cref="T:Crestron.SimplSharp.Net.Server"/> object.</param>
            <param name="aWorkerClass">A <see cref="T:System.Type"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Listener.Listen">
            <summary>
            Listen to the current connection instance. 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Listener.ListeningSocket">
            <summary>
            Get or set the Listening Socket for this Listener instance.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Listener.WorkerClass">
            <summary>
            Returns the Worker Class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Listener.Owner">
            <summary>
            Get or set the Owner of this Listener instance.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpHeader">
            <summary>
            HttpHeader holds Name and Value pairs for Request and Response Header fields.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeader.#ctor(System.String,System.String)">
            <summary>
            HTTP Header constructor with Name and Value Parameters. 
            </summary>
            <param name="aName">String with the name of the HTTP header line.</param>
            <param name="aValue">String with the value of the HTTP header line.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeader.#ctor(System.String)">
            <summary>
            Creates an instance of the HTTP Header Class with the HTTP Header line parameter.
            </summary>
            <param name="aLine">String with the entire HTTP header line.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeader.ToString">
            <summary>
            HTTP Header ToString
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeader.Get(System.Int32)">
            <summary>
            Get a value from the HTTP Header fields at the specified index.
            </summary>
            <param name="aIndex">Index into HTTP header fields.</param>
            <returns>string</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeader.Add(System.String)">
            <summary>
            Add a value to the HTTP Header field.
            </summary>
            <param name="aString">New HTTP header field value.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeader.Name">
            <summary>
            Get or set the HTTP Header Name property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeader.Count">
            <summary>
            Get the HTTP Header Count property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeader.Value">
            <summary>
            Get or set the HTTP Header Value property.
            Setting this Value property will clear all old values of this HttpHeader.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpHeaders">
            <summary>
            HttpHeaders contains an array of HttpHeader objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.#ctor">
            <summary>
            Creates an instance of the HTTPHeaders class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.Create(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Creates an HTTP Header from the Connection.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <returns>An HttpHeader object, or null if cannot read headers</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.Initialize">
            <summary>
            Initializes the HTTP Header to a default of 100 HeaderLines.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.ParseFirstLine">
            <summary>
            Parse the first line of the HTTP header.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.ReadHeader(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Reads the HTTP Header for the incoming HTTP request connection. 
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
            <returns>true if the operation succeeds; otherwise, false </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.WriteHeader(Crestron.SimplSharp.Net.Connection)">
            <summary>
            Write the HTTP Header Content out from the Connection.
            </summary>
            <param name="aConnection">A <see cref="T:Crestron.SimplSharp.Net.Connection"/> object.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.SetResponseHeader(System.String,System.Int32,System.String)">
            <summary>
            Sets the HTTP Response Header with the specified parameter values.
            </summary>
            <param name="aVersion">String for HTTP version number.</param>
            <param name="aResult">Int32 for HTTP response code.</param>
            <param name="aResultText">String for HTTP response text.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.SetRequestHeader(System.String,System.String,System.String)">
            <summary>
            Sets the specified RequestVersion, RequestType, RequestPath.
            </summary>
            <param name="aVersion">String for HTTP version number.</param>
            <param name="aRequestType">String for HTTP method.</param>
            <param name="aRequestPath">String for HTTP request path.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.ContainsHeaderValue(System.String)">
            <summary>
            Determines whether the HttpHeaders object contains a specified value.
            </summary>
            <param name="aName">String with the name of the HTTP header line.</param>
            <returns>true if the HttpHeaders object contains a specified value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.SetHeaderValue(System.String,System.String)">
            <summary>
            Adds the specified name and value to the array.
            </summary>
            <param name="aName">String with the name of the HTTP header line.</param>
            <param name="aValue">String with the value of the HTTP header line.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.AddHeader(Crestron.SimplSharp.Net.Http.HttpHeader)">
            <summary>
            Adds the HTTPHeader object to the array of HTTPHeaders.
            </summary> 
            <param name="aHTTPHeader">HTTPHeader object</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.GetHeaderValue(System.String)">
            <summary>
            Gets the value associated with the specified name.
            </summary>
            <param name="aName">String with the name of the HTTP header line.</param>
            <returns>A string value associated with the specified name</returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.ToString">
            <summary>
            ToString method for the HTTP Header
            </summary>
            <returns> String describing this HttpHeader. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaders.GetEnumerator">
            <summary>
            Returns the Enumerator for the HTTP Header Enumerator.
            </summary>
            <returns>An Enumerator for the HTTP Headers</returns>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.RequestType">
            <summary>
            Gets or sets the method of the HTTP request, usually "GET" or "POST".
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.RequestPath">
            <summary>
            Gets or sets the Request URL, not including the server URL.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.RequestVersion">
            <summary>
            Gets or sets the protocol version of the HTTP.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.ResponseCode">
            <summary>
            Returns the Status-Code of the Response message.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.MaxHeaderLines">
            <summary>
            Determines the maximum HTTP header count allowed.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.MaxHeaderLinesEnabled">
            <summary>
            Determines whether the MaxHeaderLines is enabled.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.ContentType">
            <summary>
            The mime type of this content. Used for Response headers. 
            It is composed of at least two parts: a type, a subtype and one or more optional parameters. For example: text/html; charset=utf-8.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.FirstHeader">
            <summary>
            Gets or sets the Status-Line of the Response message. 
            It consists of the protocol version followed by a numeric status code and its associated textual phrase.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.Count">
            <summary>
            Returns the number of elements contained in the array.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.Net.Http.HttpHeaders.Item(System.String)">
            <summary>
            Returns the HTTP Header for the index provided.
            </summary>
            <param name="aKey">HTTP Header name to look up.</param>
            <returns></returns>
        </member>
        <member name="T:Crestron.SimplSharp.Net.Http.HttpHeaderException">
            <summary>
            An Exception object that contains errors returned from one of the HttpHeader or HttpHeaders methods call.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaderException.#ctor">
            <summary>
            HTTPHeaderException default constructor 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaderException.#ctor(System.String)">
            <summary>
            HTTPHttpHeaderException with message string parameter
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Net.Http.HttpHeaderException.#ctor(System.String,System.Exception)">
            <summary>
            HTTPHttpHeaderException with message string and Exception parameters
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="e">A <see cref="T:System.Exception"/> object.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronMailFunctions">
            <summary>
            Sending Email through devices.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SmtpPort">
            <summary>
            Port number for the system
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronMailFunctions.SendMail(System.String,System.UInt16,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.UInt16,System.String)">
             <summary>
             Programmatically sends an email message to the specified IP address on the specified port 
             using the SMTP protocol.
             </summary>
             
             <param name="Server">Required. Specifies address of the mail server. It can either be an 
             IP address in dot-decimal notation (ex: 192.168.16.3) or a name to be resolved with a DNS 
             server (ex:  mail.myisp.com). If a name is given, the control system must be configured 
             with a DNS server (ADDDNS console command). Maximum field length: 40.</param>
            
             <param name="PortNumber">Required. Specifies the port number used to send the email.</param>
            
             <param name="UserLogonName">Optional. If the mail server requires authentication, UserLogonName 
             indicates the user name of the sender for the mail server. An empty string indicates that 
             authentication is not required. Only "clear text" authentication is implemented. "Clear text" 
             refers to the authentication method used by the mail server. If the mail server requires a 
             higher level authentication, mail can not be sent to the mail server. Maximum field length: 254.</param>
             
             <param name="UserLogonPassword">Optional. If the mail server requires authentication, UserLogonPassword 
             indicates the password of the sender for the mail server. An empty string indicates that authentication 
             is not required. Only "clear text" authentication is implemented, used by the server. If the mail server requires 
             a higher level authentication, mail can not be sent to the mail server. Maximum field length: 254.</param>
             
             <param name="From">Required. Specifies the e-mail address of the sender in the a@b.com 
             format. Only one email address is allowed. Aliases or nicknames are not supported. This 
             argument is mandatory. Maximum field length: 242.</param>
             
             <param name="To">Required. Specifies the e-mail address of the recipient(s) in the a@b.com 
             format. Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="CC">Optional. An empty string indicates that there are no recipients. 
             Specifies the e-mail address of the carbon copy recipient(s) in the a@b.com format. 
             Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="Subject">Optional. Specifies the subject of the email message. 
             An empty string indicates that there is no subject. Maximum field length: 989.</param>
             
             <param name="Message">Optional. Specifies the body of the email message.
              An empty string indicates an empty message. Maximum field length: 65535.</param>
             
             <param name="NumberOfAttachments">Optional. Specifies the number of attachments to be sent.
             Zero (0) specifies that there are no attachments. </param>
             
             <param name="Attachments">Optional. An empty string indicates that no attachments are 
             to be sent. Specifies the files to be attached. Multiple filenames may be specified, 
             delimited by ';'. Max field length is 65534.</param>
             
             <returns>SMTP_OK if successful. Otherwise, Email Return Error Code is returned. Negative return 
             error codes indicate that no part of the email was sent. Positive return error codes 
             indicate a failure, but the email was still sent.  In the event of more than one failure, 
             the return error code of the first failure is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronMailFunctions.SendMail(System.String,System.UInt16,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.UInt16,System.String)">
             <summary>
             Programmatically sends an email message to the specified IP address on the specified port 
             using the SMTP protocol over a secure connection using SSL. Requires firmware version 
             1.11.xxxx or higher on the control system.
             </summary>
             
             <param name="Server">Required. Specifies address of the mail server. It can either be an 
             IP address in dot-decimal notation (ex: 192.168.16.3) or a name to be resolved with a DNS 
             server (ex:  mail.myisp.com). If a name is given, the control system must be configured 
             with a DNS server (ADDDNS console command). Maximum field length: 40.</param>
            
             <param name="PortNumber">Required. Specifies the port number used to send the email.  Normal
             values are 25 for unsecure and 465 for secure connections</param>
            
             <param name="SecureConnection">Required. Indicates whether an SSL connection should be used to 
             send the email.</param>
            
             <param name="UserLogonName">Required. If the mail server requires authentication, UserLogonName 
             indicates the user name of the sender for the mail server. An empty string indicates that 
             authentication is not required. Only "clear text" authentication is implemented. "Clear text" 
             refers to the authentication method used by the mail server. If the mail server requires a 
             higher level authentication, mail can not be sent to the mail server. Maximum field length: 254.</param>
             
             <param name="UserLogonPassword">Required. If the mail server requires authentication, UserLogonPassword 
             indicates the password of the sender for the mail server. An empty string indicates that authentication 
             is not required. Only "clear text" authentication is implemented, used by the server. If the mail server requires 
             a higher level authentication, mail can not be sent to the mail server. Maximum field length: 254.</param>
             
             <param name="From">Required. Specifies the e-mail address of the sender in the a@b.com 
             format. Only one email address is allowed. Aliases or nicknames are not supported. This 
             argument is mandatory. Maximum field length: 242.</param>
             
             <param name="To">Required. Specifies the e-mail address of the recipient(s) in the a@b.com 
             format. Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="CC">Optional. An empty string indicates that there are no recipients. 
             Specifies the e-mail address of the carbon copy recipient(s) in the a@b.com format. 
             Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="Subject">Optional. Specifies the subject of the email message. 
             An empty string indicates that there is no subject. Maximum field length: 989.</param>
             
             <param name="Message">Optional. Specifies the body of the email message.
              An empty string indicates an empty message. Maximum field length: 65535.</param>
             
             <param name="NumberOfAttachments">Optional. Specifies the number of attachments to be sent.
             Zero (0) specifies that there are no attachments. </param>
             
             <param name="Attachments">Optional. An empty string indicates that no attachments are 
             to be sent. Specifies the files to be attached. Multiple filenames may be specified, 
             delimited by ';'. Max field length is 65534.</param>
             
             <returns>SMTP_OK if successful. Otherwise, Email Return Error Code is returned. Negative return 
             error codes indicate that no part of the email was sent. Positive return error codes 
             indicate a failure, but the email was still sent.  In the event of more than one failure, 
             the return error code of the first failure is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronMailFunctions.SendMail(System.String,System.UInt16,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Crestron.SimplSharp.CrestronMailFunctions.eMailPriority,System.UInt16,System.String)">
             <summary>
             Programmatically sends an email message to the specified IP address on the specified port 
             using the SMTP protocol over a secure connection using SSL. Requires firmware version 
             1.013.0000 or higher on the control system.
             </summary>
             
             <param name="Server">Required. Specifies address of the mail server. It can either be an 
             IP address in dot-decimal notation (ex: 192.168.16.3) or a name to be resolved with a DNS 
             server (ex:  mail.myisp.com). If a name is given, the control system must be configured 
             with a DNS server (ADDDNS console command). Maximum field length: 40.</param>
            
             <param name="PortNumber">Required. Specifies the port number used to send the email.  Normal
             values are 25 for unsecure and 465 for secure connections</param>
            
             <param name="SecureConnection">Required. Indicates whether an SSL connection should be used to 
             send the email.</param>
            
             <param name="UserLogonName">Required. If the mail server requires authentication, UserLogonName 
             indicates the user name of the sender for the mail server. An empty string indicates that 
             authentication is not required. Only "clear text" authentication is implemented. "Clear text" 
             refers to the authentication method used by the mail server. If the mail server requires a 
             higher level authentication, mail can not be sent to the mail server. Maximum field length: 254.</param>
             
             <param name="UserLogonPassword">Required. If the mail server requires authentication, UserLogonPassword 
             indicates the password of the sender for the mail server. An empty string indicates that authentication 
             is not required. Only "clear text" authentication is implemented, used by the server. If the mail server requires 
             a higher level authentication, mail can not be sent to the mail server. Maximum field length: 254.</param>
             
             <param name="From">Required. Specifies the e-mail address of the sender in the a@b.com 
             format. Only one email address is allowed. Aliases or nicknames are not supported. This 
             argument is mandatory. Maximum field length: 242.</param>
             
             <param name="To">Required. Specifies the e-mail address of the recipient(s) in the a@b.com 
             format. Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="ReplyTo">Optional. Specifies the e-mail address other than the "From" address to use to reply to this message in the a@b.com 
             format. Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="CC">Optional. An empty string indicates that there are no recipients. 
             Specifies the e-mail address of the carbon copy recipient(s) in the a@b.com format. 
             Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="BCC">Optional. An empty string indicates that there are no recipients. 
             Specifies the e-mail address of the blind carbon copy recipient(s) in the a@b.com format. 
             Multiple recipients may be specified delimited with a ";". Maximum field length: 65535.</param>
             
             <param name="Subject">Optional. Specifies the subject of the email message. 
             An empty string indicates that there is no subject. Maximum field length: 989.</param>
             
             <param name="Message">Optional. Specifies the body of the email message.
              An empty string indicates an empty message. Maximum field length: 65535.</param>
             
             <param name="Priority">Optional. Specifies the priority of the email message.
              Default priority value is <see cref="F:Crestron.SimplSharp.CrestronMailFunctions.eMailPriority.Normal"/>. Refer the <see cref="T:Crestron.SimplSharp.CrestronMailFunctions.eMailPriority"/> for all valid priority values.</param>
            
             <param name="NumberOfAttachments">Optional. Specifies the number of attachments to be sent.
             Zero (0) specifies that there are no attachments. </param>
             
             <param name="Attachments">Optional. An empty string indicates that no attachments are 
             to be sent. Specifies the files to be attached. Multiple filenames may be specified, 
             delimited by ';'. Max field length is 65534.</param>
             
             <returns>SMTP_OK if successful. Otherwise, Email Return Error Code is returned. Negative return 
             error codes indicate that no part of the email was sent. Positive return error codes 
             indicate a failure, but the email was still sent.  In the event of more than one failure, 
             the return error code of the first failure is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronMailFunctions.SendMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Send an email message (without attachments) using SMTP protocol.
            </summary>
            <param name="Server">Required: Specifies address of the mail server.</param>
            <param name="UserLogonName">Optional: User logon name.</param>
            <param name="UserLogonPassword">Optional: User password.</param>
            <param name="From">Required: Sender (Only one address).</param>
            <param name="To">Required: Recipients</param>
            <param name="CC">Optional: Other Recipients.</param>
            <param name="Subject">Optional: Subject of Message.</param>
            <param name="Message">Optional: Body of message.</param>
            <returns>0 if successful. Otherwise, Email Return Error Code is returned. 
            Negative return error codes indicate that no part of the email was sent. 
            Positive return error codes indicate a failure, but the email was still sent. 
            In the event of more than one failure, the return error code of the first 
            failure is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronMailFunctions.SendMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.UInt16,System.String)">
            <summary>
            Send an email message with attachments using SMTP protocol.
            </summary>
            <param name="Server">Required. Specifies address of the mail server. </param>
            <param name="UserLogonName">Optional: User logon name.</param>
            <param name="UserLogonPassword">Optional: User password.</param>
            <param name="From">Required: Sender (Only one address).</param>
            <param name="To">Required: Recipients</param>
            <param name="CC">Optional: Other Recipients.</param>
            <param name="Subject">Optional: Subject of Message.</param>
            <param name="Message">Optional: Body of message.</param>
            <param name="NumberOfAttachments">Number of attachments User adds.</param>
            <param name="Attachments">Attachment filenames.</param>
            <returns>SMTP_OK if successful. Otherwise, Email Return Error Code is returned. 
            Negative return error codes indicate that no part of the email was sent. Positive 
            return error codes indicate a failure, but the email was still sent. In the event
            of more than one failure, the return error code of the first failure is returned.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronMailFunctions.SendMail(System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Crestron.SimplSharp.CrestronMailFunctions.eMailPriority,System.UInt16,System.String)">
            <summary>
            Send an email message with attachments using SMTP protocol. The minimum firmware version is 1.013.0000 for this method to work.
            </summary>
            <param name="Server">Required. Specifies address of the mail server.</param>
            <param name="SecureConnection">Required. Specifies that email transfer should use SSL connection or not.</param>
            <param name="UserLogonName">Optional: User logon name.</param>
            <param name="UserLogonPassword">Optional: User password.</param>
            <param name="From">Required: Sender (Only one address).</param>
            <param name="To">Required: Recipients</param>
            <param name="ReplyTo">Optional. Mail address(es) to use to reply to this message.</param>
            <param name="CC">Optional: Other Recipients.</param>
            <param name="BCC">Optional: Other undisclosed Recipients.</param>
            <param name="Subject">Optional: Subject of Message.</param>
            <param name="Message">Optional: Body of message.</param>
            <param name="Priority">Optional: Priority of message. Refer <see cref="T:Crestron.SimplSharp.CrestronMailFunctions.eMailPriority"/> for valid message priorities.</param>
            <param name="NumberOfAttachments">Number of attachments User adds.</param>
            <param name="Attachments">Attachment filenames.</param>
            <returns>SMTP_OK if successful. Otherwise, Email Return Error Code is returned. 
            Negative return error codes indicate that no part of the email was sent. Positive 
            return error codes indicate a failure, but the email was still sent. In the event
            of more than one failure, the return error code of the first failure is returned.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronMailFunctions.eMailPriority">
            <summary>
            Enum to specify the priority of a <see cref="T:Crestron.Infrastructure.SMTP.MailMessageWithPriority"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eMailPriority.Normal">
            <summary>
            The email has normal priority.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eMailPriority.Low">
            <summary>
            The email has low priority.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eMailPriority.High">
            <summary>
            The email has high priority.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes">
            <summary>
            Email Error codes for email
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_OK">
            <summary>
            No errors occurred.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_FATAL">
            <summary>
            Any non-recoverable error when sending mail.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_ILLEGAL_CMD">
            <summary>
            General internal error.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_CONNECT">
            <summary>
            Failure to connect to mail server.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_SEND">
            <summary>
            Internal error when actually sending email.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_RECV">
            <summary>
            Internal error when actually receiving email.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_NU_CONNECT">
            <summary>
            Internal error while processing the send.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_NU_BUFFERS">
            <summary>
            Internal error. Lack of memory buffers while processing send or receive mail. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_AUTHENTICATION">
            <summary>
            Authentication failure.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ERROR_AUTH_LOGIN_UNSUPPORTED">
            <summary>
            CLEAR TEXT login scheme is not supported.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_INV_PARAM">
            <summary>
            A parameter is not valid, must supply Server, From and To.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_ETHER_NOT_ENABLED">
            <summary>
            Ethernet not enabled. Cannot send mail.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_NO_SERVER_ADDRESS">
            <summary>
            No DNS configured. Cannot resolve name.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_SEND_FAILED">
            <summary>
            SendMail failed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_GENERAL_SENDMAIL_ERROR">
            <summary>
            An error code was received from the lower level libcurl library.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SendMailErrorCodes.SMTP_INVALID_FIRMWARE">
            <summary>
            Incompatible firmware version detected. 
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronMailFunctions.eSendMailSecurityLevel">
            <summary>
            Email settings for SSL/TLS level of security.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSendMailSecurityLevel.CURLUSESSL_NONE">
            <summary>
            do not attempt to use SSL
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSendMailSecurityLevel.CURLUSESSL_TRY">
             <summary>
            try using SSL, proceed anyway otherwise
             </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSendMailSecurityLevel.CURLUSESSL_CONTROL">
            <summary>
            SSL for the control connection or fail 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSendMailSecurityLevel.CURLUSESSL_ALL">
            <summary>
            SSL for all communication or fail
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronMailFunctions.eSecurityDegradationStateMachine">
            <summary>
            SSL/TLS level of security state reached
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSecurityDegradationStateMachine.SSL_FORCE_SECURITY_WITH_SECURE_PREFIX">
            <summary>
            Force SSL, will send StartTls if server supports it, with secure prefix(smtps://) 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSecurityDegradationStateMachine.SSL_FORCE_SECURITY_WITH_NONSECURE_PREFIX">
            <summary>
            If secure prefix fails, try to Force SSL, will send StartTls if server supports it with Non secure prefix (smtp://)
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSecurityDegradationStateMachine.SSL_TRY_SECURITY_FALLBACK_POSSIBLE_WITH_NONSECURE_PREFIX">
            <summary>
            try using SSL, proceed anyway otherwise
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.eSecurityDegradationStateMachine.SEND_FAILED">
            <summary>
            No hope state, we've tried all we can
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronMailFunctions.SmtpDirectSecure">
            <summary>
            provides methods to send email via smtp direct to mail server
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronMailFunctions.SmtpDirectSecure.SmtpServer">
            <summary>
            Get / Set the name of the SMTP mail server
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronMailFunctions.SmtpDirectSecure.cbSendMailMessage(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Callback function to process the send data
            </summary>
            <param name="buffer">Pointer to a data structure provided in SetProgressCallBack</param>
            <param name="size">object size in bytes</param>
            <param name="nmemb">Current number of bytes transferred. -1 means heartbeat</param>
            <param name="response">stream buffer</param>
        </member>
        <member name="T:Crestron.SimplSharp.eRuntimeEnvironment">
            <summary>
            Enumeration to define the various runtime environments a SIMPL# module can run in.     
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eRuntimeEnvironment.SIMPL">
            <summary>
            This SIMPL# module is running from inside the context of a SIMPL+ module. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eRuntimeEnvironment.SimplSharpPro">
            <summary>
            This SIMPL# module is running as a part of a SIMPL# Pro application.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.eDevicePlatform">
            <summary>
            Enumeration to define the various platforms a program can be running on. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDevicePlatform.Appliance">
            <summary>
            Running on a dedicated control systems like a CP3 or RMC3.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eDevicePlatform.Server">
            <summary>
            Running on a Crestron Server platform.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.eCrestronSeries">
            <summary>
            Enumeration to define the compatibility of a program.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eCrestronSeries.Unspecified">
            <summary>
            No specified system.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eCrestronSeries.Series3">
            <summary>
            Programs targeting 3-Series platforms are compatible. A recompile may be needed in some cases.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.eCrestronSeries.Series4">
            <summary>
            Programs targeting 4-Series platforms are compatible.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.Interlocked">
            <summary>
            Class for providing atomic operations for variables that are shared by multiple threads.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)">
            <summary>
             Compares two 32-bit signed integers for equality and, if they are equal,replaces one of the values.
            </summary>
            <param name="location1">The destination, whose value is compared with comparand and possibly replaced</param>
            <param name="value"> The value that replaces the destination value if the comparison results in equality</param>
            <param name="comparand"> The value that is compared to the value at location1</param>
            <returns>The original value in location1</returns>
            <exception cref="T:System.NullReferenceException">The address of location1 is a null pointer</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)">
            <summary>
            Compares two objects for reference equality and, if they are equal, replaces one of the objects
            </summary>
            <param name="location1"> The destination object that is compared with comparand and possibly replaced.</param>
            <param name="value">The object that replaces the destination object if the comparison results in equality.</param>
            <param name="comparand">The object that is compared to the object at location1.</param>
            <returns>The original value in location1.</returns>
            <exception cref="T:System.ArgumentNullException"> location 1 is null </exception>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.CompareExchange``1(``0@,``0,``0)">
            <summary>
            Compares two instances of the specified reference type T for equality and,if they are equal, replaces one of them.
            </summary>
            <typeparam name="T">The type to be used for location1, value, and comparand. This type must be a reference type.</typeparam>
            <param name="location1"> The destination, whose value is compared with comparand and possibly replaced.</param>
            <param name="value">The value that replaces the destination value if the comparison results in
                equality.</param>
            <param name="comparand">The value that is compared to the value at location1.</param>
            <returns>The original value in location1.</returns>
            <exception cref="T:System.NullReferenceException">address of location1 is a null pointer</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.Decrement(System.Int32@)">
            <summary>
            Decrements a specified variable and stores the result, as an atomic operation.
            </summary>
            <param name="location">The variable whose value is to be decremented.</param>
            <returns>The decremented value.</returns>
            <exception cref="T:System.ArgumentNullException">The address of location is a null pointer.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.Exchange(System.Int32@,System.Int32)">
            <summary>
            Sets a 32-bit signed integer to a specified value and returns the original
                value, as an atomic operation.
            </summary>
            <param name="location1">The variable to set to the specified value.</param>
            <param name="value">The value to which the location1 parameter is set.</param>
            <returns>The original value of location1.</returns>
            <exception cref="T:System.ArgumentNullException">The address of location1 is a null pointer.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.Exchange(System.Object@,System.Object)">
            <summary>
            Sets an object to a specified  value and returns a reference to the  original
                object, as an atomic operation.
            </summary>
            <param name="location1">The variable to set to the specified value.</param>
            <param name="value">The value to which the location1 parameter is set.</param>
            <returns>The original value of location1.</returns>
            <exception cref="T:System.ArgumentNullException">The address of location1 is a null pointer.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.Exchange``1(``0@,``0)">
            <summary>
            Sets a variable of the specified type T to a specified value and and returns the original value, as an atomic operation.
            </summary>
            <param name="location1">The variable to set to the specified value.</param>
            <param name="value">The value to which the location1 parameter is set.</param>
            <typeparam name="T"> Type to be used for location1 and value.</typeparam>
            <returns>The original value of location1.</returns>
            <exception cref="T:System.ArgumentNullException">The address of location1 is a null pointer.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.Interlocked.Increment(System.Int32@)">
            <summary>
            Increments a specified variable and stores the result, as an atomic operation.
            </summary>
            <param name="location">The variable whose value is to be incremented.</param>
            <returns>The incremented value.</returns>
            <exception cref="T:System.ArgumentNullException">The address of location is a null pointer.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.SNTP">
            <summary>
            Class to provide SNTP functionality.
            This feature is not supported on <see cref="F:Crestron.SimplSharp.eDevicePlatform.Server"/>.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.DoMethod(Microsoft.Win32.RegistryKey,System.Boolean)">
            <summary>
            method to enable or disable SNTP on the CE platform
            </summary>
            <param name="key"></param>
            <param name="enableOrDisable"></param>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.SetSNTPServerOnMono(System.String)">
            <summary>
            Method to set the SNTP server on Mono. Right now this is only for mercury - so execute the console command.
            </summary>
            <param name="serverToSet"></param>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.SetSNTPServerOnCE(System.String)">
            <summary>
            Method to set the SNTP server on a CE based control system
            </summary>
            <param name="serverToSet"></param>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.EnableOrDisableOrReadParameters(System.Boolean,System.Boolean,System.String[]@,System.UInt32@)">
            <summary>
            Method to enable/disable and or read in the state/server/period
            </summary>
            <param name="bEnableOrDisable"> Whether enabling or disabling</param>
            <param name="bReadOnly"> Are we only reading</param>
            <param name="server"> List of servers</param>
            <param name="periodInMin"> period Inminutes</param>
            <returns> Returns current state when reading</returns>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.HandleEnableDisableCommandOnMono(System.Boolean)">
            <summary>
            Method to enable or disable SNTP on the Mono platform.. This is only on mercury
            </summary>
            <param name="enableOrDisable"></param>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.GetSNTPStateOnMono">
            <summary>
            Method to get the SNTP state on mono - only used on mercury.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.GetSNTPServerOnMono">
            <summary>
            Method to get the SNTP server on mono - only used on mercury.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.Enable">
            <summary>
            Method to enable the SNTP Service
            </summary>
            <exception cref="T:System.NotSupportedException"> Operation is not supported</exception>
            <exception cref="T:System.InvalidOperationException"> Invalid operation exception. Please refer to the message for the actual exception.</exception>
            <exception cref="T:System.NotSupportedException">SNTP is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.Disable">
            <summary>
            Method to disable the SNTP Service.
            This will only disable the periodic sync with the specified SNTP server. The <see cref="M:Crestron.SimplSharp.SNTP.Sync"/> method or the corresponding console command can still be used to
            force a one time sync.
            </summary>
            <exception cref="T:System.NotSupportedException"> Operation is not supported</exception>
            <exception cref="T:System.InvalidOperationException">Invalid operation exception. Please refer to the message for the actual exception.</exception>
            <exception cref="T:System.NotSupportedException">SNTP is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.SNTPSyncOnCE">
            <summary>
            Method to do an SNTP sync on CE
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.SNTPSyncOnMono">
            <summary>
            Method to perform a sync on Mono - this is only on mercury for the timebeing.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SNTP.Sync">
            <summary>
            Method to force a time sync from the specified SNTP server.
            </summary>
            <exception cref="T:System.NotSupportedException"> Operation is not supported</exception>
            <exception cref="T:System.InvalidOperationException">Invalid operation exception. Please refer to the message for the actual exception.</exception>
            <exception cref="T:System.NotSupportedException">SNTP is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.SNTP.Enabled">
            <summary>
            Property to check the state of the SNTP service.
            </summary>
            <exception cref="T:System.NotSupportedException"> Operation is not supported</exception>
            <exception cref="T:System.InvalidOperationException">Invalid operation exception. Please refer to the message for the actual exception.</exception>
            <exception cref="T:System.NotSupportedException">SNTP is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="P:Crestron.SimplSharp.SNTP.Server">
            <summary>
            Property to get/set the SNTP server.
            </summary>
            <exception cref="T:System.NotSupportedException"> Operation is not supported</exception>
            <exception cref="T:System.ArgumentNullException"> Specified Argument is NULL or Empty.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid operation exception. Please refer to the message for the actual exception.</exception>
            <exception cref="T:System.NotSupportedException">SNTP is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication">
            <summary>
            User data class
            </summary>
            <example>
            This example program adds a console command to create a token with GetAuthenticationToken(), then adds another command to call GetUsers() with the token
            <code>
            using System;
            using System.Collections.Generic;
            using Crestron.SimplSharp;                          	// For Basic SIMPL# Classes
            using Crestron.SimplSharpPro;                       	// For Basic SIMPL#Pro classes
            using Crestron.SimplSharp.CrestronAuthentication;
            
            public class ControlSystem : CrestronControlSystem
            {
            	Authentication.UserToken adminToken;
            	bool hasToken;
            
            	public ControlSystem()
            	{
            		try
            		{	
            			CrestronConsole.AddNewConsoleCommand(CreateToken, "createtoken", "usage: createtoken username password", ConsoleAccessLevelEnum.AccessAdministrator);
            		}
            		catch (Exception e)
            		{
            			ErrorLog.Error("Error in the constructor: {0}", e.Message);
            		}
            	}
            
            	// Create a token for an admin user, or print an error message if the credentials of an existing admin are not provided
            	public void CreateToken(string args)
            	{
            		try
            		{
            			string userName = args.Split(' ')[0];
            			string password = args.Split(' ')[1];
            			if (hasToken)
            			{
            				Authentication.ReleaseAuthenticationToken(adminToken);
            				hasToken = false;
            			}
            			adminToken = Authentication.GetAuthenticationToken(userName, password);
            			if (adminToken.Valid)
            			{
            				if ((adminToken.Access &amp; Authentication.UserAuthenticationLevelEnum.Administrator)
            						== Authentication.UserAuthenticationLevelEnum.Administrator)
            				{
            					CrestronConsole.ConsoleCommandResponse("Admin Token created\r\n");
            					CrestronConsole.AddNewConsoleCommand(SeeAllUsers, "SeeAllU", "See all the users on the control system", ConsoleAccessLevelEnum.AccessAdministrator);
            					hasToken = true;
            				}
            				else
            				{
            					CrestronConsole.ConsoleCommandResponse("Inputted credentials are not for an admin account");
            					Authentication.ReleaseAuthenticationToken(adminToken);
            				}
            			}
            			else
            			{
            				CrestronConsole.ConsoleCommandResponse("The specified username/password pair is incorrect");
            			}
            			
            		}
            		catch (Exception e)
            		{
            			CrestronConsole.ConsoleCommandResponse("Error in CreateToken: {0}", e);
            		}
            	}
            	
            	public void SeeAllUsers(string args)
            	{
            		try
            		{
            			if (adminToken.Valid &amp;&amp;
            				(adminToken.Access &amp; Authentication.UserAuthenticationLevelEnum.Administrator)
            						== Authentication.UserAuthenticationLevelEnum.Administrator)
            			{
            				List&lt;string&gt; users = Authentication.GetUsers(adminToken);
            				CrestronConsole.ConsoleCommandResponse("User List:\r\n\r\n");
            				if (users == null)
            				{
            					CrestronConsole.ConsoleCommandResponse("Error encountered in GetUsers()");
            				}
            				else if (users.Count == 0)
            				{
            					CrestronConsole.PrintLine("No Users");
            				}
            				else
            				{
            					CrestronConsole.ConsoleCommandResponse("User\t\t\t\tAccess Level\r\n");
            					foreach (var user in users)
            					{
            						CrestronConsole.ConsoleCommandResponse("{0}", user);
            						CrestronConsole.ConsoleCommandResponse("\t\t\t{0}\r\n", Authentication.GetAccessLevelForSpecifiedUser(adminToken, user));
            					}
            				}
            			}
            			else
            			{
            				CrestronConsole.ConsoleCommandResponse("Invalid adminToken provided");
            			}
            		}
            		catch (Exception e)
            		{
            			CrestronConsole.ConsoleCommandResponse("Error in SeeAllUsers(): {0}", e);
            		}
            	}
            }
            </code>
            </example>       
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.DisableAuthenticationOnCSOnLinux(System.Boolean,System.Boolean)">
            <summary>
            DisableAuthenticationOnCSOnLinux - disables authentication on the box
            </summary>
            <param name="bDisableSSL"> disable ssl also - return value will indicate reboot required</param>
            <param name="bClearAllUsers"> clear out all the users also</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.EnableAuthenticationOnCSOnLinux(System.String,System.String)">
            <summary>
            EnableAuthenticationOnCSOnLinux - Enables authentication with the given username and password
            </summary>
            <param name="userName">Username</param>
            <param name="password">Password</param>
            <returns>
            Returns eAuthenticationEnabledDisabledResponse which indicates error/success or reboot required.
            </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Enable(System.String,System.String)">
            <summary>
            Method to enable authentication on the control system.
            </summary>
            <remarks>If SSL is not enabled, it will be after calling this method. <para>A reboot maybe required to complete this operation.</para></remarks>
            <param name="adminUserName">User name of either an existing administrator or, if none exist, the user name of the default account.</param>
            <param name="adminPassword">Password of the existing account specified by the 'adminUserName' parameter, or the password of the default account.</param>
            <returns>Result enumeration to determine if the operation was successful or not.</returns>
            <exception cref="T:System.NotSupportedException">This method is currently not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Disable(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary>
            Method to disable authentication on the control system.
            <para>SSL state and user information will remain in their current state.</para>
            </summary> 
            <param name="adminUserToken"><see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken"/> for a valid administrator account.</param>
            <returns>Result enumeration to determine if the operation was successful or not.</returns>
            <exception cref="T:System.NotSupportedException">This method is currently not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Disable(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.Boolean)">
            <summary>
            Method to disable authentication on the control system.
            </summary>
            <param name="disableSSL">'true' will disable SSL, 'false' will not change the state of SSL.</param>
            <param name="adminUserToken"><see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken"/> for a valid administrator account.</param>
            <returns>Result enumeration to determine if the operation was successful or not.</returns>
            <exception cref="T:System.NotSupportedException">This method is currently not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Disable(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.Boolean,System.Boolean)">
            <summary>
            Method to disable authentication on the control system.
            </summary>
            <param name="adminUserToken"><see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken"/> for a valid administrator account.</param>
            <param name="disableSSL">'true' will disable SSL, 'false' will not change the state of SSL.</param>
            <param name="clearUserInformation">'true' will remove all users from the system, 'false' current user accounts will remain untouched on the system.</param>
            <returns>Result enumeration to determine if the operation was successful or not.</returns>
            <exception cref="T:System.NotSupportedException">This method is currently not supported.
            <para>If the API is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</para></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddToken(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary>
            Add a new token to the list
            </summary>
            <param name="utoken">User credential information token</param>
            <returns> None </returns>
            <exception cref="T:System.SystemException">Unable to add user token.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.RemoveToken(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary>
            Remove a user info token
            </summary>
            <param name="token"> user credentials information </param>
            <returns> None </returns>
            <exception cref="T:System.SystemException">Unable to remove user token.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.IsTokenValid(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@)">
            <summary> Check whether user token is valid </summary>    
            <param name="utoken"> user token </param> 
            <returns> Flag indicating whether the user token was valid </returns>
            <exception cref="T:System.SystemException">Unable to validate user token.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.IsTokenAdmin(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary> Check whether this token has admin access </summary>    
            <param name="utoken"> user token </param> 
            <returns> Flag indicating whether the user has admin access </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddGroupToSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String,Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum)">
            <summary> Add group to system </summary>    
            <param name="utoken"> User token obtained using GetAuthentication method</param>
            <param name="groupName"> groupName to add to the system </param> 
            <param name="accesslevel"> accesslevel for the specified group </param> 
            <returns> Flag indicating whether the group was successfully added </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <remarks>The minimum firmware version required for this method is 1.009.0051.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddGroupToSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum)">
            <summary> Add group to system </summary>    
            <param name="utoken"> User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically  </param>
            <param name="groupName"> groupName to add to the system </param> 
            <param name="accesslevel"> accesslevel for the specified group </param> 
            <returns> Flag indicating whether the group was successfully added </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <remarks>The minimum firmware version required for this method is 1.009.0051.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddUserToGroup(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String,System.String,System.String)">
            <summary>Add user to group </summary>     
            <param name="utoken"> User token obtained using GetAuthentication method</param> 
            <param name="userName">User to be added to the group </param>  
            <param name="password">NOT USED</param>
            <param name="groupName">Name of the group to add the user to </param>  
            <returns> Flag indicating whether the user was added successfully to the group </returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.DomainAccessException">Program does not have access to the domain raise privilege.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <remarks>The minimum firmware version required for this method is 1.009.0051.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddUserToGroup(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String,System.String)">
            <summary>Add user to group </summary>     
            <param name="utoken">User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically  </param> 
            <param name="userName">User to be added to the group </param>  
            <param name="password">NOT USED</param>
            <param name="groupName">Name of the group to add the user to </param>  
            <returns>Flag indicating whether the user was added successfully to the group </returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.DomainAccessException">Program does not have access to the domain raise privilege.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <remarks>The minimum firmware version required for this method is 1.009.0051.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddUserToGroup(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String)">
            <summary>Add user to group </summary>     
            <param name="utoken">User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically  </param> 
            <param name="userName">User to be added to the group </param>  
            <param name="groupName">Name of the group to add the user to </param>  
            <returns> Flag indicating whether the user was added successfully to the group </returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.DomainAccessException">Program does not have access to the domain raise privilege.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <remarks>The minimum firmware version required for this method is 1.009.0051.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddUserToSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String,System.String)">
            <summary> add user to system </summary>  
            <param name="utoken"> user token obtained using GetAuthentication method </param>  
            <param name="username"> user to be added to the system </param>  
            <param name="password"> password for user to be added </param>  
            <returns> returns true if user was added successfully </returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.AddUserToSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String)">
            <summary> add user to system </summary>  
            <param name="utoken"> User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically  </param>  
            <param name="username"> user to be added to the system </param>  
            <param name="password"> password for user to be added </param>  
            <returns> returns true if user was added successfully </returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.RemoveGroupFromSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String)">
            <summary> Remove an access group from the system </summary>    
            <param name="utoken"> user token obtained using GetAuthentication method </param>
            <param name="groupname"> group to delete </param> 
            <returns> Flag indicating whether the group was deleted </returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.RemoveGroupFromSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String)">
            <summary> Remove an access group from the system </summary>    
            <param name="utoken"> User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically </param>
            <param name="groupname"> group to delete </param> 
            <returns> Flag indicating whether the group was deleted </returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.RemoveUserFromGroup(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String,System.String)">
            <summary>  Remove a user account from an access group </summary>  
            <param name="utoken"> User token obtained using GetAuthentication method </param>
            <param name="username"> the user name </param>  
            <param name="groupname"> the group name </param>  
            <returns> Flag indicating whether the user was removed from the group (true=success) </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.RemoveUserFromGroup(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String)">
            <summary>  Remove a user account from an access group </summary>  
            <param name="utoken"> User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically </param>
            <param name="username"> the user name </param>  
            <param name="groupname"> the group name </param>  
            <returns> Flag indicating whether the user was removed from the group (true=success) </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.RemoveUserFromSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String)">
            <summary> Remove a user account from the control system list of users </summary> 
            <param name="utoken"> User token obtained using GetAuthentication method </param>
            <param name="username"> User name to remove from the system </param> 
            <returns> Flag indicating whether the user was removed from the system (true=success) </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.RemoveUserFromSystem(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String)">
            <summary> Remove a user account from the control system list of users </summary> 
            <param name="utoken"> User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically  </param>
            <param name="username"> User name to remove from the system </param> 
            <returns> Flag indicating whether the user was removed from the system (true=success) </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetUsers(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary>
            Method to return the current list of users that have access to this system.
            <p>Requires minimum firmware version 1.502.0009</p>
            </summary>
            <param name="utoken">UserToken of an Administrator level user.</param>
            <returns>Collection of the users that have been added to this system, 'null' on error.</returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.NotSupportedException">This method requires minimum firmware version 1.502.0009 or higher</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetGroups(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary>
            Method to return the current list of groups and each of its access level in this system.
            <p>Requires minimum firmware version 1.601.0017</p>
            </summary>
            <param name="utoken">UserToken of an Administrator level user.</param>
            <returns>List of the <see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.GroupInfo"/> that have been added to this system, 'null' on error.</returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.NotSupportedException">This method requires minimum firmware version 1.601.0017 or higher</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ActiveDirectoryLogin(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String,System.String)">
            <summary> 
            Active directory login to system.
            <p>Requires minimum firmware version 1.601.0017</p>
            </summary> 
            <param name="utoken"> Local user token obtained using "GetAuthenticationToken" method passed as reference.
            ADConnect member of utoken will be updated if user could login to AD server.</param> 
            <param name="domain"> Domain to be logged in to the system </param>  
            <param name="username"> User to be logged in the system </param>  
            <param name="password"> Password for logged in to be added </param>  
            <returns> Returns true if domain user was able to login successfully. 
            <para>Returns false if user token is invalid or unable to connect or login successfully to the Active Directory server.</para></returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <exception cref="T:System.SystemException">Unable to update token or login to Active Directory.</exception>
            <exception cref="T:System.NotSupportedException">Active Directory Login is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ActiveDirectoryLogout(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@)">
            <summary> Active directory logout from system </summary> 
            <p>Requires minimum firmware version 1.601.0017</p>
            <param name="utoken"> User token obtained using "GetAuthenticationToken" method passed as refernce that is needed to logout from active directory server. </param>
            <returns> Returns true if user was able to logout successfully from active directory server.
            <para>Returns false if user token is invalid or unable to connect to AD or unable to logout from AD.</para></returns>  
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <exception cref="T:System.SystemException">Unable to update token or logout from Active Directory.</exception>
            <exception cref="T:System.NotSupportedException">Active Directory Logout is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ADLoginForUserCSOnLinux(System.String,System.String,System.String,System.UInt32@,System.Int32@)">
            <summary>
            Method to login to AD for a specified user on linux.
            </summary>
            <param name="domainName"> Domain name</param>
            <param name="userName"> User name</param>
            <param name="password"> Password</param>
            <param name="accessLevel"> Returns the access level</param>
            <param name="connectionId"> Returns active directory connection ID</param>
            <returns> Returns true if user is able to login to AD. Else false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ADLogoutForUserCSOnLinux(System.String)">
            <summary>
            Method to logout from AD for a specified user on linux.
            </summary>
            <param name="domainUserName"> Domain user name in form domain\username.</param>
            <returns> Returns true if the logout has been successful. 
            <para>Returns false if the logout is failed.</para></returns>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetAccessLevelForUserCSOnLinux(System.String)">
            <summary>
            Method to get the access lever for a specified user on linux
            </summary>
            <param name="userName"> user Name</param>
            <returns> Access level</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetAccessLevelInternal(System.String)">
            <summary>
             Internal method to get the access level. Not currerntly supported for VC-4
            </summary>
            <param name="userName"> User name</param>
            <returns> Access level</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetAccessLevelForSpecifiedUser(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String)">
            <summary>
            Method to return the access level of the specified user. This returns <see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum"/> indicating the access level.
            </summary>
            <param name="utoken">Token of an Administrator level user.</param>
            <param name="userName">Specified user to return access level</param>
            <returns> Enum indicating user access level. A user could belong to multiple groups so the return value could specify multiple access levels.</returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.NotSupportedException">This method requires minimum firmware version 1.502.0009 or higher</exception>
            <exception cref="T:System.ArgumentNullException">Arguments provided to the method are not valid</exception>
            <exception cref="T:System.NotSupportedException">The method is not currently supported</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetGroupsForSpecifiedUser(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.String)">
            <summary>
            Method to return the groups that the specified user belongs to. This returns <see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum"/> containing the groups.
            </summary>
            <param name="utoken">Token of an Administrator level user.</param>
            <param name="userName">Specified user to return access level</param>
            <returns> A list of groups.</returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.NotSupportedException">This method requires minimum firmware version 1.502.0009 or higher</exception>
            <exception cref="T:System.ArgumentNullException">Arguments provided to the method are not valid</exception>
            <exception cref="T:System.NotSupportedException">The method is not currently supported</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetGroupsOfUser(System.String)">
            <summary>
            Get all the groups a user belongs to (3-Series)
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetAuthenticationToken(System.String,System.String)">
            <summary> Get authentication token for this user.  For use for administering local groups and users or once a domain has been added.</summary>    
            <param name="username"> the user name to get the token for </param> 
            <param name="password"> the password of the user </param>
            <returns> Flag indicating whether the permissions of the program permission were raised  </returns> 
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetAuthenticationToken(System.String,System.String,System.String,System.String)">
            <summary> Get authentication token for the local user and validate the given domain user. </summary>    
            <param name="username"> the user name to get the token for </param> 
            <param name="password"> the password of the user </param>
            <param name="domainUsername"> Domain user name to validate. </param> 
            <param name="domainPassword"> Domain user password. </param>
            <returns> Flag indicating whether the permissions of the program permission were raised  </returns> 
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <remarks>The minimum firmware version required for this method is 1.009.0051.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ReleaseAuthenticationToken(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)">
            <summary>
            This function releases the authentication token, obtained by calling the GetAuthentication method.
            </summary>
            <param name="token"> user credential token </param>
            <returns> returns true if successful </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetUserInformationOnLinux(System.String,System.String,System.String@)">
            <summary>
            method to get the user information on linux.. This does the validation under the hood
            </summary>
            <param name="username"> user name to validate</param>
            <param name="password"> password to validate</param>
            <param name="userInformation"> User Information</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GetUserInformation(System.String,System.String,System.Int32@,System.String@)">
            <summary>
            Method to get the user information
            </summary>
            <param name="username"> username</param>
            <param name="password"> password </param>
            <param name="connectionId"> connection id</param>
            <param name="userInformation"> user information</param>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.UpdatePassword(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String)">
            <summary>
            Method to update the password for a specified user.
            </summary>
            <param name="utoken">User token obtained using GetAuthentication method passed in as reference so that the access level gets updated dynamically</param>
            <param name="username"> Name of the user to update the password.</param>
            <param name="password"> New password for the user</param>
            <returns> true if succeeded or false otherwise</returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>            
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.UpdatePasswordForSpecifiedUser(System.String,System.String)">
            <summary>
            Internal method which calls the CE or Linux function. This allows for us to bypass the version check
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns> bool </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.UpdatePasswordForSpecifiedUserOnLinux(System.String,System.String)">
            <summary>
            Method to update the password for the specified user on linux
            </summary>
            <param name="username"> username</param>
            <param name="password"> password</param>
            <returns> bool </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.UpdatePasswordForSpecifiedUserOnCE(System.String,System.String)">
            <summary>
            Method to update the password for the specified user on CE
            </summary>
            <param name="username"> username</param>
            <param name="password"> password</param>
            <returns> bool </returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ValidateUserInformation(System.String,System.String)">
            <summary> Return information about the specified user information </summary>      
            <param name="username"> user name of the account to validate, append domain name if needed (domain\user) </param> 
            <param name="password"> the user password </param>
            <returns> User information block structure populated with user data </returns>
            <exception cref="T:System.InvalidOperationException">Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:System.ArgumentException">Arguments provided to a method is not valid.</exception>
            <remarks>The minimum firmware version required for this method is 1.009.0051.</remarks>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.CloudControl">
            <summary>
            Method IsCloudInControl() is not defined for v1.012.0017. Provided a wrapper for this.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.SetUserPageAuthCSOnLinux(System.Boolean)">
            <summary>
            Internal method to enable or disabe user page authentication on linux.
            <param name="paramNewState"> 'false' for disabling and 'true' for enabling user page authentication. </param>
            </summary>
            <returns> Returns 'true' if user authentication state is changed. Else 'false'.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.SetUserPageAuth(System.Boolean)">
            <summary> Internal method to enable or disabe user page authentication. </summary>
            <param name="paramNewState"> 'false' for disabling and 'true' for enabling user page authentication. </param>
            <returns> Returns 'true' if user authentication state is changed.</returns>
            <exception cref="T:System.NotSupportedException">The method is not currently supported</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.IsUserPageAuthEnabledInternal">
            <summary>
            Internal method to get the enabled or disabled status of user authentication.
            </summary>
            <returns>'true' if user authentication is enabled else 'false'.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.IsUserPageAuthEnabled">
            <summary> Internal method to get the enabled or disabled status of user authentication. </summary>
            <returns> Returns 'false' if user authentication is disabled, 'true' if user authentication is enabled.</returns>
            <exception cref="T:System.NotSupportedException">The method is not currently supported.
            <para>If minimum firmware version requirement is not satisfied.</para></exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.IsForcedAuthModeOnInternal">
            <summary>
            Internal method to check whether forced authentication is enabled or not.
            </summary>
            <returns>'true' if Forced authentication is enabled else 'false'.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.IsForcedAuthModeOn">
            <summary> Internal method to check whether forced authentication is enabled or not. </summary>
            <returns> Returns 'false' if forced authentication is disabled, 'true' if forced authentication is enabled.</returns>
            <exception cref="T:System.NotSupportedException">The method is not currently supported</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.QueryFirmwareSupport(Crestron.SimplSharp.CrestronAuthentication.Authentication.eFirmwareFeature,System.Version@)">
            <summary> Get the minimum supported firmware version for a feature.</summary>
            <param name="paramFeature"> Feature or method defined in <see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.eFirmwareFeature"/>.</param> 
            <param name="paramMinFirmwareFeatureSupportedVersion"> Passed as reference to get back the minimum firmware version that is supported by the feature.</param> 
            <returns> 'true' if the feature is supported in current version. Else 'false'.</returns>
            <exception cref="T:System.NotSupportedException">The method is not currently supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.SetUserPageAuthentication(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.Boolean)">
            <summary> Method to enable or disable user page authentication. </summary>
            <param name="paramUserToken"> User token obtained using "GetAuthenticationToken" method passed </param> 
            <param name="paramState"> 'false' for disabling and 'true' for enabling user page authentication. </param>
            <returns> Returns 'true' if user authentication state is changed successfully to the state mentioned in <see cref="!:paramState"/>.</returns>
            <exception cref="T:System.InvalidOperationException">Authentication or Forced Authentication is not currently enabled on the controller.</exception>
            <exception cref="T:System.ArgumentException">Invalid token passed to this method.</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">Higher privileges are required to use this method.</exception>
            <exception cref="T:System.NotSupportedException">If the API is not supported on this platform. Use <see cref="P:Crestron.SimplSharp.CrestronEnvironment.DevicePlatform"/> to determine the running platform type.
            <para>If minimum firmware version requirement is not satisfied.</para></exception>
            <remarks>The minimum firmware version required for this method is 1.602.0002 for 3-Series devices and 2.4361.02171 for 4-Series devices.</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.Enabled">
            <summary>
            Flag indicating the current state of authentication
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserPageAuthEnabled">
            <summary>
            Flag indicating the current state of user page authentication.
            <returns> Returns 'false' if user page authentication is disabled, 'true' if user page authentication is enabled.</returns>
            <exception cref="T:System.NotSupportedException">The method is not currently supported.
            <para>If minimum firmware version requirement is not satisfied.</para></exception>
            <remarks>The minimum firmware version required for this method is 1.602.0002 for 3-Series devices and 2.4361.02171 for 4-Series devices.</remarks>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.AdministratorExist">
            <summary>
            Flag indicating whether atleast one user with Administrator privilege exist in this system.
            <returns> Returns 'true' if atleast one user with Administrator privilege exist in this system, else 'false'.</returns>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.InCloudSync">
            <summary>
            Flag to indicate that the Cloud is in control of user account or group changes to the system.
            </summary>
            <remarks> This function is only available in firmware versions 1.500.0013 and higher</remarks>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.CurrentPasswordRules">
            <summary>
            Get the current password requirements of the system.
            </summary>
            <exception cref="T:System.SystemException">Unable to read system settings.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse">
            <summary>
            Enumeration to define the possible return values for <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Enable(System.String,System.String)"/>, <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Disable(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken)"/>, <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Disable(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.Boolean)"/>, and <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.Disable(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken,System.Boolean,System.Boolean)"/> . 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.Enabled">
            <summary>
            Authentication has been enabled successfully.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.Disabled">
            <summary>
            Authentication has been disabled successfully.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.RebootRequired">
            <summary>
            A reboot of the system is required to complete this operation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.UnableToChange">
            <summary>
            Based on system settings, the state of authentication can not be changed.	
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.InvalidAdministratorCredentials">
            <summary>
            Specified credentials do not match an existing administrator.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.ExistingNonAdministratorUser">
            <summary>
            Specified user name is not that of an administrator.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.InvalidPassword">
            <summary>
            The specified password does not match the rules of the system.	
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.GeneralError">
            <summary>
            Error creating Administrator account or changing the state of authentication.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eAuthenticationEnabledDisabledResponse.InvalidUserName">
            <summary>
            Error indicating that an invalid user name was specified.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes">
            <summary>
            Enum that lines up with the 4-Series native authentication return codes. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.GeneralError">
            <summary>
            Error creating Administrator account or changing the state of authentication.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.Enabled">
            <summary>
            Authentication has been enabled successfully.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.RebootRequired">
            <summary>
            A reboot of the system is required to complete this operation.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.UnableToChange">
            <summary>
            Based on system settings, the state of authentication can not be changed.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.InvalidAdministratorCredentials">
            <summary>
            Specified credentials do not match an existing administrator.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.ExistingNonAdministratorUser">
            <summary>
            Specified user name is not that of an administrator.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.InvalidPassword">
            <summary>
            The specified password does not match the rules of the system.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.InvalidUser">
            <summary>
            The specified user does not match the rules of the system.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eNativeAuthenticationReturnCodes.Disabled">
            <summary>
            Authentication has been disabled successfully.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PasswordRules">
            <summary>
            Structure returned from the <see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PasswordRules"/> to contain the current rules of the system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.PasswordRules.Length">
            <summary>
            Minimum length the password can be.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.PasswordRules.MixedCharacterCasing">
            <summary>
            Flag to indicate that the password must contain a lower and upper case character.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.PasswordRules.DigitRequired">
            <summary>
            Flag to indicate that the password must contain a number.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.PasswordRules.SpecialCharacterRequired">
            <summary>
            Flag to indicate that the password must contain atleast one special character.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.eFirmwareFeature">
            <summary>
            Enumeration that goes as input to the method <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.QueryFirmwareSupport(Crestron.SimplSharp.CrestronAuthentication.Authentication.eFirmwareFeature,System.Version@)"/> to check the minimum version supported by feature/method. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.eFirmwareFeature.UserPageAuthentication">
            <summary>
            User page authentication.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken">
            <summary>
            User credential information token
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.m_username">
            <summary>
            User name 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.m_password">
            <summary>
            password 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.m_access">
            <summary>
            access rights for this user
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.m_adconnect">
            <summary>
            user domain access connection status
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.m_valid">
            <summary>
            user token is valid
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.m_localusersadconnect">
            <summary>
            Local user's domain access connection status
            This field used by <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ActiveDirectoryLogin(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String,System.String)"/> and <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ActiveDirectoryLogout(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@)"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.m_localusersdomainusername">
            <summary>
            Local user's domain user name.
            This field used by <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ActiveDirectoryLogin(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@,System.String,System.String,System.String)"/> and <see cref="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.ActiveDirectoryLogout(Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken@)"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.UserName">
            <summary>
            user name 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.Password">
            <summary>
            user password
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.Access">
            <summary>
            user access level
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.ADConnect">
            <summary>
            active directory connection flag
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserToken.Valid">
            <summary>
            flag indicating whether the user information is valid
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation">
            <summary>
            structure to contain information about a user returned on user validation request 
            </summary>          
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.m_username">
            <summary>
            user name
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.m_groups">
            <summary>
            user is member of these groups  
            </summary>            
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.m_access">
            <summary>
            access level string
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.m_authenticated">
            <summary>
            flag indicating whether user is authenticated
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.UserName">
            <summary>
            user name 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.Groups">
            <summary>
            user groups 
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.Access">
            <summary>
            user access string   
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserInformation.Authenticated">
            <summary>
            user authentication indicator  
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.GroupInfo">
            <summary>
            Structure defined to keep group name and its access level that are present on the system.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.GroupInfo.#ctor(System.String,Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum)">
            <summary>
            Method to create an instance of <see cref="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.GroupInfo"/>.
            </summary>
            <param name="groupName">Group name.</param>
            <param name="accessLevel">Access level of group.</param>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.GroupInfo.Name">
            <summary>
            Group name
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.CrestronAuthentication.Authentication.GroupInfo.AccessLevel">
            <summary>
            Access level
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum">
            <summary>
            enumeration defining the different access levels a user account can have
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum.NoAccess">
            <summary>
            No Access   
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum.Connect">
            <summary>
            Access connect 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum.User">
            <summary>
            Access user
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum.Operator">
            <summary>
            Access operator
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum.Programmer">
            <summary>
            Access programmer
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.CrestronAuthentication.Authentication.UserAuthenticationLevelEnum.Administrator">
            <summary>
            Access administrator
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException">
            <summary>
            Exception used when a privilegeException error occurs. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.PrivilegeException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.CrestronAuthentication.Authentication.DomainAccessException">
            <summary>
            Exception used when a Domain access fails. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.DomainAccessException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.DomainAccessException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.CrestronAuthentication.Authentication.DomainAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.Debugger">
            <summary>
            This class provides debugging features.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.Break">
            <summary>
            Signals a breakpoint to an attached debugger.  
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.Write(System.Object)">
            <summary>
            Writes the ToString of an object to the debugger's window.
            </summary>
            <param name="value">An object whose name is sent to the debugger's window.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.Write(System.String)">
            <summary>
            Writes a string to the debugger's window.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.Write(System.Object,System.String)">
            <summary>
            Writes a category name and the value of the object's ToString method to the debugger's window
            </summary>
            <param name="value">An object whose name is sent to the debugger's window.</param>
            <param name="category">A category name used to organize the output. </param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.Write(System.String,System.String)">
            <summary>
            Writes a category name and message to the debugger's window
            </summary>
            <param name="message">A message to write. </param>
            <param name="category">A category name used to organize the output. </param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteIf(System.Boolean,System.Object)">
            <summary>
            Writes the value of the object's ToString method to the debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="value">An object whose name is sent to the debugger's window.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteIf(System.Boolean,System.String)">
            <summary>
            Writes a message to the debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="message">A message to write. </param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteIf(System.Boolean,System.Object,System.String)">
            <summary>
            Writes a category name and the value of the object's ToString method to debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="value">An object whose name is sent to the debugger's window.</param>
            <param name="category">A category name used to organize the output. </param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteIf(System.Boolean,System.String,System.String)">
            <summary>
            Writes a category name and message to the debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLine(System.Object)">
            <summary>
            Writes the value of the object's ToString method to the debugger's window.
            </summary>
            <param name="value">An object whose name is sent to the debugger's window.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLine(System.String)">
            <summary>
            Writes a message followed by a line terminator to the debugger's window.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLine(System.Object,System.String)">
            <summary>
            Writes a category name and the value of the object's ToString method to the debugger's window.
            </summary>
            <param name="value">An object whose name is sent to the debugger's window.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLine(System.String,System.String)">
            <summary>
            Writes a category name and message to the debugger's window.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLineIf(System.Boolean,System.Object)">
            <summary>
            Writes the value of the object's ToString method to the debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="value">An object whose name is sent to the debugger's window.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLineIf(System.Boolean,System.String)">
            <summary>
            Writes a message followed by a line terminator to the debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLineIf(System.Boolean,System.Object,System.String)">
            <summary>
            Writes a category name and the value of the object's ToString method to the debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="value">An object whose name is sent to the debugger's window.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Crestron.SimplSharp.Debugger.WriteLineIf(System.Boolean,System.String,System.String)">
            <summary>
            Writes a category name and message to the debugger's window if a condition is true.
            </summary>
            <param name="condition">true to cause a message to be written; otherwise, false. </param>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="P:Crestron.SimplSharp.Debugger.IsAttached">
            <summary>
            Gets a value that indicates whether a debugger is attached to the process.
            </summary>
            <returns>true if a debugger is attached; otherwise, false.</returns>
        </member>
        <member name="T:Crestron.SimplSharp.AddressFamily">
            <summary>
            Specifies the addressing scheme. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Unknown">
            <summary>
            Unknown address family.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Unspecified">
            <summary>
            Unspecified address family.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Unix">
            <summary>
            Unix local to host address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.InterNetwork">
            <summary>
            Address for IP version 4.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.ImpLink">
            <summary>
            ARPANET IMP address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Pup">
            <summary>
            Address for PUP protocols.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Chaos">
            <summary>
            Address for MIT CHAOS protocols.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Ipx">
            <summary>
            IPX or SPX address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.NS">
            <summary>
            Address for Xerox NS protocols.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Osi">
            <summary>
            Address for OSI protocols.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Iso">
            <summary>
            Address for ISO protocols.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Ecma">
            <summary>
            European Computer Manufacturers Association (ECMA) address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.DataKit">
            <summary>
            Address for Datakit protocols.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Ccitt">
            <summary>
            Addresses for CCITT protocols, such as X.25.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Sna">
            <summary>
            IBM SNA address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.DecNet">
            <summary>
            DECnet address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.DataLink">
            <summary>
            Direct data-link interface address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Lat">
            <summary>
            LAT address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.HyperChannel">
            <summary>
            NSC Hyperchannel address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.AppleTalk">
            <summary>
            AppleTalk address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.NetBios">
            <summary>
            NetBios address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.VoiceView">
            <summary>
            VoiceView address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.FireFox">
            <summary>
            FireFox address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Banyan">
            <summary>
            Banyan address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Atm">
            <summary>
            Native ATM services address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.InterNetworkV6">
            <summary>
            Address for IP version 6.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Cluster">
            <summary>
            Address for Microsoft cluster products.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Ieee12844">
            <summary>
            IEEE 1284.4 workgroup address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Irda">
            <summary>
            IrDA address.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.NetworkDesigners">
            <summary>
            Address for Network Designers OSI gateway-enabled protocols.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.AddressFamily.Max">
            <summary>
            MAX address.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharp.SocketException">
            <summary>
            Exception used to throw a socket exception. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SocketException.#ctor">
            <summary>
            Exception with the message blank and innerException null.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.SocketException.#ctor(System.String)">
            <summary>
            Exception with the message populated with the Exception information and the innerException is null.
            </summary>
            <param name="message">General message about the Exception.</param>
        </member>
        <member name="M:Crestron.SimplSharp.SocketException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with the message and innerException populated.
            </summary>
            <param name="message">General message about the Exception.</param>
            <param name="inner">Information on what caused the exception.</param>
        </member>
        <member name="T:Crestron.SimplSharp.IPAddress">
            <summary>
             Provides an Internet Protocol (IP) address.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the IPAddress class with the address specified as a Byte array
            </summary>
            <param name="address"> The byte array value of the IP address.</param>
            <exception cref="T:System.ArgumentNullException">address is null.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.#ctor(System.Net.IPAddress)">
            <summary>
            Internal constructor to set the System.Net.IPAddress as our IPAddress
            </summary>
            <param name="actualIPAddress"></param>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.GetActualAddress">
            <summary>
            Returns the actual IP address
            </summary>
            <returns></returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the IPAddress class with the address specified as an System.Int64
            </summary>
            <param name="newAddress"> The long value of the IP address.</param>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.#ctor(System.Byte[],System.Int64)">
            <summary>
            Initializes a new instance of the IPAddress class with the address
                specified as a Byte array and the specified scope identifier.
            </summary>
            <param name="address"> The byte array value of the IP address. </param>
            <param name="scopeid"> The long value of the scope identifier.</param>
            <exception cref="T:System.ArgumentNullException">Address in null </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> scopeid is less then 0 or scopeid greater then 0x00000000FFFFFFFF</exception>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.Equals(System.Object)">
            <summary>
            Compares two IP addresses.
            </summary>
            <param name="comparand"> An SimplSharp.IPAddress instance to compare to the current instance. </param>
            <returns> true if the two addresses are equal; otherwise, false. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.GetAddressBytes">
            <summary>
             Provides a copy of the SimplSharp.IPAddress as an array of bytes.
            </summary>
            <returns> A Byte array</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.GetHashCode">
            <summary>
            Returns a hash value for an IP address.
            </summary>
            <returns>An integer hash value</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.HostToNetworkOrder(System.Int32)">
            <summary>
            Converts an integer value from host byte order to network byte order.
            </summary>
            <param name="host">The number to convert, expressed in host byte order.</param>
            <returns>An integer value, expressed in network byte order.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.HostToNetworkOrder(System.Int64)">
            <summary>
            Converts a long value from host byte order to network byte order.
            </summary>
            <param name="host"> The number to convert, expressed in host byte order. </param>
            <returns> A long value, expressed in network byte order. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.HostToNetworkOrder(System.Int16)">
            <summary>
            Converts a short value from host byte order to network byte order.
            </summary>
            <param name="host"> The number to convert, expressed in host byte order. </param>
            <returns> A short value, expressed in network byte order. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.IsLoopback(Crestron.SimplSharp.IPAddress)">
            <summary>
            Indicates whether the specified IP address is the loopback address.
            </summary>
            <param name="address"> An IP address.</param>
            <returns> true if address is the loopback address; otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.NetworkToHostOrder(System.Int32)">
            <summary>
            Converts an integer value from network byte order to host byte order.
            </summary>
            <param name="network"> The number to convert, expressed in network byte order. </param>
            <returns> An integer value, expressed in host byte order.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.NetworkToHostOrder(System.Int64)">
            <summary>
            Converts a long value from network byte order to host byte order.
            </summary>
            <param name="network">The number to convert, expressed in network byte order.</param>
            <returns>A long value, expressed in host byte order</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.NetworkToHostOrder(System.Int16)">
            <summary>
            Converts a short value from network byte order to host byte order.
            </summary>
            <param name="network"> The number to convert, expressed in network byte order. </param>
            <returns> A short value, expressed in host byte order. </returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.Parse(System.String)">
            <summary>
            Converts an IP address string to an IPAddress instance.
            </summary>
            <param name="ipString"> A string that contains an IP address in dotted-quad notation for IPv4 and
                in colon-hexadecimal notation for IPv6.</param>
            <returns> An SimplSharp.IPAddress instance.</returns>
            <exception cref="T:System.ArgumentNullException"> IPString is NULL</exception>
            <exception cref="T:System.FormatException"> IPString is not a valid IP Address</exception>
        </member>
        <member name="M:Crestron.SimplSharp.IPAddress.ToString">
            <summary>
            Converts an Internet address to its standard notation.
            </summary>
            <returns> A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.</returns>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.Any">
            <summary>
            Provides an IP address that indicates that the server must listen for client
            activity on all network interfaces. This field is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.Broadcast">
            <summary>
            Provides the IP broadcast address. This field is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.IPv6Any">
            <summary>
            Provides an IP address that indicates that the server must listen for client
            activity on all network interfaces. This field is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.IPv6Loopback">
            <summary>
            Provides the IP loopback address. This property is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.IPv6None">
            <summary>
            Provides an IP address that indicates that no network interface should be used. This property is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.Loopback">
            <summary>
            Provides the IP loopback address. This field is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.None">
            <summary>
            Provides an IP address that indicates that no network interface should be used. This field is read-only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.AddressFamily">
            <summary>
            Gets the address family of the IP address.
            Returns SimplSharp.AddressFamily.InterNetwork for IPv4 or SimplSharp.AddressFamily.InterNetworkV6 for IPv6.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPAddress.ScopeId">
            <summary>
            Gets or sets the IPv6 address scope identifier.
            Returns A long integer that specifies the scope of the address.
            </summary>
            <exception cref="T:Crestron.SimplSharp.SocketException"> AddressFamily = InterNetwork</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> scopeid is less then 0 or scopeid greater then 0x00000000FFFFFFFF</exception>
        </member>
        <member name="T:Crestron.SimplSharp.IPEndPoint">
            <summary>
            Represents a network endpoint as an IP address and a port number.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.IPEndPoint.MaxPort">
            <summary>
            Specifies the maximum value that can be assigned to the IPEndPoint.Port
            property. The MaxPort value is set to 0x0000FFFF. This field is read-only.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharp.IPEndPoint.MinPort">
            <summary>
            Specifies the minimum value that can be assigned to the IPEndPoint.Port
            property. This field is read-only.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.IPEndPoint.#ctor(Crestron.SimplSharp.IPAddress,System.Int32)">
            <summary>
            Initializes a new instance of the IPEndPoint class with the specified address and port number.
            </summary>
            <param name="address"> An IPAddress</param>
            <param name="port"> The port number associated with the address, or 0 to specify any available
             port. port is in host order.</param>
             <exception cref="T:System.ArgumentOutOfRangeException"> port is less than IPEndPoint.MinPort.  -or- port is greater than
             MaxPort.  -or- address is less than 0 or greater than 0x00000000FFFFFFFF.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.IPEndPoint.#ctor(System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the IPEndPoint class with the specified address and port number.
            </summary>
            <param name="address"> IP Address of the Internet host</param>
            <param name="port"> The port number associated with the address, or 0 to specify any available
             port. port is in host order.</param>
             <exception cref="T:System.ArgumentOutOfRangeException"> port is less than IPEndPoint.MinPort.  -or- port is greater than
             MaxPort.  -or- address is less than 0 or greater than 0x00000000FFFFFFFF.</exception>
        </member>
        <member name="M:Crestron.SimplSharp.IPEndPoint.Equals(System.Object)">
            <summary>
            Compares two IPEndPoints
            </summary>
            <param name="comparand"> IPEndpoint to compare</param>
            <returns> true if the specified Object is equal to the current Object;
                otherwise, false.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPEndPoint.GetHashCode">
            <summary>
            Returns an hash value for the endpoint
            </summary>
            <returns> A hash code for the current object.</returns>
        </member>
        <member name="M:Crestron.SimplSharp.IPEndPoint.ToString">
            <summary>
            Returns the IP address and port number of the specified endpoint.
            </summary>
            <returns> A string containing the IP address and the port number of the specified endpoint</returns>
        </member>
        <member name="P:Crestron.SimplSharp.IPEndPoint.Address">
            <summary>
            Gets or sets the IP address of the endpoint.
            Returns a IPAddress instance containing the IP address of the endpoint.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPEndPoint.AddressFamily">
            <summary>
            Gets the Internet Protocol (IP) address family.
            Returns SimplSharp.AddressFamily.InterNetwork.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPEndPoint.Port">
            <summary>
            Gets or sets the port number of the endpoint.
            Returns An integer value in the range IPEndPoint.MinPort to IPEndPoint.MaxPort indicating the port number of the endpoint.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> The value that was specified for a set operation is less than IPEndPoint.MinPort
            or greater than IPEndPoint.MaxPort.</exception>
        </member>
        <member name="T:Crestron.SimplSharp.IPHostEntry">
            <summary>
            Provides a container class for Internet host address information.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.IPHostEntry.#ctor">
            <summary>
            Constructor to initialize the IPHostEntry class
            </summary>
        </member>
        <member name="M:Crestron.SimplSharp.IPHostEntry.#ctor(System.Net.IPHostEntry)">
            <summary>
            Contructor to intialize the host entry based on an actual host entry
            </summary>
            <param name="tempVar">System.Net.IPHostEntry to initialize the class to</param>
        </member>
        <member name="P:Crestron.SimplSharp.IPHostEntry.AddressList">
            <summary>
            Gets a list of IP addresses that are associated with a host.
            An array of type IPAddress that contains IP addresses that resolve
            to the host names that are contained in the IPHostEntry.Aliases
            property.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPHostEntry.Aliases">
            <summary>
            Gets a list of aliases that are associated with a host.
            Returns An array of strings that contain DNS names that resolve to the IP addresses in the IPHostEntry.AddressList property
            </summary>
        </member>
        <member name="P:Crestron.SimplSharp.IPHostEntry.HostName">
            <summary>
            Gets DNS name of the host.
            </summary>
        </member>
    </members>
</doc>
