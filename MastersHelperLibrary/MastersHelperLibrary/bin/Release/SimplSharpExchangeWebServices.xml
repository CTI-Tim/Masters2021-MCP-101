<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimplSharpExchangeWebServices</name>
    </assembly>
    <members>
        <member name="T:Independentsoft.Msg.RecurrencePatternFrequency">
            <summary>
            Defines recurrence pattern frequency
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternFrequency.Daily">
            <summary>
            Recurrence is daily
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternFrequency.Weekly">
            <summary>
            Recurrence is weekly
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternFrequency.Monthly">
            <summary>
            Recurrence is monthly
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternFrequency.Yearly">
            <summary>
            Recurrence is yearly
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.MeetingStatus">
            <summary>
            The MeetingStatus enum specifies the status of an appointment or meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MeetingStatus.NonMeeting">
            <summary>
            An Appointment item without attendees has been scheduled. This status can be used to set up holidays on a calendar.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MeetingStatus.Meeting">
            <summary>
            The meeting has been scheduled.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MeetingStatus.Received">
            <summary>
            The meeting request has been received.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MeetingStatus.CanceledOrganizer">
            <summary>
            The scheduled meeting has been cancelled but still appears on the user's calendar.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MeetingStatus.Canceled">
            <summary>
            The scheduled meeting has been cancelled.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MeetingStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.DayOfWeekIndex">
            <summary>
            Describes which week in a month is used in a relative recurrence pattern.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeekIndex.First">
            <summary>
            First.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeekIndex.Second">
            <summary>
            Second.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeekIndex.Third">
            <summary>
            Third.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeekIndex.Fourth">
            <summary>
            Fourth.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeekIndex.Last">
            <summary>
            Last.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeekIndex.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.Member">
            <summary>
            Definition of Member class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.Member.#ctor">
            <summary>
            Initializes a Member instance.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.Member.#ctor(System.String,Independentsoft.Json.Parser.JsonValue)">
            <summary>
            Initializes a Member instance.
            </summary>
            <param name="name">member name.</param>
            <param name="value">member value.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.Member.ToString">
            <summary>
            Reports the member name in double quotes and its value.
            </summary>
            <returns>string returned.</returns>
        </member>
        <member name="P:Independentsoft.Json.Parser.Member.Name">
            <summary>
            Gets or sets the member name.
            </summary>
        </member>
        <member name="P:Independentsoft.Json.Parser.Member.Value">
            <summary>
            Gets or sets the member's Value.
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonParser">
            <summary>
            Definition of JsonParser class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonParser.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a JsonParser instance.
            </summary>
            <param name="reader">the StreamReader of this instance.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonParser.Parse">
            <summary>
            Reports the JsonValue of current object being parsed.
            </summary>
            <returns>a JsonValue.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.TimeChangePattern">
            <summary>
            Describes a relative yearly recurrence pattern.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SyncFoldersResponse">
            <summary>
            Represents the status and result of a single SyncFolderHierarchy operation request.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Response">
            <summary>
            Provides descriptive information about the response status for a single entity within a request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Response.ResponseClass">
            <summary>
            Represents the status of the response. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Response.ResponseCode">
            <summary>
            Provides an error code that identifies the specific error that the request encountered.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Response.Message">
            <summary>
            Provides a text description of the status of the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Response.XmlMessage">
            <summary>
            Provides additional error response information.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Response.DescriptiveLinkKey">
            <summary>
            Currently unused and is reserved for future use.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Response.ServerVersionInfo">
            <summary>
            Represents the Microsoft Exchange Server version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncFoldersResponse.State">
            <summary>
            This is used to identify the synchronization state. Contains a base64-encoded form of the synchronization data that is updated after each successful request. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncFoldersResponse.IncludesLastFolderInRange">
            <summary>
            Indicates whether the last item to synchronize has been included in the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncFoldersResponse.CreatedFolders">
            <summary>
            Identifies a collection of folders to create in the local client store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncFoldersResponse.UpdatedFolders">
            <summary>
            Identifies a collection of folders to update in the local client store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncFoldersResponse.DeletedFolders">
            <summary>
            Identifies a collection of folders to delete in the local client store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StandardFolder">
            <summary>
            Identifies well-known Microsoft Exchange Server folders that can be referenced by name. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Calendar">
            <summary>
            Represents the Calendar folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Contacts">
            <summary>
            Represents the Contacts folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.DeletedItems">
            <summary>
            Represents the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Drafts">
            <summary>
            Represents the Drafts folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Inbox">
            <summary>
            Represents the Inbox folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Journal">
            <summary>
            Represents the Journal folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Notes">
            <summary>
            Represents the Notes folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Outbox">
            <summary>
            Represents the Outbox folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.SentItems">
            <summary>
            Represents the Sent Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Tasks">
            <summary>
            Represents the Tasks folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.MailboxRoot">
            <summary>
            The root of the message folder hierarchy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.PublicFoldersRoot">
            <summary>
            The root of the Public Folders hierarchy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Root">
            <summary>
            Represents the root of the mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.JunkEmail">
            <summary>
            Represents the Junk E-mail folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.SearchFolders">
            <summary>
            Represents a Search folder contained in a mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.VoiceMail">
            <summary>
            Represents the Voice Mail folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ArchiveDeletedItems">
            <summary>
            The Deleted Items folder in the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ArchiveMessageFolderRoot">
            <summary>
            The root of the message folder hierarchy in the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ArchiveRecoverableItemsDeletions">
            <summary>
            The root of the folder hierarchy of recoverable items that have been soft-deleted from the Deleted Items folder of the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ArchiveRecoverableItemsPurges">
            <summary>
            The root of the hierarchy of recoverable items that have been hard-deleted from the Deleted Items folder of the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ArchiveRecoverableItemsRoot">
            <summary>
            The root of the Recoverable Items folder hierarchy in the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ArchiveRecoverableItemsVersions">
            <summary>
            The root of the Recoverable Items versions folder hierarchy in the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ArchiveRoot">
            <summary>
            The root of the folder hierarchy in the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.RecoverableItemsDeletions">
            <summary>
            The root of the folder hierarchy of recoverable items that have been soft-deleted from the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.RecoverableItemsPurges">
            <summary>
            The root of the folder hierarchy of recoverable items that have been hard-deleted from the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.RecoverableItemsRoot">
            <summary>
            The root of the Recoverable Items folder hierarchy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.RecoverableItemsVersions">
            <summary>
            The root of the Recoverable Items versions folder hierarchy in the archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.SyncIssues">
            <summary>
            Specifies the sync issues folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Conflicts">
            <summary>
            Specifies the conflicts folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.LocalFailures">
            <summary>
            Specifies the local failures folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ServerFailures">
            <summary>
            Specifies the server failures folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.RecipientCache">
            <summary>
            Specifies the recipient cache folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.QuickContacts">
            <summary>
            Specifies the quick contacts folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ConversationHistory">
            <summary>
            Specifies the conversation history folder. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.AdminAuditLogs">
            <summary>
            Specifies the admin audit logs folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.ToDoSearch">
            <summary>
            Specifies the to do search folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.MyContacts">
            <summary>
            Specifies the my contacts folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.Directory">
            <summary>
            Specifies a directory.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.IMContactList">
            <summary>
            Specifies the IM contact list folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.PeopleConnect">
            <summary>
            Specifies the folder that is used for social networks.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardFolder.None">
            <summary>
            Non standard folder
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ShapeType">
            <summary>
            Identifies the set of properties to return in an item or folder response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ShapeType.Id">
            <summary>
            Returns only the item or folder ID.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ShapeType.Default">
            <summary>
            Returns a set of properties that are defined as the default for the item or folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ShapeType.AllProperties">
            <summary>
            Returns all the properties used by the Exchange Business Logic layer to construct a folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SearchMailboxesResponse">
            <summary>
            Class SearchMailboxesResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.MailboxQueries">
            <summary>
            Gets the mailbox queries.
            </summary>
            <value>The mailbox queries.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.ResultType">
            <summary>
            Gets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.ItemCount">
            <summary>
            Gets the item count.
            </summary>
            <value>The item count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.PageItemCount">
            <summary>
            Gets the page item count.
            </summary>
            <value>The page item count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.PageItemSize">
            <summary>
            Gets the size of the page item.
            </summary>
            <value>The size of the page item.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.KeywordStatisticsSearchResults">
            <summary>
            Gets the keyword statistics search results.
            </summary>
            <value>The keyword statistics search results.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.FailedMailboxes">
            <summary>
            Gets the failed mailboxes.
            </summary>
            <value>The failed mailboxes.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.Refiners">
            <summary>
            Gets the refiners.
            </summary>
            <value>The refiners.</value>
        </member>
        <member name="P:Independentsoft.Exchange.SearchMailboxesResponse.MailboxStatisticsItems">
            <summary>
            Gets the mailbox statistics items.
            </summary>
            <value>The mailbox statistics items.</value>
        </member>
        <member name="T:Independentsoft.Exchange.RuleExceptions">
            <summary>
            Identifies the exceptions that represent all the available rule exception conditions for an Inbox rule. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RuleExceptions.#ctor">
            <summary>
            Initializes a new instance of the RuleExceptions class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.Categories">
            <summary>
            Contains the categories that must be applied to an incoming message in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.ContainsBodyStrings">
            <summary>
            Indicates the strings that must appear in the body of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.ContainsHeaderStrings">
            <summary>
            Indicates the strings that must appear in the headers of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.ContainsRecipientStrings">
            <summary>
            Indicates the strings that must appear in either the ToRecipients or CcRecipients properties of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.ContainsSenderStrings">
            <summary>
            Indicates the strings that must appear in the From property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.ContainsSubjectOrBodyStrings">
            <summary>
            Indicates the strings that must appear in either the body or the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.ContainsSubjectStrings">
            <summary>
            Indicates the strings that must appear in the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.FlaggedForAction">
            <summary>
            Specifies the flag for action value that must appear on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.FromAddresses">
            <summary>
            Indicates the e-mail addresses from which incoming messages must be sent in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.FromConnectedAccounts">
            <summary>
            Represents the e-mail account names from which incoming messages have to have been aggregated in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.HasAttachments">
            <summary>
            Indicates whether incoming messages have to have attachments in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.Importance">
            <summary>
            Specifies the importance that is stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsApprovalRequest">
            <summary>
            Indicates whether incoming messages must be approval requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsAutomaticForward">
            <summary>
            Indicates whether incoming messages must be automatic forwards in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsAutomaticReply">
            <summary>
            Indicates whether incoming messages must be automatic replies in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsEncrypted">
            <summary>
            Indicates whether incoming messages must be S/MIME encrypted in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsMeetingRequest">
            <summary>
            Indicates whether incoming messages must be meeting requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsMeetingResponse">
            <summary>
            Indicates whether incoming messages must be meeting responses in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsNDR">
            <summary>
            Indicates whether incoming messages must be non-delivery reports (NDRs) in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsPermissionControlled">
            <summary>
            Indicates whether incoming messages must be permission controlled (RMS protected) in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsReadReceipt">
            <summary>
            Indicates whether incoming messages must be read receipts in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsSigned">
            <summary>
            Indicates whether incoming messages must be S/MIME signed in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.IsVoiceMail">
            <summary>
            Indicates whether incoming messages must be voice mail messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.ItemClasses">
            <summary>
            Represents the item classes that must be stamped on incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.MessageClassifications">
            <summary>
            Represents the message classifications that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.NotSentToMe">
            <summary>
            Indicates whether the owner of the mailbox must not be in the ToRecipients property of the incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.SentCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the CcRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.SentOnlyToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be the only one in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.SentToAddresses">
            <summary>
            Indicates the e-mail addresses that incoming messages have to have been sent to in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.SentToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.SentToOrCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in either a ToRecipients or CcRecipients property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.Sensitivity">
            <summary>
            Indicates the sensitivity that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.WithinDateRange">
            <summary>
            Specifies the date range within which incoming messages have to have been received in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleExceptions.WithinSizeRange">
            <summary>
            Specifies the minimum and maximum sizes that incoming messages must be in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RetentionTag">
            <summary>
            Represents a retention tag
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RetentionTag.#ctor">
            <summary>
            Initializes the <see cref="T:Independentsoft.Exchange.RetentionTag"/> class
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RetentionTag.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes the <see cref="T:Independentsoft.Exchange.RetentionTag"/> class with the specified string and whether or not it was explicitly added
            </summary>
            <param name="value">The GUID that identifies the retention policy</param>
            <param name="isExplicit">true if the tag was explicitly set on an item or folder, 
            false if it was inherited from a parent folder</param>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionTag.IsExplicit">
            <summary>
            Get or set whether or not this <see cref="T:Independentsoft.Exchange.RetentionTag"/> was explicitly added
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionTag.Value">
            <summary>
            Get or set the local name
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RetentionAction">
            <summary>
            Defines retention actions
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RetentionAction.MoveToDeletedItems">
            <summary>
            This action will move the message to the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RetentionAction.MoveToFolder">
            <summary>
            This action will move the message to a folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RetentionAction.DeleteAndAllowRecovery">
            <summary>
            This action emulates the behavior when the Deleted Items folder is emptied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RetentionAction.PermanentlyDelete">
            <summary>
            This action permanently deletes a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RetentionAction.MarkAsPastRetentionLimit">
            <summary>
            This action marks a message as expired after it reaches its retention age.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RetentionAction.MoveToArchive">
            <summary>
            This action moves a message to the user's archive mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RetentionAction.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ResponseType">
            <summary>
            Represents the type of recipient response that is received for a meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseType.Organizer">
            <summary>
            Organizer.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseType.Tentative">
            <summary>
            Tentative.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseType.Accept">
            <summary>
            Accept.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseType.Decline">
            <summary>
            Decline.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseType.NoResponseReceived">
            <summary>
            NoResponseReceived.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PostPropertyPath">
             <summary>
             Represents a post property path
             </summary>
             <example>
             The following example gets all Post items in the Sent Items folder created in the past month
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             IsGreaterThanOrEqualTo restriction = new IsGreaterThanOrEqualTo(PostPropertyPath.PostedTime, DateTime.Today.AddMonths(-1));
            
             FindItemResponse response = service.FindItem(StandardFolder.SentItems, PostPropertyPath.AllPropertyPaths, restriction);
            
             for (int i = 0; i &lt; response.Items.Count; i++)
             {
                 if (response.Items[i] is Post)
                 {
                     Post post = (Post)response.Items[i];
            
                     CrestronConsole.PrintLine("Subject = " + post.Subject);
                     CrestronConsole.PrintLine("PostedTime = " + post.PostedTime);
                     CrestronConsole.PrintLine("Body Preview = " + post.BodyPlainText);
                     CrestronConsole.PrintLine("----------------------------------------------------------------");
                 }
             }
             </code>
             </example>
        </member>
        <member name="T:Independentsoft.Exchange.ItemPropertyPath">
            <summary>
            Contains property paths for an Item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Id">
            <summary>
            Identifies this item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ItemId">
            <summary>
            Identifies this item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ParentId">
            <summary>
            Represents the identifier of the parent folder that contains the item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ItemClass">
            <summary>
            Represents the message class of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Subject">
            <summary>
            Represents the subject property of Exchange store items, limited to 255 characters
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.MimeContent">
            <summary>
            Contains the ASCII MIME stream of an object that is represented in base64Binary format and supports [RFC2045]
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Sensitivity">
            <summary>
            Indicates the sensitivity level of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Body">
            <summary>
            Specifies the body of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Attachments">
            <summary>
            Contains the items or files that are attached to an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Size">
            <summary>
            Represents the size in bytes of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Categories">
            <summary>
            Contains a collection of strings that identify the categories to which an item in the mailbox belongs
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Importance">
            <summary>
            Describes the importance of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.CreatedTime">
            <summary>
            Represents the date and time that an item in the mailbox was created
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.HasAttachments">
            <summary>
            Indicates if this item has attachments
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Culture">
            <summary>
            Represents the culture for a given item in a mailbox
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.EffectiveRights">
            <summary>
            Contains the client's rights based on the permission settings for the item or folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.LastModifierName">
            <summary>
            Contains the display name of the last user to modify an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.LastModifiedTime">
            <summary>
            Contains the last time this item was modified
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.DisplayName">
            <summary>
            The display name for the item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.EntryId">
            <summary>
            The entry id for the item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.SearchKey">
            <summary>
            The search key for the item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.BodyHtmlText">
            <summary>
            Contains the message text in html format
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.BodyPlainText">
            <summary>
            Contains the message text
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.IsHidden">
            <summary>
            Indicates if this item is hidden
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.IsAssociated">
            <summary>
            Indicates whether the item is associated with a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.WebClientReadFormQueryString">
            <summary>
            Represents a URL to concatenate to the Outlook Web App endpoint to read an item in Outlook Web App
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.WebClientEditFormQueryString">
            <summary>
            Represents a URL to concatenate to the Outlook Web App endpoint to edit an item in Outlook Web App
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ConversationId">
            <summary>
            Contains the identifier of an item or conversation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.UniqueBody">
            <summary>
            Represents an HTML fragment or plain text which represents the unique body of this conversation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.StoreEntryId">
            <summary>
            Contains the Exchange store identifier of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Comment">
            <summary>
            Contains a comment about an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ReminderDueBy">
            <summary>
            Represents the date and time when the event occurs
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ReminderIsSet">
            <summary>
            Indicates whether a reminder has been set for an item in the Exchange store
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ReminderMinutesBeforeStart">
            <summary>
            Represents the number of minutes before an event occurs when a reminder is displayed
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Flag">
            <summary>
            Specifies a flag on a mailbox item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.InstanceKey">
            <summary>
            Specifies an instance key for an item or conversation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.RetentionTag">
            <summary>
            Specifies the retention identifier on an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.ArchiveTag">
            <summary>
            Specifies the retention identifier of the archive tag set on an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.RetentionDate">
            <summary>
            Specifies the last date that an item must be retained
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.Preview">
            <summary>
            Specifies the first 256 characters of an item for display
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.NextPredictedAction">
            <summary>
            Intended for internal use
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.GroupingAction">
            <summary>
            Intended for internal use
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.BlockStatus">
            <summary>
            Specifies the block status of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.HasBlockedImages">
            <summary>
            Specifies a Boolean value that indicates whether the item has blocked images
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.TextBody">
            <summary>
            Specifies the text body
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.IconIndex">
            <summary>
            Identifies the icon index for an item or conversation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemPropertyPath.EntityExtractionResult">
            <summary>
            Identifies the entity extraction result for an item or conversation
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ItemPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.ConversationIndex">
            <summary>
            The id that represents the thread to which this message belongs
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.ConversationTopic">
            <summary>
            Represents the conversation topic
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.From">
            <summary>
            Represents the address from which the message was sent
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.InternetMessageId">
            <summary>
            Represents the Internet message identifier of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.IsRead">
            <summary>
            Indicates whether a message has been read
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.PostedTime">
            <summary>
            Represents the time at which an item was posted
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.References">
            <summary>
            Represents the Usenet header that is used to associate replies with the original messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PostPropertyPath.Sender">
            <summary>
            Identifies the sender of an item
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PostPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaPropertyPath">
             <summary>
             Class PersonaPropertyPath.
             </summary>
             <example>
             This example searches for personas with the surname 'Smith' and prints the persona info
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             service.RequestServerVersion = RequestServerVersion.Exchange2013;
            
             IsEqualTo restriction = new IsEqualTo(PersonaPropertyPath.Surname, "Smith");
            
             FindPeopleResponse response = service.FindPeople(StandardFolder.Contacts, restriction);
             foreach (Persona persona in response.Personas)
             {
                 CrestronConsole.PrintLine("PersonaId:" + persona.PersonaId);
                 CrestronConsole.PrintLine("PersonaType:" + persona.PersonaType);
                 CrestronConsole.PrintLine("DisplayName:" + persona.DisplayName);
                 CrestronConsole.PrintLine("PhoneNumber:" + persona.PhoneNumber);
            
                 if (persona.EmailAddress != null)
                 {
                     CrestronConsole.PrintLine("EmailAddress:" + persona.EmailAddress.EmailAddress);
                 }
             }
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.PersonaId">
            <summary>
            Specifies the persona identifier for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.PersonaType">
            <summary>
            Specifies the type of the persona, for example, a person or a distribution list
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.PersonaObjectStatus">
            <summary>
            Specifies whether the information in the associated persona is complete or partial
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.CreationTime">
            <summary>
            Specifies when the persona was created
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.DisplayName">
            <summary>
            Defines the display name of a persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.FileAs">
            <summary>
            Represents how a contact or distribution list is filed in the Contacts folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.FileAsId">
            <summary>
            Specifies the FileAs identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.DisplayNamePrefix">
            <summary>
            Specifies the prefix of the display name of the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.GivenName">
            <summary>
            Contains a contact's given name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.MiddleName">
            <summary>
            Represents the middle name of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Surname">
            <summary>
            Represents the surname of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Generation">
            <summary>
            Represents a generational abbreviation that follows the full name of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Nickname">
            <summary>
            Represents the nickname of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.YomiCompanyName">
            <summary>
            Specifies the phonetic Japanese company name of the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.YomiFirstName">
            <summary>
            Represents the name that is used in Japan for the searchable or phonetic spelling for a Japanese first name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.YomiLastName">
            <summary>
            Represents the name that is used in Japan for the searchable or phonetic spelling for a Japanese last name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Title">
            <summary>
            Represents the title of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Department">
            <summary>
            Represents the contact's department at work
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.CompanyName">
            <summary>
            Represents the company name that is associated with a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.EmailAddress">
            <summary>
            Specifies the fully resolved SMTP address for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.EmailAddresses">
            <summary>
            Represents a collection of e-mail addresses for a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.PhoneNumber">
            <summary>
            Specifies the default phone number of the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.ImAddress">
            <summary>
            Contains the primary instant messaging address of a persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.HomeCity">
            <summary>
            Specifies the city of the home address of the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.WorkCity">
            <summary>
            Specifies the city where the associated persona works
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.RelevanceScore">
            <summary>
            Specifies an integer that represents how relevant the associated persona is to the client
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.FolderIds">
            <summary>
            Contains an array of folder identifiers that are used to identify folders to copy, move, get, delete, or monitor for event notifications
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Attributions">
            <summary>
            Specifies an array of attribution information for one or more of the contacts or Active Directory recipients aggregated into the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.DisplayNames">
            <summary>
            Specifies an array of display names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.FileAses">
            <summary>
            Specifies an array of StringAttributedValue elements and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.FileAsIds">
            <summary>
            Specifies an array of StringAttributedValue elements and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.DisplayNamePrefixes">
            <summary>
            Specifies an array of display name prefixes and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.GivenNames">
            <summary>
            Specifies an array of given name values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.MiddleNames">
            <summary>
            Specifies an array of middle name values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Surnames">
            <summary>
            Specifies an array of surname values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Generations">
            <summary>
            Specifies an array of generation values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Nicknames">
            <summary>
            Specifies an array of nickname values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Initials">
            <summary>
            Represents the initials of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.YomiCompanyNames">
            <summary>
            Specifies an array of phonetic Japanese company names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.YomiFirstNames">
            <summary>
            Specifies an array of phonetic Japanese first names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.YomiLastNames">
            <summary>
            Specifies an array of phonetic Japanese last names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.BusinessPhoneNumbers">
            <summary>
            Specifies an array of business phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.BusinessPhoneNumbers2">
            <summary>
            Specifies an array of BusinessPhoneNumber2 elements and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.HomePhones">
            <summary>
            Specifies an array of home phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.HomePhones2">
            <summary>
            Specifies an array of HomePhone2 values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.MobilePhones">
            <summary>
            Specifies an array of mobile phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.MobilePhones2">
            <summary>
            Specifies an array of MobilePhone values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.AssistantPhoneNumbers">
            <summary>
            Specifies an array of assistant phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.CallbackPhones">
            <summary>
            Specifies an array of call-back phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.CarPhones">
            <summary>
            The CarPhone element specifies an array of car phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.HomeFaxes">
            <summary>
            Specifies an array of home fax numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.OrganizationMainPhones">
            <summary>
            Specifies an array of organizational main phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.OtherFaxes">
            <summary>
            Specifies an array of fax phone number values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.OtherTelephones">
            <summary>
            Specifies an array of telephone values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.OtherPhones2">
            <summary>
            Specifies an array of phone values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Pagers">
            <summary>
            Specifies an array of pager phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.RadioPhones">
            <summary>
            Specifies an array of radio phone numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.TelexNumbers">
            <summary>
            Specifies an array of Telex numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.WorkFaxes">
            <summary>
            Specifies an array of work fax numbers and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Emails1">
            <summary>
            Specifies an array of EmailAddressAttributedValue values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Emails2">
            <summary>
            Contains an array of EmailAddressAttributedValue values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Emails3">
            <summary>
            Specifies an array of EmailAddressAttributedValue values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.BusinessHomePages">
            <summary>
            Specifies an array of business home pages and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.PersonalHomePages">
            <summary>
            Specifies an array of home pages and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.OfficeLocations">
            <summary>
            Specifies an array of office locations and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.ImAddresses">
            <summary>
            Represents a collection of instant messaging addresses for a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.ImAddresses2">
            <summary>
            Specifies an array of instant message addresses and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.ImAddresses3">
            <summary>
            Specifies an array of instant message addresses and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.BusinessAddresses">
            <summary>
            Specifies an array of business addresses and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.HomeAddresses">
            <summary>
            Specifies an array of home addresses and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.OtherAddresses">
            <summary>
            Specifies an array of address values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Titles">
            <summary>
            Specifies an array of job titles and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Departments">
            <summary>
            Specifies an array of department names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.CompanyNames">
            <summary>
            Contains an array of company names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Managers">
            <summary>
            Specifies an array of manager names and the identifiers of their source attributions for a persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.AssistantNames">
            <summary>
            Specifies an array of assistant names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Professions">
            <summary>
            Specifies an array of Profession values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.SpouseNames">
            <summary>
            Specifies an array of spouse or partner names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Children">
            <summary>
            Contains the names of a contact's children
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Schools">
            <summary>
            Specifies an array of school names and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Hobbies">
            <summary>
            Specifies an array of hobbies and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.WeddingAnniversaries">
            <summary>
            Specifies an array of wedding anniversary dates, stored as strings, and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Birthdays">
            <summary>
            Specifies an array of birthdays, stored as strings, and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.Locations">
            <summary>
            Specifies an array of location values and the identifiers of their source attributions for the associated persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PersonaPropertyPath.ExtendedProperties">
            <summary>
            Contains the extended properties used for a persona
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPropertyPath.AllPropertyPaths">
            <summary>
            Gets all property paths.
            </summary>
            <value>All property paths.</value>
        </member>
        <member name="T:Independentsoft.Exchange.NumberedRecurrenceRange">
            <summary>
            Describes the start date and the number of occurrences of a recurring item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RecurrenceRange">
            <summary>
            Specifies the range of a recurrence item
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.NumberedRecurrenceRange.#ctor">
            <summary>
            Initializes a new instance of the NumberedRecurrenceRange class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.NumberedRecurrenceRange.#ctor(System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the NumberedRecurrenceRange class.
            </summary>
            <param name="startDate">The start date of a recurring task or calendar item</param>
            <param name="occurrenceCount">The number of occurrences of a recurring item</param>
        </member>
        <member name="M:Independentsoft.Exchange.NumberedRecurrenceRange.ToString">
            <summary>
            Converts the value of the current NumberedRecurrenceRange object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current NumberedRecurrenceRange object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.NumberedRecurrenceRange.StartDate">
            <summary>
            Represents the start date of a recurring task or calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NumberedRecurrenceRange.OccurrenceCount">
            <summary>
            Contains the number of occurrences of a recurring item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MessageFlag">
            <summary>
            Contains a bitmask of flags that indicate the origin and current state of a message. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.Associated">
            <summary>
            The message is an associated message of a folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.FromMe">
            <summary>
            The messaging user sending was the messaging user receiving the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.HasAttachment">
            <summary>
            The message has at least one attachment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.NonReadReportPending">
            <summary>
            A nonread report needs to be sent for the message. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.OriginInternet">
            <summary>
            The incoming message arrived over the Internet. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.OriginMiscExternal">
            <summary>
            The incoming message arrived over an external link other than X.400 or the Internet. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.OriginX400">
            <summary>
            The incoming message arrived over an X.400 link. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.Read">
            <summary>
            The message is marked as having been read.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.Resend">
            <summary>
            The message includes a request for a resend operation with a nondelivery report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.ReadReportPending">
            <summary>
            A read report needs to be sent for the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.Submit">
            <summary>
            The message is marked for sending as a result of a call to IMessage::SubmitMessage.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.Unmodified">
            <summary>
            The outgoing message has not been modified since the first time that it was saved; the incoming message has not been modified since it was delivered. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageFlag.Unsent">
            <summary>
            The message is still being composed. It is saved, but has not been sent.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingStatus">
            <summary>
            The MeetingStatus enum specifies the status of an appointment or meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingStatus.NonMeeting">
            <summary>
            This appointment has been scheduled by this messaging user alone and does not represent a meeting (default value). 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingStatus.Meeting">
            <summary>
            The appointment has been or is to be made into a meeting. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingStatus.Received">
            <summary>
            The requests for the meeting have been received by the intended attendees. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingStatus.CanceledOrganizer">
            <summary>
            The meeting organizer has canceled the meeting. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingStatus.Canceled">
            <summary>
            The meeting has canceled. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingCancellation">
            <summary>
            Represents a meeting cancellation in the Exchange store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingMessage">
            <summary>
            Represents a meeting in the Exchange store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Message">
            <summary>
            Represents a Microsoft Exchange e-mail message.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Item">
            <summary>
            Represents a generic item in the Exchange store.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Item.#ctor">
            <summary>
            Initializes a new instance of the Item class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Item.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Item class.
            </summary>
            <param name="subject">The subject.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Item.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Item class.
            </summary>
            <param name="subject">The subject.</param>
            <param name="itemClass">The item class.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Item.#ctor(Independentsoft.Exchange.MimeContent)">
            <summary>
            Initializes a new instance of the Item class.
            </summary>
            <param name="mimeContent">Content of the MIME.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Item.ToString">
            <summary>
            Converts the value of the current Item object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ItemId">
            <summary>
            Contains the unique identifier and change key of an item in the Exchange store.
            </summary>
            <value>The item identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ParentId">
            <summary>
            Represents the identifier of the parent folder that contains the item or folder.
            </summary>
            <value>The parent identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ItemClass">
            <summary>
            Represents the message class of an item.
            </summary>
            <value>The item class.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Subject">
            <summary>
            Represents the subject for Exchange store items and response objects.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.MimeContent">
            <summary>
            Contains the native Multipurpose Internet Mail Extensions (MIME) stream of an object that is represented in base64Binary format.
            </summary>
            <value>The content of the MIME.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Sensitivity">
            <summary>
            Indicates the sensitivity level of an item.
            </summary>
            <value>The sensitivity.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Body">
            <summary>
            Represents the actual body content of a message.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.RtfCompressed">
            <summary>
            Contains the Rich Text Format body text.
            </summary>
            <value>The RTF compressed.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.BodyRtf">
            <summary>
            Contains the Rich Text Format body text.
            </summary>
            <value>The body RTF.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ReminderDueBy">
            <summary>
            Represents the date and time when the appointment occurs.
            </summary>
            <value>The reminder due by.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ReminderIsSet">
            <summary>
            Indicates whether a reminder has been set for the appointment in the Exchange store.
            </summary>
            <value><c>true</c> if [reminder is set]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ReminderMinutesBeforeStart">
            <summary>
            Represents the number of minutes before an event when a reminder is displayed.
            </summary>
            <value>The reminder minutes before start.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Attachments">
            <summary>
            Contains the items or files that are attached to an item in the Exchange store.
            </summary>
            <value>The attachments.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Size">
            <summary>
            Represents the size in bytes of an item.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Categories">
            <summary>
            Represents a collection of strings that identify to which categories an item in the mailbox belongs.
            </summary>
            <value>The categories.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Importance">
            <summary>
            Contains the importance of an item.
            </summary>
            <value>The importance.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.CreatedTime">
            <summary>
            Represents the date and time that a given item in the mailbox was created.
            </summary>
            <value>The created time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.HasAttachments">
            <summary>
            Represents a property that is set to true if an item has attachments at least one visible attachment.
            </summary>
            <value><c>true</c> if this instance has attachments; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Culture">
            <summary>
            Represents the culture for a given item in a mailbox.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.EffectiveRights">
            <summary>
            Contains the client's rights based on the permission settings for the item or folder.
            </summary>
            <value>The effective rights.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.DisplayName">
            <summary>
            Contains the display name of the message store.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.EntryId">
            <summary>
            Contains a MAPI entry identifier used to open and edit properties of a particular MAPI object.
            </summary>
            <value>The entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.LastModifierName">
            <summary>
            Contains the display name of the last user to modify an item.
            </summary>
            <value>The last name of the modifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.LastModifiedTime">
            <summary>
            Indicates when an item was last modified.
            </summary>
            <value>The last modified time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.SearchKey">
            <summary>
            Contains a binary-comparable key that identifies correlated objects for a search.
            </summary>
            <value>The search key.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.BodyHtmlText">
            <summary>
            Contains the html body text.
            </summary>
            <value>The body HTML text.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.BodyPlainText">
            <summary>
            Contains the plain body text.
            </summary>
            <value>The body plain text.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.IsHidden">
            <summary>
            Contains the flag that indicates whether the item is hidden from view in the user interface.
            </summary>
            <value><c>true</c> if this instance is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.IsAssociated">
            <summary>
            Indicates whether the item is associated with a folder.
            </summary>
            <value><c>true</c> if this instance is associated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.WebClientReadFormQueryString">
            <summary>
            Represents a URL to concatenate to the Microsoft Office Outlook Web App endpoint to read an item in Outlook Web App.
            </summary>
            <value>The web client read form query string.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.WebClientEditFormQueryString">
            <summary>
            Represents a URL to concatenate to the Outlook Web App endpoint to edit an item in Outlook Web App.
            </summary>
            <value>The web client edit form query string.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ConversationId">
            <summary>
            Contains the identifier of an item or conversation.
            </summary>
            <value>The conversation identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.StoreEntryId">
            <summary>
            Contains the store entry id. It is Base64 string.
            </summary>
            <value>The store entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.UniqueBody">
            <summary>
            Represents an HTML fragment or plain text which represents the unique body of this conversation.
            </summary>
            <value>The unique body.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Comment">
            <summary>
            Contains a comment of item.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Flag">
            <summary>
            Gets or sets the flag.
            </summary>
            <value>The flag.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.InstanceKey">
            <summary>
            Gets the instance key.
            </summary>
            <value>The instance key.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.RetentionTag">
            <summary>
            Gets or sets the retention tag.
            </summary>
            <value>The retention tag.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ArchiveTag">
            <summary>
            Gets or sets the archive tag.
            </summary>
            <value>The archive tag.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.RetentionDate">
            <summary>
            Gets or sets the retention date.
            </summary>
            <value>The retention date.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.Preview">
            <summary>
            Gets the preview.
            </summary>
            <value>The preview.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.NextPredictedAction">
            <summary>
            Gets the next predicted action.
            </summary>
            <value>The next predicted action.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.GroupingAction">
            <summary>
            Gets the grouping action.
            </summary>
            <value>The grouping action.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.BlockStatus">
            <summary>
            Gets a value indicating whether [block status].
            </summary>
            <value><c>true</c> if [block status]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.HasBlockedImages">
            <summary>
            Gets a value indicating whether this instance has blocked images.
            </summary>
            <value><c>true</c> if this instance has blocked images; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.TextBody">
            <summary>
            Gets the text body.
            </summary>
            <value>The text body.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.IconIndex">
            <summary>
            Gets the index of the icon.
            </summary>
            <value>The index of the icon.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.EntityExtractionResult">
            <summary>
            Gets the entity extraction information on the item.
            </summary>
            <value>The extracted entities.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Item.ExtendedProperties">
            <summary>
            Gets a list of extended properties that are defined on this item.
            </summary>
            <value>The extended properties.</value>
        </member>
        <member name="M:Independentsoft.Exchange.Message.#ctor">
            <summary>
            Initializes a new instance of the Message class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Message.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Message class.
            </summary>
            <param name="subject">The subject</param>
        </member>
        <member name="M:Independentsoft.Exchange.Message.#ctor(Independentsoft.Exchange.MimeContent)">
            <summary>
            Initializes a new instance of the Message class.
            </summary>
            <param name="mimeContent">The MIME content</param>
        </member>
        <member name="M:Independentsoft.Exchange.Message.ToString">
            <summary>
            Converts the value of the current Message object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current Message object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ReceivedTime">
            <summary>
            Represents the date and time that an item in a mailbox was received.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.InReplyTo">
            <summary>
            Represents the identifier of the item to which this item is a reply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsSubmitted">
            <summary>
            Indicates whether an item has been submitted to the Outbox default folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsDraft">
            <summary>
            Represents whether an item has not yet been sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsFromMe">
            <summary>
            Indicates whether a user sent an item to him or herself.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsResend">
            <summary>
            Indicates whether the item had previously been sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsUnmodified">
            <summary>
            Indicates whether the item has been modified.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.InternetMessageHeaders">
            <summary>
            Represents the collection of all Internet message headers that are contained within an item in a mailbox.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.SentTime">
            <summary>
            Represents the date and time that an item in a mailbox was sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ResponseItems">
            <summary>
            Contains a collection of all the response objects that are associated with an item in the Exchange store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.DisplayCc">
            <summary>
            Represents the display string that is used for the contents of the CC line. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.DisplayTo">
            <summary>
            Represents the display string that is used for the contents of the To box.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.Sender">
            <summary>
            Identifies the sender of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ToRecipients">
            <summary>
            Contains a set of recipients of a message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.CcRecipients">
            <summary>
            Represents a collection of recipients that will receive a copy of the message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.BccRecipients">
            <summary>
            Represents a collection of recipients to receive a blind carbon copy (Bcc) of an e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsReadReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a read receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsDeliveryReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a delivery receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ConversationIndex">
            <summary>
            Contains a binary ID that represents the thread to which this message belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ConversationTopic">
            <summary>
            Represents the conversation identifier.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.From">
            <summary>
            Represents the addressee from whom the message was sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.InternetMessageId">
            <summary>
            Represents the Internet message identifier of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsRead">
            <summary>
            Indicates whether a message has been read.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.IsResponseRequested">
            <summary>
            Indicates whether a response to an e-mail message is requested.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.References">
            <summary>
            Identifies the delegate in a delegate access scenario.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ReplyTo">
            <summary>
            Identifies a set of addresses to which replies should be sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.LastVerbExecuted">
            <summary>
            Indicates the last action, such as reply or forward, that was taken on the message so that the client can display the appropriate icon. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.InReplyToId">
            <summary>
            Contains the message id of the message for which this message is a reply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.FlagStatus">
            <summary>
            Contains the flag status for the mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.FlagIcon">
            <summary>
            Contains the flag icon for the mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.FlagCompleteTime">
            <summary>
            Contains the flag complete time for the mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.FlagRequest">
            <summary>
            Indicating the requested action for an e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.HideAttachments">
            <summary>
            Indicates whether to hide attachments
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.VotingOptions">
            <summary>
            Contains a list of strings containing the voting options for the mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.VotingResponse">
            <summary>
            Contains the voting response for the mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.DeferredDeliveryTime">
            <summary>
            Contains the date and time the mail message is to be delivered. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.DeferredSendTime">
            <summary>
            Contains the date and time the mail message is to be sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.StartDate">
            <summary>
            Contains the start date of a recurrence range.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.DueDate">
            <summary>
            Represents the date and time when the event occurs. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.MessageFlags">
            <summary>
            Contains a bitmask of flags indicating the origin and current state of a message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ReceivedBy">
            <summary>
            Identifies the delegate in a delegate access scenario.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Message.ReceivedRepresenting">
            <summary>
            Identifies the principal in a delegate access scenario. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.AppointmentId">
            <summary>
            Contains the unique identifier and change key of an item in the Exchange store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.IsDelegated">
            <summary>
            Indicates whether a meeting was handled by an account with delegate access.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.IsOutOfDate">
            <summary>
            Indicates whether a meeting message is out-of-date.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.HasBeenProcessed">
            <summary>
            Indicates whether a meeting message item has been processed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.ResponseType">
            <summary>
            Represents the type of recipient response received for a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.Uid">
            <summary>
            Identifies a calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.RecurrenceId">
            <summary>
            Used to identify a specific instance of a recurring calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessage.DateTimeStamp">
            <summary>
            Indicates the date and time that an instance of an iCalendar object was created.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailTipType">
            <summary>
            Describes the types of mail tips that are supported by the service.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.All">
            <summary>
            Represents all available mail tips.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.OutOfOfficeMessage">
            <summary>
            Represents the Out of Office (OOF)message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.MailboxFullStatus">
            <summary>
            Represents the status for a mailbox being full.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.CustomMailTip">
            <summary>
            Represents a custom mail tip.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.ExternalMemberCount">
            <summary>
            Represents the count of external members.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.TotalMemberCount">
            <summary>
            Represents the count of all members.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.MaxMessageSize">
            <summary>
            Represents the maximum message size a recipient can accept.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.DeliveryRestriction">
            <summary>
            Indicates whether delivery restrictions will prevent the sender's message from reaching the recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.ModerationStatus">
            <summary>
            Indicates whether the sender's message will be reviewed by a moderator.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailTipType.InvalidRecipient">
            <summary>
            Indicates whether the recipient is valid. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailTipsResponse">
            <summary>
            Represents mail tips settings.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTipsResponse.MailTips">
            <summary>
            Represents values for various types of mail tips.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxStatisticsItem">
            <summary>
            Contains information about a mailbox that is a target for a search
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxStatisticsItem.#ctor">
            <summary>
            Initializes a new instance of the MailboxStatisticsItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxStatisticsItem.ToString">
            <summary>
            Converts the value of the current MailboxStatisticsItem object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current MailboxStatisticsItem object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsItem.MailboxId">
            <summary>
            Gets the mailbox id
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsItem.DisplayName">
            <summary>
            Gets the name of the target mailbox
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsItem.ItemCount">
            <summary>
            Gets the number of items in the target mailbox
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsItem.Size">
            <summary>
            Gets the total size, in bytes, of all the items in a mailbox
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ItemShape">
            <summary>
            Identifies a set of properties to return in a GetItem Operation, FindItem Operation, or SyncFolderItems Operation response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType,System.Boolean)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
            <param name="includeMimeContent">if set to <c>true</c> [include MIME content].</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType,Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
            <param name="bodyType">Type of the body.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType,System.Boolean,Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
            <param name="includeMimeContent">if set to <c>true</c> [include MIME content].</param>
            <param name="bodyType">Type of the body.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="propertyPaths">The property paths.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Boolean)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="propertyPaths">The property paths.</param>
            <param name="includeMimeContent">if set to <c>true</c> [include MIME content].</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="propertyPaths">The property paths.</param>
            <param name="bodyType">Type of the body.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Boolean,Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="propertyPaths">The property paths.</param>
            <param name="includeMimeContent">if set to <c>true</c> [include MIME content].</param>
            <param name="bodyType">Type of the body.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyPaths">The property paths.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Boolean)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyPaths">The property paths.</param>
            <param name="includeMimeContent">if set to <c>true</c> [include MIME content].</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyPaths">The property paths.</param>
            <param name="bodyType">Type of the body.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Boolean,Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the ItemShape class.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyPaths">The property paths.</param>
            <param name="includeMimeContent">if set to <c>true</c> [include MIME content].</param>
            <param name="bodyType">Type of the body.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemShape.ToString">
            <summary>
            Converts the value of the current ItemShape object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.Type">
            <summary>
            Identifies the basic configuration of properties to return in an item or folder response.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.PropertyPaths">
            <summary>
            Identifies additional properties to return in a response.
            </summary>
            <value>The property paths.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.IncludeMimeContent">
            <summary>
            Specifies whether the Multipurpose Internet Mail Extensions (MIME) content of an item is returned in the response.
            </summary>
            <value><c>true</c> if [include MIME content]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.BodyType">
            <summary>
            Identifies how the body text is formatted in the response.
            </summary>
            <value>The type of the body.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.FilterHtmlContent">
            <summary>
            Gets or sets a value indicating whether [filter HTML content].
            </summary>
            <value><c>true</c> if [filter HTML content]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.ConvertHtmlCodePageToUTF8">
            <summary>
            Gets or sets a value indicating whether [convert HTML code page to ut f8].
            </summary>
            <value><c>true</c> if [convert HTML code page to ut f8]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.InlineImageUrlTemplate">
            <summary>
            Gets or sets the inline image URL template.
            </summary>
            <value>The inline image URL template.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.BlockExternalImages">
            <summary>
            Gets or sets a value indicating whether [block external images].
            </summary>
            <value><c>true</c> if [block external images]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.AddBlankTargetToLinks">
            <summary>
            Gets or sets a value indicating whether [add blank target to links].
            </summary>
            <value><c>true</c> if [add blank target to links]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ItemShape.MaximumBodySize">
            <summary>
            Gets or sets the maximum size of the body.
            </summary>
            <value>The maximum size of the body.</value>
        </member>
        <member name="T:Independentsoft.Exchange.IndexedPropertyPath">
            <summary>
            Identifies individual members of a dictionary.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PropertyPath">
            <summary>
            Represents a property path
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IndexedPropertyPath.#ctor">
            <summary>
            Initializes a new instance of the IndexedPropertyPath class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IndexedPropertyPath.#ctor(Independentsoft.Exchange.IndexedPropertyPathUri,System.String)">
            <summary>
            Initializes a new instance of the IndexedPropertyPath class.
            </summary>
            <param name="uri">Identifies the dictionary that contains the member to return</param>
            <param name="index">Identifies the member of the dictionary to return</param>
        </member>
        <member name="M:Independentsoft.Exchange.IndexedPropertyPath.ToString">
            <summary>
            Converts the value of the current IndexedPropertyPath object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current GroupBy object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.IndexedPropertyPath.Uri">
            <summary>
            Identifies the dictionary that contains the member to return.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.IndexedPropertyPath.Index">
            <summary>
            Identifies the member of the dictionary to return. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IconIndex">
            <summary>
            Specifies which icon to display
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.Default">
            <summary>
            Specifies the default icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.PostItem">
            <summary>
            Specifies the icon for a post item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailRead">
            <summary>
            Specifies the mail read icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailUnread">
            <summary>
            Specifies the unread mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailReplied">
            <summary>
            Specifies the replied to mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailForwarded">
            <summary>
            Specifies the forwarded mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailEncrypted">
            <summary>
            Specifies the encrypted mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailSmimeSigned">
            <summary>
            Specifies the S/MIME (Secure/Multipurpose Internet Mail Extensions) signed mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailEncryptedReplied">
            <summary>
            Specifies the encrypted replied to mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailSmimeSignedReplied">
            <summary>
            Specifies the S/MIME signed replied to mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailEncryptedForwarded">
            <summary>
            Specifies the encrypted forwarded mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailSmimeSignedForwarded">
            <summary>
            Specifies the S/MIME signed forwarded mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailEncryptedRead">
            <summary>
            Specifies the encrypted read mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailSmimeSignedRead">
            <summary>
            Specifies the S/MIME signed read mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailIrm">
            <summary>
            Specifies the Information Rights Management (IRM)-protected mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailIrmForwarded">
            <summary>
            Specifies the IRM-protected forwarded mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.MailIrmReplied">
            <summary>
            Specifies the IRM-protected replied to mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.SmsSubmitted">
            <summary>
            Specifies the icon mail submitted for Short Message Service (SMS) routing.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.SmsRoutedToDeliveryPoint">
            <summary>
            Specifies the icon for SMS routing to an external delivery point.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.SmsRoutedToExternalMessagingSystem">
            <summary>
            Specifies the icon for SMS routing to an external messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.SmsDelivered">
            <summary>
            Specifies the SMS delivered mail icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.OutlookDefaultForContacts">
            <summary>
            Specifies the default icon for contacts.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentItem">
            <summary>
            Specifies the appointment item icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentRecur">
            <summary>
            Specifies the recurring appointment icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeet">
            <summary>
            Specifies the meeting icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeetRecur">
            <summary>
            Specifies the recurring meeting icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeetNY">
            <summary>
            Specifies the icon for a tentative response to the meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeetYes">
            <summary>
            Specifies the meeting acceptance icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeetNo">
            <summary>
            Specifies the meeting declined icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeetMaybe">
            <summary>
            Specifies the icon for a maybe response to the meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeetCancel">
            <summary>
            Specifies the meeting cancel icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.AppointmentMeetInfo">
            <summary>
            Specifies the meeting information icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.TaskItem">
            <summary>
            Specifies the task item icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.TaskRecur">
            <summary>
            Specifies the recurring task icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.TaskOwned">
            <summary>
            Specifies the task owned icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.TaskDelegated">
            <summary>
            Specifies the task delegated icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IconIndex.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FolderId">
            <summary>
            Contains the identifier and change key of a folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Id">
            <summary>
            Represents the identifier of the folder on the server that will be shared.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Id.ChangeKey">
            <summary>
            Contains a string that identifies a version of a folder that is identified by the Id attribute. This attribute is optional. Use this attribute to make sure that the correct version of a folder is used.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FolderId.#ctor">
            <summary>
            Initializes a new instance of the FolderId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FolderId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FolderId class.
            </summary>
            <param name="id">The folder identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the FolderId class.
            </summary>
            <param name="id">The folder identifier</param>
            <param name="changeKey">Identifies a version of a folder that is identified by the Id</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderId.ToString">
            <summary>
            Converts the value of the current FolderId object to its equivalent string representation.
            </summary>
            <returns>Returns the string representation of the current FolderId object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.FolderId.Id">
            <summary>
            Contains a string that identifies a folder in the Exchange store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FlaggedForAction">
            <summary>
            Specifies the flag for action value that must appear on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.Any">
            <summary>
            The message is flagged with any action.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.Call">
            <summary>
            The recipient is requested to call the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.DoNotForward">
            <summary>
            The recipient is requested not to forward the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.FollowUp">
            <summary>
            The recipient is requested to follow up on the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.FYI">
            <summary>
            The recipient received the message for information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.Forward">
            <summary>
            The recipient is requested to forward the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.NoResponseNecessary">
            <summary>
            The recipient is informed that a response to the message is not required.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.Read">
            <summary>
            The recipient is requested to read the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.Reply">
            <summary>
            The recipient is requested to reply to the sender of the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.ReplyToAll">
            <summary>
            The recipient is requested to reply to everyone the message was sent to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.Review">
            <summary>
            The recipient is requested to review the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlaggedForAction.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DistributionListMemberStatus">
            <summary>
            Provides information about the status of a distribution list member on the server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DistributionListMemberStatus.Unrecognized">
            <summary>
            Member information is invalid or unrecognized.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DistributionListMemberStatus.Normal">
            <summary>
            Member information in a distribution list is in sync with the referenced object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DistributionListMemberStatus.Demoted">
            <summary>
            Referenced object is not available.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DistributionListMemberStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContactsView">
            <summary>
            Defines a search for contact items based on alphabetical display names.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.View">
            <summary>
            Describes how paged item information is returned for a FindItem request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.View.MaxEntriesReturned">
            <summary>
            Describes the maximum number of items to return in the response. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ContactsView.#ctor">
            <summary>
            Initializes a new instance of the ContactsView class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ContactsView.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ContactsView class.
            </summary>
            <param name="initialName">The first name in the contacts list to return in the response</param>
            <param name="finalName">The last name in the contacts list to return in the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.ContactsView.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the ContactsView class.
            </summary>
            <param name="initialName">The first name in the contacts list to return in the response</param>
            <param name="finalName">The last name in the contacts list to return in the response</param>
            <param name="maxEntriesReturned">The maximum number of results to return in the response</param>
        </member>
        <member name="P:Independentsoft.Exchange.ContactsView.InitialName">
            <summary>
            Defines the first name in the contacts list to return in the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactsView.FinalName">
            <summary>
            Defines the last name in the contacts list to return in the response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarView">
            <summary>
            Defines a FindItem Operation as returning calendar items in a set as they appear in a calendar.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarView.#ctor">
            <summary>
            Initializes a new instance of the CalendarView class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarView.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the CalendarView class.
            </summary>
            <param name="startTime">The start DateTime of the calendar item</param>
            <param name="endTime">The end DateTime of the calendar item</param>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarView.#ctor(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the CalendarView class.
            </summary>
            <param name="startTime">The start DateTime of the calendar item</param>
            <param name="endTime">The end DateTime of the calendar item</param>
            <param name="maxEntriesReturned">The maximum number of results to return in the response</param>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarView.StartTime">
            <summary>
            Identifies the start of a time span queried for calendar items.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarView.EndTime">
            <summary>
            Identifies the end of a time span queried for calendar items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarPermission">
            <summary>
            Defines the access that a user has to a Calendar folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarPermission.#ctor">
            <summary>
            Initializes a new instance of the CalendarPermission class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarPermission.ToString">
            <summary>
            Converts the value of the current CalendarPermission object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current CalendarPermission object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.UserId">
            <summary>
            Identifies a delegate user or a user who has folder access permissions. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.CanCreateItems">
            <summary>
            Indicates whether a user has permission to create items in a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.CanCreateSubFolders">
            <summary>
            Indicates whether a user has permission to create subfolders in a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.IsFolderOwner">
            <summary>
            Indicates whether a user is the owner of a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.IsFolderVisible">
            <summary>
            Indicates whether a user can view a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.IsFolderContact">
            <summary>
            Indicates whether a user is a contact for a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.EditItems">
            <summary>
            Indicates whether a user has permission to edit items in a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.DeleteItems">
            <summary>
            Indicates whether a user has permission to delete items in a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.ReadItems">
            <summary>
            Indicates whether a user has permission to read items within a calendar folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermission.Level">
            <summary>
            Represents the permission level that a user has on a Calendar folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.BodyType">
            <summary>
            Identifies how the body text is formatted in the response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BodyType.Html">
            <summary>
            Html.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BodyType.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BodyType.Best">
            <summary>
            Best.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BodyType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.InternalAccess">
            <summary>
            Contains the collection of Outlook Web Access URLs that a client can connect to when it is inside the firewall.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.InternalAccess.#ctor">
            <summary>
            Initializes a new instance of the InternalAccess class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.InternalAccess.OutlookWebAccessUrls">
            <summary>
            Describes the URL and authentication schema that is used to access a particular computer that is running Microsoft Exchange Server that has the Client Access server role installed that hosts Outlook Web Access.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.InternalAccess.ExchangeProtocol">
            <summary>
            Contains a protocol that is used to connect to the server is Exchange RPC.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.InternalAccess.ExchangeProxyProtocol">
            <summary>
            Contains a protocol that is used to connect to the server is Exchange RPC over HTTP, using an RPC proxy server.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.InternalAccess.WebProtocol">
            <summary>
            Contains a protocol where E-mail is accessed from a Web browser by using the URL that is specified in the Server (POX) element. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.Account">
            <summary>
            Specifies account settings for the user or contains error responses.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.Account.#ctor">
            <summary>
            Initializes a new instance of the Account class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.Type">
            <summary>
            Represents the account type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.Action">
            <summary>
            Provides information that is used to determine whether another Autodiscover request is required to return the user configuration information.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.RedirectUrl">
            <summary>
            Contains the URL of the computer that is running Microsoft Exchange Server that has the Client Access server role installed that should be used to obtain Autodiscover settings.
            </summary>
            <value>The redirect URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.RedirectEmailAddress">
            <summary>
            Specifies the e-mail address that should be used for a subsequent Autodiscover request.
            </summary>
            <value>The redirect email address.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.ImagePath">
            <summary>
            Contains the path of an image that is used to brand the configuration experience.
            </summary>
            <value>The image path.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.ServiceHomeUrl">
            <summary>
            Contains the URL of the home page of the Internet service provider (ISP).
            </summary>
            <value>The service home URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.ExchangeProtocol">
            <summary>
            Contains the specifications for connecting a client to the Client Access server.
            </summary>
            <value>The exchange protocol.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.ExchangeProxyProtocol">
            <summary>
            Contains protocol that is used to connect to the server is Exchange RPC over HTTP, using an RPC proxy server.
            </summary>
            <value>The exchange proxy protocol.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.WebProtocol">
            <summary>
            Gets the web protocol.
            </summary>
            <value>The web protocol.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Account.Error">
            <summary>
            Contains an Autodiscover error response.
            </summary>
            <value>The error.</value>
        </member>
        <member name="T:Independentsoft.Email.Mime.HeaderEncoding">
            <summary>
            Contains types of header encoding.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.HeaderEncoding.QuotedPrintable">
            <summary>
            Quoted-Printable encoding.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.HeaderEncoding.Binary">
            <summary>
            Binary encoding.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.Attachment">
            <summary>
            Class Attachment.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Attachment"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Attachment"/> class.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Attachment"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Attachment"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Attachment"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Attachment"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.Open(System.String)">
            <summary>
            Loads the file into this instance of the <see cref="T:Independentsoft.Email.Mime.Attachment"/> class.
            </summary>
            <param name="filePath">The path to the file</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.Save(System.String)">
            <summary>
            Saves this message to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.Save(System.String,System.Boolean)">
            <summary>
            Saves this message to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="overwrite">True to overwrite existing file, otherwise false.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.GetStream">
            <summary>
            Gets the stream.
            </summary>
            <returns>Stream.</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.GetBytes">
            <summary>
            Gets the bytes.
            </summary>
            <returns>System.Byte[][].</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.GetFileName">
            <summary>
            Gets the name of the file.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Attachment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.Attachment.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Attachment.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Attachment.ContentID">
            <summary>
            Gets or sets the content identifier.
            </summary>
            <value>The content identifier.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Attachment.ContentLocation">
            <summary>
            Gets or sets the content location.
            </summary>
            <value>The content location.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Attachment.ContentDescription">
            <summary>
            Gets or sets the content description.
            </summary>
            <value>The content description.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Attachment.ContentDisposition">
            <summary>
            Gets or sets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="T:Independentsoft.Msg.TaskStatus">
            <summary>
            Identifies the status types of a task item. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskStatus.NotStarted">
            <summary>
            Specifies that the task is not started.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskStatus.InProgress">
            <summary>
            Specifies that the task is in progress.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskStatus.Completed">
            <summary>
            Specifies that the task is completed.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskStatus.WaitingOnOthers">
            <summary>
            Specifies that the task is waiting on others.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskStatus.Deferred">
            <summary>
            Specifies that the task is deferred.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.ObjectType">
            <summary>
            Represents type of an object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.AddressBookContainer">
            <summary>
            Address book container object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.AddressBook">
            <summary>
            Address book object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.Attachment">
            <summary>
            Message attachment object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.DistributionList">
            <summary>
            Distribution list object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.Folder">
            <summary>
            Folder object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.Form">
            <summary>
            Form object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.MailUser">
            <summary>
            Messaging user object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.Message">
            <summary>
            Message object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.ProfileSelection">
            <summary>
            Profile section object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.Session">
            <summary>
            Session object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.Status">
            <summary>
            Status object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.MessageStore">
            <summary>
            Message store object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ObjectType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.FlagIcon">
            <summary>
            Represents flag color.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagIcon.Purple">
            <summary>
            Purple color. Value is 1.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagIcon.Orange">
            <summary>
            Orange color. Value is 2.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagIcon.Green">
            <summary>
            Green color. Value is 3.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagIcon.Yellow">
            <summary>
            Yellow color. Value is 4.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagIcon.Blue">
            <summary>
            Blue color. Value is 5.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagIcon.Red">
            <summary>
            Red color. Value is 6.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagIcon.None">
            <summary>
            None. Value is 0.
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonBoolean">
            <summary>
            Json Boolean Class.
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonValue">
            <summary>
            Definition of JsonValue class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonBoolean.#ctor(System.Boolean)">
            <summary>
            Constructor of a Json Boolean object.
            </summary>
            <param name="value">the value of this object.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonBoolean.ToString">
            <summary>
            Property to report the value of this object in String format.
            </summary>
            <returns>the String value of this object.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonBoolean.GetHashCode">
            <summary>
            Reports the hash code of the value of this object.
            </summary>
            <returns>the hash code of the value.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonBoolean.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current JsonBoolean.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns><b>true</b> if the specified Object is equal to the current JsonBoolean; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Independentsoft.Json.Parser.JsonBoolean.Value">
            <summary>
            Property to report the value of this object.
            </summary>
        </member>
        <member name="T:Independentsoft.IO.StructuredStorage.CompoundFile">
            <summary>
            Represents a file used to store data as virtual streams. 
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.#ctor">
            <summary>
            Initializes a new instance of the CompoundFile class.  
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CompoundFile class based on the supplied file. 
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.#ctor(System.IO.Stream)">
            <summary>
            For internal use
            </summary>
            <param name="stream">The stream to use</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the CompoundFile class based on the supplied stream. 
            </summary>
            <param name="stream">A stream.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.Open(System.String)">
            <summary>
            Opens compound file from the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.Open(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Opens compound file from the specified stream.
            </summary>
            <param name="stream">A stream.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.GetStream">
            <summary>
            Gets stream to read from this compound file.
            </summary>
            <returns>Returns the stream of the compound file</returns>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.GetBytes">
            <summary>
            Gets buffer to read from this compound file.
            </summary>
            <returns>Returns the bytes of the compound file</returns>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.Save(System.String)">
            <summary>
            Saves this compound file to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.Save(System.String,System.Boolean)">
            <summary>
            Saves this compound file to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="overwrite">True to overwrite existing file, otherwise false.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.CompoundFile.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves this compound file to the specified stream.
            </summary>
            <param name="stream">A stream.</param>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.MajorVersion">
            <summary>
            Gets or sets major version. Allowed values are 3 (512 bytes sector size) or 4 (4096 bytes sector size).
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.SectorSize">
            <summary>
            Gets FAT sector size.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.MiniSectorSize">
            <summary>
            Gets size of mini sectors.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.FatSectorCount">
            <summary>
            Gets FAT sector count.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.MiniStreamMaxSize">
            <summary>
            Gets maximum size of mini streams.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.MiniFatSectorCount">
            <summary>
            Gets count of mini FAT sectors.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.CompoundFile.ClassId">
            <summary>
            Gets or sets compound file class ID.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UrlEntity">
            <summary>
            Represents a single url entity.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UrlEntity.#ctor">
            <summary>
            Initializes a new instance of the UrlEntity class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UrlEntity.ToString">
            <summary>
            Converts the value of the current UrlEntity object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.UrlEntity.Position">
            <summary>
            Represents the position of the entity.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UrlEntity.Url">
            <summary>
            Represents an url.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TooBigGroupAttendeeConflict">
            <summary>
            Represents an attendee that was resolved as a distribution list but the distribution list was too large to expand.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AttendeeConflict">
            <summary>
            Contains information about attendee conflicts
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TooBigGroupAttendeeConflict.#ctor">
            <summary>
            Initializes a new instance of the TooBigGroupAttendeeConflict class.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TaskRecurrence">
            <summary>
            Contains recurrence information for recurring tasks.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TaskRecurrence.#ctor">
            <summary>
            Initializes a new instance of the TaskRecurrence class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TaskRecurrence.#ctor(Independentsoft.Exchange.TaskRecurrencePattern)">
            <summary>
            Initializes a new instance of the TaskRecurrence class.
            </summary>
            <param name="pattern">The recurrence pattern for the task</param>
        </member>
        <member name="M:Independentsoft.Exchange.TaskRecurrence.#ctor(Independentsoft.Exchange.TaskRecurrencePattern,Independentsoft.Exchange.RecurrenceRange)">
            <summary>
            Initializes a new instance of the TaskRecurrence class.
            </summary>
            <param name="pattern">The recurrence pattern for the task</param>
            <param name="range">The range of the recurrence</param>
        </member>
        <member name="M:Independentsoft.Exchange.TaskRecurrence.ToString">
            <summary>
            Converts the value of the current TaskRecurrence object to its equivalent string representation.
            </summary>
            <returns>The XML representation of the current TaskRecurrence object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.TaskRecurrence.Pattern">
            <summary>
            Contains the Recurrence pattern for the Task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TaskRecurrence.Range">
            <summary>
            Contains the Recurrence range for the Tasks.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StandardGroupByPropertyPath">
            <summary>
            Contains the standard property that is used for a grouped query.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardGroupByPropertyPath.ConversationTopic">
            <summary>
            Contains the conversation identifier.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SmtpDomain">
            <summary>
            Identifies a single SMTP domain.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SmtpDomain.Name">
            <summary>
            Identifies the name of a domain. This attribute is required.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SmtpDomain.IncludeSubdomains">
            <summary>
            Indicates whether subdomains of the domain identified by the Name attribute are considered internal. This attribute is optional.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ReplyBody">
            <summary>
            Contains an Out of Office (OOF) message and the language used for the message.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyBody.#ctor">
            <summary>
            Initializes a new instance of the ReplyBody class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyBody.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ReplyBody class.
            </summary>
            <param name="message">The out of office (OOF) response</param>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyBody.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ReplyBody class.
            </summary>
            <param name="message">The out of office (OOF) response</param>
            <param name="language">The language used in the message, 
            the possible values are defined by RFC 3066</param>
        </member>
        <member name="P:Independentsoft.Exchange.ReplyBody.Message">
            <summary>
            Contains the out of office (OOF) response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ReplyBody.Language">
            <summary>
            Specifies the language used in the ReplyBody contents. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Position">
            <summary>
            Identifies the position of an entity extracted from a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Position.LatestReply">
            <summary>
            The extracted entity originates from the latest reply to the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Position.Subject">
            <summary>
            The extracted entity originates from the message subject.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Position.Signature">
            <summary>
            The extracted entity originates from the message signature.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Position.Other">
            <summary>
            The extracted entity originates from an undefined part of the message.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PerformReminderActionResponse">
            <summary>
            Contains the response to a PerformReminderAction request
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PerformReminderActionResponse.ItemIds">
            <summary>
            Contains a list of <see cref="T:Independentsoft.Exchange.ItemId"/> for the updated reminder items
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.KeyboardShortcut">
            <summary>
            Defines keyboard shortcuts for category assignment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF2">
            <summary>
            Ctrl + F2
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF3">
            <summary>
            Ctrl + F3
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF4">
            <summary>
            Ctrl + F4
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF5">
            <summary>
            Ctrl + F5
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF6">
            <summary>
            Ctrl + F6
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF7">
            <summary>
            Ctrl + F7
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF8">
            <summary>
            Ctrl + F8
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF9">
            <summary>
            Ctrl + F9
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF10">
            <summary>
            Ctrl + F10
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF11">
            <summary>
            Ctrl + F11
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.CtrlF12">
            <summary>
            Ctrl + F12
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.KeyboardShortcut.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IsGreaterThan">
            <summary>
            Represents a search expression that compares a property with either a constant value or another property and returns true if the first property is greater.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Restriction">
            <summary>
            Represents the restriction or query that is used to filter items or folders in FindItem/FindFolder and search folder operations.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThan.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the IsGreaterThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThan.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the IsGreaterThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThan.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the IsGreaterThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThan.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the IsGreaterThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThan.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the IsGreaterThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThan.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the IsGreaterThan class.
            </summary>
            <param name="propertyPath1">The first property path</param>
            <param name="propertyPath2">The second property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThan.ToString">
            <summary>
            Converts the value of the current IsGreaterThan object to its equivalent XML representation.
            </summary>
            <returns>Returns the XML representation of the current IsGreaterThan object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.IndexedPageView">
            <summary>
            Describes how paged item information is returned for a FindItem request.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PageView">
            <summary>
            Describes how a paged item is returned from a FindItem request
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IndexedPageView.#ctor">
            <summary>
            Initializes a new instance of the IndexedPageView class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IndexedPageView.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the IndexedPageView class.
            </summary>
            <param name="offset">The offset from the BasePoint. If BasePoint is equal to Beginning, the offset is positive, 
            if BasePoint is equal to End, the offset is handled as if it were negative</param>
        </member>
        <member name="M:Independentsoft.Exchange.IndexedPageView.#ctor(System.Int32,Independentsoft.Exchange.IndexBasePoint)">
            <summary>
            Initializes a new instance of the IndexedPageView class.
            </summary>
            <param name="offset">The offset from the BasePoint. If BasePoint is equal to Beginning, the offset is positive, 
            if BasePoint is equal to End, the offset is handled as if it were negative</param>
            <param name="basePoint">The page of items or conversations will start from the beginning or the end of the set of items or 
            conversations that are found by using the search criteria. Seeking from the end always searches backward</param>
        </member>
        <member name="M:Independentsoft.Exchange.IndexedPageView.#ctor(System.Int32,Independentsoft.Exchange.IndexBasePoint,System.Int32)">
            <summary>
            Initializes a new instance of the IndexedPageView class.
            </summary>
            <param name="offset">The offset from the BasePoint. If BasePoint is equal to Beginning, the offset is positive, 
            if BasePoint is equal to End, the offset is handled as if it were negative</param>
            <param name="basePoint">The page of items or conversations will start from the beginning or the end of the set of items or 
            conversations that are found by using the search criteria. Seeking from the end always searches backward</param>
            <param name="maxEntriesReturned">The maximum number of items or conversations to return in the response</param>
        </member>
        <member name="P:Independentsoft.Exchange.IndexedPageView.Offset">
            <summary>
            Describes the offset from the BasePoint. If BasePoint is equal to Beginning, the offset is positive. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.IndexedPageView.BasePoint">
            <summary>
            Describes whether the page of items will start from the beginning or the end of the set of items that are found by using the search criteria. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.HoldActionType">
            <summary>
            Defines actions for a mailbox hold
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldActionType.Create">
            <summary>
            A mailbox hold will be created
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldActionType.Update">
            <summary>
            A mailbox hold will be updated
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldActionType.Remove">
            <summary>
            A mailbox hold will be removed
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Group">
            <summary>
            Represents a collection of items that are the result of a grouped FindItem Operation call.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Group.Index">
            <summary>
            Represents the property value that is used to group items in a grouped FindItem Operation call.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Group.Items">
            <summary>
            Contains an array of grouped items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetAttachmentResponse">
            <summary>
            Defines a response to a GetAttachment request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetAttachmentResponse.Attachments">
            <summary>
            Gets a collection of attachments.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetAppMarketplaceUrlResponse">
            <summary>
            Class GetAppMarketplaceUrlResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetAppMarketplaceUrlResponse.AppMarketplaceUrl">
            <summary>
            Gets the application marketplace URL.
            </summary>
            <value>The application marketplace URL.</value>
        </member>
        <member name="T:Independentsoft.Exchange.FreeBusyViewType">
            <summary>
            Represents the type of free/busy information returned in the response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FreeBusyViewType.None">
            <summary>
            This value is not valid for requests. This value is valid for responses.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FreeBusyViewType.MergedOnly">
            <summary>
            Represents an aggregated free/busy stream. In cross-forest scenarios in which the target user in one forest does not have an Availability service configured, the Availability service of the requestor retrieves the target user's free/busy information from the free/busy public folder. Because public folders only store free/busy information in merged form, MergedOnly is the only available information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FreeBusyViewType.FreeBusy">
            <summary>
            Represents the legacy status information: free, busy, tentative, and OOF. This also includes the start/end times of the appointments. This view is richer than the legacy free/busy view because individual meeting start and end times are provided instead of an aggregated free/busy stream.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FreeBusyViewType.FreeBusyMerged">
            <summary>
            Represents all the properties in FreeBusy with a stream of merged free/busy availability information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FreeBusyViewType.Detailed">
            <summary>
            Represents the legacy status information: free, busy, tentative, and OOF; the start/end times of the appointments; and various properties of the appointment such as subject, location, and importance. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FreeBusyViewType.DetailedMerged">
            <summary>
            Represents all the properties in Detailed with a stream of merged free/busy availability information. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FindFolderResponse">
            <summary>
            Contains the status and result of a single FindFolder Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindFolderResponse.IndexedPagingOffset">
            <summary>
            Represents the next index that should be used for the next request when using an indexed paging view.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindFolderResponse.NumeratorOffset">
            <summary>
            Represents the new numerator value to use for the next request when using fractional page views.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindFolderResponse.AbsoluteDenominator">
            <summary>
            Represents the next denominator to use for the next request when doing fractional paging.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindFolderResponse.IncludesLastItemInRange">
            <summary>
            Indicates whether the current results contain the last folder in the query, such that further paging is not needed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindFolderResponse.TotalItemsInView">
            <summary>
            Represents the total number of folders that pass the restriction.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindFolderResponse.Folders">
            <summary>
            Contains an array of folders found by using the FindFolder Operation.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FileAttachment">
            <summary>
            Represents a file that is attached to an item in the Exchange store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Attachment">
            <summary>
            Represents a file or an item that is attached to an item in the Exchange store.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Attachment.ToXml">
            <summary>
            Convert the current object into XML
            </summary>
            <returns>The XML representation of the current object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.AttachmentId">
            <summary>
            Identifies the attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.Name">
            <summary>
            Represents the name of the attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.ContentType">
            <summary>
            Describes the Multipurpose Internet Mail Extensions (MIME) type of the attachment content.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.ContentId">
            <summary>
            Represents an identifier for the contents of an attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.ContentLocation">
            <summary>
            Contains the Uniform Resource Identifier (URI) that corresponds to the location of the content of the attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.Size">
            <summary>
            Represents the size in bytes of the file attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.LastModifiedTime">
            <summary>
            Represents when the file attachment was last modified.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attachment.IsInline">
            <summary>
            Represents whether the attachment appears inline within an item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="name">The name.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="name">The name.</param>
            <param name="contentType">Type of the content.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.String)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(Crestron.SimplSharp.CrestronIO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="name">The name.</param>
            <param name="contentType">Type of the content.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.#ctor(System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of the FileAttachment class.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="name">The name.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.Save(System.String)">
            <summary>
            Saves the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.Save(System.String,System.Boolean)">
            <summary>
            Saves the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.GetStream">
            <summary>
            Gets the stream.
            </summary>
            <returns>Stream.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.ToXml">
            <summary>
            Returns the string representation of the current <see cref="T:Independentsoft.Exchange.FileAttachment"/>
            </summary>
            <returns>The string representation of this <see cref="T:Independentsoft.Exchange.FileAttachment"/></returns>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachment.ToString">
            <summary>
            Converts the value of the current FileAttachment object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.FileAttachment.IsContactPhoto">
            <summary>
            Indicates whether the file attachment is a contact picture.
            </summary>
            <value><c>true</c> if this instance is contact photo; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FileAttachment.Content">
            <summary>
            Contains the Base64-encoded contents of the file attachment.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Excludes">
            <summary>
            Performs a bitwise mask of the specified property and a supplied value.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Excludes.#ctor">
            <summary>
            Initializes a new instance of the Excludes class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Excludes.#ctor(Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the Excludes class.
            </summary>
            <param name="propertyPath">The property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Excludes.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the Excludes class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="bitmask">a hexadecimal or decimal mask</param>
        </member>
        <member name="M:Independentsoft.Exchange.Excludes.ToString">
            <summary>
            Converts the value of the current Excludes object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current Excludes object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Excludes.PropertyPath">
            <summary>
            Identifies frequently referenced properties by URI or individual members of a dictionary or MAPI properties. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Excludes.Bitmask">
            <summary>
            Represents a hexadecimal or decimal mask to be used during an Excludes restriction operation.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Duration">
            <summary>
            Class Duration.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
            <param name="years">The years.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
            <param name="years">The years.</param>
            <param name="months">The months.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
            <param name="years">The years.</param>
            <param name="months">The months.</param>
            <param name="days">The days.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
            <param name="years">The years.</param>
            <param name="months">The months.</param>
            <param name="days">The days.</param>
            <param name="hours">The hours.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
            <param name="years">The years.</param>
            <param name="months">The months.</param>
            <param name="days">The days.</param>
            <param name="hours">The hours.</param>
            <param name="minutes">The minutes.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
            <param name="years">The years.</param>
            <param name="months">The months.</param>
            <param name="days">The days.</param>
            <param name="hours">The hours.</param>
            <param name="minutes">The minutes.</param>
            <param name="seconds">The seconds.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Duration"/> class.
            </summary>
            <param name="years">The years.</param>
            <param name="months">The months.</param>
            <param name="days">The days.</param>
            <param name="hours">The hours.</param>
            <param name="minutes">The minutes.</param>
            <param name="seconds">The seconds.</param>
            <param name="milliseconds">The milliseconds.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.Parse(System.String)">
            <summary>
            Parses the specified duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns>Duration.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Duration.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.Years">
            <summary>
            Gets or sets the years.
            </summary>
            <value>The years.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.Months">
            <summary>
            Gets or sets the months.
            </summary>
            <value>The months.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.Days">
            <summary>
            Gets or sets the days.
            </summary>
            <value>The days.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.Hours">
            <summary>
            Gets or sets the hours.
            </summary>
            <value>The hours.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.Minutes">
            <summary>
            Gets or sets the minutes.
            </summary>
            <value>The minutes.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.Seconds">
            <summary>
            Gets or sets the seconds.
            </summary>
            <value>The seconds.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.Milliseconds">
            <summary>
            Gets or sets the milliseconds.
            </summary>
            <value>The milliseconds.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Duration.IsNegative">
            <summary>
            Gets or sets a value indicating whether this instance is negative.
            </summary>
            <value><c>true</c> if this instance is negative; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Contains">
            <summary>
            Represents a search expression that determines whether a given property contains the supplied 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64,Independentsoft.Exchange.ContainmentMode)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The long value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The long value of the property path</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64,Independentsoft.Exchange.ContainmentMode,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The long value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Double,Independentsoft.Exchange.ContainmentMode)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The double value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Double,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The double value of the property path</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Double,Independentsoft.Exchange.ContainmentMode,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The double value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean,Independentsoft.Exchange.ContainmentMode)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The boolean value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The boolean value of the property path</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean,Independentsoft.Exchange.ContainmentMode,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The boolean value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime,Independentsoft.Exchange.ContainmentMode)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The DateTime value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The DateTime value of the property path</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime,Independentsoft.Exchange.ContainmentMode,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The DateTime value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.String,Independentsoft.Exchange.ContainmentMode)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The string value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.String,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The string value of the property path</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.#ctor(Independentsoft.Exchange.PropertyPath,System.String,Independentsoft.Exchange.ContainmentMode,Independentsoft.Exchange.ContainmentComparison)">
            <summary>
            Initializes a new instance of the Contains class.
            </summary>
            <param name="propertyPath">The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/></param>
            <param name="value">The string value of the property path</param>
            <param name="mode">The containment mode for the search filter</param>
            <param name="comparison">The <see cref="T:Independentsoft.Exchange.ContainmentComparison"/> for the search filter</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contains.ToString">
            <summary>
            Converts the value of the current Contains object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation for the current Contains object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Contains.PropertyPath">
            <summary>
            The <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/> to search
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contains.Value">
            <summary>
            The value of the <see cref="P:Independentsoft.Exchange.Contains.PropertyPath"/>
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contains.Mode">
            <summary>
            Identifies the boundaries of a search.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contains.Comparison">
            <summary>
            Identifies whether the search ignores cases and spaces.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContactSource">
            <summary>
            Describes whether the contact is located in the Exchange store or Active Directory Domain Services (AD DS).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactSource.ActiveDirectory">
            <summary>
            Active directory.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactSource.Store">
            <summary>
            Store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactSource.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContactsFolder">
            <summary>
            Represents a contacts folder that is contained in a mailbox.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Folder">
            <summary>
            Defines a folder to create, get, find, synchronize, or update.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Folder.#ctor">
            <summary>
            Initializes a new instance of the Folder class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Folder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Folder class.
            </summary>
            <param name="displayName">The display name for the folder</param>
        </member>
        <member name="M:Independentsoft.Exchange.Folder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Folder class.
            </summary>
            <param name="displayName">The display name for the folder</param>
            <param name="folderClass">The folder class</param>
        </member>
        <member name="M:Independentsoft.Exchange.Folder.ToString">
            <summary>
            Converts the value of the current Folder object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current Folder object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.FolderId">
            <summary>
            Contains the identifier and change key of a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.ParentId">
            <summary>
            Represents the identifier of the parent folder that contains the folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.FolderClass">
            <summary>
            Represents the folder class for a given folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.DisplayName">
            <summary>
            Contains the display name of a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.ManagedFolderInformation">
            <summary>
            Contains information about a managed folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.EffectiveRights">
            <summary>
            Contains the client's rights based on the permission settings for the item or folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.PermissionSet">
            <summary>
            Contains all the configured permissions for a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.StandardFolder">
            <summary>
            Represents the StandardFolder type.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.RetentionTag">
            <summary>
            Represents the retention tag.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.ArchiveTag">
            <summary>
            Represents the archive tag.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.TotalCount">
            <summary>
            Represents the total count of items within a given folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.ChildFolderCount">
            <summary>
            Represents the number of child folders that are contained within a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.UnreadCount">
            <summary>
            Represents the count of unread items within a given folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.Comment">
            <summary>
            Contains a comment of the folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.EntryId">
            <summary>
            Contains a MAPI entry identifier of a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.CreationTime">
            <summary>
            Contains the creation date and time of a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.LastModifiedTime">
            <summary>
            Contains the date and time the folder was last modified. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.Size">
            <summary>
            Contains the sizes of specified folders. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.IsHidden">
            <summary>
            Contains TRUE if folder is hidden.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.IsReadOnly">
            <summary>
            Contains TRUE if folder is read only.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.IsSystem">
            <summary>
            Contains TRUE if folder is system.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.HasSubFolders">
            <summary>
            Contains TRUE if folder contains subfolders.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.SearchKey">
            <summary>
            Contains a key that identifies objects for a search.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Folder.ExtendedProperties">
            <summary>
            Contains a collection of a extended properties for folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ContactsFolder.#ctor">
            <summary>
            Initializes a new instance of the ContactsFolder class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ContactsFolder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContactsFolder class.
            </summary>
            <param name="displayName">The display name of the folder</param>
        </member>
        <member name="M:Independentsoft.Exchange.ContactsFolder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ContactsFolder class.
            </summary>
            <param name="displayName">The display name of the folder</param>
            <param name="folderClass">The folder class</param>
        </member>
        <member name="M:Independentsoft.Exchange.ContactsFolder.ToString">
            <summary>
            Converts the value of the current ContactsFolder object to its equivalent string representation.
            </summary>
            <returns>Returns the string representation of the current ContactsFolder object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.ConnectionStatus">
            <summary>
            The status of the current connection
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConnectionStatus.OK">
            <summary>
            Ok
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConnectionStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarEvent">
            <summary>
            Represents a unique calendar item occurrence.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarEvent.#ctor">
            <summary>
            Initializes a new instance of the CalendarEvent class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.StartTime">
            <summary>
            Represents the start of a calendar event. This is a required child element.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.EndTime">
            <summary>
            Represents the end of a calendar event. This is a required child element.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.LegacyFreeBusyStatus">
            <summary>
            Gets the free/busy status of the calendar event
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.Id">
            <summary>
            Represents the entry ID of the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.Subject">
            <summary>
            Represents the subject of the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.Location">
            <summary>
            Represents the location field of the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.IsMeeting">
            <summary>
            Indicates whether the calendar event is a meeting or an appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.IsRecurring">
            <summary>
            Indicates whether the calendar event is an instance of a recurring calendar item or a single calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.IsException">
            <summary>
            Indicates whether an instance of a recurring calendar item is changed from the master.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.ReminderIsSet">
            <summary>
            Indicates whether a reminder has been set for the calendar event.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarEvent.IsPrivate">
            <summary>
            Indicates whether the calendar item is private.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AbsoluteMonthlyRecurrencePattern">
            <summary>
            Represents a monthly recurrence pattern.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RecurrencePattern">
            <summary>
            Represents a recurrence pattern
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TaskRecurrencePattern">
            <summary>
            Specifies the recurrence pattern for a task
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteMonthlyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the AbsoluteMonthlyRecurrencePattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteMonthlyRecurrencePattern.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the AbsoluteMonthlyRecurrencePattern class with specified values.
            </summary>
            <param name="interval">Number of months.</param>
            <param name="dayOfMonth">Day of month.</param>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteMonthlyRecurrencePattern.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.AbsoluteMonthlyRecurrencePattern.Interval">
            <summary>
            Defines the interval between two consecutive recurring items. For example, if the Interval element has a value of 5, the recurring item occurs every 5 months. The range of valid values is from 1 to 99.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:Independentsoft.Exchange.AbsoluteMonthlyRecurrencePattern.DayOfMonth">
            <summary>
            Describes the day in a month that a recurring item occurs. The range of values for this property is 1 to 31. If for a particular month this value is larger than the number of days in the month, the last day of the month is assumed for this property.
            </summary>
            <value>The day of month.</value>
        </member>
        <member name="T:Independentsoft.Exchange.AbsoluteDate">
            <summary>
            Represents the date when the time changes from standard or daylight saving time.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteDate.#ctor">
            <summary>
            Initializes a new instance of the AbsoluteDate class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteDate.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the AbsoluteDate class with specified value.
            </summary>
            <param name="date">The absolute date.</param>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteDate.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.AbsoluteDate.Date">
            <summary>
            Contains absolute date.
            </summary>
            <value>The date.</value>
        </member>
        <member name="T:Independentsoft.Msg.LastVerbExecuted">
            <summary>
            Represents last action on the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.LastVerbExecuted.ReplyToSender">
            <summary>
            Reply has been sent to sender. Value is 102.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.LastVerbExecuted.ReplyToAll">
            <summary>
            Reply has been sent to all. Value is 103.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.LastVerbExecuted.Forward">
            <summary>
            The message has been forwarded. Value is 104.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.LastVerbExecuted.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.Gender">
            <summary>
            Enum Gender
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Gender.Female">
            <summary>
            Female
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Gender.Male">
            <summary>
            Male
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Gender.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.FlagStatus">
            <summary>
            Contains the Microsoft Office Outlook follow-up flags for the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagStatus.Complete">
            <summary>
            Complete.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagStatus.Marked">
            <summary>
            Follow-up is required.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.FlagStatus.None">
            <summary>
            No follow-up has been specified.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UploadItem">
            <summary>
            Represents a single item to upload into a mailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UploadItem.#ctor">
            <summary>
            Initializes a new instance of the UploadItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UploadItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UploadItem class.
            </summary>
            <param name="filePath">The path to the attachment</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UploadItem.#ctor(System.String,Independentsoft.Exchange.FolderId)">
            <summary>
            Initializes a new instance of the UploadItem class.
            </summary>
            <param name="filePath">The path to the attachment</param>
            <param name="parentFolderId">the parent folder id</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UploadItem.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the UploadItem class.
            </summary>
            <param name="stream">The stream of the item</param>
        </member>
        <member name="M:Independentsoft.Exchange.UploadItem.#ctor(Crestron.SimplSharp.CrestronIO.Stream,Independentsoft.Exchange.FolderId)">
            <summary>
            Initializes a new instance of the UploadItem class.
            </summary>
            <param name="stream">The stream of the item</param>
            <param name="parentFolderId">The folder identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.UploadItem.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the UploadItem class.
            </summary>
            <param name="buffer">The bytes of the item</param>
        </member>
        <member name="M:Independentsoft.Exchange.UploadItem.#ctor(System.Byte[],Independentsoft.Exchange.FolderId)">
            <summary>
            Initializes a new instance of the UploadItem class.
            </summary>
            <param name="buffer">The bytes of the item</param>
            <param name="parentFolderId">The parent folder identifier</param>
        </member>
        <member name="P:Independentsoft.Exchange.UploadItem.ItemId">
            <summary>
            Contains the unique identifier and change key of an item to create or update in the Exchange store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UploadItem.ParentFolderId">
            <summary>
            Represents the identifier of the parent folder where a new item is created or that contains the item to update.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UploadItem.Data">
            <summary>
            Contains the data of a single item to upload into a mailbox.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UploadItem.CreateAction">
            <summary>
            Specifies the action for uploading an item into a mailbox.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UploadItem.IsAssociated">
            <summary>
            Specifies whether the uploaded item is a folder associated item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TimeZone">
            <summary>
            Represents the time zone of the location where the meeting is hosted.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor(Independentsoft.Exchange.StandardTimeZone)">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
            <param name="standardTimeZone">The standard time zone</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
            <param name="offsetHours">The hour offset</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
            <param name="offsetHours">The hour offset</param>
            <param name="offsetMinutes">The minute offset</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor(Independentsoft.Exchange.Duration)">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
            <param name="offset">The offset</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor(Independentsoft.Exchange.Duration,System.String)">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
            <param name="offset">The offset</param>
            <param name="name">The name</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor(Independentsoft.Exchange.Duration,Independentsoft.Exchange.TimeChange,Independentsoft.Exchange.TimeChange)">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
            <param name="offset">The offset</param>
            <param name="standardTime">The standard time</param>
            <param name="daylightTime">The daylight savings time</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.#ctor(Independentsoft.Exchange.Duration,System.String,Independentsoft.Exchange.TimeChange,Independentsoft.Exchange.TimeChange)">
            <summary>
            Initializes a new instance of the TimeZone class.
            </summary>
            <param name="offset">The offset</param>
            <param name="name">The name</param>
            <param name="standardTime">The standard time</param>
            <param name="daylightTime">The daylight savings time</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZone.ToString">
            <summary>
            Converts the value of the current TimeZone object to its equivalent string representation. 
            </summary>
            <returns>The XML representation of the current TimeZone object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZone.Name">
            <summary>
            Describes the name of the time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZone.Offset">
            <summary>
            Represents the hourly offset from UTC for the current time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZone.StandardTime">
            <summary>
            Represents the date and time when the time changes from daylight saving time to standard time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZone.DaylightTime">
            <summary>
            Represents the date and time when the time changes from standard time to daylight saving time.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TentativelyAcceptItem">
            <summary>
            Represents a Tentative reply to a meeting request.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingRegistrationResponse">
            <summary>
            Represents a meeting registration response in the Exchange store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ResponseItem">
            <summary>
            Represents response item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ResponseItem.ReferenceItemId">
            <summary>
            Contains the item identifier that is related to a response object. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.InternetMessageHeaders">
            <summary>
            Contains the collection of all Internet message headers that are contained in an item in a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.Sender">
            <summary>
            Identifies the sender of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.ToRecipients">
            <summary>
            Contains an array of recipients of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.CcRecipients">
            <summary>
            Represents a collection of recipients that will receive a copy of the message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.BccRecipients">
            <summary>
            Represents a collection of recipients to receive a blind carbon copy (Bcc) of an e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.IsReadReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a read receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.IsDeliveryReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a delivery receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.From">
            <summary>
            Represents the addressee from whom the message was sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.ReceivedBy">
            <summary>
            Identifies the delegate in a delegate access scenario. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRegistrationResponse.ReceivedRepresenting">
            <summary>
            Identifies the principal in a delegate access scenario.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TentativelyAcceptItem.#ctor">
            <summary>
            Initializes a new instance of the TentativelyAcceptItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TentativelyAcceptItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the TentativelyAcceptItem class.
            </summary>
            <param name="referenceItemId">The ItemId of the item</param>
        </member>
        <member name="T:Independentsoft.Exchange.SyncItemsScope">
            <summary>
            Specifies what items are returned in a synchronization response
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SyncItemsScope.NormalItems">
            <summary>
            Only items in the folder are returned
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SyncItemsScope.NormalAndAssociatedItems">
            <summary>
            Items in the folder and folder associated information are returned
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SyncItemsScope.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SearchFolderTraversal">
            <summary>
            Defines the depth of the items that are retrieved by a search folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchFolderTraversal.Shallow">
            <summary>
            Items that belong to the root folder are retrieved
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchFolderTraversal.Deep">
            <summary>
            Items that belong to the root folder and its subfolders are retrieved
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RecurringDayTransition">
            <summary>
            Represents a time zone transition that occurs on the same day each year.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Transition">
            <summary>
            Represents a time zone transition.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Transition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Transition"/> class
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Transition.ToString">
            <summary>
            Converts the value of the current Transition object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of this <see cref="T:Independentsoft.Exchange.Transition"/></returns>
        </member>
        <member name="P:Independentsoft.Exchange.Transition.Target">
            <summary>
            Specifies the Period or TransitionsGroup that is the target of the time zone transition.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Transition.TargetDescription">
            <summary>
            Get or set the target description
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringDayTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.RecurringDayTransition"/> class
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringDayTransition.ToString">
            <summary>
            Converts the value of the current RecurringDayTransition object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current RecurringDayTransition object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.RecurringDayTransition.TimeOffset">
            <summary>
            Represents the duration offset from Coordinated Universal Time (UTC) for the time zone transition.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecurringDayTransition.Month">
            <summary>
            Represents the month in which the time zone transition occurs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecurringDayTransition.DayOfWeek">
            <summary>
            Represents the day of the week on which the time zone transition occurs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecurringDayTransition.Occurrence">
            <summary>
            Represents the occurrence of the day of the week in the month that the time zone transition occurs.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PushSubscription">
            <summary>
            Represents a subscription to a push-based event notification subscription.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Subscription">
            <summary>
            Represents a subscription.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Subscription.Folders">
            <summary>
            Contains a collection of folder identifiers that are used to identify folders to monitor for event notifications.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Subscription.EventTypes">
            <summary>
            Contains a collection of event notifications that are used to create a subscription.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Subscription.Watermark">
            <summary>
            Represents an event bookmark in the mailbox events table.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Subscription.SubscribeToAllFolders">
            <summary>
            Get or set whether to subscribe to all folders
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(System.Boolean,Independentsoft.Exchange.EventType)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="subscribeToAllFolders">Indicates whether to subscribe to all available folders</param>
            <param name="eventType">The type of the event</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(System.Boolean,System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="subscribeToAllFolders">Indicates whether to subscribe to all available folders</param>
            <param name="eventTypes">The type of the events</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType,System.String,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.Int32)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType,System.String,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.Int32)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.Int32)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
        </member>
        <member name="M:Independentsoft.Exchange.PushSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PushSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="url">The location of the client Web service for push notifications</param>
            <param name="statusFrequency">The frequency in minutes, at which notification messages will be sent to the client when no events have occurred</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="P:Independentsoft.Exchange.PushSubscription.StatusFrequency">
            <summary>
            Represents the frequency, specified in minutes, at which notification messages will be sent to the client when no events have occurred.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PushSubscription.Url">
            <summary>
            Represents the location of the client Web service for push notifications.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PushSubscription.CallerData">
            <summary>
            Specifies information about the caller.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PreviewItemMailbox">
            <summary>
            Class PreviewItemMailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItemMailbox.#ctor">
            <summary>
            Initializes a new instance of the PreviewItemMailbox class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItemMailbox.ToString">
            <summary>
            Converts the value of the current PreviewItemMailbox object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItemMailbox.MailboxId">
            <summary>
            Gets the mailbox identifier.
            </summary>
            <value>The mailbox identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItemMailbox.PrimarySmtpAddress">
            <summary>
            Gets the primary SMTP address.
            </summary>
            <value>The primary SMTP address.</value>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaShape">
            <summary>
            Identifies a set of properties to return in a FindPeople operation.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaShape.#ctor">
            <summary>
            Initializes a new instance of the PersonaShape class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaShape.#ctor(Independentsoft.Exchange.ShapeType)">
            <summary>
            Initializes a new instance of the PersonaShape class.
            </summary>
            <param name="type">The shape of the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the PersonaShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the PersonaShape class.
            </summary>
            <param name="type">The shape of the response</param>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaShape.ToString">
            <summary>
            Converts the value of the current PersonaShape object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current PersonaShape object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaShape.Type">
            <summary>
            Identifies the basic configuration of properties to return in an item or folder response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaShape.PropertyPaths">
            <summary>
            Identifies additional properties to return in a response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaPostalAddressAttributedValue">
            <summary>
            Class PersonaPostalAddressAttributedValue.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaPostalAddressAttributedValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.PersonaPostalAddressAttributedValue"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddressAttributedValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddressAttributedValue.Attributions">
            <summary>
            Gets the attributions.
            </summary>
            <value>The attributions.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Permission">
            <summary>
            Defines the access that a user has to a folder. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Permission.#ctor">
            <summary>
            Initializes a new instance of the Permission class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Permission.ToString">
            <summary>
            Converts the value of the current Permission object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current Permission object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.UserId">
            <summary>
            Identifies a delegate user or a user who has folder access permissions. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.CanCreateItems">
            <summary>
            Indicates whether a user has permission to create items in a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.CanCreateSubFolders">
            <summary>
            Indicates whether a user has permission to create subfolders in a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.IsFolderOwner">
            <summary>
            Indicates whether a user is the owner of a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.IsFolderVisible">
            <summary>
            Indicates whether a user can view a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.IsFolderContact">
            <summary>
            Indicates whether a user is a contact for a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.EditItems">
            <summary>
            Indicates whether a user has permission to edit items in a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.DeleteItems">
            <summary>
            Indicates whether a user has permission to delete items in a folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.ReadItems">
            <summary>
            Indicates whether a user has permission to read items within a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Permission.Level">
            <summary>
            Represents the combination of permissions that a user has on a folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.OccurrenceItemId">
            <summary>
            Identifies a single occurrence of a recurring item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ItemId">
            <summary>
            Contains the unique identifier and change key of an item in the Exchange store.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemId.#ctor">
            <summary>
            Initializes a new instance of the ItemId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ItemId class.
            </summary>
            <param name="id">The identifier of the item</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ItemId class.
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="changeKey">Identifies a specific version of an item</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemId.ToString">
            <summary>
            Converts the value of the current ItemId object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current ItemId object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ItemId.Id">
            <summary>
            Identifies a specific item in the Exchange store. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.OccurrenceItemId.#ctor">
            <summary>
            Initializes a new instance of the OccurrenceItemId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.OccurrenceItemId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OccurrenceItemId class.
            </summary>
            <param name="id">The identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.OccurrenceItemId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the OccurrenceItemId class.
            </summary>
            <param name="id">The identifier</param>
            <param name="changeKey">Identifies a specific version of the recurring master or an item occurrence</param>
        </member>
        <member name="M:Independentsoft.Exchange.OccurrenceItemId.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the OccurrenceItemId class.
            </summary>
            <param name="id">The identifier</param>
            <param name="index">The index of the item occurrence</param>
        </member>
        <member name="M:Independentsoft.Exchange.OccurrenceItemId.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the OccurrenceItemId class.
            </summary>
            <param name="id">The identifier</param>
            <param name="changeKey">Identifies a specific version of the recurring master or an item occurrence</param>
            <param name="index">The index of the item occurrence</param>
        </member>
        <member name="M:Independentsoft.Exchange.OccurrenceItemId.ToString">
            <summary>
            Converts the value of the current OccurrenceItemId object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current OccurrenceItemId object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.OccurrenceItemId.Index">
            <summary>
            Identifies the index of the item occurrence. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MessageTrackingReport">
            <summary>
            Contains a single message that is returned in a GetMessageTrackingReport Operation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingReport.Sender">
            <summary>
            Contains contact information for the sender of the e-mail message. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingReport.PurportedSender">
            <summary>
            Contains contact information for the alleged sender of an e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingReport.Subject">
            <summary>
            Contains the subject of the e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingReport.SubmittedTime">
            <summary>
            Contains the time of day that the e-mail message was submitted.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingReport.OriginalRecipients">
            <summary>
            Contains a list of the recipients of the e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingReport.RecipientTrackingEvents">
            <summary>
            Contains a list of one or more tracking events for the recipients.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ItemIndexError">
            <summary>
            For internal use
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.GenericError">
            <summary>
            Generic error
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.StaleEvent">
            <summary>
            Stale event
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.MailboxOffline">
            <summary>
            Mailbox offline
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.AttachmentLimitReached">
            <summary>
            Attachment limit reached
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.MarsWriterTruncation">
            <summary>
            Mars writer truncation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemIndexError.DocumentParserFailure">
            <summary>
            Document parser failure
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ItemAttachmentInfo">
            <summary>
            Represents information about an attachment.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AttachmentInfo">
            <summary>
            Provides information on attachments
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.Id">
            <summary>
            Identifies the attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.Name">
            <summary>
            Represents the name of the attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.ContentType">
            <summary>
            Describes the Multipurpose Internet Mail Extensions (MIME) type of the attachment content.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.ContentId">
            <summary>
            Represents an identifier for the contents of an attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.ContentLocation">
            <summary>
            Contains the Uniform Resource Identifier (URI) that corresponds to the location of the content of the attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.Size">
            <summary>
            Represents the size in bytes of the file attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.LastModifiedTime">
            <summary>
            Represents when the file attachment was last modified.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentInfo.IsInline">
            <summary>
            Represents whether the attachment appears inline within an item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachmentInfo.#ctor">
            <summary>
            Initializes a new instance of the ItemAttachmentInfo class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachmentInfo.ToString">
            <summary>
            Converts the value of the current ItemAttachmentInfo object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current ItemAttachmentInfo object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.IsGreaterThanOrEqualTo">
            <summary>
            Represents a search expression that compares a property with either a constant value or another property and returns true if the first property is greater than or equal to the second.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the IsGreaterThanOrEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the IsGreaterThanOrEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the IsGreaterThanOrEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the IsGreaterThanOrEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the IsGreaterThanOrEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the IsGreaterThanOrEqualTo class.
            </summary>
            <param name="propertyPath1">The first property path</param>
            <param name="propertyPath2">The second property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsGreaterThanOrEqualTo.ToString">
            <summary>
            Converts the value of the current IsGreaterThanOrEqualTo object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current IsGreaterThanOrEqualTo object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.GetSharingMetadataResponse">
            <summary>
            Defines a response to a GetSharingMetadata Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetSharingMetadataResponse.EncryptedSharedFolderDataList">
            <summary>
            Contains a collection of data structures that a client can use to authorize the sharing of its calendar or contact data with other clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetSharingMetadataResponse.InvalidRecipients">
            <summary>
            Represents recipients of the folder sharing request that are invalid.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetImItemsResponse">
            <summary>
            Class GetImItemsResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetImItemsResponse.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GetImItemsResponse.Personas">
            <summary>
            Gets the personas.
            </summary>
            <value>The personas.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetImItemListResponse">
            <summary>
            Contains the response from a GetImItemList request
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetImItemListResponse.Groups">
            <summary>
            Contains a list of <see cref="T:Independentsoft.Exchange.ImGroup"/>
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetImItemListResponse.Personas">
            <summary>
            Contains a list of <see cref="T:Independentsoft.Exchange.Persona"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetEventsResponse">
            <summary>
            Contains the status and result of a single GetEvents Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetEventsResponse.Notification">
            <summary>
            Contains information about the subscription and the events that have occurred since the last notification.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DisableReason">
            <summary>
            Indicates the reason for disable
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DisableReason.OutlookClientPerformance">
            <summary>
            Disabled from Outlook because of performance issues
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DisableReason.OWAClientPerformance">
            <summary>
            Disabled from Outlook Web Access because of performance issues
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DisableReason.MobileClientPerformance">
            <summary>
            Disabled from Mobile Outlook Web App because of performance issues
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DisableReason.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DelegateResponse">
            <summary>
            Contains the response message for a single delegate user. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateResponse.DelegateUserResponses">
            <summary>
            Identifies a single delegate that is returned in a delegate management response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateResponse.DeliverMeetingRequests">
            <summary>
            Defines how meeting requests are handled between the delegate and the principal.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DailyRecurrencePattern">
            <summary>
            Describes the frequency, in days, in which a calendar item or a task recurs.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DailyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the DailyRecurrencePattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DailyRecurrencePattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DailyRecurrencePattern class.
            </summary>
            <param name="interval">The day interval between two consecutive recurring items, 
            the value must be in the range from 1 to 999</param>
        </member>
        <member name="M:Independentsoft.Exchange.DailyRecurrencePattern.ToString">
            <summary>
            Converts the value of the current DailyRecurrencePattern object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current DailyRecurrencePattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.DailyRecurrencePattern.Interval">
            <summary>
            Defines the interval, in days, between two consecutive recurring items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationItemResponse">
            <summary>
            Represents the response message for methods that create, update, or delete items. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationItemResponse.ConversationId">
            <summary>
            The conversation Id
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationItemResponse.SyncState">
            <summary>
            The sync state
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationItemResponse.Nodes">
            <summary>
            Contains a collection of nodes.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContactDataShapeType">
            <summary>
            Identifies the set of properties to return in an item or folder response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactDataShapeType.Id">
            <summary>
            Returns only the item or folder ID.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactDataShapeType.Default">
            <summary>
            Returns a set of properties that are defined as the default for the item or folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactDataShapeType.AllProperties">
            <summary>
            Returns all the properties used by the Exchange Business Logic layer to construct a folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactDataShapeType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.UserSetting">
            <summary>
            Represents a single user setting.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.UserSetting.#ctor">
            <summary>
            Initializes a new instance of the UserSetting class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSetting.Name">
            <summary>
            Represents the name of the user setting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSetting.Value">
            <summary>
            Represents the value of the user setting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSetting.Type">
            <summary>
            Specifies the type
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSetting.WebClientUrls">
            <summary>
            Represents the URL of an Exchange Web client.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSetting.ProtocolConnections">
            <summary>
            Represents a collection of protocol connections.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.DomainSettingName">
            <summary>
            Represents the name of a setting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.DomainSettingName.ExternalEwsUrl">
            <summary>
            The external URL of Exchange Web Services.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.DomainSettingName.ExternalEwsVersion">
            <summary>
            The version of Exchange Web Services.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AbsoluteDateTransition">
            <summary>
            Represents a time zone transition that occurs on a specific date and at a specific time.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteDateTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.AbsoluteDateTransition"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteDateTransition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.AbsoluteDateTransition.Date">
            <summary>
            Represents the date and time at which the time zone transition occurs.
            </summary>
            <value>The date.</value>
        </member>
        <member name="T:Independentsoft.Msg.TaskOwnership">
            <summary>
            Indicates the ownership state of the task.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskOwnership.New">
            <summary>
            Specifies that task has not yet been assigned to a user.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskOwnership.Delegated">
            <summary>
            Specifies that task has been delegated to another user.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskOwnership.Own">
            <summary>
            Specifies that task is assigned to the current user.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskOwnership.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.Recipient">
            <summary>
            Represents a user or resource, generally a mail message addressee.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.Recipient.#ctor">
            <summary>
            Initializes a new instance of the Recipient class. 
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.DisplayName">
            <summary>
            Contains the display name of the recipient.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.EmailAddress">
            <summary>
            Contains the recipient's e-mail address.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.AddressType">
            <summary>
            Contains the recipient's e-mail address type, such as Simple Mail Transfer Protocol (SMTP).
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.ObjectType">
            <summary>
            Contains the type of the recipient.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.RecipientType">
            <summary>
            Contains the recipient type for a message recipient.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.DisplayType">
            <summary>
            Contains a value used to associate an icon with a particular row of a table.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.EntryId">
            <summary>
            Contains the EntryID of the recipient.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.InstanceKey">
            <summary>
            Contains a value that uniquely identifies a row in a table.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.SearchKey">
            <summary>
            Contains a binary-comparable key that identifies correlated objects for a search.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.Responsibility">
            <summary>
            Contains true if some transport provider has already accepted responsibility for delivering the message to this recipient, and false if the MAPI spooler considers that this transport provider should accept responsibility.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.SmtpAddress">
            <summary>
            Contains SMTP email address.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.DisplayName7Bit">
            <summary>
            Contains a 7-bit ASCII representation of the recipient's display name.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.TransmitableDisplayName">
            <summary>
            Contains a recipient's display name in a secure form that cannot be changed.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.SendRichInfo">
            <summary>
            Contains true if the recipient can receive all message content, including Rich Text Format (RTF) and Object Linking and Embedding (OLE) objects.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.SendInternetEncoding">
            <summary>
            Contains a bitmask of encoding preferences.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.OriginatingAddressType">
            <summary>
            Gets or sets the originating address type
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Recipient.OriginatingEmailAddress">
            <summary>
            Gets or sets the originating email address
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.ExtendedPropertyList">
            <summary>
            Class ExtendedPropertyList.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.ExtendedPropertyList.Item(Independentsoft.Msg.ExtendedPropertyTag)">
            <summary>
            Gets the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> with the specified tag.
            </summary>
            <param name="tag">The tag.</param>
            <returns>ExtendedProperty.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.UserConfigurationProperty">
            <summary>
            Specifies the property types to get in a GetUserConfiguration operation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationProperty.Id">
            <summary>
            Specifies the identifier property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationProperty.Dictionary">
            <summary>
            Specifies dictionary property types.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationProperty.XmlData">
            <summary>
            Specifies XML data property types.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationProperty.BinaryData">
            <summary>
            Specifies binary data property types.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationProperty.All">
            <summary>
            Specifies the identifier, dictionary, XML data, and binary data property types.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TimeChange">
            <summary>
            Represents the date and time when the time changes from daylight saving time to standard time.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TimeChange.#ctor">
            <summary>
            Initializes a new instance of the TimeChange class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TimeChange.#ctor(Independentsoft.Exchange.Duration)">
            <summary>
            Initializes a new instance of the TimeChange class.
            </summary>
            <param name="offset">The offset</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeChange.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the TimeChange class.
            </summary>
            <param name="offsetHours">The offset hours</param>
        </member>
        <member name="M:Independentsoft.Exchange.TimeChange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TimeChange class.
            </summary>
            <param name="offsetHours">The offset hours</param>
            <param name="offsetMinutes">The offset minutes</param>
        </member>
        <member name="P:Independentsoft.Exchange.TimeChange.TimeZone">
            <summary>
            Provides a text description of a time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeChange.Offset">
            <summary>
            Describes the offset from the BaseOffset. The base offset in addition to this offset identifies the time according to whether it is standard or daylight saving time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeChange.Time">
            <summary>
            Describes the time when the time changes between standard time and daylight saving time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeChange.Pattern">
            <summary>
            Describes a relative yearly recurrence pattern for a time zone transition date pattern.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StandardUser">
            <summary>
            Defines a standard delegate user. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardUser.Default">
            <summary>
            Defines the default delegate that is used to define default delegation permissions. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardUser.Anonymous">
            <summary>
            Defines the anonymous delegate that is used to define delegate permissions for unauthenticated users. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardUser.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SharingDataType">
            <summary>
            Specifies the type of data that is shared. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SharingDataType.Calendar">
            <summary>
            Indicates that the shared folder contains calendar information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SharingDataType.Contacts">
            <summary>
            Indicates that the shared folder contains contact information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SharingDataType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ServiceRequestException">
            <summary>
            Class ServiceRequestException.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ServiceRequestException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
              </PermissionSet>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.FaultCode">
            <summary>
            Gets the fault code.
            </summary>
            <value>The fault code.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.FaultString">
            <summary>
            Gets the fault string.
            </summary>
            <value>The fault string.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.ResponseCode">
            <summary>
            Gets the response code.
            </summary>
            <value>The response code.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value>The message.</value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.XmlMessage">
            <summary>
            Gets the XML message.
            </summary>
            <value>The XML message.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.Line">
            <summary>
            Gets the line.
            </summary>
            <value>The line.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.Position">
            <summary>
            Gets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.RequestBody">
            <summary>
            Gets the request body.
            </summary>
            <value>The request body.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.ServerVersionInfo">
            <summary>
            Gets the server version information.
            </summary>
            <value>The server version information.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceRequestException.BackOffMilliseconds">
            <summary>
            Gets suggested number of milliseconds to wait before attempting a request again. If zero, there is no suggested back-off time. 
            </summary>
            <value>The number of milliseconds to wait.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ResponseCode">
            <summary>
            Provides status information about the request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.NoError">
            <summary>
            No error occurred for the request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAccessDenied">
            <summary>
            This error occurs when the calling account does not have the rights to perform the requested action.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAccessModeSpecified">
            <summary>
            This error is for internal use only. This error is not returned.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAccountDisabled">
            <summary>
            This error occurs when the account in question has been disabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAddDelegatesFailed">
            <summary>
            This error occurs when a list with added delegates cannot be saved.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAddressSpaceNotFound">
            <summary>
            This error occurs when the address space record, or Domain Name System (DNS) domain name, for cross-forest availability could not be found in the Active Directory database.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorADOperation">
            <summary>
            This error occurs when the operation failed because of communication problems with Active Directory Domain Services (AD DS).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorADSessionFilter">
            <summary>
            This error is returned when a ResolveNames operation request specifies a name that is not valid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorADUnavailable">
            <summary>
            This error occurs when AD DS is unavailable. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAutoDiscoverFailed">
            <summary>
            This error indicates that Exchange Web Services tried to determine the location of a cross-forest computer that is running Exchange 2010 that has the Client Access server role installed by using the Autodiscover service, but the call to the Autodiscover service failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAffectedTaskOccurrencesRequired">
            <summary>
            This error indicates that the AffectedTaskOccurrences attribute was not specified. When the DeleteItem element is used to delete at least one item that is a task, and regardless of whether that task is recurring or not, the AffectedTaskOccurrences attribute has to be specified so that DeleteItem can determine whether to delete the current occurrence or the entire series.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAttachmentNestLevelLimitExceeded">
            <summary>
            Specifies that an attempt was made to create an item with more than 10 nested attachments.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAttachmentSizeLimitExceeded">
            <summary>
            The CreateAttachment element returns this error if an attempt is made to create an attachment with size exceeding Int32.MaxValue, in bytes.
            The GetAttachment element returns this error if an attempt to retrieve an existing attachment with size exceeding Int32.MaxValue, in bytes.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorArchiveFolderPathCreation">
            <summary>
            Applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorArchiveMailboxNotEnabled">
            <summary>
            Applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorArchiveMailboxServiceDiscoveryFailed">
            <summary>
            Applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorAvailabilityConfigNotFound">
            <summary>
            This error indicates that the availability configuration information for the local forest is missing from AD DS. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorBatchProcessingStopped">
            <summary>
            This error indicates that an exception occurred while processing an item and that exception is likely to occur for the items that follow. Requests may include multiple items; for example, a GetItem operation request might include multiple identifiers. In general, items are processed one at a time. If an exception occurs while processing an item and that exception is likely to occur for the items that follow, items that follow will not be processed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarCannotMoveOrCopyOccurrence">
            <summary>
            This error occurs when an attempt is made to move or copy an occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarCannotUpdateDeletedItem">
            <summary>
            This error occurs when an attempt is made to update a calendar item that is located in the Deleted Items folder and when meeting updates or cancellations are to be sent according to the value of the SendMeetingInvitationsOrCancellations attribute.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarCannotUseIdForOccurrenceId">
            <summary>
            This error occurs when the UpdateItem, GetItem, DeleteItem, MoveItem, CopyItem, or SendItem operation is called and the ID that was specified is not an occurrence ID of any recurring calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarCannotUseIdForRecurringMasterId">
            <summary>
            This error occurs when the UpdateItem, GetItem, DeleteItem, MoveItem, CopyItem, or SendItem operation is called and the ID that was specified is not an ID of any recurring master item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarDurationIsTooLong">
            <summary>
            This error occurs during a CreateItem or UpdateItem operation when a calendar item duration is longer than the maximum allowed, which is currently 5 years.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarEndDateIsEarlierThanStartDate">
            <summary>
            This error occurs when a calendar End time is set to the same time or after the Start time.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarFolderIsInvalidForCalendarView">
            <summary>
            This error occurs when the specified folder for a FindItem operation with a CalendarView element is not of calendar folder type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarInvalidAttributeValue">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarInvalidDayForTimeChangePattern">
            <summary>
            This error occurs during a CreateItem or UpdateItem operation when invalid values of Day, WeekendDay, and Weekday are used to define the time change pattern.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarInvalidDayForWeeklyRecurrence">
            <summary>
            This error occurs during a CreateItem or UpdateItem operation when invalid values of Day, WeekDay, and WeekendDay are used to specify the weekly recurrence.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarInvalidPropertyState">
            <summary>
            This error occurs when the state of a calendar item recurrence binary large object (BLOB) in the Exchange store is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarInvalidPropertyValue">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarInvalidRecurrence">
            <summary>
            This error occurs when the specified recurrence cannot be created.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarInvalidTimeZone">
            <summary>
            This error occurs when an invalid time zone is encountered.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsCancelledForAccept">
            <summary>
            Indicates that a calendar item has been canceled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsCancelledForDecline">
            <summary>
            Indicates that a calendar item has been canceled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsCancelledForRemove">
            <summary>
            Indicates that a calendar item has been canceled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsCancelledForTentative">
            <summary>
            Indicates that a calendar item has been canceled.
            </summary>       
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsDelegatedForAccept">
            <summary>
            This error indicates that the AcceptItem element is invalid for a calendar item or meeting request in a delegated scenario.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsDelegatedForDecline">
            <summary>
            This error indicates that the DeclineItem element is invalid for a calendar item or meeting request in a delegated scenario.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsDelegatedForRemove">
            <summary>
            This error indicates that the RemoveItem element is invalid for a meeting cancellation in a delegated scenario.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsDelegatedForTentative">
            <summary>
            This error indicates that the TentativelyAcceptItem element is invalid for a calendar item or meeting request in a delegated scenario.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsNotOrganizer">
            <summary>
            This error indicates that the operation (currently CancelItem) on the calendar item is not valid for an attendee. Only the meeting organizer can cancel the meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsOrganizerForAccept">
            <summary>
            This error indicates that AcceptItem is invalid for the organizer’s calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsOrganizerForDecline">
            <summary>
            This error indicates that DeclineItem is invalid for the organizer’s calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsOrganizerForRemove">
            <summary>
            This error indicates that RemoveItem is invalid for the organizer’s calendar item. To remove a meeting from the calendar, the organizer must use CancelItem. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarIsOrganizerForTentative">
            <summary>
            This error indicates that TentativelyAcceptItem is invalid for the organizer’s calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange">
            <summary>
            This error indicates that the occurrence index does not point to an occurrence within the current recurrence. For example, if your recurrence pattern defines a set of three meeting occurrences and you try to access the fifth occurrence, this response code will result.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarOccurrenceIsDeletedFromRecurrence">
            <summary>
            This error indicates that any operation on a deleted occurrence (addressed via recurring master ID and occurrence index) is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarOutOfRange">
            <summary>
            This error is reported on Create/Update calendar item or task recurrence properties when the property value is out of range. For example, specifying the fifteenth week of the month will result in this response code.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarMeetingRequestIsOutOfDate">
            <summary>
            This error indicates that a meeting request is out-of-date and cannot be updated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCalendarViewRangeTooBig">
            <summary>
            This error occurs when Start to End range for the CalendarView element is more than the maximum allowed, currently 2 years.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCallerIsInvalidADAccount">
            <summary>
            Indicates that the requesting account is not a valid account in the directory database.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotArchiveCalendarContactTaskFolderException">
            <summary>
            Items in Calendar, Contacts, or Tasks folders cannot be archived. The ErrorCannotArchiveCalendarContactTaskFolderException field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotArchiveItemsInPublicFolders">
            <summary>
            Items in public folders cannot be archived. The ErrorCannotArchiveItemsInPublicFolders field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotArchiveItemsInArchiveMailbox">
            <summary>
            Items in archive mailboxes cannot be archived. The ErrorCannotArchiveItemsInArchiveMailbox field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotCreateCalendarItemInNonCalendarFolder">
            <summary>
            This error occurs when a calendar item is being created and the SavedItemFolderId attribute refers to a non-calendar folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotCreateContactInNonContactFolder">
            <summary>
            This error occurs when a contact is being created and the SavedItemFolderId attribute refers to a non-contact folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotCreatePostItemInNonMailFolder">
            <summary>
            This error indicates that a post item cannot be created in a folder other than a mail folder, such as Calendar, Contact, Tasks, Notes, and so on.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotCreateTaskInNonTaskFolder">
            <summary>
            This error occurs when a task is being created and the SavedItemFolderId attribute refers to a non-task folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotDeleteObject">
            <summary>
            This error occurs when the item or folder to delete cannot be deleted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotDisableMandatoryExtension">
            <summary>
            The end users cannot disable mandatory extensions. The ErrorCannotDisableMandatoryExtension field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotGetSourceFolderPath">
            <summary>
            Unable to read the folder path for the source folder while archiving items. The ErrorCannotGetSourceFolderPath field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotGetExternalEcpUrl">
            <summary>
            Cannot get the external Exchange Control Panel URL. This can happen if the external Exchange Control Panel URL isn't configured. The ErrorCannotGetExternalEcpUrl field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotOpenFileAttachment">
            <summary>
            The GetAttachment operation returns this error if it cannot retrieve the body of a file attachment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotDeleteTaskOccurrence">
            <summary>
            The DeleteItem Operation returns this error when it fails to delete the current occurrence of a recurring task. This can only happen if the AffectedTaskOccurrences attribute has been set to SpecifiedOccurrenceOnly.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotEmptyFolder">
            <summary>
            Indicates that a folder cannot be emptied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotSetCalendarPermissionOnNonCalendarFolder">
            <summary>
            This error indicates that the caller tried to set calendar permissions on a non-calendar folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotSetNonCalendarPermissionOnCalendarFolder">
            <summary>
            This error indicates that the caller tried to set non-calendar permissions on a calendar folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotSetPermissionUnknownEntries">
            <summary>
            This error indicates that you cannot set unknown permissions in a permissions set.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotSpecifySearchFolderAsSourceFolder">
            <summary>
            Cannot specify search folders as source folders while archiving items. The ErrorCannotSpecifySearchFolderAsSourceFolder field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotUseFolderIdForItemId">
            <summary>
            This error occurs when a request that requires an item identifier is given a folder identifier.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCannotUseItemIdForFolderId">
            <summary>
            This error occurs when a request that requires a folder identifier is given an item identifier.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorChangeKeyRequired">
            <summary>
            This response code has been replaced by ErrorChangeKeyRequiredForWriteOperations.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorChangeKeyRequiredForWriteOperations">
            <summary>
            This error is returned when the change key for an item is missing or stale. For SendItem, UpdateItem, and UpdateFolder operations, the caller must pass in a correct and current change key for the item. Note that this is the case with UpdateItem even when conflict resolution is set to always overwrite.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorClientDisconnected">
            <summary>
            Indicates that the client is disconnected.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorClientIntentInvalidStateDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorClientIntentNotFound">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorConnectionFailed">
            <summary>
            This error occurs when Exchange Web Services cannot connect to the mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorContainsFilterWrongType">
            <summary>
            Indicates that the property inspected for a Contains filter is not a string type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorContentConversionFailed">
            <summary>
            The GetItem operation returns this error when Exchange Web Services is unable to retrieve the MIME content for the item requested. The CreateItem operation returns this error when Exchange Web Services is unable to create the item from the supplied MIME content. Usually this is an indication that the item property is corrupted or truncated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorContentIndexingNotEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCorruptData">
            <summary>
            This error occurs when the data is corrupted and cannot be processed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCreateItemAccessDenied">
            <summary>
            This error occurs when the caller does not have permission to create the item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCreateManagedFolderPartialCompletion">
            <summary>
            This error occurs when one or more of the managed folders that were specified in the CreateManagedFolder operation request failed to be created. Search for each folder to determine which folders were created and which folders do not exist.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCreateSubfolderAccessDenied">
            <summary>
            This error occurs when the calling account does not have the permissions required to create the subfolder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCrossMailboxMoveCopy">
            <summary>
            This error occurs when an attempt is made to move an item or folder from one mailbox to another. If the source mailbox and destination mailbox are different, you will get this error.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorCrossSiteRequest">
            <summary>
            Indicates that the request is not allowed because the Client Access server that should service the request is in a different site.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDataSizeLimitExceeded">
            <summary>
            This error can occur in the following scenarios:
            1.An attempt is made to access or write a property on an item and the property value is too large.
            2.The base64 encoded MIME content length within the request XML exceeds the limit.
            3.The size of the body of an existing item body exceeds the limit.
            4.The consumer tries to set an HTML or text body whose length (or combined length in the case of append) exceeds the limit.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDataSourceOperation">
            <summary>
            This error occurs when the underlying data provider fails to complete the operation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDelegateAlreadyExists">
            <summary>
            This error occurs in an AddDelegate operation when the specified user already exists in the list of delegates.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDelegateCannotAddOwner">
            <summary>
            This error occurs in an AddDelegate operation when the specified user to be added is the owner of the mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDelegateMissingConfiguration">
            <summary>
            This error occurs in a GetDelegate operation when either there is no delegate information on the local FreeBusy message or no Active Directory public delegate (no “public delegate” or no "Send On Behalf" entry in AD DS).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDelegateNoUser">
            <summary>
            This error occurs in a GetDelegate operation when either there is no delegate information on the local FreeBusy message or no Active Directory public delegate (no “public delegate” or no "Send On Behalf" entry in AD DS).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDelegateValidationFailed">
            <summary>
            This error occurs in the AddDelegate operation when an added delegate user is not valid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDeleteDistinguishedFolder">
            <summary>
            This error occurs when an attempt is made to delete a distinguished folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDeleteItemsFailed">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDeleteUnifiedMessagingPromptFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDistinguishedUserNotSupported">
            <summary>
            This error indicates that a distinguished user ID is not valid for the operation. DistinguishedUserType should not be present in the request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDistributionListMemberNotExist">
            <summary>
            Indicates that a request distribution list member does not exist in the distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDuplicateInputFolderNames">
            <summary>
            This error occurs when duplicate folder names are specified within the FolderNames element of the CreateManagedFolder operation request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDuplicateUserIdsSpecified">
            <summary>
            This error indicates that a duplicate user ID has been found in a permission set, either Default or Anonymous are set more than once, or there are duplicate SIDs or recipients.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorEmailAddressMismatch">
            <summary>
            This error occurs when a request attempts to create/update the search parameters of a search folder. For example, this can occur when a search folder is created in the mailbox but the search folder is directed to look in another mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorEventNotFound">
            <summary>
            This error occurs when the event that is associated with a watermark is deleted before the event is returned. When this error is returned, the subscription is also deleted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorExceededConnectionCount">
            <summary>
            Indicates that there are more concurrent requests against the server than allowed by a user's policy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorExceededSubscriptionCount">
            <summary>
            Indicates that a user's throttling policy maximum subscription count has been exceeded.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorExceededFindCountLimit">
            <summary>
            Indicates that a search operation call has exceeded the total number of items that can be returned.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorExpiredSubscription">
            <summary>
            This error indicates that there are more concurrent requests against the server than are allowed by a user's policy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorExtensionNotFound">
            <summary>
            Cannot find the extension with the specified identifier. The ErrorExtensionNotFound field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFolderCorrupt">
            <summary>
            This error occurs when the folder is corrupted and cannot be saved.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFolderNotFound">
            <summary>
            This error indicates that the folder ID that was specified does not correspond to a valid folder, or that the delegate does not have permission to access the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFolderPropertRequestFailed">
            <summary>
            This error indicates that the requested property could not be retrieved. This does not indicate that the property does not exist, but that the property was corrupted in some way so that the retrieval failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFolderSave">
            <summary>
            This error indicates that the folder could not be created or updated because of an invalid state.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFolderSaveFailed">
            <summary>
            This error indicates that the folder could not be created or updated because of an invalid state.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFolderSavePropertyError">
            <summary>
            This error indicates that the folder could not be created or updated because of invalid property values. The response code lists which properties caused the problem.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFolderExists">
            <summary>
            This error occurs when an attempt is made to create a folder that has the same name as another folder in the same parent. Duplicate folder names are not allowed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFreeBusyGenerationFailed">
            <summary>
            This error is returned when free/busy information cannot be retrieved because of an intervening failure.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorGetServerSecurityDescriptorFailed">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorImContactLimitReached">
            <summary>
            The maximum number of contacts to block/add for instant messaging (IM) has been reached. The ErrorImContactLimitReached field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorImGroupDisplayNameAlreadyExists">
            <summary>
            The IM group display name already exists. The ErrorImGroupDisplayNameAlreadyExists field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorImGroupLimitReached">
            <summary>
            The maximum number of distribution group members to send an IM has been reached. The ErrorImGroupLimitReached field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorImpersonateUserDenied">
            <summary>
            The error is returned in the server-to-server authorization case for Exchange Impersonation when the caller does not have the proper rights to impersonate the specific user in question. This error maps to the ms-Exch-EPI-May-Impersonate extended Active Directory right.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorImpersonationDenied">
            <summary>
            This error is returned in the server-to-server authorization for Exchange Impersonation when the caller does not have the proper rights to impersonate through the Client Access server that they are making the request against. This maps to the ms-Exch-EPI-Impersonation extended Active Directory right.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorImpersonationFailed">
            <summary>
            This error indicates that there was an unexpected error when an attempt was made to perform server-to-server authentication. This response code typically indicates either that the service account that is running the Exchange Web Services application pool is configured incorrectly, that Exchange Web Services cannot talk to the directory, or that a trust between forests is not correctly configured.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorIncorrectSchemaVersion">
            <summary>
            This error indicates that the request was valid for the current Exchange Server version but was invalid for the request server version that was specified.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorIncorrectUpdatePropertyCount">
            <summary>
            This error indicates that each change description in the UpdateItem or UpdateFolder elements must list only one property to update.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorIndividualMailboxLimitReached">
            <summary>
            This error occurs when the request contains too many attendees to resolve. By default, the maximum number of attendees to resolve is 100.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInsufficientResources">
            <summary>
            This error occurs when the mailbox server is overloaded. Try your request again later.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInternalServerError">
            <summary>
            This error indicates that Exchange Web Services encountered an error that it could not recover from, and a more specific response code that is associated with the error that occurred does not exist.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInternalServerTransientError">
            <summary>
            This error indicates that an internal server error occurred and that you should try your request again later.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidAccessLevel">
            <summary>
            This error indicates that the level of access that the caller has on the free/busy data is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidArgument">
            <summary>
            Indicates an error caused by all invalid arguments passed to the GetMessageTrackingReport operation. This error is returned in the following scenarios: The user specified in the sending-as parameter does not exist in the directory; the user specified in the sending-as parameter is not unique in the directory; the sending-as address is empty; the sending-as address is not a valid email address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidAttachmentId">
            <summary>
            This error is returned by the GetAttachment Operation or the DeleteAttachment Operation when an attachment that corresponds to the specified ID is not found. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidAttachmentSubfilter">
            <summary>
            This error occurs when you try to bind to an existing search folder by using a complex attachment table restriction. Exchange Web Services only supports simple contains filters against the attachment table. If you try to bind to an existing search folder that has a more complex attachment table restriction (a subfilter), Exchange Web Services cannot render the XML for that filter and returns this response code. Note that you can still call the GetFolder operation on the folder, but do not request the SearchParameters property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidAttachmentSubfilterTextFilter">
            <summary>
            This error occurs when you try to bind to an existing search folder by using a complex attachment table restriction. Exchange Web Services only supports simple contains filters against the attachment table. If you try to bind to an existing search folder that has a more complex attachment table restriction, Exchange Web Services cannot render the XML for that filter. In this case, the attachment subfilter contains a text filter, but it is not looking at the attachment display name. Note that you can still call the GetFolder operation on the folder, but do not request the SearchParameters property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidAuthorizationContext">
            <summary>
            This error indicates that the authorization procedure for the requestor failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidChangeKey">
            <summary>
            This error occurs when a consumer passes in a folder or item identifier with a change key that cannot be parsed. For example, this could be invalid base64 content or an empty string.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidClientSecurityContext">
            <summary>
            This error indicates that there was an internal error when an attempt was made to resolve the identity of the caller.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidCompleteDate">
            <summary>
            This error is returned when an attempt is made to set the CompleteDate element value of a task to a time in the future. When it is converted to the local time of the Client Access server, the CompleteDate of a task cannot be set to a value that is later than the local time on the Client Access server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidContactEmailAddress">
            <summary>
            Indicates that an invalid e-mail address was provided for a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidContactEmailIndex">
            <summary>
            Indicates that an invalid e-mail index value was provided for an e-mail entry.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidCrossForestCredentials">
            <summary>
            This error occurs when the credentials that are used to proxy a request to a different directory service forest fail authentication.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidDelegatePermission">
            <summary>
            This error indicates that the specified folder permissions are invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidDelegateUserId">
            <summary>
            This error indicates that the specified delegate user ID is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidExcludesRestriction">
            <summary>
            This error occurs when the bitmask that was passed into an Excludes element restriction is unable to be parsed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidExpressionTypeForSubFilter">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidExtendedProperty">
            <summary>
            This error occurs when the following events take place:
            The caller tries to use an extended property that is not supported by Exchange Web Services.
            The caller passes in an invalid combination of attribute values for an extended property. This also occurs if no attributes are passed. Only certain combinations are allowed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidExtendedPropertyValue">
            <summary>
            This error occurs when the value section of an extended property does not match the type of the property; for example, setting an extended property that has PropertyType="String" to an array of integers will result in this error. Any string representation that is not coercible into the type that is specified for the extended property will give this error.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidFolderId">
            <summary>
            This error occurs when the folder ID is corrupt.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidFolderTypeForOperation">
            <summary>
            This error indicates that the specified folder type is invalid for the current operation. For example, you cannot create a Search folder in a public folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidFractionalPagingParameters">
            <summary>
            This error occurs in fractional paging when the user has specified one of the following:
            A numerator that is greater than the denominator
            A numerator that is less than zero
            A denominator that is less than or equal to zero
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidFreeBusyViewType">
            <summary>
            This error occurs when the GetUserAvailability Operation is called with a FreeBusyViewType of None.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidId">
            <summary>
            This error indicates that the ID and/or change key is malformed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdEmpty">
            <summary>
            This error occurs when the caller specifies an Id attribute that is empty.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdMalformed">
            <summary>
            This error occurs when the caller specifies an Id attribute that is malformed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdMalformedEwsLegacyIdFormat">
            <summary>
            This error indicates that a folder or item ID that is using the Exchange 2007 format was specified for a request with a version of Exchange 2007 SP1 or later. You cannot use Exchange 2007 IDs in Exchange 2007 SP1 or later requests. You have to use the ConvertId Operation to convert them first.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdMonikerTooLong">
            <summary>
            This error occurs when the caller specifies an Id attribute that is too long.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdNotAnItemAttachmentId">
            <summary>
            This error is returned whenever an ID that is not an item attachment ID is passed to a Web service method that expects an attachment ID.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdReturnedByResolveNames">
            <summary>
            This error occurs when a contact in your mailbox is corrupt.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdStoreObjectIdTooLong">
            <summary>
            This error occurs when the caller specifies an Id attribute that is too long.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdTooManyAttachmentLevels">
            <summary>
            This error is returned when the attachment hierarchy on an item exceeds the maximum of 255 levels deep.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIdXml">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidImContactId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidImDistributionGroupSmtpAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidImGroupId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidIndexedPagingParameters">
            <summary>
            This error occurs if the offset for indexed paging is negative.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidInternetHeaderChildNodes">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationArchiveItem">
            <summary>
            Invalid item type for an ArchiveItem action. The ErrorInvalidItemForOperationArchiveItem field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationCreateItemAttachment">
            <summary>
            This error is returned when an attempt is made to create an item attachment of an unsupported type. 
            Supported item types for item attachments include the following objects:
            ItemType 
            MessageType 
            CalendarItemType 
            TaskType 
            ContactItemType 
            For example, if you try to create a MeetingMessage attachment, you will encounter this response code.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationCreateItem">
            <summary>
            This error is returned from a CreateItem Operation if the request contains an unsupported item type. Supported items include the following objects:
            ItemType 
            MessageType 
            CalendarItemType 
            TaskType 
            ContactItemType 
            Certain types are created as a side effect of doing something else. MeetingMessages, for example, are created when you send a calendar item to attendees; they are not explicitly created.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationAcceptItem">
            <summary>
            This error occurs when an attempt is made to use an AcceptItem operation for an item type other than a meeting request or a calendar item, or when an attempt is made to accept a calendar item occurrence that is in the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationDeclineItem">
            <summary>
            This error occurs when an attempt is made to use a DeclineItem operation for an item type other than a meeting request or a calendar item, or when an attempt is made to decline a calendar item occurrence that is in the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationCancelItem">
            <summary>
            This error occurs when an attempt is made to use a CancelItem operation on an item type other than a calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationExpandDL">
            <summary>
            This error indicates that the ExpandDL Operation is valid only for private distribution lists.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationRemoveItem">
            <summary>
            This error is returned from a RemoveItem operation if the request specifies an item that is not a meeting cancellation item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationSendItem">
            <summary>
            This error is returned from a SendItem Operation if the request specifies an item that is not a message item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidItemForOperationTentative">
            <summary>
            This error occurs when an attempt is made to use TentativelyAcceptItem for an item type other than a meeting request or a calendar item, or when an attempt is made to tentatively accept a calendar item occurrence that is in the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidLogonType">
            <summary>
            Indicates that an invalid logon type was used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidMailbox">
            <summary>
            Indicates that the CreateItem or UpdateItem operation failed while creating or updating a personal distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidManagedFolderProperty">
            <summary>
            This error occurs when the structure of the managed folder is corrupted and cannot be rendered.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidManagedFolderQuota">
            <summary>
            This error occurs when the quota that is set on the managed folder is less than zero, which indicates a corrupted managed folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidManagedFolderSize">
            <summary>
            This error occurs when the size that is set on the managed folder is less than zero, which indicates a corrupted managed folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidMergedFreeBusyInterval">
            <summary>
            This error occurs when the supplied merged free/busy internal value is invalid. The default minimum value is 5 minutes. The default maximum value is 1440 minutes.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidNameForNameResolution">
            <summary>
            This error occurs when the name is invalid for the ResolveNames Operation. For example, a zero length string, a single space, a comma, and a dash are all invalid names.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidOperation">
            <summary>
            This is a general error that is used when the requested operation is invalid. For example, you cannot do the following:
            Perform a “Deep” traversal by using the FindFolder Operation on a public folder.
            Move or copy the public folder root.
            Delete an associated item by using any mode except “Hard” delete.
            Move or copy an associated item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidNetworkServiceContext">
            <summary>
            This error indicates an error in the Network Service account on the Client Access server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidOofParameter">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPagingMaxRows">
            <summary>
            This error occurs when a consumer passes in a zero or a negative value for the maximum rows to be returned.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidParentFolder">
            <summary>
            This error occurs when a consumer passes in an invalid parent folder for an operation. For example, this error is returned if you try to create a folder within a search folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPercentCompleteValue">
            <summary>
            This error is returned when an attempt is made to set a task completion percentage to an invalid value. The value must be between 0 and 100 (inclusive).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPermissionSettings">
            <summary>
            This error indicates that the permission level is inconsistent with the permission settings.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPhoneCallId">
            <summary>
            Indicates that the caller identifier is not valid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPhoneNumber">
            <summary>
            Indicates that the phone number is not correct or does not fit the dial plan rules.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidUserInfo">
            <summary>
            This error indicates that an internally inconsistent UserId was specified for a permissions operation. For example, if a distinguished user ID is specified (Default or Anonymous), this error is returned if you also try to specify a SID, or primary SMTP address or display name for this user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPropertyAppend">
            <summary>
            This error occurs when the property that you are trying to append to does not support appending. The following are the only properties that support appending:
            Recipient collections (ToRecipients, CcRecipients, BccRecipients)
            Attendee collections (RequiredAttendees, OptionalAttendees, Resources)
            Body
            ReplyTo
            In addition, this error occurs when a message body is appended if the format specified in the request does not match the format of the item in the store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPropertyDelete">
            <summary>
            This error occurs if the delete operation is specified in an UpdateItem Operation or UpdateFolder Operation call for a property that does not support the delete operation. For example, you cannot delete the ItemId property of the ItemType object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPropertyForExists">
            <summary>
            This error occurs if the consumer passes in one of the flag properties in an Exists filter. For example, this error occurs if the IsRead or IsFromMe flags are specified in the Exists element. The request should use the IsEqualTo element instead for these as they are flags and therefore part of a single property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPropertyForOperation">
            <summary>
            This error occurs when the property that you are trying to manipulate does not support the operation that is being performed on it.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPropertyRequest">
            <summary>
            This error occurs if a property that is specified in the request is not available for the item type. For example, this error is returned if a property that is only available on calendar items is requested in a GetItem Operation call for a message or is updated in an UpdateItem Operation call for a message.
            This occurs in the following operations:
            GetItem Operation 
            GetFolder Operation 
            UpdateItem Operation 
            UpdateFolder Operation 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPropertySet">
            <summary>
            This error indicates that the property that you are trying to manipulate does not support the operation that is being performed on it. For example, this error is returned if the property that you are trying to set is read-only.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPropertyUpdateSentMessage">
            <summary>
            This error occurs during an UpdateItem Operation when a client tries to update certain properties of a message that has already been sent. For example, the following properties cannot be updated on a sent message:
            IsReadReceiptRequested 
            IsDeliveryReceiptRequested 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidProxySecurityContext">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPullSubscriptionId">
            <summary>
            This error occurs if you call the GetEvents Operation or the Unsubscribe Operation by using a push subscription ID. To unsubscribe from a push subscription, you must respond to a push request with an unsubscribe response, or disconnect your Web service and wait for the push notifications to time out. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPushSubscriptionUrl">
            <summary>
            This error is returned by the Subscribe Operation when it creates a “push” subscription and indicates that the URL that is included in the request is invalid. The following conditions must be met for Exchange Web Services to accept the URL: 
            String length > 0 and &lt; 2083.
            Protocol is http or https.
            The URL can be parsed by the URI Microsoft .NET Framework class.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRecipients">
            <summary>
            This error indicates that the recipient collection on your message or the attendee collection on your calendar item is invalid. For example, this error will be returned when an attempt is made to send an item that has no recipients.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRecipientSubfilter">
            <summary>
            This error indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To get around this error, retrieve the folder without requesting the search parameters.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRecipientSubfilterComparison">
            <summary>
            This error indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To get around this error, retrieve the folder without requesting the search parameters.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRecipientSubfilterOrder">
            <summary>
            This error indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To get around this error, retrieve the folder without requesting the search parameters.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRecipientSubfilterTextFilter">
            <summary>
            This error indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To get around this error, retrieve the folder without requesting the search parameters.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidReferenceItem">
            <summary>
            This error is returned from the CreateItem Operation for Forward and Reply response objects in the following scenarios:
            The referenced item identifier is not a Message, a CalendarItem, or a descendant of a Message or CalendarItem.
            The reference item identifier is for a CalendarItem and the organizer is trying to Reply or ReplyAll to himself.
            The message is a draft and Reply or ReplyAll is selected.
            The reference item, for SuppressReadReceipt, is not a Message or a descendant of a Message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRequest">
            <summary>
            This error occurs when the SOAP request has a SOAP action header, but nothing in the SOAP body. Note that the SOAP Action header is not required as Exchange Web Services can determine the method to call from the local name of the root element in the SOAP body.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRestriction">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRetentionTagTypeMismatch">
            <summary>
            A policy tag of the wrong type was applied to an item or folder. The ErrorInvalidRetentionTagTypeMismatch field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRetentionTagInvisible">
            <summary>
            An invisible retention policy was applied to the item or folder. The ErrorInvalidRetentionTagInvisible field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRetentionTagInheritance">
            <summary>
            An implicit policy tag was applied to the target item or folder. The ErrorInvalidRetentionTagInheritance field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRetentionTagIdGuid">
            <summary>
            Invalid retention tag identifier GUID. The ErrorInvalidRetentionTagIdGuid field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRoutingType">
            <summary>
            This error occurs if the routing type that is passed for an EmailAddressType is invalid. Typically, the routing type is set to Simple Mail Transfer Protocol (SMTP).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidScheduledOofDuration">
            <summary>
            This error occurs if the specified duration end time is not greater than the start time, or if the end time does not occur in the future.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSecurityDescriptor">
            <summary>
            This error indicates that the Exchange security descriptor on the Calendar folder in the store is corrupted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSendItemSaveSettings">
            <summary>
            This error occurs during an attempt to send an item where the SavedItemFolderId is specified in the request but the SaveItemToFolder property is set to false.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSerializedAccessToken">
            <summary>
            This error indicates that the token that was passed in the header is malformed, does not refer to a valid account in the directory, or is missing the primary group ConnectingSID.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidServerVersion">
            <summary>
            This error indicates that an invalid request server version was specified in the request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSid">
            <summary>
            This error occurs when an invalid SID is passed in a request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSIPUri">
            <summary>
            Indicates that the SIP name, dial plan, or the phone number are invalid SIP URI.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSmtpAddress">
            <summary>
            This error occurs when the SMTP address cannot be parsed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSubfilterType">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSubfilterTypeNotAttendeeType">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSubfilterTypeNotRecipientType">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSubscription">
            <summary>
            This error indicates that the subscription is no longer valid. This could be because the Client Access server is restarting or because the subscription is expired.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSubscriptionRequest">
            <summary>
            This error indicates that the subscribe request included multiple public folder IDs. A subscription can include multiple folders from the same mailbox or one public folder ID.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSyncStateData">
            <summary>
            This error is returned by SyncFolderItems or SyncFolderHierarchy if the SyncState data that is passed is invalid. To fix this error, you must resynchronize without the sync state. Make sure that if you are persisting sync state BLOBs, you are not accidentally truncating the BLOB.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidTimeInterval">
            <summary>
            This error indicates that the specified time interval is invalid. The start time must be greater than or equal to the end time.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidUserOofSettings">
            <summary>
            This error indicates that the user Out of Office (OOF) settings are invalid because of a missing internal or external reply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidUserPrincipalName">
            <summary>
            This error occurs during Exchange Impersonation. The caller passed in an invalid UPN in the SOAP header that was not accessible in the directory.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidUserSid">
            <summary>
            This error occurs when an invalid SID is passed in a request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidUserSidMissingUPN">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidValueForProperty">
            <summary>
            This error indicates that the comparison value in the restriction is invalid for the property you are comparing against. For example, the comparison value of DateTimeCreated > true would return this response code. This response code is also returned if you specify an enumeration property in the comparison, but the value that you are comparing against is not a valid value for that enumeration.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidWatermark">
            <summary>
            This error is caused by an invalid watermark.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorIPGatewayNotFound">
            <summary>
            Indicates that a valid VoIP gateway is not available.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorIrresolvableConflict">
            <summary>
            This error indicates that conflict resolution was unable to resolve changes for the properties. The items in the store may have been changed and have to be updated. Retrieve the updated change key and try again.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorItemCorrupt">
            <summary>
            This error indicates that the state of the object is corrupted and cannot be retrieved. When you are retrieving an item, only certain properties will be in this state, such as Body and MimeContent. Omit these properties and retry the operation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorItemNotFound">
            <summary>
            This error occurs when the item was not found or you do not have permission to access the item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorItemPropertyRequestFailed">
            <summary>
            This error occurs if a property request on an item fails. The property may exist, but it could not be retrieved.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorItemSave">
            <summary>
            This error occurs when attempts to save the item or folder fail.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorItemSavePropertyError">
            <summary>
            This error occurs when attempts to save the item or folder fail because of invalid property values. The response code includes the path of the invalid properties.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorLegacyMailboxFreeBusyViewTypeNotMerged">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorLocalServerObjectNotFound">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorLogonAsNetworkServiceFailed">
            <summary>
            This error indicates that the Availability service was unable to log on as the network service to proxy requests to the appropriate sites or forests. This response typically indicates a configuration error.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxConfiguration">
            <summary>
            This error indicates that the mailbox information in AD DS is configured incorrectly.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxDataArrayEmpty">
            <summary>
            This error indicates that the MailboxDataArray property in the request is empty. You must supply at least one mailbox identifier.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxDataArrayTooBig">
            <summary>
            This error occurs when more than 100 entries are supplied in a MailboxDataArray.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxHoldNotFound">
            <summary>
            The referenced mailbox hold is not found. The ErrorMailboxHoldNotFound field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxLogonFailed">
            <summary>
            This error occurs when the connection to the mailbox to get the calendar view information failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxMoveInProgress">
            <summary>
            This error indicates that the mailbox is being moved to a different mailbox store or server. This error can also indicate that the mailbox is on another server or mailbox database.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxStoreUnavailable">
            <summary>
            This error indicates that one of the following error conditions occurred: 
            The mailbox store is corrupt.
            The mailbox store is being stopped.
            The mailbox store is offline.
            A network error occurred when an attempt was made to access the mailbox store.
            The mailbox store is overloaded and cannot accept any more connections.
            The mailbox store has been paused.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailRecipientNotFound">
            <summary>
            This error occurs if the MailboxData information cannot be mapped to a valid mailbox account.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailTipsDisabled">
            <summary>
            Indicates that mail tips are disabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorManagedFolderAlreadyExists">
            <summary>
            This error occurs if the managed folder that you are trying to create already exists in a mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorManagedFolderNotFound">
            <summary>
            This error occurs when the folder name that was specified in the request does not map to a managed folder definition in AD DS. You can only create instances of managed folders for folders that are defined in AD DS. Check the name and try again.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorManagedFoldersRootFailure">
            <summary>
            This error indicates that the managed folders root was deleted from the mailbox or that a folder exists in the same parent folder that has the name of the managed folder root. This will also occur if the attempt to create the root managed folder fails.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMeetingSuggestionGenerationFailed">
            <summary>
            This error indicates that the suggestions engine encountered a problem when it was trying to generate the suggestions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMessageDispositionRequired">
            <summary>
            This error occurs if the MessageDisposition attribute is not set. This attribute is required for the following:
            The CreateItem Operation and the UpdateItem Operation when the item being created or updated is a Message.
            CancelCalendarItem, AcceptItem, DeclineItem, or TentativelyAcceptItem response objects.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMessageSizeExceeded">
            <summary>
            This error indicates that the message that you are trying to send exceeds the allowed limits.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMimeContentConversionFailed">
            <summary>
            This error occurs when the MIME content is not a valid iCal for a CreateItem Operation. For a GetItem Operation, this response indicates that the MIME content could not be generated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMimeContentInvalid">
            <summary>
            This error occurs when the MIME content is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMimeContentInvalidBase64String">
            <summary>
            This error occurs when the MIME content in the request is not a valid base 64 string.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingArgument">
            <summary>
            This error indicates that a required argument was missing from the request. The response message text indicates which argument to check.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingEmailAddress">
            <summary>
            This error indicates that you specified a distinguished folder ID in the request, but the account that made the request does not have a mailbox on the system. In that case, you must supply a Mailbox sub-element under DistinguishedFolderId.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingEmailAddressForManagedFolder">
            <summary>
            This error indicates that you specified a distinguished folder ID in the request, but the account that made the request does not have a mailbox on the system. In that case, you must supply a Mailbox sub-element under DistinguishedFolderId. This response is returned from the CreateManagedFolder Operation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingInformationEmailAddress">
            <summary>
            This error occurs if the EmailAddress element is missing.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingInformationReferenceItemId">
            <summary>
            This error occurs if the ReferenceItemId is missing.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingItemForCreateItemAttachment">
            <summary>
            This error is returned when an attempt is made to not include the item element in the ItemAttachment element of a CreateAttachment Operation request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingManagedFolderId">
            <summary>
            This error occurs when the policy IDs property, property tag 0x6732, for the folder is missing. You should consider this a corrupted folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingRecipients">
            <summary>
            This error indicates that you tried to send an item without including recipients. Note that if you call the CreateItem Operation with a message disposition that causes the message to be sent, you will get the following response code: ErrorInvalidRecipients.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingUserIdInformation">
            <summary>
            This error indicates that a UserId has not been fully specified in a permissions set.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMoreThanOneAccessModeSpecified">
            <summary>
            This error indicates that you have specified more than one ExchangeImpersonation property value within a request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMoveCopyFailed">
            <summary>
            This error indicates that the move or copy operation failed. Moving occurs in the CreateItem Operation when you accept a meeting request that is in the Deleted Items folder. In addition, if you decline a meeting request, cancel a calendar item, or remove a meeting from your calendar, it is moved to the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMoveDistinguishedFolder">
            <summary>
            This error occurs if you try to move a distinguished folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMultiLegacyMailboxAccess">
            <summary>
            A request attempted to access multiple mailbox servers. The ErrorMultiLegacyMailboxAccess field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNameResolutionMultipleResults">
            <summary>
            This error occurs if the ResolveNames Operation returns more than one result or the ambiguous name that you specified matches more than one object in the directory. The response code includes the matched names in the response data.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNameResolutionNoMailbox">
            <summary>
            This error indicates that the caller does not have a mailbox on the system. The ResolveNames Operation or ExpandDL Operation is invalid for connecting a user without a mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNameResolutionNoResults">
            <summary>
            This error indicates that the ResolveNames Operation returns no results.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoCalendar">
            <summary>
            This error occurs if there is no Calendar folder for the mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoDestinationCASDueToKerberosRequirements">
            <summary>
            This error indicates that the request referred to a mailbox in another Active Directory site, but no Client Access servers in the destination site were configured for Windows Authentication, and therefore the request could not be proxied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoDestinationCASDueToSSLRequirements">
            <summary>
            This error indicates that the request referred to a mailbox in another Active Directory site, but no Client Access servers in the destination site were configured for SSL connections, and therefore the request could not be proxied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoDestinationCASDueToVersionMismatch">
            <summary>
            This error indicates that the request referred to a mailbox in another Active Directory site, but no Client Access servers in the destination site were of an acceptable product version to receive the request, and therefore the request could not be proxied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoFolderClassOverride">
            <summary>
            This error occurs if you set the FolderClass property when you are creating an item other than a generic folder. For typed folders such as CalendarFolderType and TasksFolderType, the folder class is implied. Setting the folder class to a different folder type by using the UpdateFolder Operation results in the ErrorObjectTypeChanged response. Instead, use a generic folder type but set the folder class to the value that you require. Exchange Web Services will create the correct strongly typed folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoFreeBusyAccess">
            <summary>
            This error indicates that the caller does not have free/busy viewing rights on the Calendar folder in question.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNonExistentMailbox">
            <summary>
            This error occurs in the following scenarios:
            The e-mail address is empty in CreateManagedFolder.
            The e-mail address does not refer to a valid account in a request that takes an e-mail address in the body or in the SOAP header, such as in an Exchange Impersonation call.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNonPrimarySmtpAddress">
            <summary>
            This error occurs when a caller passes in a non-primary SMTP address. The response includes the correct SMTP address to use.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoPropertyTagForCustomProperties">
            <summary>
            This error indicates that MAPI properties in the custom range, 0x8000 and greater, cannot be referenced by property tags. You must use the PropertySetId property or the DistinguishedPropertySetId property together with the PropertyName or PropertyId properties.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoPublicFolderReplicaAvailable">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoPublicFolderServerAvailable">
            <summary>
            Indicates that no public folder server was available to handle the request. The content was not available on the caller’s home public server (or they don’t have one) and was not found on any replica servers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoRespondingCASInDestinationSite">
            <summary>
            This error indicates that the request referred to a mailbox in another Active Directory site, but none of the Client Access servers in that site responded, and therefore the request could not be proxied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNotDelegate">
            <summary>
            This error indicates that the user is not a delegate for the mailbox. It is returned by the GetDelegate Operation, the RemoveDelegate Operation, and the UpdateDelegate Operation when the specified delegate user is not found in the list of delegates.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNotEnoughMemory">
            <summary>
            This error indicates that the operation could not be completed because of insufficient memory.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorObjectTypeChanged">
            <summary>
            This error occurs if the object type changed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorOccurrenceCrossingBoundary">
            <summary>
            This error occurs when the Start or End time of an occurrence is updated so that the occurrence is scheduled to happen earlier or later than the corresponding previous or next occurrence.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorOccurrenceTimeSpanTooBig">
            <summary>
            This error indicates that the time allotment for a given occurrence overlaps with another occurrence of the same recurring item. This response also occurs when the length in minutes of a given occurrence is larger than Int32.MaxValue.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorOperationNotAllowedWithPublicFolderRoot">
            <summary>
            This error indicates that the current operation is not valid for the public folder root.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorParentFolderIdRequired">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorParentFolderNotFound">
            <summary>
            This error occurs in the CreateFolder Operation when the parent folder is not found.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPasswordChangeRequired">
            <summary>
            This error indicates that you must change your password before you can access this mailbox. This occurs when a new account has been created and the administrator indicated that the user must change the password at first logon. You cannot update the password by using Exchange Web Services. You must use a tool such as Microsoft Office Outlook Web App to change your password.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPasswordExpired">
            <summary>
            This error indicates that the password has expired. You cannot change the password by using Exchange Web Services. You must use a tool such as Outlook Web App to change your password.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPhoneNumberNotDialable">
            <summary>
            Indicates that the phone number was not in the correct phone form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPropertyUpdate">
            <summary>
            This error indicates that the update failed because of invalid property values. The response message includes the invalid property paths.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPromptPublishingOperationFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPropertyValidationFailure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorProxiedSubscriptionCallFailure">
            <summary>
            This error indicates that the request referred to a subscription that exists on another Client Access server, but an attempt to proxy the request to that Client Access server failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorProxyCallFailed">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorProxyGroupSidLimitExceeded">
            <summary>
            This error indicates that the request referred to a mailbox in another Active Directory site, and the original caller is a member of more than 3,000 groups.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorProxyRequestNotAllowed">
            <summary>
            This error indicates that the request that Exchange Web Services sent to another Client Access server when trying to fulfill a GetUserAvailability request was invalid. This response code typically indicates that a configuration or rights error has occurred, or that someone tried unsuccessfully to mimic an availability proxy request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorProxyRequestProcessingFailed">
            <summary>
            This error indicates that Exchange Web Services tried to proxy an availability request to another Client Access server for fulfillment, but the request failed. This response can be caused by network connectivity issues or request timeout issues.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorProxyTokenExpired">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPublicFolderMailboxDiscoveryFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPublicFolderOperationFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPublicFolderRequestProcessingFailed">
            <summary>
            This error occurs when the recipient that was passed to the GetUserAvailability Operation is located on a computer that is running a version of Exchange Server that is earlier than Exchange 2007, and the request to retrieve free/busy information for the recipient from the public folder server failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPublicFolderServerNotFound">
            <summary>
            This error occurs when the recipient that was passed to the GetUserAvailability Operation is located on a computer that is running a version of Exchange Server that is earlier than Exchange 2007, and the request to retrieve free/busy information for the recipient from the public folder server failed because the organizational unit did not have an associated public folder server. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPublicFolderSyncException">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorQueryFilterTooLong">
            <summary>
            This error indicates that the search folder restriction may be valid, but it is not supported by EWS. Exchange Web Services limits restrictions to contain a maximum of 255 filter expressions. If you try to bind to an existing search folder that exceeds 255, this response code is returned.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorQuotaExceeded">
            <summary>
            This error occurs when the mailbox quota is exceeded.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorReadEventsFailed">
            <summary>
            This error is returned by the GetEvents Operation or push notifications when a failure occurs while retrieving event information. When this error is returned, the subscription is deleted. Re-create the event synchronization based on a last known watermark.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorReadReceiptNotPending">
            <summary>
            This error is returned by the CreateItem Operation if an attempt was made to suppress a read receipt when the message sender did not request a read receipt on the message or if the message is in the Junk E-mail folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRecurrenceEndDateTooBig">
            <summary>
            This error occurs when the end date for the recurrence is after 9/1/4500.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRecurrenceHasNoOccurrence">
            <summary>
            This error occurs when the specified recurrence does not have any occurrence instances in the specified range.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRemoveDelegatesFailed">
            <summary>
            This error indicates that the delegate list failed to be saved after delegates were removed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRequestAborted">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRequestStreamTooBig">
            <summary>
            This error occurs when the request stream is larger than 400 KB.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRequiredPropertyMissing">
            <summary>
            This error is returned when a required property is missing in a CreateAttachment Operation request. The missing property URI is included in the response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorResolveNamesInvalidFolderType">
            <summary>
            This error indicates that the caller has specified a folder that is not a contacts folder to the ResolveNames Operation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorResolveNamesOnlyOneContactsFolderAllowed">
            <summary>
            This error indicates that the caller has specified more than one contacts folder to the ResolveNames Operation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorResponseSchemaValidation">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRestrictionTooLong">
            <summary>
            This error occurs if the restriction contains more than 255 nodes.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRestrictionTooComplex">
            <summary>
            This error occurs when the restriction cannot be evaluated by Exchange Web Services.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorResultSetTooBig">
            <summary>
            This error indicates that the number of calendar entries for a given recipient exceeds the allowed limit of 1000. Reduce the window and try again.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidExchangeImpersonationHeaderData">
            <summary>
            This error occurs during Exchange Impersonation when a caller does not specify a UPN, an e-mail address, or a user SID. This will also occur if the caller specifies one or more of those and the values are empty.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSavedItemFolderNotFound">
            <summary>
            This error occurs when the SavedItemFolderId is not found.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSchemaValidation">
            <summary>
            This error occurs when the request cannot be validated against the schema.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSearchFolderNotInitialized">
            <summary>
            This error indicates that the search folder was created, but the search criteria were never set on the folder. This only occurs when you access corrupted search folders that were created by using another API or client. To fix this error, use the UpdateFolder Operation to set the SearchParameters to include the restriction that should be on the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSendAsDenied">
            <summary>
            This error occurs when both of the following conditions occur:
            A user has been granted CanActAsOwner permissions but is not granted delegate rights on the principal’s mailbox.
            The same user tries to create and send an e-mail message in the principal’s mailbox by using the SendAndSaveCopy option.
            The result is an ErrorSendAsDenied error and the creation of the e-mail message in the principal’s Drafts folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSendMeetingCancellationsRequired">
            <summary>
            This error is returned by the DeleteItem Operation if the SendMeetingCancellations attribute is missing from the request and the item to delete is a calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSendMeetingInvitationsOrCancellationsRequired">
            <summary>
            This error is returned by the UpdateItem Operation if the SendMeetingInvitationsOrCancellations attribute is missing from the request and the item to update is a calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSendMeetingInvitationsRequired">
            <summary>
            This error is returned by the CreateItem Operation if the SendMeetingInvitations attribute is missing from the request and the item to create is a calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSentMeetingRequestUpdate">
            <summary>
            This error indicates that after the organizer sends a meeting request, the request cannot be updated. To modify the meeting, modify the calendar item, not the meeting request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSentTaskRequestUpdate">
            <summary>
            This error indicates that after the task initiator sends a task request, that request cannot be updated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorServerBusy">
            <summary>
            This error occurs when the server is busy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorServiceDiscoveryFailed">
            <summary>
            This error indicates that Exchange Web Services tried to proxy a user availability request to the appropriate forest for the recipient, but it could not determine where to send the request because of a service discovery failure.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorStaleObject">
            <summary>
            This error occurs in an UpdateItem Operation or a SendItem Operation when the change key is not up-to-date or was not supplied. Call the GetItem Operation to retrieve an updated change key and then try the operation again.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSubmissionQuotaExceeded">
            <summary>
            Indicates that a user cannot immediately send more request because the submission quota has been reached.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSubscriptionAccessDenied">
            <summary>
            This error occurs when you try to access a subscription by using an account that did not create that subscription. Each subscription can only be accessed by the creator of the subscription.\
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSubscriptionDelegateAccessNotSupported">
            <summary>
            This error indicates that you cannot create a subscription if you are not the owner or do not have owner access to the mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSubscriptionNotFound">
            <summary>
            This error occurs if the subscription that corresponds to the specified SubscriptionId is not found. The subscription may have expired, the Exchange Web Services process may have been restarted, or an invalid subscription was passed in. If the subscription was valid, re-create the subscription with the latest watermark. This is returned by the Unsubscribe Operation or the GetEvents Operation responses.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSubscriptionUnsubscribed">
            <summary>
            Indicates that the client is not subscribed to the subscription.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSyncFolderNotFound">
            <summary>
            This error is returned by the SyncFolderItems Operation if the parent folder that is specified cannot be found.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTeamMailboxNotFound">
            <summary>
            The site mailbox was not found. The ErrorTeamMailboxNotFound field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTeamMailboxNotLinkedToSharePoint">
            <summary>
            The site mailbox is not linked to an online team portal. The ErrorTeamMailboxNotLinkedToSharePoint field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTeamMailboxUrlValidationFailed">
            <summary>
            The site mailbox URL validation failed. The ErrorTeamMailboxUrlValidationFailed field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTeamMailboxNotAuthorizedOwner">
            <summary>
            The associated action can be done only by an authorized owner of the site mailbox. The ErrorTeamMailboxNotAuthorizedOwner field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTeamMailboxActiveToPendingDelete">
            <summary>
            A site mailbox has not been closed prior to setting its TeamMailboxLifecycleState enumeration value to PendingDelete. The ErrorTeamMailboxActiveToPendingDelete field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTeamMailboxFailedSendingNotifications">
            <summary>
            The site mailbox failed to send notifications. The ErrorTeamMailboxFailedSendingNotifications field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTeamMailboxErrorUnknown">
            <summary>
            The site mailbox error is unknown. The ErrorTeamMailboxErrorUnknown field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTimeIntervalTooBig">
            <summary>
            This error indicates that the time window that was specified is larger than the allowed limit. By default, the allowed limit is 42.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTimeoutExpired">
            <summary>
            This error occurs when there is not enough time to complete the processing of the request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorToFolderNotFound">
            <summary>
            This error indicates that the destination folder does not exist.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorTokenSerializationDenied">
            <summary>
            This error occurs if the caller tries to do a Token serialization request but does not have the ms-Exch-EPI-TokenSerialization right on the Client Access server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUpdatePropertyMismatch">
            <summary>
            This error occurs when the single property path that is listed in a change description does not match the single property that is being set within the actual ItemType or FolderType object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnifiedMessagingDialPlanNotFound">
            <summary>
            Indicates that a user's dial plan is not available.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnifiedMessagingReportDataNotFound">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnifiedMessagingPromptNotFound">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnifiedMessagingRequestFailed">
            <summary>
            Indicates that the user could not be found. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnifiedMessagingServerNotFound">
            <summary>
            Indicates that a valid server for the dial plan can be found to handle the request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnableToGetUserOofSettings">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnableToRemoveImContactFromGroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedSubFilter">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedCulture">
            <summary>
            This error occurs when you try to set the Culture property to a value that is not parsable by the System.Globalization.CultureInfo class.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedMapiPropertyType">
            <summary>
            This error occurs when a caller tries to use extended properties of types object, object array, error, or null.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedMimeConversion">
            <summary>
            This error occurs when you are trying to retrieve or set MIME content for an item other than a PostItemType, MessageType, or CalendarItemType object. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedPathForQuery">
            <summary>
            This error occurs when the caller passes a property that is invalid for a query. This can occur when calculated properties are used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedPathForSortGroup">
            <summary>
            This error occurs when the caller passes a property that is invalid for a sort or group by property. This can occur when calculated properties are used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedPropertyDefinition">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedQueryFilter">
            <summary>
            This error indicates that the search folder restriction may be valid, but it is not supported by EWS.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedRecurrence">
            <summary>
            This error indicates that the specified recurrence is not supported for tasks.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUnsupportedTypeForConversion">
            <summary>
            This error indicates that Exchange Web Services found a property type in the store but it cannot generate XML for the property type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUpdateDelegatesFailed">
            <summary>
            This error indicates that the delegate list failed to be saved after delegates were updated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUserNotUnifiedMessagingEnabled">
            <summary>
            Indicates that the requester is not enabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorVoiceMailNotImplemented">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorValueOutOfRange">
            <summary>
            Indicates that a calendar view start date or end date was set to 1/1/0001 12:00:00 AM or 12/31/9999 11:59:59 PM.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorVirusDetected">
            <summary>
            This error indicates that the Exchange store detected a virus in the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorVirusMessageDeleted">
            <summary>
            This error indicates that the Exchange store detected a virus in the message and deleted it.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorWebRequestInInvalidState">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorWin32InteropError">
            <summary>
            This error indicates that there was an internal failure during communication with unmanaged code.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorWorkingHoursSaveFailed">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorWorkingHoursXmlMalformed">
            <summary>
            This response code is not used.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorWrongServerVersion">
            <summary>
            Indicates that a request can be made only to a server that is the same version as the mailbox server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorWrongServerVersionDelegate">
            <summary>
            Indicates that a request was made by a delegate that has a different server version than the principal's mailbox server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissingInformationSharingFolderId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDuplicateSOAPHeader">
            <summary>
            Indicates that there are duplicate SOAP headers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSharingSynchronizationFailed">
            <summary>
            Indicates that an attempt at synchronizing a sharing folder failed. This error code is returned when: the subscription for a sharing folder is not found; the sharing folder is not found; the corresponding directory user is not found; the user no longer exists; the appointment is invalid; the contact item is invalid; there is a communication failure with the remote server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSharingNoExternalEwsAvailable">
            <summary>
            Indicates that the external URL property has not been set in the Active Directory directory service database.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorFreeBusyDLLimitReached">
            <summary>
            Indicates that the maximum group member count has been reached for obtaining free/busy information for a distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidGetSharingFolderRequest">
            <summary>
            Indicates that the DataType and ShareFolderId elements are both present in a request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNotAllowedExternalSharingByPolicy">
            <summary>
            Indicates that the caller attempted to grant permissions in its calendar or contacts folder to a user in another organization but the attempt failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUserNotAllowedByPolicy">
            <summary>
            Indicates that the requester attempted to grant permissions in its calendar or contacts folder to an external user, but the sharing policy assigned to the requester indicates that the domain of the external user is not listed in the policy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorPermissionNotAllowedByPolicy">
            <summary>
            Indicates that the requester attempted to grant permissions in its calendar or contacts folder to an external user, but the sharing policy assigned to the requester indicates that the requested permission level is higher is than what the sharing policy allows.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorOrganizationNotFederated">
            <summary>
            Indicates that the requester's organization is not federated, so the requester cannot create sharing messages to send to an external user or cannot accept sharing messages received from an external user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxFailover">
            <summary>
            Indicates that an attempt to access a mailbox failed because the mailbox is in a failover process.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidExternalSharingInitiator">
            <summary>
            Indicates that the sharing invitation sender did not create the sharing invitation metadata.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMessageTrackingPermanentError">
            <summary>
            Indicates that the message tracking service cannot track the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMessageTrackingTransientError">
            <summary>
            Indicates that the message tracking service is either down or busy. This error code indicates a transient error. When clients receive this error, they can try again to connect to the server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMessageTrackingNoSuchDomain">
            <summary>
            Indicates that the specified domain cannot be found.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUserWithoutFederatedProxyAddress">
            <summary>
            Indicates that the requester's organization has a set of federated domains but the requester's organization does not have any SMTP proxy addresses with one of the federated domains.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidOrganizationRelationshipForFreeBusy">
            <summary>
            Indicates that a caller requested free/busy information for a user in another organization but the organizational relationship does not have free/busy enabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidFederatedOrganizationId">
            <summary>
            Indicates that the requestor's organization federation objects are not properly configured.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidExternalSharingSubscriber">
            <summary>
            Indicates that a sharing message is not intended for the caller.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSharingData">
            <summary>
            Indicates that the sharing metadata is not valid. This can be caused by invalid XML.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidSharingMessage">
            <summary>
            Indicates that the sharing message is not valid. This can be caused by a missing property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNotSupportedSharingMessage">
            <summary>
            Indicates that the sharing message is not supported. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorApplyConversationActionFailed">
            <summary>
            This member was introduced in Exchange Server 2010 Service Pack 1 (SP1) and applies to versions of Exchange Server starting with Exchange Server 2010 SP1 and Exchange Online.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInboxRulesValidationError">
            <summary>
            This member was introduced in Exchange Server 2010 Service Pack 1 (SP1) and applies to versions of Exchange Server starting with Exchange Server 2010 SP1 and Exchange Online. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorOutlookRuleBlobExists">
            <summary>
            This member was introduced in Exchange Server 2010 Service Pack 1 (SP1) and applies to versions of Exchange Server starting with Exchange Server 2010 SP1 and Exchange Online.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRulesOverQuota">
            <summary>
            This member was introduced in Exchange Server 2010 Service Pack 1 (SP1) and applies to versions of Exchange Server starting with Exchange Server 2010 SP1 and Exchange Online
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNewEventStreamConnectionOpened">
            <summary>
            This member was introduced in Exchange Server 2010 Service Pack 1 (SP1) and applies to versions of Exchange Server starting with Exchange Server 2010 SP1 and Exchange Online.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMissedNotificationEvents">
            <summary>
            This member was introduced in Exchange Server 2010 Service Pack 1 (SP1) and applies to versions of Exchange Server starting with Exchange Server 2010 SP1 and Exchange Online.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDuplicateLegacyDistinguishedName">
            <summary>
            ErrorDuplicateLegacyDistinguishedName field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidClientAccessTokenRequest">
            <summary>
            Invalid client access token request. The ErrorInvalidClientAccessTokenRequest field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorNoSpeechDetected">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorUMServerUnavailable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRecipientNotFound">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorRecognizerNotInstalled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSpeechGrammarError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidManagementRoleHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorLocationServicesDisabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorLocationServicesRequestTimedOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorLocationServicesRequestFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorLocationServicesInvalidRequest">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorMailboxScopeNotAllowedWithoutQueryString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorArchiveMailboxSearchFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidPhotoSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSearchQueryHasTooManyKeywords">
            <summary>
            The associated mailbox search query has too many keywords. The ErrorSearchQueryHasTooManyKeywords field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorSearchTooManyMailboxes">
            <summary>
            The maximum number of mailboxes allowed in a search query has been exceeded. The ErrorSearchTooManyMailboxes field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorInvalidRetentionTagNone">
            <summary>
            There are no retention tags. The ErrorInvalidRetentionTagNone field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseCode.ErrorDiscoverySearchesDisabled">
            <summary>
            Discovery searches are disabled. The ErrorDiscoverySearchesDisabled field is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Resolution">
            <summary>
            Contains a single resolved entity.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Resolution.#ctor">
            <summary>
            Initializes a new instance of the Resolution class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Resolution.ToString">
            <summary>
            Converts the value of the current Resolution object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current Resolution object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Resolution.Mailbox">
            <summary>
            Identifies a mail-enabled Active Directory directory service object.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Resolution.Contact">
            <summary>
            Represents an Exchange contact item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RefinerItem">
            <summary>
            Class RefinerItem.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RefinerItem.#ctor">
            <summary>
            Initializes a new instance of the RefinerItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RefinerItem.ToString">
            <summary>
            Converts the value of the current RefinerItem object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.RefinerItem.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RefinerItem.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RefinerItem.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RefinerItem.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="T:Independentsoft.Exchange.NoteColor">
            <summary>
            Defines the color of the note. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NoteColor.Blue">
            <summary>
            Blue.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NoteColor.Green">
            <summary>
            Green.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NoteColor.Pink">
            <summary>
            Pink.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NoteColor.Yellow">
            <summary>
            Yellow.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NoteColor.White">
            <summary>
            White.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NoteColor.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Not">
            <summary>
            Represents a search expression that negates the Boolean value of the search expression that it contains.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Not.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the Not class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Not.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the Not class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Not.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the Not class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Independentsoft.Exchange.Not.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Not"/> class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Not.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the Not class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Not.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the Not class.
            </summary>
            <param name="propertyPath1">The property path1.</param>
            <param name="propertyPath2">The property path2.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Not.#ctor(Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the Not class.
            </summary>
            <param name="restriction">The restriction.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Not.ToString">
            <summary>
            Converts the value of the current Not object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxStatisticsByKeywords">
            <summary>
            Class MailboxStatisticsByKeywords.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxStatisticsByKeywords.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxStatisticsByKeywords"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.Mailboxes">
            <summary>
            Gets the mailboxes.
            </summary>
            <value>The mailboxes.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.Keywords">
            <summary>
            Gets the keywords.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.Senders">
            <summary>
            Gets the senders.
            </summary>
            <value>The senders.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.Recipients">
            <summary>
            Gets the recipients.
            </summary>
            <value>The recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.FromDate">
            <summary>
            Gets or sets from date.
            </summary>
            <value>From date.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.ToDate">
            <summary>
            Gets or sets to date.
            </summary>
            <value>To date.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.MessageTypes">
            <summary>
            Gets the message types.
            </summary>
            <value>The message types.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.SearchDumpster">
            <summary>
            Gets or sets a value indicating whether [search dumpster].
            </summary>
            <value><c>true</c> if [search dumpster]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.IncludePersonalArchive">
            <summary>
            Gets or sets a value indicating whether [include personal archive].
            </summary>
            <value><c>true</c> if [include personal archive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsByKeywords.IncludeUnsearchableItems">
            <summary>
            Gets or sets a value indicating whether [include unsearchable items].
            </summary>
            <value><c>true</c> if [include unsearchable items]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Flag">
            <summary>
            Class Flag.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Flag.#ctor">
            <summary>
            Initializes a new instance of the Flag class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Flag.#ctor(Independentsoft.Exchange.FlagStatus)">
            <summary>
            Initializes a new instance of the Flag class.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Flag.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Flag.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Flag.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Flag.DueDate">
            <summary>
            Gets or sets the due date.
            </summary>
            <value>The due date.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Flag.CompleteDate">
            <summary>
            Gets or sets the complete date.
            </summary>
            <value>The complete date.</value>
        </member>
        <member name="T:Independentsoft.Exchange.FindPeopleResponse">
            <summary>
            Contains the status and result of a single FindPeople operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindPeopleResponse.TotalNumberOfPeopleInView">
            <summary>
            Represents the total number of personas that pass the restriction.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindPeopleResponse.Personas">
            <summary>
            Contains a collection of personas found by using the FindPersona operation.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ExtendedPropertyList">
            <summary>
            Provides List enumeration over ExtendedProperties
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExtendedPropertyList.Item(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Gets the value associated with the specified property path.
            </summary>
            <param name="propertyPath">The path of the property we should get.</param>
            <returns>The <see cref="T:Independentsoft.Exchange.ExtendedProperty"/> object.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.DeleteType">
            <summary>
            Indicates how items in a conversation are deleted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeleteType.HardDelete">
            <summary>
            Indicates that items in a conversation are permanently removed from the mailbox database.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeleteType.SoftDelete">
            <summary>
            Indicates that items in a conversation are moved to the dumpster if the dumpster is enabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeleteType.MoveToDeletedItems">
            <summary>
            Indicates that items in a conversation are moved to the dumpster if the dumpster is enabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeleteType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DayOrder">
            <summary>
            Represents the nth occurrence of the day specified in the DayOfWeek (TimeZone) element that represents the date of transition from and to standard time and daylight saving time.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOrder.First">
            <summary>
            First.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOrder.Second">
            <summary>
            Second.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOrder.Third">
            <summary>
            Third.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOrder.Fourth">
            <summary>
            Fourth.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOrder.Last">
            <summary>
            Last.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CopiedEvent">
            <summary>
            Represents an event in which an item or folder is copied.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Event">
            <summary>
            Base definition for the event classes
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Event.Watermark">
            <summary>
            The watermark for the event
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CopiedEvent.#ctor">
            <summary>
            Initializes a new instance of the CopiedEvent class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CopiedEvent.TimeStamp">
            <summary>
            Represents the timestamp of a copy item/folder mailbox event.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CopiedEvent.Id">
            <summary>
            Represents the identifier of the item or folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CopiedEvent.ParentFolderId">
            <summary>
            Represents the identifier of the folder that contains the copy.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CopiedEvent.OldId">
            <summary>
            Contains the unique identifier of the original item or folder before it was copied.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CopiedEvent.OldParentFolderId">
            <summary>
            Contains the identifier of the original parent folder of an item or folder that was copied.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConvertIdResponse">
            <summary>
            Class ConvertIdResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConvertIdResponse.AlternateId">
            <summary>
            Gets the alternate identifier.
            </summary>
            <value>The alternate identifier.</value>
        </member>
        <member name="T:Independentsoft.Exchange.CategoryColor">
            <summary>
            The category color
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Orange">
            <summary>
            Orange
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Peach">
            <summary>
            Peach
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Yellow">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Teal">
            <summary>
            Teal
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Olive">
            <summary>
            Olive
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Purple">
            <summary>
            Purple
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Maroon">
            <summary>
            Maroon
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Steel">
            <summary>
            Steel
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkSteel">
            <summary>
            Dark Steel
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Gray">
            <summary>
            Grey
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkGray">
            <summary>
            Dark Grey
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.Black">
            <summary>
            Black
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkRed">
            <summary>
            Dark Red
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkOrange">
            <summary>
            Dark Orange
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkPeach">
            <summary>
            Dark Peach
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkYellow">
            <summary>
            Dark Yellow
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkGreen">
            <summary>
            Dark Green
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkTeal">
            <summary>
            Dark Teal
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkOlive">
            <summary>
            Dark Olive
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkBlue">
            <summary>
            Dark Blue
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkPurple">
            <summary>
            Dark Purple
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.DarkMaroon">
            <summary>
            Dark Maroon
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CategoryColor.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Category">
             <summary>
             Class Category.
             </summary>
             <example>
             This example adds a category and assigns a keyboard shortcut to it
             <code>
                 Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
                 service.RequestServerVersion = RequestServerVersion.Exchange2010SP1;
                 string category = "MyCategory";
                 CategoryColor CategoryColor = CategoryColor.DarkOrange;
                 CategoryList list = service.GetCategoryList();
            
                 Category myCategory = new Category(category, CategoryColor, KeyboardShortcut.CtrlF2);
                 myCategory.Guid = "{fac7e643-c161-4f81-b394-898943335ad4}";
            
                 list.Categories.Add(myCategory);
            
                 service.UpdateCategoryList(list);
             </code>
             </example>
        </member>
        <member name="M:Independentsoft.Exchange.Category.#ctor">
            <summary>
            Initializes a new instance of the Category class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Category.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Category"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Category.#ctor(System.String,Independentsoft.Exchange.CategoryColor)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Category"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Category.#ctor(System.String,Independentsoft.Exchange.CategoryColor,Independentsoft.Exchange.KeyboardShortcut)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Category"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="color">The color.</param>
            <param name="keyboardShortcut">The keyboard shortcut.</param>
        </member>
        <member name="P:Independentsoft.Exchange.Category.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.KeyboardShortcut">
            <summary>
            Gets or sets the keyboard shortcut.
            </summary>
            <value>The keyboard shortcut.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.UsageCount">
            <summary>
            Gets or sets the usage count.
            </summary>
            <value>The usage count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastTimeUsedNotes">
            <summary>
            Gets or sets the last time used notes.
            </summary>
            <value>The last time used notes.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastTimeUsedJournal">
            <summary>
            Gets or sets the last time used journal.
            </summary>
            <value>The last time used journal.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastTimeUsedContacts">
            <summary>
            Gets or sets the last time used contacts.
            </summary>
            <value>The last time used contacts.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastTimeUsedTasks">
            <summary>
            Gets or sets the last time used tasks.
            </summary>
            <value>The last time used tasks.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastTimeUsedCalendar">
            <summary>
            Gets or sets the last time used calendar.
            </summary>
            <value>The last time used calendar.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastTimeUsedMail">
            <summary>
            Gets or sets the last time used mail.
            </summary>
            <value>The last time used mail.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastTimeUsed">
            <summary>
            Gets or sets the last time used.
            </summary>
            <value>The last time used.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.LastSessionUsed">
            <summary>
            Gets or sets the last session used.
            </summary>
            <value>The last session used.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.Guid">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Category.RenameOnFirstUse">
            <summary>
            Gets or sets a value indicating whether [rename on first use].
            </summary>
            <value><c>true</c> if [rename on first use]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Independentsoft.Exchange.BusyStatus">
            <summary>
            Specifies whether the attendee is busy at the time of an appointment on their calendar. The specified status appears in the free/busy view of the calendar.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BusyStatus.Free">
            <summary>
            Free status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BusyStatus.Tentative">
            <summary>
            Tentative status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BusyStatus.Busy">
            <summary>
            Busy status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BusyStatus.OutOfOffice">
            <summary>
            Out of the office status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BusyStatus.WorkingElsewhere">
            <summary>
            WorkingElsewhere status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.BusyStatus.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.MobileSyncUser">
            <summary>
            Represents the identity of a single user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.MobileSyncUser.#ctor">
            <summary>
            Initializes a new instance of the MobileSyncUser class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncUser.DisplayName">
            <summary>
            Represents the alternate mailbox display name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncUser.EmailAddress">
            <summary>
            Contains the e-mail address of the user to be discovered.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.DomainSetting">
            <summary>
            Contains domain settings that are returned by the GetDomainSettings Operation (SOAP) operation request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.DomainSetting.#ctor">
            <summary>
            Initializes a new instance of the DomainSetting class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSetting.Name">
            <summary>
            Represents the name of a setting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSetting.Value">
            <summary>
            Represents a user setting value.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSetting.Type">
            <summary>
            Represents a user setting type.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSetting.WebClientUrls">
            <summary>
            Represents a user setting that contains a collection of WebClientUrl (SOAP) elements.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSetting.ProtocolConnections">
            <summary>
            Represents a collection of server protocol connection settings.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AppointmentPropertyPath">
             <summary>
             Class AppointmentPropertyPath.
             </summary>
             <example>
             The following code prints Appointment details from the calendar to the console
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
            Mailbox johnMailbox = new Mailbox("John@mydomain.com");
            StandardFolderId johnCalendarFolder = new StandardFolderId(StandardFolder.Calendar, johnMailbox);
            FindItemResponse response = service.FindItem(johnCalendarFolder, AppointmentPropertyPath.AllPropertyPaths);
            for (int i = 0; i &lt; response.Items.Count; i++)
            {
                if (response.Items[i] is Appointment)
                {
                    Appointment appointment = (Appointment)response.Items[i];
                    CrestronConsole.PrintLine("Subject = " + appointment.Subject);
                    CrestronConsole.PrintLine("StartTime = " + appointment.StartTime);
                    CrestronConsole.PrintLine("EndTime = " + appointment.EndTime);
                    CrestronConsole.PrintLine("Body Preview = " + appointment.BodyPlainText);
                    CrestronConsole.PrintLine("----------------------------------------------------------------");
                }
            }
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ReminderNextTime">
            <summary>
            References the 'ReminderNextTime' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.StartWallClock">
            <summary>
            References the 'StartWallClock' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.EndWallClock">
            <summary>
            References the 'EndWallClock' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Uid">
            <summary>
            References the 'Uid' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.RecurrenceId">
            <summary>
            References the 'RecurrenceId' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.DateTimeStamp">
            <summary>
            References the 'DateTimeStamp' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.StartTime">
            <summary>
            References the 'StartTime' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.EndTime">
            <summary>
            References the 'EndTime' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.OriginalStartTime">
            <summary>
            References the 'OriginalStartTime' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.IsAllDayEvent">
            <summary>
            References the 'IsAllDayEvent' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.LegacyFreeBusyStatus">
            <summary>
            References the 'LegacyFreeBusyStatus' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Location">
            <summary>
            References the 'Location' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.When">
            <summary>
            References the 'When' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.IsMeeting">
            <summary>
            References the 'IsMeeting' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.IsCancelled">
            <summary>
            References the 'IsCancelled' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.IsRecurring">
            <summary>
            References the 'IsRecurring' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.MeetingRequestWasSent">
            <summary>
            References the 'MeetingRequestWasSent' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.IsResponseRequested">
            <summary>
            References the 'IsResponseRequested' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.InstanceType">
            <summary>
            References the 'InstanceType' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.MyResponse">
            <summary>
            References the 'MyResponse' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Organizer">
            <summary>
            References the 'Organizer' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.RequiredAttendees">
            <summary>
            References the 'RequiredAttendees' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.OptionalAttendees">
            <summary>
            References the 'OptionalAttendees' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Resources">
            <summary>
            References the 'Resources' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ConflictingMeetingCount">
            <summary>
            References the 'ConflictingMeetingCount' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.AdjacentMeetingCount">
            <summary>
            References the 'AdjacentMeetingCount' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ConflictingMeetings">
            <summary>
            References the 'ConflictingMeetings' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.AdjacentMeetings">
            <summary>
            References the 'AdjacentMeetings' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Duration">
            <summary>
            References the 'Duration' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.TimeZone">
            <summary>
            References the 'TimeZone' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ReplyTime">
            <summary>
            References the 'ReplyTime' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.SequenceNumber">
            <summary>
            References the 'SequenceNumber' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.State">
            <summary>
            References the 'State' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Recurrence">
            <summary>
            References the 'Recurrence' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.FirstOccurrence">
            <summary>
            References the 'FirstOccurrence' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.LastOccurrence">
            <summary>
            References the 'LastOccurrence' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ModifiedOccurrences">
            <summary>
            References the 'ModifiedOccurrences' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.DeletedOccurrences">
            <summary>
            References the 'DeletedOccurrences' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.MeetingTimeZone">
            <summary>
            References the 'MeetingTimeZone' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.StartTimeZone">
            <summary>
            References the 'StartTimeZone' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.EndTimeZone">
            <summary>
            References the 'EndTimeZone' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ConferenceType">
            <summary>
            References the 'ConferenceType' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.AllowNewTimeProposal">
            <summary>
            References the 'AllowNewTimeProposal' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.IsOnlineMeeting">
            <summary>
            References the 'IsOnlineMeeting' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.MeetingWorkspaceUrl">
            <summary>
            References the 'MeetingWorkspaceUrl' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.NetShowUrl">
            <summary>
            References the 'NetShowUrl' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.EnhancedLocation">
            <summary>
            References the 'EnhancedLocation' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.JoinOnlineMeetingUrl">
            <summary>
            References the 'JoinOnlineMeetingUrl' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.OnlineMeetingSettings">
            <summary>
            References the 'OnlineMeetingSettings' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.IsPrivate">
            <summary>
            References the 'IsPrivate' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.BusyStatus">
            <summary>
            References the 'BusyStatus' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.MeetingStatus">
            <summary>
            References the 'MeetingStatus' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ResponseStatus">
            <summary>
            References the 'ResponseStatus' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.CommonStartTime">
            <summary>
            References the 'CommonStartTime' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.CommonEndTime">
            <summary>
            References the 'CommonEndTime' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ReminderOverrideDefault">
            <summary>
            References the 'ReminderOverrideDefault' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ReminderPlaySound">
            <summary>
            References the 'ReminderPlaySound' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.ReminderSoundFile">
            <summary>
            References the 'ReminderSoundFile' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Label">
            <summary>
            References the 'Label' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.RecurrencePattern">
            <summary>
            References the 'RecurrencePattern' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.RecurrenceStart">
            <summary>
            References the 'RecurrenceStart' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.RecurrenceEnd">
            <summary>
            References the 'RecurrenceEnd' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.Priority">
            <summary>
            References the 'Priority' URL property
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AppointmentPropertyPath.BodyRtf">
            <summary>
            References the 'BodyRtf' URL property
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AppointmentPropertyPath.AllPropertyPaths">
            <summary>
            Gets all property paths.
            </summary>
            <value>All property paths.</value>
        </member>
        <member name="T:Independentsoft.Email.Mime.ContentDisposition">
            <summary>
            Class ContentDisposition.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentDisposition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.ContentDisposition"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentDisposition.#ctor(Independentsoft.Email.Mime.ContentDispositionType)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.ContentDisposition"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentDisposition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.ContentDisposition"/> class.
            </summary>
            <param name="contentDisposition">The content disposition.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentDisposition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.ContentDisposition.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.ContentDisposition.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Independentsoft.Msg.RecurrencePatternType">
            <summary>
            Enum RecurrencePatternType
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.Week">
            <summary>
            Week
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.MonthEnd">
            <summary>
            MonthEnd
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.MonthNth">
            <summary>
            MonthNth
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.HijriMonth">
            <summary>
            HijriMonth
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.HijriMonthEnd">
            <summary>
            HijriMonthEnd
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrencePatternType.HijriMonthNth">
            <summary>
            HijriMonthNth
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.PropertyType">
            <summary>
            Defines property types
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Integer16">
            <summary>
            A 16 bit integer
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Integer32">
            <summary>
            A 32 bit integer
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Floating32">
            <summary>
            A single precision floating point integer
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Floating64">
            <summary>
            A double precision floating point integer
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Currency">
            <summary>
            A 64 bit integer interpreted as decimal
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.FloatingTime">
            <summary>
            A double value that is interpreted as decimal
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.ErrorCode">
            <summary>
            An error code
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Boolean">
            <summary>
            A 16 bit boolean value, where zero equals false and non-zero equals true
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Integer64">
            <summary>
            A 64 bit integer
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Time">
            <summary>
            64 bit integer data representing a FILETIME structure
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.String">
            <summary>
            Unicode string
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Binary">
            <summary>
            A counted byte array
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.String8">
            <summary>
            ASCII string
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Guid">
            <summary>
            A guid
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.Object">
            <summary>
            An embedded object
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleInteger16">
            <summary>
            An array of 16 bit values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleInteger32">
            <summary>
            An array of 32 bit values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleFloating32">
            <summary>
            An array of single precision values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleFloating64">
            <summary>
            An array of double precision values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleCurrency">
            <summary>
            An array of currency values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleFloatingTime">
            <summary>
            An array of floating time values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleInteger64">
            <summary>
            An array of 64 bit values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleGuid">
            <summary>
            An array of guid values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleTime">
            <summary>
            An array of time values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleString">
            <summary>
            An array of Unicode values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleBinary">
            <summary>
            An array of binary data values
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.PropertyType.MultipleString8">
            <summary>
            An array of ASCII string values
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.Importance">
            <summary>
            Indicates the message sender's opinion of the importance of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Importance.Low">
            <summary>
            The message has low importance.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Importance.Normal">
            <summary>
            The message has normal importance.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Importance.High">
            <summary>
            The message has high importance.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Importance.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.ExtendedPropertyName">
            <summary>
            Class ExtendedPropertyName.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.ExtendedPropertyTag">
            <summary>
            Class ExtendedPropertyTag.
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.ExtendedPropertyTag.Guid">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.ExtendedPropertyTag.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyName.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedPropertyName"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyName.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedPropertyName"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="guid">The unique identifier.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyName.#ctor(System.String,System.Byte[],Independentsoft.Msg.PropertyType)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedPropertyName"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="guid">The unique identifier.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyName.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Msg.ExtendedPropertyName.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Independentsoft.IO.StructuredStorage.Stream">
            <summary>
            Represents a virtual stream to store data.
            </summary>
            <remarks>
            Stream is analogous to a file system file. The parent object of a stream object must be a <see cref="T:Independentsoft.IO.StructuredStorage.Storage"/> object or the <see cref="T:Independentsoft.IO.StructuredStorage.RootDirectoryEntry"/>.
            </remarks>
        </member>
        <member name="T:Independentsoft.IO.StructuredStorage.DirectoryEntry">
            <summary>
            Represents a directory entry. 
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.DirectoryEntry.CompareTo(System.Object)">
            <summary>
            Compares this instance with the specified <see cref="T:Independentsoft.IO.StructuredStorage.DirectoryEntry"/> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified DirectoryEntry.
            </summary>
            <param name="obj">A DirectoryEntry</param>
            <returns>A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the value parameter.</returns>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.DirectoryEntry.Name">
            <summary>
            Gets or sets name.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.DirectoryEntry.CreatedTime">
            <summary>
            Gets creation time.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.DirectoryEntry.LastModifiedTime">
            <summary>
            Gets last modified time.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.DirectoryEntry.Size">
            <summary>
            Gets size.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.DirectoryEntry.ClassId">
            <summary>
            Gets or sets class ID.
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.#ctor">
            <summary>
            Initializes a new instance of the Stream class.  
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Stream class and load data from the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.#ctor(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the Stream class and load data from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="name">Stream name.</param>
            <param name="stream">A stream.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the Stream class and load data from the specified buffer.
            </summary>
            <param name="name">Stream name.</param>
            <param name="buffer">Data buffer.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.Load(System.String)">
            <summary>
            Loads data to this stream from the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.Load(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Loads data to this stream from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="name">Stream name.</param>
            <param name="stream">A stream.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.Load(System.String,System.Byte[])">
            <summary>
            Loads data to this stream from the specified buffer.
            </summary>
            <param name="name">Stream name.</param>
            <param name="buffer">Data buffer.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.Save(System.String)">
            <summary>
            Saves data from this stream to to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves data from this stream to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A stream.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Stream.GetStream">
            <summary>
            Gets <see cref="T:System.IO.Stream"/> to read data from this stream. 
            </summary>
            <returns>Returns the stream of this <see cref="T:Independentsoft.IO.StructuredStorage.Stream"/></returns>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.Stream.Buffer">
            <summary>
            Gets or sets streams data.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.WeeklyRecurrencePattern">
            <summary>
            Describes a weekly recurrence pattern.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.WeeklyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the WeeklyRecurrencePattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.WeeklyRecurrencePattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the WeeklyRecurrencePattern class.
            </summary>
            <param name="interval">The week interval between two consecutive weekly recurrence pattern items. The value can be in the range from 1 to 99</param>
        </member>
        <member name="M:Independentsoft.Exchange.WeeklyRecurrencePattern.#ctor(System.Int32,System.Collections.Generic.IList{Independentsoft.Exchange.DayOfWeek})">
            <summary>
            Initializes a new instance of the WeeklyRecurrencePattern class.
            </summary>
            <param name="interval">The week interval between two consecutive weekly recurrence pattern items. The value can be in the range from 1 to 99</param>
            <param name="days">Specifies which days of the week are in the weekly recurrence pattern</param>
        </member>
        <member name="M:Independentsoft.Exchange.WeeklyRecurrencePattern.ToString">
            <summary>
            Converts the value of the current WeeklyRecurrencePattern object to its equivalent string representation. 
            </summary>
            <returns>The XML representation of the current WeeklyRecurrencePattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.WeeklyRecurrencePattern.Interval">
            <summary>
            Defines the interval, in weeks, between two consecutive weekly recurrence pattern items. The value can be in the range from 1 to 99.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.WeeklyRecurrencePattern.Days">
            <summary>
            Describes which days of the week are in the weekly recurrence pattern.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UserMailbox">
            <summary>
            Represents a user mailbox
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserMailbox.#ctor">
            <summary>
            Initializes a new instance of the UserMailbox class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserMailbox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UserMailbox class.
            </summary>
            <param name="id">The mailbox identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.UserMailbox.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the UserMailbox class.
            </summary>
            <param name="id">The mailbox identifier</param>
            <param name="isArchive">Indicates whether the mailbox is an archive mailbox. 
            Use false if the mailbox is a primary mailbox</param>
        </member>
        <member name="P:Independentsoft.Exchange.UserMailbox.Id">
            <summary>
            Gets or sets the mailbox identifier
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserMailbox.IsArchive">
            <summary>
            Indicates if this is an archive mailbox
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UnindexedPropertyPath">
            <summary>
            Identifies frequently referenced properties by URI.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UnindexedPropertyPath.#ctor">
            <summary>
            Initializes a new instance of the UnindexedPropertyPath class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UnindexedPropertyPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnindexedPropertyPath class.
            </summary>
            <param name="uri">The URI for the property</param>
        </member>
        <member name="M:Independentsoft.Exchange.UnindexedPropertyPath.ToString">
            <summary>
            Converts the value of the current UnindexedPropertyPath object to its equivalent string representation. 
            </summary>
            <returns>The XML representation of the current UnindexedPropertyPath object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.UnindexedPropertyPath.Uri">
            <summary>
            Identifies the URI of the property.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UnifiedMessaging.EventCause">
            <summary>
            Contains a value that indicates the cause for a call event in a response to a GetCallInfo Operation request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.EventCause.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.EventCause.UserBusy">
            <summary>
            UserBusy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.EventCause.NoAnswer">
            <summary>
            NoAnswer.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.EventCause.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TaskPropertyPath">
             <summary>
             Represents a task property path
             </summary>
             <example>
             The following example searches for incomplete tasks and prints the property paths
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             
             IsEqualTo restriction = new IsEqualTo(TaskPropertyPath.IsComplete, false);
             FindItemResponse response = service.FindItem(StandardFolder.Tasks, TaskPropertyPath.AllPropertyPaths, restriction);
            
             foreach (Item t in response.Items)
             {
                 if (t is Task)
                 {
                     Task task = (Task)t;
                     CrestronConsole.PrintLine("Subject = " + task.Subject);
                     CrestronConsole.PrintLine("StartDate = " + task.StartDate);
                     CrestronConsole.PrintLine("DueDate = " + task.DueDate);
                     CrestronConsole.PrintLine("Owner = " + task.Owner);
                     CrestronConsole.PrintLine("Body Preview = " + task.BodyPlainText);
                     CrestronConsole.PrintLine("----------------------------------------------------------------");
                 }
             }
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.ActualWork">
            <summary>
            Represents the actual amount of time that is spent on a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.AssignedTime">
            <summary>
            Represents the time when a task is assigned to a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.BillingInformation">
            <summary>
            Holds billing information for a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.ChangeCount">
            <summary>
            Specifies the version of the task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Companies">
            <summary>
            Represents the collection of companies that are associated with a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.CompleteDate">
            <summary>
            Represents the date on which an item was completed
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Contacts">
            <summary>
            Contains a list of contacts that are associated with a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.DelegationState">
            <summary>
            Represents the status of a delegated task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Delegator">
            <summary>
            Contains the name of the delegator who assigned the task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.DueDate">
            <summary>
            Represents the date a task is due
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.IsAssignmentEditable">
            <summary>
            Represents the task type
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Mileage">
            <summary>
            Represents mileage for a task item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.PercentComplete">
            <summary>
            Describes the completion status of a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Recurrence">
            <summary>
            Contains recurrence information for recurring tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.StartDate">
            <summary>
            Represents the start date of a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Status">
            <summary>
            Represents the status of a task item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.StatusDescription">
            <summary>
            Contains an explanation of the task status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.TotalWork">
            <summary>
            Contains a description of how much work is associated with a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.IsPrivate">
            <summary>
            Indicates whether this task is private
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.CommonStartDate">
            <summary>
            Represents the common start date of a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.CommonEndDate">
            <summary>
            Represents the common end date of a task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.ReminderOverrideDefault">
            <summary>
            Specifies whether to override the default reminder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.ReminderPlaySound">
            <summary>
            Specifies whether to play the reminder sound
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.ReminderSoundFile">
            <summary>
            Specifies the sound file to use for a reminder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.ReminderTime">
            <summary>
            Specifies the reminder time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Owner">
            <summary>
            Specifies the task owner
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.IsTeamTask">
            <summary>
            Indicates whether this is a team task
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.IsComplete">
            <summary>
            Indicates whether this task is complete
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.IsRecurring">
            <summary>
            Indicates whether this task is recurring or not
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskPropertyPath.Priority">
            <summary>
            Contains the priority of a task
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TaskPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Task">
            <summary>
            Represents a task in the Exchange store.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Task.#ctor">
            <summary>
            Initializes a new instance of the Task class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Task.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Task class.
            </summary>
            <param name="subject">The subject</param>
        </member>
        <member name="M:Independentsoft.Exchange.Task.#ctor(Independentsoft.Exchange.MimeContent)">
            <summary>
            Initializes a new instance of the Task class.
            </summary>
            <param name="mimeContent">The MIME content</param>
        </member>
        <member name="M:Independentsoft.Exchange.Task.ToString">
            <summary>
            Converts the value of the current Task object to its equivalent string representation. 
            </summary>
            <returns>The string representation of the current Task object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Task.ActualWork">
            <summary>
            Represents the actual amount of time that is spent on a task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.AssignedTime">
            <summary>
            Represents the time when a task is assigned to a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.BillingInformation">
            <summary>
            Holds billing information for a task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.ChangeCount">
            <summary>
            Specifies the version of the task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Companies">
            <summary>
            Represents the collection of companies that are associated with a contact or task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.CompleteDate">
            <summary>
            Represents the date on which a task is completed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Contacts">
            <summary>
            Contains a list of contacts that are associated with a task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.DelegationState">
            <summary>
            Represents the status of a delegated task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Delegator">
            <summary>
            Contains the name of the delegator who assigned the task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.DueDate">
            <summary>
            Represents the date when a task item is due.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.IsAssignmentEditable">
            <summary>
            Indicates whether the task is editable or not.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.IsComplete">
            <summary>
            Indicates whether the task has been completed or not.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.IsRecurring">
            <summary>
            Indicates whether a task is part of a recurring item. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.IsTeamTask">
            <summary>
            Indicates whether the task is owned by a team or not.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Mileage">
            <summary>
            Represents mileage for a task item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Owner">
            <summary>
            Represents the owner of a task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.PercentComplete">
            <summary>
            Describes the completion status of a task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Recurrence">
            <summary>
            Contains recurrence information for recurring tasks.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.StartDate">
            <summary>
            Represents the start date of a task item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Status">
            <summary>
            Represents the status of a task item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.StatusDescription">
            <summary>
            Contains an explanation of the task status.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.TotalWork">
            <summary>
            Contains a description of how much work is associated with an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.IsPrivate">
            <summary>
            Indicates whether the task item is private.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.CommonStartDate">
            <summary>
            Gets or sets the common start date for the task
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.CommonEndDate">
            <summary>
            Gets or sets the common end date for the task
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.ReminderOverrideDefault">
            <summary>
            True if the reminder overrides the default reminder behavior for the task. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.ReminderPlaySound">
            <summary>
            True if the reminder should play a sound when it occurs for this task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.ReminderSoundFile">
            <summary>
            Returns or sets a String indicating the path and file name of the sound file to play when the reminder occurs for the task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.ReminderTime">
            <summary>
            Returns or sets a Date indicating the date and time at which the reminder should occur for the specified item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Task.Priority">
            <summary>
            Contains the task's priority status.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SuggestionsViewOptions">
            <summary>
            Contains the options for obtaining meeting suggestion information.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SuggestionsViewOptions.#ctor">
            <summary>
            Initializes a new instance of the SuggestionsViewOptions class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SuggestionsViewOptions.#ctor(Independentsoft.Exchange.TimeDuration)">
            <summary>
            Initializes a new instance of the SuggestionsViewOptions class.
            </summary>
            <param name="detailedSuggestionsWindow">The time duration that is queried for detailed information about suggested meeting times</param>
        </member>
        <member name="M:Independentsoft.Exchange.SuggestionsViewOptions.#ctor(Independentsoft.Exchange.TimeDuration,System.Int32)">
            <summary>
            Initializes a new instance of the SuggestionsViewOptions class.
            </summary>
            <param name="detailedSuggestionsWindow">The time duration that is queried for detailed information about suggested meeting times</param>
            <param name="meetingDuration">The length of the meeting to be suggested</param>
        </member>
        <member name="M:Independentsoft.Exchange.SuggestionsViewOptions.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the SuggestionsViewOptions class.
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
        </member>
        <member name="M:Independentsoft.Exchange.SuggestionsViewOptions.#ctor(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the SuggestionsViewOptions class.
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="meetingDuration">The length of the meeting to be suggested</param>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.DetailedSuggestionsWindow">
            <summary>
            Identifies the time span that is queried for detailed information about suggested meeting times.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.GoodThreshold">
            <summary>
            Specifies the percentage of attendees that must have the time period open for the time period to qualify as a good suggested meeting time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.MaximumResultsByDay">
            <summary>
            Specifies the number of suggested meeting times per day returned in the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.MaximumNonWorkHourResultsByDay">
            <summary>
            Specifies the number of suggested results for meeting times outside regular working hours per day.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.MeetingDuration">
            <summary>
            Specifies the length of the meeting to be suggested.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.MinimumSuggestionQuality">
            <summary>
            Specifies the quality of meeting suggestions to be returned in the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.CurrentMeetingTime">
            <summary>
            Represents the start time of a meeting that you want to update with the suggested meeting time results.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsViewOptions.GlobalObjectId">
            <summary>
            This element is not used
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SuggestionsResponse">
            <summary>
            Contains response status information and suggestion data for requested meeting suggestions.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionsResponse.SuggestionDays">
            <summary>
            Contains a collection of meeting suggestions organized by date.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Service">
            <summary>
            Service class contains the methods to perform operations on Exchange server.
            </summary>
            <example>
            This example sends a meeting request with required and optional attendees
            <code>
            Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
            Appointment appointment = new Appointment();
            appointment.Subject = "Meeting";
            appointment.Body = new Body("Body text");
            appointment.StartTime = DateTime.Now.AddHours(2);
            appointment.EndTime = DateTime.Now.AddHours(3);
            appointment.MeetingTimeZone = new Independentsoft.Exchange.TimeZone(StandardTimeZone.Eastern);
            appointment.Location = "Room 123";
            appointment.ReminderIsSet = true;
            appointment.ReminderMinutesBeforeStart = 30;
            appointment.RequiredAttendees.Add(new Attendee("John@mydomain.com"));
            appointment.OptionalAttendees.Add(new Attendee("Administrator@mydomain.com"));
            ItemId itemId = service.SendMeetingRequest(appointment);
            </code>
            </example>
        </member>
        <member name="M:Independentsoft.Exchange.Service.#ctor">
            <summary>
            Initializes a new instance of the Service class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Service.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Service class.
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
        </member>
        <member name="M:Independentsoft.Exchange.Service.#ctor(System.String,System.Net.ICredentials)">
            <summary>
            Initializes a new instance of the Service class.
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
            <param name="credentials">Login user credentials.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Service.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Service class with the specified credentials
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
            <param name="username">The username for the Exchange server</param>
            <param name="password">The password for the Exchange server</param>
        </member>
        <member name="M:Independentsoft.Exchange.Service.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Service class with the specified credentials
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
            <param name="username">The username for the Exchange server</param>
            <param name="password">The password for the Exchange server</param>
            <param name="domain">The domain</param>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendRequest(System.String)">
            <summary>
            Sends the request.
            </summary>
            <param name="requestBody">The request body.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAvailability(Independentsoft.Exchange.MailboxData,Independentsoft.Exchange.SerializableTimeZone,Independentsoft.Exchange.SuggestionsViewOptions)">
            <summary>
            Retrieves detailed information about the availability of a set of users, rooms, and resources within the specified time window.
            </summary>
            <param name="mailbox">The attendees for which to retrieve availability information.</param>
            <param name="timeZone">The time zone in which to retrieve user availability information.</param>
            <param name="suggestionsViewOptions">The suggestions view options.</param>
            <returns>Detailed information about the availability of the specified users, rooms, and resources.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAvailability(Independentsoft.Exchange.MailboxData,Independentsoft.Exchange.SerializableTimeZone,Independentsoft.Exchange.FreeBusyViewOptions)">
            <summary>
            Retrieves detailed information about the availability of a set of users, rooms, and resources within the specified time window.
            </summary>
            <param name="mailbox">The attendee for which to retrieve availability information.</param>
            <param name="timeZone">The time zone in which to retrieve user availability information.</param>
            <param name="freeBusyViewOptions">The free busy view options.</param>
            <returns>Detailed information about the availability of the specified users, rooms, and resources.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAvailability(Independentsoft.Exchange.MailboxData,Independentsoft.Exchange.SerializableTimeZone,Independentsoft.Exchange.FreeBusyViewOptions,Independentsoft.Exchange.SuggestionsViewOptions)">
            <summary>
            Retrieves detailed information about the availability of a set of users, rooms, and resources within the specified time window.
            </summary>
            <param name="mailbox">The attendee for which to retrieve availability information.</param>
            <param name="timeZone">The time zone in which to retrieve user availability information.</param>
            <param name="freeBusyViewOptions">The free busy view options.</param>
            <param name="suggestionsViewOptions">The suggestions view options.</param>
            <returns>Detailed information about the availability of the specified users, rooms, and resources.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAvailability(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxData},Independentsoft.Exchange.SerializableTimeZone,Independentsoft.Exchange.SuggestionsViewOptions)">
            <summary>
            Retrieves detailed information about the availability of a set of users, rooms, and resources within the specified time window.
            </summary>
            <param name="mailboxes">The attendees for which to retrieve availability information.</param>
            <param name="timeZone">The time zone in which to retrieve user availability information.</param>
            <param name="suggestionsViewOptions">The suggestions view options.</param>
            <returns>Detailed information about the availability of the specified users, rooms, and resources.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAvailability(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxData},Independentsoft.Exchange.SerializableTimeZone,Independentsoft.Exchange.FreeBusyViewOptions)">
            <summary>
            Retrieves detailed information about the availability of a set of users, rooms, and resources within the specified time window.
            </summary>
            <param name="mailboxes">The attendees for which to retrieve availability information.</param>
            <param name="timeZone">The time zone in which to retrieve user availability information.</param>
            <param name="freeBusyViewOptions">The free busy view options.</param>
            <returns>Detailed information about the availability of the specified users, rooms, and resources.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAvailability(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxData},Independentsoft.Exchange.SerializableTimeZone,Independentsoft.Exchange.FreeBusyViewOptions,Independentsoft.Exchange.SuggestionsViewOptions)">
            <summary>
            Retrieves detailed information about the availability of a set of users, rooms, and resources within the specified time window.
            </summary>
            <param name="mailboxes">The attendees for which to retrieve availability information.</param>
            <param name="timeZone">The time zone in which to retrieve user availability information.</param>
            <param name="freeBusyViewOptions">The free busy view options.</param>
            <param name="suggestionsViewOptions">The suggestions view options.</param>
            <returns>Detailed information about the availability of the specified users, rooms, and resources.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAvailabilityImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxData},Independentsoft.Exchange.SerializableTimeZone,Independentsoft.Exchange.FreeBusyViewOptions,Independentsoft.Exchange.SuggestionsViewOptions)">
            <summary>
            Gets the availability implementation.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="timeZone">The time zone.</param>
            <param name="freeBusyViewOptions">The free busy view options.</param>
            <param name="suggestionsViewOptions">The suggestions view options.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            mailboxes
            or
            timeZone
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOutOfOffice(System.String)">
            <summary>
            Gets Out of Office settings for the specified mailbox.
            </summary>
            <param name="emailAddress">The SMTP address of the user for which to retrieve OOF settings.</param>
            <returns>The OOF settings for the specified mailbox.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOutOfOffice(Independentsoft.Exchange.EmailAddress)">
            <summary>
            Gets Out of Office settings for the specified mailbox.
            </summary>
            <param name="emailAddress">The SMTP address of the user for which to retrieve OOF settings.</param>
            <returns>The OOF settings for the specified mailbox.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOutOfOfficeImplementation(Independentsoft.Exchange.EmailAddress)">
            <summary>
            Gets the out of office implementation.
            </summary>
            <param name="emailAddress">The email address.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">emailAddress</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetOutOfOffice(Independentsoft.Exchange.OutOfOffice,System.String)">
            <summary>
            Sets the Out of Office settings for a specific mailbox.
            </summary>
            <param name="outOfOffice">The OOF settings.</param>
            <param name="emailAddress">The SMTP address of the user for which to set OOF settings.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetOutOfOffice(Independentsoft.Exchange.OutOfOffice,Independentsoft.Exchange.EmailAddress)">
            <summary>
            Sets the Out of Office settings for a specific mailbox.
            </summary>
            <param name="outOfOffice">The OOF settings.</param>
            <param name="emailAddress">The SMTP address of the user for which to set OOF settings.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetOutOfOfficeImplementation(Independentsoft.Exchange.OutOfOffice,Independentsoft.Exchange.EmailAddress)">
            <summary>
            Sets the out of office implementation.
            </summary>
            <param name="outOfOffice">The out of office.</param>
            <param name="emailAddress">The email address.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            outOfOffice
            or
            emailAddress
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseSendNotificationResponse(System.Byte[])">
            <summary>
            Parses the send notification response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>SendNotificationResponse.</returns>
            <exception cref="T:System.ArgumentNullException">buffer</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetEvents(Independentsoft.Exchange.SubscribeResponse)">
            <summary>
            Gets events that have occurred in a mailbox since the last notification.
            </summary>
            <param name="subscribeResponse">The subscribe response.</param>
            <returns>A collection of notification events.</returns>
            <exception cref="T:System.ArgumentNullException">subscribeResponse</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetEvents(System.String,System.String)">
            <summary>
            Gets events that have occurred in a mailbox since the specified notification.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="watermark">The watermark.</param>
            <returns>A collection of notification events.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetEventsImplementation(System.String,System.String)">
            <summary>
            Gets the events implementation.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="watermark">The watermark.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            subscriptionId
            or
            watermark
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetStreamingEvents(System.String)">
            <summary>
            Gets the streaming events.
            </summary>
            <param name="subscriptionIds">The subscription ids.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetStreamingEvents(System.String,System.Int32)">
            <summary>
            Gets the streaming events.
            </summary>
            <param name="subscriptionIds">The subscription ids.</param>
            <param name="connectionTimeout">The connection timeout.</param>
            <returns>Stream.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetStreamingEvents(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets the streaming events.
            </summary>
            <param name="subscriptionIds">The subscription ids.</param>
            <returns>Stream.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetStreamingEvents(System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            Gets the streaming events.
            </summary>
            <param name="subscriptionIds">The subscription ids.</param>
            <param name="connectionTimeout">The connection timeout.</param>
            <returns>Stream.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetStreamingEventsImplementation(System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            Gets the streaming events implementation.
            </summary>
            <param name="subscriptionIds">The subscription ids.</param>
            <param name="connectionTimeout">The connection timeout.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">subscriptionIds</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Unsubscribe(System.String)">
            <summary>
            Removes notification subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UnsubscribeImplementation(System.String)">
            <summary>
            Unsubscribes the implementation.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">subscriptionId</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Subscribe(Independentsoft.Exchange.Subscription)">
            <summary>
            Subscribes to notifications.
            </summary>
            <param name="subscription">The subscription.</param>
            <returns>SubscribeResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SubscribeImplementation(Independentsoft.Exchange.Subscription)">
            <summary>
            Subscribes the implementation.
            </summary>
            <param name="subscription">The subscription.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">subscription</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendNotificationResult(Independentsoft.Exchange.SubscriptionStatus)">
            <summary>
            Sends the notification result.
            </summary>
            <param name="status">The status.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendNotificationResultImplementation(Independentsoft.Exchange.SubscriptionStatus)">
            <summary>
            Sends the notification result implementation.
            </summary>
            <param name="status">The status.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String,System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String,System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.String)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.String,System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,System.String)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,System.String,System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.String)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.String,System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.String)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The ignore items.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.String,System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItems(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32,Independentsoft.Exchange.SyncItemsScope)">
            <summary>
            Synchronizes the items of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the items to synchronize with.</param>
            <param name="itemShape">The collection of properties to retrieve for synchronized items.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <param name="ignoreItems">The optional list of item IDs that should be ignored.</param>
            <param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
            <param name="scope">The scope.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncItemsImplementation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Int32,Independentsoft.Exchange.SyncItemsScope)">
            <summary>
            Synchronizes the items implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="itemShape">The item shape.</param>
            <param name="state">The state.</param>
            <param name="ignoreItems">The ignore items.</param>
            <param name="maxChangesReturned">The maximum changes returned.</param>
            <param name="scope">The scope.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">folderId</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the folders to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized folders.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the folders to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized folders.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Synchronizes the entire folder hierarchy of the mailbox that this service is connected to.
            </summary>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized folders.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String)">
            <summary>
            Synchronizes the entire folder hierarchy of the mailbox that this service is connected to.
            </summary>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized folders.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the folders to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized folders.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.String)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the folders to synchronize with.</param>
            <param name="propertyPaths">The collection of properties to retrieve for synchronized folders.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the folders to synchronize with.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.StandardFolder,System.String)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the folders to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the folders to synchronize with.</param>
            <param name="folderShape">The collection of properties to retrieve for synchronized folders.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,System.String)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="standardFolder">The StandardFolder that contains the folders to synchronize with.</param>
            <param name="folderShape">The collection of properties to retrieve for synchronized folders.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders">
            <summary>
            Synchronizes the entire folder hierarchy of the mailbox that this service is connected to.
            </summary>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(System.String)">
            <summary>
            Synchronizes the entire folder hierarchy of the mailbox that this service is connected to.
            </summary>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderId)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the folders to synchronize with.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderId,System.String)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the folders to synchronize with.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderShape)">
            <summary>
            Synchronizes the entire folder hierarchy of the mailbox that this service is connected to.
            </summary>
            <param name="folderShape">The collection of properties to retrieve for synchronized folders.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderShape,System.String)">
            <summary>
            Synchronizes the entire folder hierarchy of the mailbox that this service is connected to.
            </summary>
            <param name="folderShape">The collection of properties to retrieve for synchronized folders.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the folders to synchronize with.</param>
            <param name="folderShape">The collection of properties to retrieve for synchronized folders.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFolders(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,System.String)">
            <summary>
            Synchronizes the subfolders of a specific folder.
            </summary>
            <param name="folderId">The ID of the folder that contains the folders to synchronize with.</param>
            <param name="folderShape">The collection of properties to retrieve for synchronized folders.</param>
            <param name="state">The optional sync state that represents the point in time to start the synchronization.</param>
            <returns>A list of changes that occurred in the specified folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SyncFoldersImplementation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,System.String)">
            <summary>
            Synchronizes the folders implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="folderShape">The folder shape.</param>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ExpandDistributionList(Independentsoft.Exchange.ItemId)">
            <summary>
            Expands a distribution list identified by the ItemId.
            </summary>
            <param name="itemId">The ItemId of the distribution list to expand.</param>
            <returns>The distribution list members.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ExpandDistributionList(System.String)">
            <summary>
            Expands a distribution list identified by the SMTP address.
            </summary>
            <param name="emailAddress">The SMTP address of the distribution list to expand.</param>
            <returns>The distribution list members.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ExpandDistributionList(Independentsoft.Exchange.Mailbox)">
            <summary>
            Expands a distribution list identified by the mailbox.
            </summary>
            <param name="mailbox">The mailbox of the distribution list to expand.</param>
            <returns>The distribution list members.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ExpandDistributionListImplementation(Independentsoft.Exchange.Mailbox)">
            <summary>
            Expands the distribution list implementation.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddDelegate(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.DelegateUser)">
            <summary>
            Adds delegate to a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to add delegates to.</param>
            <param name="delegateUser">The delegate user to add.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddDelegate(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.DelegateUser,Independentsoft.Exchange.DeliverMeetingRequests)">
            <summary>
            Adds delegate to a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to add delegates to.</param>
            <param name="delegateUser">The delegate user to add.</param>
            <param name="deliverMeetingRequests">Indicates how meeting requests should be sent to delegates.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddDelegate(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.DelegateUser})">
            <summary>
            Adds delegates to a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to add delegates to.</param>
            <param name="delegateUsers">The delegate users to add.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddDelegate(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.DelegateUser},Independentsoft.Exchange.DeliverMeetingRequests)">
            <summary>
            Adds delegates to a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to add delegates to.</param>
            <param name="delegateUsers">The delegate users to add.</param>
            <param name="deliverMeetingRequests">Indicates how meeting requests should be sent to delegates.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddDelegateImplementation(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.DelegateUser},Independentsoft.Exchange.DeliverMeetingRequests)">
            <summary>
            Adds the delegate implementation.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="delegateUsers">The delegate users.</param>
            <param name="deliverMeetingRequests">The deliver meeting requests.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            mailbox
            or
            delegateUsers
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateDelegate(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.DelegateUser)">
            <summary>
            Updates delegates on a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to update delegates on.</param>
            <param name="delegateUser">The delegate user to update.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateDelegate(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.DelegateUser,Independentsoft.Exchange.DeliverMeetingRequests)">
            <summary>
            Updates delegates on a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to update delegates on.</param>
            <param name="delegateUser">The delegate user to update.</param>
            <param name="deliverMeetingRequests">Indicates how meeting requests should be sent to delegates.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateDelegate(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.DelegateUser})">
            <summary>
            Updates delegates on a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to update delegates on.</param>
            <param name="delegateUsers">The delegate users to update.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateDelegate(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.DelegateUser},Independentsoft.Exchange.DeliverMeetingRequests)">
            <summary>
            Updates delegates on a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to update delegates on.</param>
            <param name="delegateUsers">The delegate users to update.</param>
            <param name="deliverMeetingRequests">Indicates how meeting requests should be sent to delegates.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateDelegateImplementation(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.DelegateUser},Independentsoft.Exchange.DeliverMeetingRequests)">
            <summary>
            Updates the delegate implementation.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="delegateUsers">The delegate users.</param>
            <param name="deliverMeetingRequests">The deliver meeting requests.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            mailbox
            or
            delegateUsers
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveDelegate(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.UserId)">
            <summary>
            Removes delegate on a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to remove delegates from.</param>
            <param name="userId">The ID of the delegate users to remove.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveDelegate(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.UserId})">
            <summary>
            Removes delegates on a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to remove delegates from.</param>
            <param name="users">The IDs of the delegate users to remove.</param>
            <returns>A collection of objects that provides the results of the operation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveDelegateImplementation(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.UserId})">
            <summary>
            Removes the delegate implementation.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="users">The users.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            mailbox
            or
            users
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDelegate(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.UserId)">
            <summary>
            Retrieves the delegates of a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to retrieve the delegates of.</param>
            <param name="userId">The ID of the delegate user to retrieve.</param>
            <returns>A list of delegates for the mailbox.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDelegate(Independentsoft.Exchange.Mailbox,System.Boolean,Independentsoft.Exchange.UserId)">
            <summary>
            Retrieves the delegates of a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to retrieve the delegates of.</param>
            <param name="includePermissions">Indicates whether detailed permissions should be returned for each delegate.</param>
            <param name="userId">The ID of the delegate user to retrieve.</param>
            <returns>A list of delegates for the mailbox.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDelegate(Independentsoft.Exchange.Mailbox)">
            <summary>
            Retrieves the delegates of a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to retrieve the delegates of.</param>
            <returns>A list of delegates for the mailbox.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDelegate(Independentsoft.Exchange.Mailbox,System.Boolean)">
            <summary>
            Gets the delegate.
            </summary>
            <param name="mailbox">The mailbox to retrieve the delegates of.</param>
            <param name="includePermissions">Indicates whether detailed permissions should be returned for each delegate.</param>
            <returns>A list of delegates for the mailbox.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDelegate(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.UserId})">
            <summary>
            Retrieves the delegates of a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to retrieve the delegates of.</param>
            <param name="users">The IDs of the delegate users to retrieve.</param>
            <returns>DelegateResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDelegate(Independentsoft.Exchange.Mailbox,System.Boolean,System.Collections.Generic.IList{Independentsoft.Exchange.UserId})">
            <summary>
            Retrieves the delegates of a specific mailbox.
            </summary>
            <param name="mailbox">The mailbox to retrieve the delegates of.</param>
            <param name="includePermissions">Indicates whether detailed permissions should be returned for each delegate.</param>
            <param name="users">The IDs of the delegate users to retrieve.</param>
            <returns>A list of delegates for the mailbox.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDelegateImplementation(Independentsoft.Exchange.Mailbox,System.Boolean,System.Collections.Generic.IList{Independentsoft.Exchange.UserId})">
            <summary>
            Gets the delegate implementation.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="includePermissions">if set to <c>true</c> [include permissions].</param>
            <param name="users">The users.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">mailbox</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServiceConfiguration(Independentsoft.Exchange.ServiceConfigurationType)">
            <summary>
            Gets configuration settings for the Unified Messaging, Protection Rules, and Mail Tips services.
            </summary>
            <param name="serviceConfigurationType">Type of the service configuration.</param>
            <returns>ServiceConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServiceConfiguration(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.ServiceConfigurationType)">
            <summary>
            Gets configuration settings for the Unified Messaging, Protection Rules, and Mail Tips services.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="serviceConfigurationType">Type of the service configuration.</param>
            <returns>ServiceConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServiceConfiguration(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.ServiceConfigurationType})">
            <summary>
            Gets configuration settings for the Unified Messaging, Protection Rules, and Mail Tips services.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="serviceConfigurationTypes">The service configuration types.</param>
            <returns>ServiceConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServiceConfigurationImplementation(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.ServiceConfigurationType})">
            <summary>
            Gets the service configuration implementation.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="serviceConfigurationTypes">The service configuration types.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRoomLists">
            <summary>
            Retrieves a collection of all room lists in the organization.
            </summary>
            <returns>All the room lists in the organization.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRoomListsImplementation">
            <summary>
            Gets the room lists implementation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRooms(Independentsoft.Exchange.Mailbox)">
            <summary>
            Retrieves a collection of all rooms in the specified room list in the organization.
            </summary>
            <param name="mailbox">The mailbox of the room list.</param>
            <returns>All the rooms within the specified room list.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRoomsImplementation(Independentsoft.Exchange.Mailbox)">
            <summary>
            Gets the rooms implementation.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRules">
            <summary>
            Retrieves a collection of Inbox rules that are associated with the authenticated user.
            </summary>
            <returns>A collection of the user's Inbox rules.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRules(System.String)">
            <summary>
            Retrieves a collection of Inbox rules.
            </summary>
            <param name="smtpEmailAddress">The SMTP address of the user whose Inbox rules are to be retrieved.</param>
            <returns>A collection of the user's Inbox rules.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRulesImplementation(System.String)">
            <summary>
            Gets the rules implementation.
            </summary>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPasswordExpirationDate(System.String)">
            <summary>
            Gets password expiration date.
            </summary>
            <param name="smtpEmailAddress">The SMTP address of the user.</param>
            <returns>Password expiration date.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPasswordExpirationDateImplementation(System.String)">
            <summary>
            Gets the password expiration date implementation.
            </summary>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServerTimeZones">
            <summary>
            Gets information from time zone definitions that are available on the Exchange server.
            </summary>
            <returns>GetServerTimeZonesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServerTimeZones(System.Boolean)">
            <summary>
            Gets information from time zone definitions that are available on the Exchange server.
            </summary>
            <param name="returnFullTimeZoneData">If true return the complete definitions for each time zone. If false return only the name and identifier for each time zone.</param>
            <returns>GetServerTimeZonesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServerTimeZones(System.String)">
            <summary>
            Gets information from time zone definitions that are available on the Exchange server.
            </summary>
            <param name="timeZoneId">The time zone definition identifier that specifies the requested time zone definitions.</param>
            <returns>GetServerTimeZonesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServerTimeZones(System.String,System.Boolean)">
            <summary>
            Gets information from time zone definitions that are available on the Exchange server.
            </summary>
            <param name="timeZoneId">The time zone identifier.</param>
            <param name="returnFullTimeZoneData">If true return the complete definitions for each time zone. If false return only the name and identifier for each time zone.</param>
            <returns>GetServerTimeZonesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServerTimeZones(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets information from time zone definitions that are available on the Exchange server.
            </summary>
            <param name="timeZoneId">An array of time zone definition identifiers that specifies the requested time zone definitions.</param>
            <returns>GetServerTimeZonesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServerTimeZones(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            Gets information from time zone definitions that are available on the Exchange server.
            </summary>
            <param name="timeZoneId">An array of time zone definition identifiers that specifies the requested time zone definitions.</param>
            <param name="returnFullTimeZoneData">If true return the complete definitions for each time zone. If false return only the name and identifier for each time zone.</param>
            <returns>GetServerTimeZonesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetServerTimeZonesImplementation(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            Gets the server time zones implementation.
            </summary>
            <param name="timeZoneId">The time zone identifier.</param>
            <param name="returnFullTimeZoneData">if set to <c>true</c> [return full time zone data].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,System.String)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <param name="subject">The subject.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,System.String,System.DateTime)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <param name="subject">The subject.</param>
            <param name="startTime">The start time.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,System.String,System.DateTime,System.DateTime)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <param name="subject">The subject.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <param name="subject">The subject.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="messageId">The message identifier.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,System.String,System.DateTime,System.DateTime,System.String,Independentsoft.Exchange.Mailbox)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <param name="subject">The subject.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="messageId">The message identifier.</param>
            <param name="federatedDeliveryMailbox">The federated delivery mailbox.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,System.String,System.DateTime,System.DateTime,System.String,Independentsoft.Exchange.Mailbox,System.String)">
            <summary>
            Finds messages that meet the specified criteria.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <param name="subject">The subject.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="messageId">The message identifier.</param>
            <param name="federatedDeliveryMailbox">The federated delivery mailbox.</param>
            <param name="diagnosticsLevel">The diagnostics level.</param>
            <returns>FindMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMessageTrackingReportImplementation(Independentsoft.Exchange.MessageTrackingScope,System.String,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.Mailbox,System.String,System.DateTime,System.DateTime,System.String,Independentsoft.Exchange.Mailbox,System.String)">
            <summary>
            Finds the message tracking report implementation.
            </summary>
            <param name="scope">The scope.</param>
            <param name="domain">The domain.</param>
            <param name="sender">The sender.</param>
            <param name="purportedSender">The purported sender.</param>
            <param name="recipient">The recipient.</param>
            <param name="subject">The subject.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="messageId">The message identifier.</param>
            <param name="federatedDeliveryMailbox">The federated delivery mailbox.</param>
            <param name="diagnosticsLevel">The diagnostics level.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,Independentsoft.Exchange.MessageTrackingReportTemplate,System.String)">
            <summary>
            Gets tracking information about the specified messages.
            </summary>
            <param name="scope">The scope.</param>
            <param name="template">The template.</param>
            <param name="messageTrackingReportId">The message tracking report identifier.</param>
            <returns>GetMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,Independentsoft.Exchange.MessageTrackingReportTemplate,System.String,Independentsoft.Exchange.Mailbox)">
            <summary>
            Gets tracking information about the specified messages.
            </summary>
            <param name="scope">The scope.</param>
            <param name="template">The template.</param>
            <param name="messageTrackingReportId">The message tracking report identifier.</param>
            <param name="recipientFilter">The recipient filter.</param>
            <returns>GetMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,Independentsoft.Exchange.MessageTrackingReportTemplate,System.String,Independentsoft.Exchange.Mailbox,System.Boolean)">
            <summary>
            Gets tracking information about the specified messages.
            </summary>
            <param name="scope">The scope.</param>
            <param name="template">The template.</param>
            <param name="messageTrackingReportId">The message tracking report identifier.</param>
            <param name="recipientFilter">The recipient filter.</param>
            <param name="returnQueueEvents">if set to <c>true</c> [return queue events].</param>
            <returns>GetMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageTrackingReport(Independentsoft.Exchange.MessageTrackingScope,Independentsoft.Exchange.MessageTrackingReportTemplate,System.String,Independentsoft.Exchange.Mailbox,System.Boolean,System.String)">
            <summary>
            Gets tracking information about the specified messages.
            </summary>
            <param name="scope">The scope.</param>
            <param name="template">The template.</param>
            <param name="messageTrackingReportId">The message tracking report identifier.</param>
            <param name="recipientFilter">The recipient filter.</param>
            <param name="returnQueueEvents">if set to <c>true</c> [return queue events].</param>
            <param name="diagnosticsLevel">The diagnostics level.</param>
            <returns>GetMessageTrackingReportResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageTrackingReportImplementation(Independentsoft.Exchange.MessageTrackingScope,Independentsoft.Exchange.MessageTrackingReportTemplate,System.String,Independentsoft.Exchange.Mailbox,System.Boolean,System.String)">
            <summary>
            Gets the message tracking report implementation.
            </summary>
            <param name="scope">The scope.</param>
            <param name="template">The template.</param>
            <param name="messageTrackingReportId">The message tracking report identifier.</param>
            <param name="recipientFilter">The recipient filter.</param>
            <param name="returnQueueEvents">if set to <c>true</c> [return queue events].</param>
            <param name="diagnosticsLevel">The diagnostics level.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSharingFolder(System.String,Independentsoft.Exchange.SharingDataType)">
            <summary>
            Gets the local folder identifier of the specified shared folder.
            </summary>
            <param name="smtpAddress">The SMTP address.</param>
            <param name="type">The type.</param>
            <returns>GetSharingFolderResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSharingFolder(System.String,System.String)">
            <summary>
            Gets the local folder identifier of the specified shared folder.
            </summary>
            <param name="smtpAddress">The SMTP address.</param>
            <param name="sharedFolderId">The shared folder identifier.</param>
            <returns>GetSharingFolderResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSharingFolder(System.String,Independentsoft.Exchange.SharingDataType,System.String)">
            <summary>
            Gets the local folder identifier of the specified shared folder.
            </summary>
            <param name="smtpAddress">The SMTP address.</param>
            <param name="type">The type.</param>
            <param name="sharedFolderId">The shared folder identifier.</param>
            <returns>GetSharingFolderResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSharingFolderImplementation(System.String,Independentsoft.Exchange.SharingDataType,System.String)">
            <summary>
            Gets the sharing folder implementation.
            </summary>
            <param name="smtpAddress">The SMTP address.</param>
            <param name="type">The type.</param>
            <param name="sharedFolderId">The shared folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSharingMetadata(Independentsoft.Exchange.FolderId,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Gets an opaque authentication token that identifies the sharing invitation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="senderSmtpAddress">The sender SMTP address.</param>
            <param name="recipients">The recipients.</param>
            <returns>GetSharingMetadataResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSharingMetadataImplementation(Independentsoft.Exchange.FolderId,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Gets the sharing metadata implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="senderSmtpAddress">The sender SMTP address.</param>
            <param name="recipients">The recipients.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RefreshSharingFolder(Independentsoft.Exchange.FolderId)">
            <summary>
            Refreshes the specified local folder with the latest data from the folder that is being shared.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RefreshSharingFolderImplementation(Independentsoft.Exchange.FolderId)">
            <summary>
            Refreshes the sharing folder implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMailTips(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.Mailbox})">
            <summary>
            Gets the mail tips information for the specified mailbox.
            </summary>
            <param name="sender">The sender.</param>
            <param name="recipients">The recipients.</param>
            <returns>GetMailTipsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMailTips(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.Mailbox},Independentsoft.Exchange.MailTipType)">
            <summary>
            Gets the mail tips information for the specified mailbox.
            </summary>
            <param name="sender">The sender.</param>
            <param name="recipients">The recipients.</param>
            <param name="type">The type.</param>
            <returns>GetMailTipsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMailTipsImplementation(Independentsoft.Exchange.Mailbox,System.Collections.Generic.IList{Independentsoft.Exchange.Mailbox},Independentsoft.Exchange.MailTipType)">
            <summary>
            Gets the mail tips implementation.
            </summary>
            <param name="sender">The sender.</param>
            <param name="recipients">The recipients.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetUserConfiguration(Independentsoft.Exchange.UserConfigurationName)">
            <summary>
            Gets a user configuration object from a folder.
            </summary>
            <param name="name">The name.</param>
            <returns>GetUserConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetUserConfiguration(Independentsoft.Exchange.UserConfigurationName,Independentsoft.Exchange.UserConfigurationProperty)">
            <summary>
            Gets a user configuration object from a folder.
            </summary>
            <param name="name">The name.</param>
            <param name="property">The property.</param>
            <returns>GetUserConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetUserConfigurationImplementation(Independentsoft.Exchange.UserConfigurationName,Independentsoft.Exchange.UserConfigurationProperty)">
            <summary>
            Gets the user configuration implementation.
            </summary>
            <param name="name">The name.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateUserConfiguration(Independentsoft.Exchange.UserConfiguration)">
            <summary>
            Creates a user configuration object on a folder.
            </summary>
            <param name="userConfiguration">The user configuration.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateUserConfigurationImplementation(Independentsoft.Exchange.UserConfiguration)">
            <summary>
            Creates the user configuration implementation.
            </summary>
            <param name="userConfiguration">The user configuration.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateUserConfiguration(Independentsoft.Exchange.UserConfiguration)">
            <summary>
            Updates a user configuration object on a folder.
            </summary>
            <param name="userConfiguration">The user configuration.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateUserConfigurationConfigurationImplementation(Independentsoft.Exchange.UserConfiguration)">
            <summary>
            Updates the user configuration configuration implementation.
            </summary>
            <param name="userConfiguration">The user configuration.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteUserConfiguration(Independentsoft.Exchange.UserConfigurationName)">
            <summary>
            Deletes a user configuration object on a folder.
            </summary>
            <param name="name">The name.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteUserConfigurationConfigurationImplementation(Independentsoft.Exchange.UserConfigurationName)">
            <summary>
            Deletes the user configuration configuration implementation.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ConvertId(Independentsoft.Exchange.SourceId,Independentsoft.Exchange.IdFormat)">
            <summary>
            Converts an ID from one format to another format.
            </summary>
            <param name="sourceId">The ID to convert.</param>
            <param name="destinationFormat">The destination format.</param>
            <returns>ConvertIdResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ConvertId(System.Collections.Generic.IList{Independentsoft.Exchange.SourceId},Independentsoft.Exchange.IdFormat)">
            <summary>
            Converts IDs from one format to another format.
            </summary>
            <param name="sourceIds">The IDs to convert.</param>
            <param name="destinationFormat">The destination format.</param>
            <returns>IList{ConvertIdResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ConvertIdImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.SourceId},Independentsoft.Exchange.IdFormat)">
            <summary>
            Converts the identifier implementation.
            </summary>
            <param name="sourceIds">The source ids.</param>
            <param name="destinationFormat">The destination format.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">sourceIds</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,Independentsoft.Exchange.FolderId)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="parentFolderId">The ID of the contact folder in which to look for matching contacts.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,System.Boolean)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="returnFullContactData">Indicates whether full contact information should be returned for each of the found contacts.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,Independentsoft.Exchange.ResolveNamesSearchScope)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="searchScope">The scope of the search.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,Independentsoft.Exchange.FolderId,System.Boolean)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="parentFolderId">The ID of the contact folder in which to look for matching contacts.</param>
            <param name="returnFullContactData">Indicates whether full contact information should be returned for each of the found contacts.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ResolveNamesSearchScope)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="parentFolderId">The ID of the contact folder in which to look for matching contacts.</param>
            <param name="searchScope">The scope of the search.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,System.Boolean,Independentsoft.Exchange.ResolveNamesSearchScope)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="returnFullContactData">Indicates whether full contact information should be returned for each of the found contacts.</param>
            <param name="searchScope">The scope of the search.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,System.Boolean,Independentsoft.Exchange.ResolveNamesSearchScope,Independentsoft.Exchange.ContactDataShapeType)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="returnFullContactData">Indicates whether full contact information should be returned for each of the found contacts.</param>
            <param name="searchScope">The scope of the search.</param>
            <param name="contactDataShape">Identifies the property set returned for contacts.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,Independentsoft.Exchange.FolderId,System.Boolean,Independentsoft.Exchange.ResolveNamesSearchScope)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="parentFolderId">The ID of the contact folder in which to look for matching contacts.</param>
            <param name="returnFullContactData">Indicates whether full contact information should be returned for each of the found contacts.</param>
            <param name="searchScope">The scope of the search.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNames(System.String,Independentsoft.Exchange.FolderId,System.Boolean,Independentsoft.Exchange.ResolveNamesSearchScope,Independentsoft.Exchange.ContactDataShapeType)">
            <summary>
            Finds contacts in the Global Address List (GAL) and/or in specific contact folders that have names that match the one passed as a parameter.
            </summary>
            <param name="name">The name to resolve.</param>
            <param name="parentFolderId">The ID of the contact folder in which to look for matching contacts.</param>
            <param name="returnFullContactData">Indicates whether full contact information should be returned for each of the found contacts.</param>
            <param name="searchScope">The scope of the search.</param>
            <param name="contactDataShape">Identifies the property set returned for contacts.</param>
            <returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ResolveNamesImplementation(System.String,Independentsoft.Exchange.FolderId,System.Boolean,Independentsoft.Exchange.ResolveNamesSearchScope,Independentsoft.Exchange.ContactDataShapeType)">
            <summary>
            Resolves the names implementation.
            </summary>
            <param name="name">The name.</param>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="returnFullContactData">if set to <c>true</c> [return full contact data].</param>
            <param name="searchScope">The search scope.</param>
            <param name="contactDataShape">Identifies the property set returned for contacts.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="standardFolder">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds the item.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolderId">The identifier of the folder in which to search for items.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyPaths">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,Independentsoft.Exchange.PropertyOrder,Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindItem(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IGroupBy,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.View,Independentsoft.Exchange.ItemQueryTraversal,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds items in the specified folder.
            </summary>
            <param name="parentFolders">Identifies which folders are searched.</param>
            <param name="itemShape">The list of item's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the items that are returned in the result set.</param>
            <param name="groupBy">Specifies how items are grouped in the result set.</param>
            <param name="propertyOrder">Identifies how the items are ordered in the results set.</param>
            <param name="view">The view settings that control the number of items that are returned in the results.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <param name="queryString">The query string.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolderPath(System.Collections.Generic.IList{Independentsoft.Exchange.Folder},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates the folder path.
            </summary>
            <param name="folders">The folders.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolderPath(System.Collections.Generic.IList{Independentsoft.Exchange.Folder},Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the folder path.
            </summary>
            <param name="folders">The folders.</param>
            <param name="parentFolderId">The parent folder identifier.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolderPathImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.Folder},Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the folder path implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="parentFolderId">The parent folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPersona(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets the persona.
            </summary>
            <param name="personaId">The persona identifier.</param>
            <returns>Persona.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPersonaImplementation(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets the persona implementation.
            </summary>
            <param name="personaId">The persona identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">personaId</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="restriction">The restriction.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="restriction">The restriction.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeople(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns>FindPeopleResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindPeopleImplementation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PersonaShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.IndexedPageView,System.String)">
            <summary>
            Finds the people implementation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="aggregationRestriction">The aggregation restriction.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="view">The view.</param>
            <param name="query">The query.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">parentFolderId</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="standardFolder">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolderId">The ID of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="propertyPaths">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds subfolders of the specified folder.
            </summary>
            <param name="parentFolders">The IDs of the folder in which to search for folders.</param>
            <param name="folderShape">The list of folder's properties to return.</param>
            <param name="restriction">Identifies a set of parameters that define a filter on the folders that are returned in the result set.</param>
            <param name="view">The view that controls the number of folders that are returned.</param>
            <param name="traversal">Identifies how the search is performed in the folders.</param>
            <returns>The results of the search.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindFolderImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.PageView,Independentsoft.Exchange.FolderQueryTraversal)">
            <summary>
            Finds the folder implementation.
            </summary>
            <param name="parentFolders">The parent folders.</param>
            <param name="folderShape">The folder shape.</param>
            <param name="restriction">The restriction.</param>
            <param name="view">The view.</param>
            <param name="traversal">The traversal.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">parentFolders</exception>
            <exception cref="T:System.ArgumentException">ParentFolders is not specified.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(Independentsoft.Exchange.ItemId)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemId">The ID of the item to delete.</param>
            <returns>Deletion result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.DeleteType)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemId">The ID of the item to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <returns>Deletion result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemId">The ID of the item to delete.</param>
            <param name="sendMeetingInvitations">Indicates whether cancellation messages should be sent.</param>
            <returns>Deletion result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.DeleteType,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemId">The ID of the item to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="sendMeetingInvitations">Indicates whether cancellation messages should be sent.</param>
            <returns>Deletion result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.AffectedTaskOccurrences)">
            <summary>
            Deletes the item.
            </summary>
            <param name="itemId">The ID of the item to delete.</param>
            <param name="affectedTaskOccurrences">Indicates which instance of a recurring task should be deleted.</param>
            <returns>Deletion result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.DeleteType,Independentsoft.Exchange.AffectedTaskOccurrences)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemId">The ID of the item to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="affectedTaskOccurrences">Indicates which instance of a recurring task should be deleted.</param>
            <returns>Deletion result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.DeleteType,Independentsoft.Exchange.SendMeetingInvitations,Independentsoft.Exchange.AffectedTaskOccurrences)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemId">The ID of the item to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="sendMeetingInvitations">Indicates whether cancellation messages should be sent.</param>
            <param name="affectedTaskOccurrences">Indicates which instance of a recurring task should be deleted.</param>
            <returns>Deletion result.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Deletes multiple items.
            </summary>
            <param name="items">The IDs of the items to delete.</param>
            <returns>A collection of deletion results for each of the specified item IDs.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.DeleteType)">
            <summary>
            Deletes multiple items.
            </summary>
            <param name="items">The IDs of the items to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <returns>A collection of deletion results for each of the specified item IDs.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Deletes multiple items.
            </summary>
            <param name="items">The IDs of the items to delete.</param>
            <param name="sendMeetingInvitations">Indicates whether cancellation messages should be sent.</param>
            <returns>A collection of deletion results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.DeleteType,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Deletes multiple items.
            </summary>
            <param name="items">The IDs of the items to delete.</param>
            <param name="deleteType">Type of the delete.</param>
            <param name="sendMeetingInvitations">Indicates whether cancellation messages should be sent.</param>
            <returns>A collection of deletion results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.AffectedTaskOccurrences)">
            <summary>
            Deletes multiple items.
            </summary>
            <param name="items">The IDs of the items to delete.</param>
            <param name="affectedTaskOccurrences">Indicates which instance of a recurring task should be deleted.</param>
            <returns>A collection of deletion results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.DeleteType,Independentsoft.Exchange.AffectedTaskOccurrences)">
            <summary>
            Deletes multiple items.
            </summary>
            <param name="items">The IDs of the items to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="affectedTaskOccurrences">Indicates which instance of a recurring task should be deleted.</param>
            <returns>A collection of deletion results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.DeleteType,Independentsoft.Exchange.SendMeetingInvitations,Independentsoft.Exchange.AffectedTaskOccurrences)">
            <summary>
            Deletes multiple items.
            </summary>
            <param name="items">The IDs of the items to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="sendMeetingInvitations">Indicates whether cancellation messages should be sent.</param>
            <param name="affectedTaskOccurrences">Indicates which instance of a recurring task should be deleted.</param>
            <returns>A collection of deletion results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteItemImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.DeleteType,Independentsoft.Exchange.SendMeetingInvitations,Independentsoft.Exchange.AffectedTaskOccurrences)">
            <summary>
            Deletes the item implementation.
            </summary>
            <param name="items">The items.</param>
            <param name="deleteType">Type of the delete.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <param name="affectedTaskOccurrences">The affected task occurrences.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ArchiveItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Archives the item.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ArchiveItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.FolderId)">
            <summary>
            Archives the item.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="targetFolderId">The target folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ArchiveItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Archives the item.
            </summary>
            <param name="items">The items.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ArchiveItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.FolderId)">
            <summary>
            Archives the item.
            </summary>
            <param name="items">The items.</param>
            <param name="targetFolderId">The target folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ArchiveItemImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.FolderId)">
            <summary>
            Archives the item implementation.
            </summary>
            <param name="items">The items.</param>
            <param name="targetFolderId">The target folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Moves an item.
            </summary>
            <param name="itemId">The ID of the item to move.</param>
            <param name="standardFolder">The ID of the folder to move the items to.</param>
            <returns>Move operation result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.FolderId)">
            <summary>
            Moves an item.
            </summary>
            <param name="itemId">The ID of the item to move.</param>
            <param name="targetFolderId">The ID of the folder to move the items to.</param>
            <returns>Move operation result.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Moves multiple items.
            </summary>
            <param name="items">The IDs of the items to move.</param>
            <param name="standardFolder">The ID of the folder to move the items to.</param>
            <returns>A collection of move results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.FolderId)">
            <summary>
            Moves multiple items.
            </summary>
            <param name="items">The IDs of the items to move.</param>
            <param name="targetFolderId">The ID of the folder to move the items to.</param>
            <returns>A collection of move results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveItemImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.FolderId)">
            <summary>
            Moves the item implementation.
            </summary>
            <param name="items">The items.</param>
            <param name="targetFolderId">The target folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Copies an item.
            </summary>
            <param name="itemId">The ID of the item to copy.</param>
            <param name="standardFolder">The ID of the folder to copy the items to.</param>
            <returns>Copy operation result.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.FolderId)">
            <summary>
            Copies an item.
            </summary>
            <param name="itemId">The ID of the item to copy.</param>
            <param name="targetFolderId">The ID of the folder to copy the items to.</param>
            <returns>Copy operation result.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Copies multiple items.
            </summary>
            <param name="items">The IDs of the items to copy.</param>
            <param name="standardFolder">The ID of the folder to copy the items to.</param>
            <returns>A collection of copy results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.FolderId)">
            <summary>
            Copies multiple items.
            </summary>
            <param name="items">The IDs of the items to copy.</param>
            <param name="targetFolderId">The ID of the folder to copy the items to.</param>
            <returns>A collection of copy results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyItemImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.FolderId)">
            <summary>
            Copies the item implementation.
            </summary>
            <param name="items">The items.</param>
            <param name="targetFolderId">The target folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(Independentsoft.Exchange.DeclineItem)">
            <summary>
            Declines meeting request.
            </summary>
            <param name="declineItem">The decline item.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(Independentsoft.Exchange.DeclineItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Declines meeting request.
            </summary>
            <param name="declineItem">The decline item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(Independentsoft.Exchange.DeclineItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Declines meeting request.
            </summary>
            <param name="declineItem">The decline item.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(Independentsoft.Exchange.DeclineItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Declines meeting request.
            </summary>
            <param name="declineItem">The decline item.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.DeclineItem})">
            <summary>
            Declines meeting requests.
            </summary>
            <param name="declineItems">The decline items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.DeclineItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Declines meeting requests.
            </summary>
            <param name="declineItems">The decline items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.DeclineItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Declines meeting requests.
            </summary>
            <param name="declineItems">The decline items.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.DeclineItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Declines meeting requests.
            </summary>
            <param name="declineItems">The decline items.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeclineMeetingRequestImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.DeclineItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Declines the meeting request implementation.
            </summary>
            <param name="declineItems">The decline items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(Independentsoft.Exchange.TentativelyAcceptItem)">
            <summary>
            Tentatively accepts meeting request.
            </summary>
            <param name="tentativelyAcceptItem">The tentatively accept item.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(Independentsoft.Exchange.TentativelyAcceptItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Tentatively accepts meeting request.
            </summary>
            <param name="tentativelyAcceptItem">The tentatively accept item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(Independentsoft.Exchange.TentativelyAcceptItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Tentatively accepts meeting request.
            </summary>
            <param name="tentativelyAcceptItem">The tentatively accept item.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(Independentsoft.Exchange.TentativelyAcceptItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Tentatively accepts meeting request.
            </summary>
            <param name="tentativelyAcceptItem">The tentatively accept item.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.TentativelyAcceptItem})">
            <summary>
            Tentatively accepts meeting requests.
            </summary>
            <param name="tentativelyAcceptItems">The tentatively accept items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.TentativelyAcceptItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Tentatively accepts meeting requests.
            </summary>
            <param name="tentativelyAcceptItems">The tentatively accept items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.TentativelyAcceptItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Tentatively accepts meeting requests.
            </summary>
            <param name="tentativelyAcceptItems">The tentatively accept items.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.TentativelyAcceptItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Tentatively accepts meeting requests.
            </summary>
            <param name="tentativelyAcceptItems">The tentatively accept items.</param>
            <param name="messageDisposition">Indicates the disposition mode.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.TentativelyAcceptMeetingRequestImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.TentativelyAcceptItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Tentativelies the accept meeting request implementation.
            </summary>
            <param name="tentativelyAcceptItems">The tentatively accept items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.RemoveItem)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="removeItem">The remove item.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.RemoveItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="removeItem">The remove item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.RemoveItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="removeItem">The remove item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.RemoveItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="removeItem">The remove item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.RemoveItem})">
            <summary>
            Cancels meetings.
            </summary>
            <param name="removeItems">The remove items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.RemoveItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meetings.
            </summary>
            <param name="removeItems">The remove items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.RemoveItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Cancels meetings.
            </summary>
            <param name="removeItems">The remove items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.RemoveItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meetings.
            </summary>
            <param name="removeItems">The remove items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequestImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.RemoveItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels the meeting request implementation.
            </summary>
            <param name="removeItems">The remove items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.CancelItem)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="cancelItem">The cancel item.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.CancelItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="cancelItem">The cancel item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.CancelItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="cancelItem">The cancel item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(Independentsoft.Exchange.CancelItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meeting.
            </summary>
            <param name="cancelItem">The cancel item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.CancelItem})">
            <summary>
            Cancels meetings.
            </summary>
            <param name="cancelItems">The cancel items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.CancelItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meetings.
            </summary>
            <param name="cancelItems">The cancel items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.CancelItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Cancels meetings.
            </summary>
            <param name="cancelItems">The cancel items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.CancelItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels meetings.
            </summary>
            <param name="cancelItems">The cancel items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CancelMeetingRequestImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.CancelItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Cancels the meeting request implementation.
            </summary>
            <param name="cancelItems">The cancel items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(Independentsoft.Exchange.AcceptItem)">
            <summary>
            Accepts meeting request.
            </summary>
            <param name="acceptItem">The accept item.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(Independentsoft.Exchange.AcceptItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Accepts meeting request.
            </summary>
            <param name="acceptItem">The accept item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(Independentsoft.Exchange.AcceptItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Accepts meeting request.
            </summary>
            <param name="acceptItem">The accept item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(Independentsoft.Exchange.AcceptItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Accepts meeting request.
            </summary>
            <param name="acceptItem">The accept item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.AcceptItem})">
            <summary>
            Accepts meeting requests.
            </summary>
            <param name="acceptItems">The accept items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.AcceptItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Accepts meeting requests.
            </summary>
            <param name="acceptItems">The accept items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.AcceptItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Accepts meeting requests.
            </summary>
            <param name="acceptItems">The accept items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.AcceptItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Accepts meeting requests.
            </summary>
            <param name="acceptItems">The accept items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AcceptMeetingRequestImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.AcceptItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Accepts the meeting request implementation.
            </summary>
            <param name="acceptItems">The accept items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(Independentsoft.Exchange.Appointment)">
            <summary>
            Sends meeting request.
            </summary>
            <param name="appointment">The appointment.</param>
            <returns>ItemId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(Independentsoft.Exchange.Appointment,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends meeting request.
            </summary>
            <param name="appointment">The appointment.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(Independentsoft.Exchange.Appointment,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Sends meeting request.
            </summary>
            <param name="appointment">The appointment.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>ItemId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(Independentsoft.Exchange.Appointment,Independentsoft.Exchange.SendMeetingInvitations,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends meeting request.
            </summary>
            <param name="appointment">The appointment.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.Appointment})">
            <summary>
            Sends meeting requests.
            </summary>
            <param name="appointments">The appointments.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.Appointment},Independentsoft.Exchange.FolderId)">
            <summary>
            Sends meeting requests.
            </summary>
            <param name="appointments">The appointments.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.Appointment},Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Sends meeting requests.
            </summary>
            <param name="appointments">The appointments.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequest(System.Collections.Generic.IList{Independentsoft.Exchange.Appointment},Independentsoft.Exchange.SendMeetingInvitations,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends meeting requests.
            </summary>
            <param name="appointments">The appointments.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendMeetingRequestImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.Appointment},Independentsoft.Exchange.SendMeetingInvitations,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends the meeting request implementation.
            </summary>
            <param name="appointments">The appointments.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(Independentsoft.Exchange.ReplyAllItem)">
            <summary>
            Sends reply message to all recipients.
            </summary>
            <param name="replyAllItem">The reply all item.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(Independentsoft.Exchange.ReplyAllItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply message to all recipients.
            </summary>
            <param name="replyAllItem">The reply all item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(Independentsoft.Exchange.ReplyAllItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Sends reply message to all recipients.
            </summary>
            <param name="replyAllItem">The reply all item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(Independentsoft.Exchange.ReplyAllItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply message to all recipients.
            </summary>
            <param name="replyAllItem">The reply all item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyAllItem})">
            <summary>
            Sends reply messages to all recipients.
            </summary>
            <param name="replyAllItems">The reply all items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyAllItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply messages to all recipients.
            </summary>
            <param name="replyAllItems">The reply all items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyAllItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Sends reply messages to all recipients.
            </summary>
            <param name="replyAllItems">The reply all items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAll(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyAllItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply messages to all recipients.
            </summary>
            <param name="replyAllItems">The reply all items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyToAllImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyAllItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Replies to all implementation.
            </summary>
            <param name="replyAllItems">The reply all items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(Independentsoft.Exchange.ReplyItem)">
            <summary>
            Sends reply message.
            </summary>
            <param name="replyItem">The reply item.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(Independentsoft.Exchange.ReplyItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply message.
            </summary>
            <param name="replyItem">The reply item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(Independentsoft.Exchange.ReplyItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Sends reply message.
            </summary>
            <param name="replyItem">The reply item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(Independentsoft.Exchange.ReplyItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply message.
            </summary>
            <param name="replyItem">The reply item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyItem})">
            <summary>
            Sends reply messages.
            </summary>
            <param name="replyItems">The reply items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply messages.
            </summary>
            <param name="replyItems">The reply items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Sends reply messages.
            </summary>
            <param name="replyItems">The reply items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Reply(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends reply messages.
            </summary>
            <param name="replyItems">The reply items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ReplyImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ReplyItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Replies the implementation.
            </summary>
            <param name="replyItems">The reply items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(Independentsoft.Exchange.ForwardItem)">
            <summary>
            Forwards a message.
            </summary>
            <param name="forwardItem">The forward item.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(Independentsoft.Exchange.ForwardItem,Independentsoft.Exchange.FolderId)">
            <summary>
            Forwards a message.
            </summary>
            <param name="forwardItem">The forward item.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(Independentsoft.Exchange.ForwardItem,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Forwards a message.
            </summary>
            <param name="forwardItem">The forward item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(Independentsoft.Exchange.ForwardItem,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Forwards a message.
            </summary>
            <param name="forwardItem">The forward item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(System.Collections.Generic.IList{Independentsoft.Exchange.ForwardItem})">
            <summary>
            Forwards multiple messages.
            </summary>
            <param name="forwardItems">The forward items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(System.Collections.Generic.IList{Independentsoft.Exchange.ForwardItem},Independentsoft.Exchange.FolderId)">
            <summary>
            Forwards multiple messages.
            </summary>
            <param name="forwardItems">The forward items.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(System.Collections.Generic.IList{Independentsoft.Exchange.ForwardItem},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Forwards multiple messages.
            </summary>
            <param name="forwardItems">The forward items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Forward(System.Collections.Generic.IList{Independentsoft.Exchange.ForwardItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Forwards multiple messages.
            </summary>
            <param name="forwardItems">The forward items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ForwardImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ForwardItem},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Forwards the implementation.
            </summary>
            <param name="forwardItems">The forward items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.Message)">
            <summary>
            Sends an email message.
            </summary>
            <param name="message">The message.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.Message,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Sends an email message.
            </summary>
            <param name="message">The message.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.Message,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends an email message.
            </summary>
            <param name="message">The message.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.Message})">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.Message},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.Message},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:System.ArgumentNullException">messages</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.ItemId)">
            <summary>
            Sends an email message.
            </summary>
            <param name="itemId">The item identifier.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.ItemId,System.Boolean)">
            <summary>
            Sends an email message.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="saveToFolder">if set to <c>true</c> [save to folder].</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Sends an email message.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends an email message.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(Independentsoft.Exchange.ItemId,System.Boolean,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends an email message.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="saveToFolder">if set to <c>true</c> [save to folder].</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>ItemInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <returns>IList{ItemInfoResponse}.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Boolean)">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <param name="saveToFolder">if set to <c>true</c> [save to folder].</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.FolderId)">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.Send(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Boolean,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends email messages.
            </summary>
            <param name="messages">The messages.</param>
            <param name="saveToFolder">if set to <c>true</c> [save to folder].</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns>IList{ItemInfoResponse}.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SendItemImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Boolean,Independentsoft.Exchange.FolderId)">
            <summary>
            Sends the item implementation.
            </summary>
            <param name="messages">The messages.</param>
            <param name="saveToFolder">if set to <c>true</c> [save to folder].</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created item.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created item.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created item.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.FolderId,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.FolderId,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created item.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(Independentsoft.Exchange.Item,Independentsoft.Exchange.FolderId,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates an item.
            </summary>
            <param name="item">The item to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created item.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>The ItemId of the created item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item})">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created items.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created items.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.FolderId)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created items.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.FolderId,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.FolderId,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created items.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItem(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.FolderId,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates multiple items.
            </summary>
            <param name="items">The items to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created items.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns>A collection of creation results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateItemImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.Item},Independentsoft.Exchange.FolderId,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingInvitations)">
            <summary>
            Creates the item implementation.
            </summary>
            <param name="items">The items.</param>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sendMeetingInvitations">The send meeting invitations.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateAttachment(Independentsoft.Exchange.Attachment,System.String)">
            <summary>
            Creates either an item or file attachment and attaches it to the specified item.
            </summary>
            <param name="attachment">The attachment to create.</param>
            <param name="itemId">The parent item to attach attachment to.</param>
            <returns>The identifier of the parent item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateAttachment(Independentsoft.Exchange.Attachment,Independentsoft.Exchange.ItemId)">
            <summary>
            Creates either an item or file attachment and attaches it to the specified item.
            </summary>
            <param name="attachment">The attachment to create.</param>
            <param name="itemId">The parent item to attach attachment to.</param>
            <returns>The identifier of the parent item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateAttachment(System.Collections.Generic.IList{Independentsoft.Exchange.Attachment},System.String)">
            <summary>
            Creates attachments and attaches them to the specified item.
            </summary>
            <param name="attachments">The attachments to create.</param>
            <param name="itemId">The parent item to attach attachments to.</param>
            <returns>A collection of the identifiers of the parent item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateAttachment(System.Collections.Generic.IList{Independentsoft.Exchange.Attachment},Independentsoft.Exchange.ItemId)">
            <summary>
            Creates attachments and attaches them to the specified item.
            </summary>
            <param name="attachments">The attachments to create.</param>
            <param name="itemId">The parent item to attach attachments to.</param>
            <returns>A collection of the identifiers of the parent item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateAttachmentImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.Attachment},Independentsoft.Exchange.ItemId)">
            <summary>
            Creates the attachment implementation.
            </summary>
            <param name="attachments">The attachments.</param>
            <param name="itemId">The item identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            attachments
            or
            itemId
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteAttachment(Independentsoft.Exchange.AttachmentInfo)">
            <summary>
            Deletes file or item attachment from an existing item.
            </summary>
            <param name="attachmentInfo">The ID of the attachment to delete.</param>
            <returns>The identifier of the parent item.</returns>
            <exception cref="T:System.ArgumentNullException">attachmentInfo</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteAttachment(System.String)">
            <summary>
            Deletes file or item attachment from an existing item.
            </summary>
            <param name="attachmentId">The ID of the attachment to delete.</param>
            <returns>The identifier of the parent item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteAttachment(System.Collections.Generic.IList{Independentsoft.Exchange.AttachmentInfo})">
            <summary>
            Deletes file or item attachments from an existing item.
            </summary>
            <param name="attachments">The IDs of the attachments to delete.</param>
            <returns>The identifier of the parent item.</returns>
            <exception cref="T:System.ArgumentNullException">attachments</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteAttachment(System.Collections.Generic.IList{System.String})">
            <summary>
            Deletes file or item attachments from an existing item.
            </summary>
            <param name="attachmentIds">The IDs of the attachments to delete.</param>
            <returns>The identifier of the parent item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteAttachmentImplementation(System.Collections.Generic.IList{System.String})">
            <summary>
            Deletes the attachment implementation.
            </summary>
            <param name="attachmentIds">The attachment ids.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">attachmentIds</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachment(Independentsoft.Exchange.AttachmentInfo)">
            <summary>
            Retrieve existing attachment.
            </summary>
            <param name="attachmentInfo">The attachment information.</param>
            <returns>Attachment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachment(Independentsoft.Exchange.AttachmentInfo,Independentsoft.Exchange.AttachmentShape)">
            <summary>
            Retrieve existing attachment.
            </summary>
            <param name="attachmentInfo">The ID of attachment to return.</param>
            <param name="attachmentShape">Specify which attachment information should be returned.</param>
            <returns>Attachment.</returns>
            <exception cref="T:System.ArgumentNullException">attachmentInfo</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachments(System.Collections.Generic.IList{Independentsoft.Exchange.AttachmentInfo})">
            <summary>
            Retrieve existing attachments.
            </summary>
            <param name="attachments">The IDs of attachments to return.</param>
            <returns>IList{Attachment}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachments(System.Collections.Generic.IList{Independentsoft.Exchange.AttachmentInfo},Independentsoft.Exchange.AttachmentShape)">
            <summary>
            Retrieve existing attachments.
            </summary>
            <param name="attachments">The IDs of attachments to return.</param>
            <param name="attachmentShape">Specify which attachment information should be returned.</param>
            <returns>IList{Attachment}.</returns>
            <exception cref="T:System.ArgumentNullException">attachments</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachment(System.String)">
            <summary>
            Retrieve existing attachment.
            </summary>
            <param name="attachmentId">The ID of attachment to return.</param>
            <returns>Attachment.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachment(System.String,Independentsoft.Exchange.AttachmentShape)">
            <summary>
            Retrieve existing attachment.
            </summary>
            <param name="attachmentId">The IDs of attachments to return.</param>
            <param name="attachmentShape">Specify which attachment information should be returned.</param>
            <returns>Attachment.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachments(System.Collections.Generic.IList{System.String})">
            <summary>
            Retrieve existing attachments.
            </summary>
            <param name="attachmentIds">The IDs of attachments to return.</param>
            <returns>IList{Attachment}.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachments(System.Collections.Generic.IList{System.String},Independentsoft.Exchange.AttachmentShape)">
            <summary>
            Retrieve existing attachments.
            </summary>
            <param name="attachmentIds">The IDs of attachments to return.</param>
            <param name="attachmentShape">Specify which attachment information should be returned.</param>
            <returns>IList{Attachment}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAttachmentsImplementation(System.Collections.Generic.IList{System.String},Independentsoft.Exchange.AttachmentShape)">
            <summary>
            Gets the attachments implementation.
            </summary>
            <param name="attachmentIds">The attachment ids.</param>
            <param name="attachmentShape">The attachment shape.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">attachmentIds</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(System.String)">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingCancellation(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting cancellation message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingCancellation.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(System.String)">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingResponse(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting response message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(System.String)">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingRequest(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting request message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingRequest.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(System.String)">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMeetingMessage(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a meeting message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>MeetingMessage.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(System.String)">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetPost(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a post item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Post.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(System.String)">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDistributionList(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a DistributionList.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>DistributionList.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(System.String)">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetJournal(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a journal.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Journal.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(System.String)">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNote(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a note.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Note.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(System.String)">
            <summary>
            Gets a task.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a task.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets task item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a task.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a task.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a task.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a task.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetTask(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a task.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Task.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(System.String)">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppointment(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets an appointment.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Appointment.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(System.String)">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetContact(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a contact.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Contact.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(System.String)">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessage(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets a message.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(System.String)">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(System.String,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets an item.
            </summary>
            <param name="itemId">The ID of the item to return.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>Item.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Gets items.
            </summary>
            <param name="items">The items.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets items.
            </summary>
            <param name="items">The items.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets items.
            </summary>
            <param name="items">The items.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets items.
            </summary>
            <param name="items">The items.</param>
            <param name="itemShape">The set of properties to return.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetItemsImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets the items implementation.
            </summary>
            <param name="items">The items.</param>
            <param name="itemShape">The item shape.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">items</exception>
            <exception cref="T:System.ArgumentException">ItemId is not specified.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(Independentsoft.Exchange.ConversationRequest)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequest">The conversation request.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(Independentsoft.Exchange.ConversationRequest,Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequest">The conversation request.</param>
            <param name="itemShape">The item shape.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(Independentsoft.Exchange.ConversationRequest,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequest">The conversation request.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(Independentsoft.Exchange.ConversationRequest,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation,System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequest">The conversation request.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="foldersToIgnore">The folders to ignore.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(Independentsoft.Exchange.ConversationRequest,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation,System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ConversationNodeSortOrder)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequest">The conversation request.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="foldersToIgnore">The folders to ignore.</param>
            <param name="sortOrder">The sort order.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(Independentsoft.Exchange.ConversationRequest,Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation,System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ConversationNodeSortOrder,System.Int32)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequest">The conversation request.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="foldersToIgnore">The folders to ignore.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="maxItemsToReturn">The maximum items to return.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationRequest})">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequests">The conversation requests.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationRequest},Independentsoft.Exchange.ItemShape)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequests">The conversation requests.</param>
            <param name="itemShape">The item shape.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationRequest},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequests">The conversation requests.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationRequest},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation,System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequests">The conversation requests.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="foldersToIgnore">The folders to ignore.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationRequest},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation,System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ConversationNodeSortOrder)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequests">The conversation requests.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="foldersToIgnore">The folders to ignore.</param>
            <param name="sortOrder">The sort order.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItems(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationRequest},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation,System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ConversationNodeSortOrder,System.Int32)">
            <summary>
            Gets the conversation items.
            </summary>
            <param name="conversationRequests">The conversation requests.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="foldersToIgnore">The folders to ignore.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="maxItemsToReturn">The maximum items to return.</param>
            <returns>IList{ConversationItemResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetConversationItemsImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationRequest},Independentsoft.Exchange.ItemShape,Independentsoft.Exchange.MailboxSearchLocation,System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ConversationNodeSortOrder,System.Int32)">
            <summary>
            Gets the conversation items implementation.
            </summary>
            <param name="conversationRequests">The conversation requests.</param>
            <param name="itemShape">The item shape.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="foldersToIgnore">The folders to ignore.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="maxItemsToReturn">The maximum items to return.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">conversationRequests</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageFile(System.String)">
            <summary>
            Gets an item as Outlook .msg file.
            </summary>
            <param name="itemId">The item identifier.</param>
            <returns>Independentsoft.Msg.Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageFile(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.ExtendedPropertyPath})">
            <summary>
            Gets an item as Outlook .msg file.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="customPropertyPaths">The custom property paths.</param>
            <returns>Independentsoft.Msg.Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageFile(Independentsoft.Exchange.ItemId)">
            <summary>
            Gets an item as Outlook .msg file.
            </summary>
            <param name="itemId">The item identifier.</param>
            <returns>Independentsoft.Msg.Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageFile(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.ExtendedPropertyPath})">
            <summary>
            Gets an item as Outlook .msg file.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="customPropertyPaths">The custom property paths.</param>
            <returns>Independentsoft.Msg.Message.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetMessageFileImplementation(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.ExtendedPropertyPath})">
            <summary>
            Gets the message file implementation.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="customPropertyPaths">The custom property paths.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateManagedFolder(System.String)">
            <summary>
            Creates a managed folder.
            </summary>
            <param name="folderName">The name of the folder to create.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateManagedFolder(System.String,Independentsoft.Exchange.Mailbox)">
            <summary>
            Creates a managed folder.
            </summary>
            <param name="folderName">The name of the folder to create.</param>
            <param name="mailbox">The mailbox.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateManagedFolder(System.Collections.Generic.IList{System.String})">
            <summary>
            Creates multiple managed folders.
            </summary>
            <param name="folderNames">The names of the folders to create.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateManagedFolder(System.Collections.Generic.IList{System.String},Independentsoft.Exchange.Mailbox)">
            <summary>
            Creates multiple managed folders.
            </summary>
            <param name="folderNames">The names of the folders to create.</param>
            <param name="mailbox">The mailbox.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateManagedFolderImplementation(System.Collections.Generic.IList{System.String},Independentsoft.Exchange.Mailbox)">
            <summary>
            Creates the managed folder implementation.
            </summary>
            <param name="folderNames">The folder names.</param>
            <param name="mailbox">The mailbox.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolder(System.String,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates a folder.
            </summary>
            <param name="folderName">The name of the folder to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created folder.</param>
            <returns>The ID of the created folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolder(Independentsoft.Exchange.Folder,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates a folder.
            </summary>
            <param name="folder">The folder.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created folder.</param>
            <returns>The ID of the created folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolder(System.String,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates a folder.
            </summary>
            <param name="folderName">The name of the folder to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created folder.</param>
            <returns>The ID of the created folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolder(Independentsoft.Exchange.Folder,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates a folder.
            </summary>
            <param name="folder">The folder to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created folder.</param>
            <returns>The ID of the created folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolder(System.Collections.Generic.IList{Independentsoft.Exchange.Folder},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates multiple folders.
            </summary>
            <param name="folders">The folders to create.</param>
            <param name="standardFolder">The ID of the folder in which to place the newly created folders.</param>
            <returns>A collection of creation results for each of the specified folders.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolder(System.Collections.Generic.IList{Independentsoft.Exchange.Folder},Independentsoft.Exchange.FolderId)">
            <summary>
            Creates multiple folders.
            </summary>
            <param name="folders">The folders to create.</param>
            <param name="parentFolderId">The ID of the folder in which to place the newly created folders.</param>
            <returns>A collection of creation results for each of the specified folders.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolderImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.Folder},Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the folder implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="parentFolderId">The parent folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteFolder(Independentsoft.Exchange.FolderId)">
            <summary>
            Deletes a folder.
            </summary>
            <param name="folderId">The ID of the folder to delete.</param>
            <returns>Delete operation result.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.DeleteType)">
            <summary>
            Deletes a folder.
            </summary>
            <param name="folderId">The ID of the folder to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <returns>Delete operation result.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Deletes multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to delete.</param>
            <returns>A collection of deletion results for each of the specified folder IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.DeleteType)">
            <summary>
            Deletes multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to delete.</param>
            <param name="deleteType">The deletion mode.</param>
            <returns>A collection of deletion results for each of the specified folder IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteFolderImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.DeleteType)">
            <summary>
            Deletes the folder implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="deleteType">Type of the delete.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(Independentsoft.Exchange.StandardFolder,System.Boolean)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="isRead">if set to <c>true</c> [is read].</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(Independentsoft.Exchange.StandardFolder,System.Boolean,System.Boolean)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="isRead">if set to <c>true</c> [is read].</param>
            <param name="suppressReadReceipts">if set to <c>true</c> [suppress read receipts].</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(Independentsoft.Exchange.FolderId)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(Independentsoft.Exchange.FolderId,System.Boolean)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="isRead">if set to <c>true</c> [is read].</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(Independentsoft.Exchange.FolderId,System.Boolean,System.Boolean)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="isRead">if set to <c>true</c> [is read].</param>
            <param name="suppressReadReceipts">if set to <c>true</c> [suppress read receipts].</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Marks all items as read.
            </summary>
            <param name="folders">The folders.</param>
            <returns>IList{Response}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Boolean)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="folders">The folders.</param>
            <param name="isRead">if set to <c>true</c> [is read].</param>
            <returns>IList{Response}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsRead(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Boolean,System.Boolean)">
            <summary>
            Marks all items as read.
            </summary>
            <param name="folders">The folders.</param>
            <param name="isRead">if set to <c>true</c> [is read].</param>
            <param name="suppressReadReceipts">if set to <c>true</c> [suppress read receipts].</param>
            <returns>IList{Response}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAllItemsAsReadImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Boolean,System.Boolean)">
            <summary>
            Marks all items as read implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="isRead">if set to <c>true</c> [is read].</param>
            <param name="suppressReadReceipts">if set to <c>true</c> [suppress read receipts].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Copies a folder.
            </summary>
            <param name="folderId">The ID of the folder to copy.</param>
            <param name="standardFolder">The ID of the folder to copy the items to.</param>
            <returns>The ID of the new folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderId)">
            <summary>
            Copies a folder.
            </summary>
            <param name="folderId">The ID of the folder to copy.</param>
            <param name="targetFolderId">The ID of the folder to copy the items to.</param>
            <returns>The ID of the new folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Copies multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to copy.</param>
            <param name="standardFolder">The ID of the folder to copy the items to.</param>
            <returns>A collection of copy results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderId)">
            <summary>
            Copies multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to copy.</param>
            <param name="targetFolderId">The ID of the folder to copy the items to.</param>
            <returns>A collection of copy results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CopyFolderImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderId)">
            <summary>
            Copies the folder implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="targetFolderId">The target folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Moves a folder.
            </summary>
            <param name="folderId">The ID of the folder to move.</param>
            <param name="standardFolder">The ID of the folder to move the items to.</param>
            <returns>The ID of the new folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderId)">
            <summary>
            Moves a folder.
            </summary>
            <param name="folderId">The ID of the folder to move.</param>
            <param name="targetFolderId">The ID of the folder to move the items to.</param>
            <returns>The ID of the new folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.StandardFolder)">
            <summary>
            Moves multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to move.</param>
            <param name="standardFolder">The ID of the folder to move the items to.</param>
            <returns>A collection of move results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderId)">
            <summary>
            Moves multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to move.</param>
            <param name="targetFolderId">The ID of the folder to move the items to.</param>
            <returns>A collection of move results for each of the specified item IDs.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MoveFolderImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderId)">
            <summary>
            Moves the folder implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="targetFolderId">The target folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(System.String)">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(System.String,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(System.String,Independentsoft.Exchange.FolderShape)">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <param name="folderShape">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Gets a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.FolderShape)">
            <summary>
            Gets a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to return.</param>
            <param name="folderShape">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.FolderShape)">
            <summary>
            Gets a folder.
            </summary>
            <param name="folderId">The ID of the folder to return.</param>
            <param name="folderShape">The set of properties to return.</param>
            <returns>Folder.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolders(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Gets multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to return.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolders(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.ShapeType)">
            <summary>
            Gets multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to return.</param>
            <param name="shapeType">The set of properties to return.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolders(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Gets multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to return.</param>
            <param name="propertyPaths">The set of properties to return.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFolders(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape)">
            <summary>
            Gets multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to return.</param>
            <param name="folderShape">The set of properties to return.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetFoldersImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.FolderShape)">
            <summary>
            Gets the folders implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="folderShape">The folder shape.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">folders</exception>
            <exception cref="T:System.ArgumentException">FolderId is not specified.</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Property)">
            <summary>
            Modify properties of an existing folder.
            </summary>
            <param name="folderId">The ID of the folder to update.</param>
            <param name="propertyToSet">Set of properties to add/modify.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Modify properties of an existing folder.
            </summary>
            <param name="folderId">The ID of the folder to update.</param>
            <param name="propertyToDelete">Set of properties to delete.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Property,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Modify properties of an existing folder.
            </summary>
            <param name="folderId">The ID of the folder to update.</param>
            <param name="propertyToSet">Set of properties to add/modify.</param>
            <param name="propertyToDelete">Set of properties to delete.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.Property})">
            <summary>
            Modify properties of an existing folder.
            </summary>
            <param name="folderId">The ID of the folder to update.</param>
            <param name="propertiesToSet">Set of properties to add/modify.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Modify properties of an existing folder.
            </summary>
            <param name="folderId">The ID of the folder to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Modify properties of an existing folder.
            </summary>
            <param name="folderId">The ID of the folder to update.</param>
            <param name="propertiesToSet">Set of properties to add/modify.</param>
            <param name="propertiesToDelete">Set of properties to delete.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(Independentsoft.Exchange.FolderChange)">
            <summary>
            Modify properties of an existing folder.
            </summary>
            <param name="folderChange">The folder change.</param>
            <returns>FolderId.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderChange})">
            <summary>
            Modify properties of existing folders.
            </summary>
            <param name="folderChanges">The folder changes.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateFolderImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderChange})">
            <summary>
            Updates the folder implementation.
            </summary>
            <param name="folderChanges">The folder changes.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">folderChanges</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.ConflictResolution)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToSet">The properties to add or update.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.ConflictResolution)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertyToDelete">The property to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ConflictResolution)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property})">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.ConflictResolution)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.Property},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemId">The ID of the item to update.</param>
            <param name="propertiesToSet">The properties to set.</param>
            <param name="propertiesToDelete">The properties to delete.</param>
            <param name="propertiesToAppend">The properties to append.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.ConflictResolution)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(Independentsoft.Exchange.ItemChange,Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of an existing item.
            </summary>
            <param name="itemChange">The item change.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange})">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.ConflictResolution)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItem(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the properties of the existing items.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="conflictResolution">The conflict resolution mode.</param>
            <param name="messageDisposition">Indicates the disposition mode for Message objects.</param>
            <param name="sendMeetingOption">Indicates whether and how invitations and/or cancellations should be sent for appointments.</param>
            <param name="sentItemsFolderId">The folder in which to save sent messages, meeting invitations, or cancellations.</param>
            <returns>A collection of update results for each of the specified items.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItemImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemChange},Independentsoft.Exchange.ConflictResolution,Independentsoft.Exchange.MessageDisposition,Independentsoft.Exchange.SendMeetingOption,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the item implementation.
            </summary>
            <param name="itemChanges">The item changes.</param>
            <param name="conflictResolution">The conflict resolution.</param>
            <param name="messageDisposition">The message disposition.</param>
            <param name="sendMeetingOption">The send meeting option.</param>
            <param name="sentItemsFolderId">The sent items folder identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">itemChanges</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItemInRecoverableItems(Independentsoft.Exchange.ItemChange)">
            <summary>
            Updates the item in recoverable items.
            </summary>
            <param name="itemChange">The item change.</param>
            <returns>IList{ItemInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateItemInRecoverableItemsImplementation(Independentsoft.Exchange.ItemChange)">
            <summary>
            Updates the item in recoverable items implementation.
            </summary>
            <param name="itemChange">The item change.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">itemChange</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(Independentsoft.Exchange.Rule)">
            <summary>
            Creates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(Independentsoft.Exchange.Rule,System.String)">
            <summary>
            Creates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(Independentsoft.Exchange.Rule,System.Boolean)">
            <summary>
            Creates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(Independentsoft.Exchange.Rule,System.String,System.Boolean)">
            <summary>
            Creates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule})">
            <summary>
            Creates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.String)">
            <summary>
            Creates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Boolean)">
            <summary>
            Creates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.String,System.Boolean)">
            <summary>
            Creates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(Independentsoft.Exchange.Rule)">
            <summary>
            Updates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(Independentsoft.Exchange.Rule,System.String)">
            <summary>
            Updates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(Independentsoft.Exchange.Rule,System.Boolean)">
            <summary>
            Updates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(Independentsoft.Exchange.Rule,System.String,System.Boolean)">
            <summary>
            Updates an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule})">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.String)">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Boolean)">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.String,System.Boolean)">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.String)">
            <summary>
            Deletes an inbox rule.
            </summary>
            <param name="rule">The rule.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.String,System.String)">
            <summary>
            Deletes the rule.
            </summary>
            <param name="ruleId">The rule identifier.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.String,System.Boolean)">
            <summary>
            Deletes an inbox rule.
            </summary>
            <param name="ruleId">The rule identifier.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.String,System.String,System.Boolean)">
            <summary>
            Deletes an inbox rule.
            </summary>
            <param name="ruleId">The rule identifier.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.Collections.Generic.IList{System.String})">
            <summary>
            Deletes inbox rules.
            </summary>
            <param name="ruleIds">The rule ids.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Deletes inbox rules.
            </summary>
            <param name="ruleIds">The rule ids.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            Deletes inbox rules.
            </summary>
            <param name="ruleIds">The rule ids.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRule(System.Collections.Generic.IList{System.String},System.String,System.Boolean)">
            <summary>
            Deletes the rule.
            </summary>
            <param name="ruleIds">The rule ids.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{System.String})">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="createRules">The create rules.</param>
            <param name="updateRules">The update rules.</param>
            <param name="ruleIds">The rule ids.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="createRules">The create rules.</param>
            <param name="updateRules">The update rules.</param>
            <param name="ruleIds">The rule ids.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="createRules">The create rules.</param>
            <param name="updateRules">The update rules.</param>
            <param name="ruleIds">The rule ids.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRule(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{System.String},System.String,System.Boolean)">
            <summary>
            Updates inbox rules.
            </summary>
            <param name="createRules">The create rules.</param>
            <param name="updateRules">The update rules.</param>
            <param name="ruleIds">The rule ids.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns>RuleOperationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRuleImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{Independentsoft.Exchange.Rule},System.Collections.Generic.IList{System.String},System.String,System.Boolean)">
            <summary>
            Updates the rule implementation.
            </summary>
            <param name="createRules">The create rules.</param>
            <param name="updateRules">The update rules.</param>
            <param name="ruleIds">The rule ids.</param>
            <param name="smtpEmailAddress">The SMTP email address.</param>
            <param name="removeOutlookRuleBlob">if set to <c>true</c> [remove outlook rule BLOB].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDiscoverySearchConfiguration(System.String)">
            <summary>
            Gets the discovery search configuration.
            </summary>
            <param name="searchFilter">The search filter.</param>
            <returns>GetDiscoverySearchConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDiscoverySearchConfiguration(System.String,System.Boolean)">
            <summary>
            Gets the discovery search configuration.
            </summary>
            <param name="searchFilter">The search filter.</param>
            <param name="expandGroupMembership">if set to <c>true</c> [expand group membership].</param>
            <returns>GetDiscoverySearchConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDiscoverySearchConfiguration(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the discovery search configuration.
            </summary>
            <param name="searchFilter">The search filter.</param>
            <param name="expandGroupMembership">if set to <c>true</c> [expand group membership].</param>
            <param name="inPlaceHoldConfigurationOnly">if set to <c>true</c> [in place hold configuration only].</param>
            <returns>GetDiscoverySearchConfigurationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetDiscoverySearchConfigurationImplementation(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the discovery search configuration implementation.
            </summary>
            <param name="searchId">The search identifier.</param>
            <param name="expandGroupMembership">if set to <c>true</c> [expand group membership].</param>
            <param name="inPlaceHoldConfigurationOnly">if set to <c>true</c> [in place hold configuration only].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSearchableMailboxes(System.String)">
            <summary>
            Gets the searchable mailboxes.
            </summary>
            <param name="searchFilter">The search filter.</param>
            <returns>GetSearchableMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSearchableMailboxes(System.String,System.Boolean)">
            <summary>
            Gets the searchable mailboxes.
            </summary>
            <param name="searchFilter">The search filter.</param>
            <param name="expandGroupMembership">if set to <c>true</c> [expand group membership].</param>
            <returns>GetSearchableMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetSearchableMailboxesImplementation(System.String,System.Boolean)">
            <summary>
            Gets the searchable mailboxes implementation.
            </summary>
            <param name="searchFilter">The search filter.</param>
            <param name="expandGroupMembership">if set to <c>true</c> [expand group membership].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean,System.Int32)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="pageSize">Size of the page.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(Independentsoft.Exchange.MailboxQuery,Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean,System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQuery">The mailbox query.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery})">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean,System.Int32)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="pageSize">Size of the page.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxes(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean,System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection)">
            <summary>
            Searches the mailboxes.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <returns>SearchMailboxesResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SearchMailboxesImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.MailboxQuery},Independentsoft.Exchange.SearchResultType,Independentsoft.Exchange.PreviewItemShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},System.String,System.Boolean,System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection)">
            <summary>
            Searches the mailboxes implementation.
            </summary>
            <param name="mailboxQueries">The mailbox queries.</param>
            <param name="resultType">Type of the result.</param>
            <param name="itemShape">The item shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="language">The language.</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.String)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.String,System.Int32)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.String,System.Int32,System.String)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.String,System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.String,System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection,System.Boolean)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <param name="searchArchiveOnly">if set to <c>true</c> [search archive only].</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.Collections.Generic.IList{System.String},System.Int32,System.String)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.Collections.Generic.IList{System.String},System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetails(System.Collections.Generic.IList{System.String},System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection,System.Boolean)">
            <summary>
            Gets the non indexable item details.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <param name="searchArchiveOnly">if set to <c>true</c> [search archive only].</param>
            <returns>GetNonIndexableItemDetailsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemDetailsImplementation(System.Collections.Generic.IList{System.String},System.Int32,System.String,Independentsoft.Exchange.SearchPageDirection,System.Boolean)">
            <summary>
            Gets the non indexable item details implementation.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageItemReference">The page item reference.</param>
            <param name="pageDirection">The page direction.</param>
            <param name="searchArchiveOnly">if set to <c>true</c> [search archive only].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemStatistics(System.String)">
            <summary>
            Gets the non indexable item statistics.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <returns>GetNonIndexableItemStatisticsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemStatistics(System.String,System.Boolean)">
            <summary>
            Gets the non indexable item statistics.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <param name="searchArchiveOnly">if set to <c>true</c> [search archive only].</param>
            <returns>GetNonIndexableItemStatisticsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemStatistics(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets the non indexable item statistics.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <returns>GetNonIndexableItemStatisticsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemStatistics(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            Gets the non indexable item statistics.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="searchArchiveOnly">if set to <c>true</c> [search archive only].</param>
            <returns>GetNonIndexableItemStatisticsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetNonIndexableItemStatisticsImplementation(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            Gets the non indexable item statistics implementation.
            </summary>
            <param name="mailboxes">The mailboxes.</param>
            <param name="searchArchiveOnly">if set to <c>true</c> [search archive only].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetReminders">
            <summary>
            Gets the reminders.
            </summary>
            <returns>GetRemindersResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetReminders(Independentsoft.Exchange.ReminderType)">
            <summary>
            Gets the reminders.
            </summary>
            <param name="reminderType">Type of the reminder.</param>
            <returns>GetRemindersResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetReminders(System.DateTime,System.DateTime)">
            <summary>
            Gets the reminders.
            </summary>
            <param name="beginTime">The begin time.</param>
            <param name="endTime">The end time.</param>
            <returns>GetRemindersResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetReminders(System.DateTime,System.DateTime,Independentsoft.Exchange.ReminderType)">
            <summary>
            Gets the reminders.
            </summary>
            <param name="beginTime">The begin time.</param>
            <param name="endTime">The end time.</param>
            <param name="reminderType">Type of the reminder.</param>
            <returns>GetRemindersResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetReminders(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Gets the reminders.
            </summary>
            <param name="beginTime">The begin time.</param>
            <param name="endTime">The end time.</param>
            <param name="maxItems">The maximum items.</param>
            <returns>GetRemindersResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetReminders(System.DateTime,System.DateTime,Independentsoft.Exchange.ReminderType,System.Int32)">
            <summary>
            Gets the reminders.
            </summary>
            <param name="beginTime">The begin time.</param>
            <param name="endTime">The end time.</param>
            <param name="reminderType">Type of the reminder.</param>
            <param name="maxItems">The maximum items.</param>
            <returns>GetRemindersResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRemindersImplementation(System.DateTime,System.DateTime,Independentsoft.Exchange.ReminderType,System.Int32)">
            <summary>
            Gets the reminders implementation.
            </summary>
            <param name="beginTime">The begin time.</param>
            <param name="endTime">The end time.</param>
            <param name="reminderType">Type of the reminder.</param>
            <param name="maxItems">The maximum items.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.PerformReminderAction(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ReminderActionType)">
            <summary>
            Performs the reminder action.
            </summary>
            <param name="ItemId">The item identifier.</param>
            <param name="type">The type.</param>
            <returns>PerformReminderActionResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.PerformReminderAction(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ReminderActionType,System.DateTime)">
            <summary>
            Performs the reminder action.
            </summary>
            <param name="ItemId">The item identifier.</param>
            <param name="type">The type.</param>
            <param name="newReminderTime">The new reminder time.</param>
            <returns>PerformReminderActionResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.PerformReminderAction(Independentsoft.Exchange.ReminderItemAction)">
            <summary>
            Performs the reminder action.
            </summary>
            <param name="reminderItemAction">The reminder item action.</param>
            <returns>PerformReminderActionResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.PerformReminderAction(System.Collections.Generic.IList{Independentsoft.Exchange.ReminderItemAction})">
            <summary>
            Performs the reminder action.
            </summary>
            <param name="reminderItemActions">The reminder item actions.</param>
            <returns>PerformReminderActionResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.PerformReminderActionImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ReminderItemAction})">
            <summary>
            Performs the reminder action implementation.
            </summary>
            <param name="reminderItemActions">The reminder item actions.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetUserPhoto(System.String,Independentsoft.Exchange.UserPhotoSizeType)">
            <summary>
            Gets the user photo.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="type">The type.</param>
            <returns>GetUserPhotoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetUserPhotoImplementation(System.String,Independentsoft.Exchange.UserPhotoSizeType)">
            <summary>
            Gets the user photo implementation.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetUserRetentionPolicyTags">
            <summary>
            Gets the user retention policy tags.
            </summary>
            <returns>GetUserRetentionPolicyTagsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetUserRetentionPolicyTagsImplementation">
            <summary>
            Gets the user retention policy tags implementation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.InstallApp(System.String)">
            <summary>
            Installs the application.
            </summary>
            <param name="manifest">The manifest.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.InstallAppImplementation(System.String)">
            <summary>
            Installs the application implementation.
            </summary>
            <param name="manifest">The manifest.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UninstallApp(System.String)">
            <summary>
            Uninstalls the application.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UninstallAppImplementation(System.String)">
            <summary>
            Uninstalls the application implementation.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DisableApp(System.String)">
            <summary>
            Disables the application.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DisableApp(System.String,Independentsoft.Exchange.DisableReason)">
            <summary>
            Disables the application.
            </summary>
            <param name="id">The identifier.</param>
            <param name="reason">The reason.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DisableAppImplementation(System.String,Independentsoft.Exchange.DisableReason)">
            <summary>
            Disables the application implementation.
            </summary>
            <param name="id">The identifier.</param>
            <param name="reason">The reason.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppManifests">
            <summary>
            Gets the application manifests.
            </summary>
            <returns>GetAppManifestsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppManifestsImplementation">
            <summary>
            Gets the application manifests implementation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppMarketplaceUrl">
            <summary>
            Gets the application marketplace URL.
            </summary>
            <returns>GetAppMarketplaceUrlResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetAppMarketplaceUrlImplementation">
            <summary>
            Gets the application marketplace URL implementation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetClientAccessToken(System.String,Independentsoft.Exchange.ClientAccessTokenType)">
            <summary>
            Gets the client access token.
            </summary>
            <param name="id">The identifier.</param>
            <param name="type">The type.</param>
            <returns>PerformReminderActionResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetClientAccessToken(Independentsoft.Exchange.ClientAccessTokenRequest)">
            <summary>
            Gets the client access token.
            </summary>
            <param name="clientAccessTokenRequest">The client access token request.</param>
            <returns>PerformReminderActionResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetClientAccessToken(System.Collections.Generic.IList{Independentsoft.Exchange.ClientAccessTokenRequest})">
            <summary>
            Gets the client access token.
            </summary>
            <param name="clientAccessTokenRequests">The client access token requests.</param>
            <returns>PerformReminderActionResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetClientAccessTokenImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ClientAccessTokenRequest})">
            <summary>
            Gets the client access token implementation.
            </summary>
            <param name="clientAccessTokenRequests">The client access token requests.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetHoldOnMailboxes(System.String)">
            <summary>
            Gets the hold on mailboxes.
            </summary>
            <param name="holdId">The hold identifier.</param>
            <returns>HoldOnMailboxesInfo.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetHoldOnMailboxesImplementation(System.String)">
            <summary>
            Gets the hold on mailboxes implementation.
            </summary>
            <param name="holdId">The hold identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetHoldOnMailboxes(Independentsoft.Exchange.HoldActionType,System.String,System.String)">
            <summary>
            Sets the hold on mailboxes.
            </summary>
            <param name="actionType">Type of the action.</param>
            <param name="holdId">The hold identifier.</param>
            <param name="query">The query.</param>
            <returns>HoldOnMailboxesInfo.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetHoldOnMailboxes(Independentsoft.Exchange.HoldActionType,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Sets the hold on mailboxes.
            </summary>
            <param name="actionType">Type of the action.</param>
            <param name="holdId">The hold identifier.</param>
            <param name="query">The query.</param>
            <param name="mailboxes">The mailboxes.</param>
            <param name="language">The language.</param>
            <param name="includeNonIndexableItems">if set to <c>true</c> [include non indexable items].</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="inPlaceHoldIdentity">The in place hold identity.</param>
            <returns>HoldOnMailboxesInfo.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetHoldOnMailboxesImplementation(Independentsoft.Exchange.HoldActionType,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Sets the hold on mailboxes implementation.
            </summary>
            <param name="actionType">Type of the action.</param>
            <param name="holdId">The hold identifier.</param>
            <param name="query">The query.</param>
            <param name="mailboxes">The mailboxes.</param>
            <param name="language">The language.</param>
            <param name="includeNonIndexableItems">if set to <c>true</c> [include non indexable items].</param>
            <param name="deduplication">if set to <c>true</c> [deduplication].</param>
            <param name="inPlaceHoldIdentity">The in place hold identity.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Empties a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to empty.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.DeleteType)">
            <summary>
            Empties a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to empty.</param>
            <param name="deleteType">The deletion mode.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.StandardFolder,System.Boolean)">
            <summary>
            Empties a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to empty.</param>
            <param name="deleteSubFolders">If true delete the subfolders of the specified folder.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.DeleteType,System.Boolean)">
            <summary>
            Empties a folder.
            </summary>
            <param name="standardFolder">The ID of the folder to empty.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="deleteSubFolders">If true delete the subfolders of the specified folder.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.FolderId)">
            <summary>
            Empties a folder.
            </summary>
            <param name="folderId">The ID of the folder to empty.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.DeleteType)">
            <summary>
            Empties a folder.
            </summary>
            <param name="folderId">The ID of the folder to empty.</param>
            <param name="deleteType">The deletion mode.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.FolderId,System.Boolean)">
            <summary>
            Empties a folder.
            </summary>
            <param name="folderId">The ID of the folder to empty.</param>
            <param name="deleteSubFolders">If true delete the subfolders of the specified folder.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.DeleteType,System.Boolean)">
            <summary>
            Empties a folder.
            </summary>
            <param name="folderId">The ID of the folder to empty.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="deleteSubFolders">If true delete the subfolders of the specified folder.</param>
            <returns>FolderInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Empties multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to empty.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.DeleteType)">
            <summary>
            Empties multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to empty.</param>
            <param name="deleteType">The deletion mode.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Boolean)">
            <summary>
            Empties multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to empty.</param>
            <param name="deleteSubFolders">If true delete the subfolders of the specified folder.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolder(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.DeleteType,System.Boolean)">
            <summary>
            Empties multiple folders.
            </summary>
            <param name="folders">The IDs of the folders to empty.</param>
            <param name="deleteType">The deletion mode.</param>
            <param name="deleteSubFolders">If true delete the subfolders of the specified folder.</param>
            <returns>IList{FolderInfoResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.EmptyFolderImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.DeleteType,System.Boolean)">
            <summary>
            Empties the folder implementation.
            </summary>
            <param name="folders">The folders.</param>
            <param name="deleteType">Type of the delete.</param>
            <param name="deleteSubFolders">if set to <c>true</c> [delete sub folders].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ExportItems(Independentsoft.Exchange.ItemId)">
            <summary>
            Exports an item from a mailbox.
            </summary>
            <param name="itemId">The ID of the item to export.</param>
            <returns>ExportItemsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ExportItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Exports items from a mailbox.
            </summary>
            <param name="itemIds">The IDs of the items to exports.</param>
            <returns>IList{ExportItemsResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ExportItemsImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Exports the items implementation.
            </summary>
            <param name="itemIds">The item ids.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAsJunk(Independentsoft.Exchange.ItemId)">
            <summary>
            Marks as junk.
            </summary>
            <param name="itemId">The item identifier.</param>
            <returns>MarkAsJunkResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAsJunk(Independentsoft.Exchange.ItemId,System.Boolean)">
            <summary>
            Marks as junk.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="isJunk">if set to <c>true</c> [is junk].</param>
            <returns>MarkAsJunkResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAsJunk(Independentsoft.Exchange.ItemId,System.Boolean,System.Boolean)">
            <summary>
            Marks as junk.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="isJunk">if set to <c>true</c> [is junk].</param>
            <param name="moveItem">if set to <c>true</c> [move item].</param>
            <returns>MarkAsJunkResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAsJunk(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Marks as junk.
            </summary>
            <param name="itemIds">The item ids.</param>
            <returns>IList{MarkAsJunkResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAsJunk(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Boolean)">
            <summary>
            Marks as junk.
            </summary>
            <param name="itemIds">The item ids.</param>
            <param name="isJunk">if set to <c>true</c> [is junk].</param>
            <returns>IList{MarkAsJunkResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAsJunk(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Boolean,System.Boolean)">
            <summary>
            Marks as junk.
            </summary>
            <param name="itemIds">The item ids.</param>
            <param name="isJunk">if set to <c>true</c> [is junk].</param>
            <param name="moveItem">if set to <c>true</c> [move item].</param>
            <returns>IList{MarkAsJunkResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.MarkAsJunkImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Boolean,System.Boolean)">
            <summary>
            Marks as junk implementation.
            </summary>
            <param name="itemIds">The item ids.</param>
            <param name="isJunk">if set to <c>true</c> [is junk].</param>
            <param name="moveItem">if set to <c>true</c> [move item].</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UploadItems(Independentsoft.Exchange.UploadItem)">
            <summary>
            Imports an item to a mailbox.
            </summary>
            <param name="item">The item to import.</param>
            <returns>UploadItemsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UploadItems(System.Collections.Generic.IList{Independentsoft.Exchange.UploadItem})">
            <summary>
            Imports items to a mailbox.
            </summary>
            <param name="items">The items to import.</param>
            <returns>IList{UploadItemsResponse}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UploadItemsImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.UploadItem})">
            <summary>
            Uploads the items implementation.
            </summary>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ApplyConversationAction(Independentsoft.Exchange.ConversationAction)">
            <summary>
            Sets a one-time or follow up action on all the items in a conversation.
            </summary>
            <param name="conversationAction">The conversation action.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ApplyConversationAction(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationAction})">
            <summary>
            Sets a one-time or follow up action on all the items in a conversation.
            </summary>
            <param name="conversationActions">The conversation actions.</param>
            <returns>IList{Response}.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ApplyConversationActionImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ConversationAction})">
            <summary>
            Applies the conversation action implementation.
            </summary>
            <param name="conversationActions">The conversation actions.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationQueryTraversal)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="traversal">The traversal.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationQueryTraversal)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="traversal">The traversal.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder})">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns>FindConversationResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindConversationImplementation(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.ConversationShape,Independentsoft.Exchange.ConversationQueryTraversal,Independentsoft.Exchange.View,Independentsoft.Exchange.ViewFilter,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyOrder},Independentsoft.Exchange.MailboxSearchLocation,Independentsoft.Exchange.QueryString)">
            <summary>
            Finds the conversation implementation.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="shape">The shape.</param>
            <param name="traversal">The traversal.</param>
            <param name="view">The view.</param>
            <param name="viewFilter">The view filter.</param>
            <param name="propertyOrder">The property order.</param>
            <param name="mailboxSearchLocation">The mailbox search location.</param>
            <param name="queryString">The query string.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">parentFolderId</exception>
            <exception cref="T:System.ArgumentException">Not supported view type:  + view</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMailboxStatisticsByKeywords(Independentsoft.Exchange.MailboxStatisticsByKeywords)">
            <summary>
            Finds the mailbox statistics by keywords.
            </summary>
            <param name="mailboxStatisticsByKeywords">The mailbox statistics by keywords.</param>
            <returns>FindMailboxStatisticsByKeywordsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FindMailboxStatisticsByKeywordsImplementation(Independentsoft.Exchange.MailboxStatisticsByKeywords)">
            <summary>
            Finds the mailbox statistics by keywords implementation.
            </summary>
            <param name="mailboxStatisticsByKeywords">The mailbox statistics by keywords.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRetentionSettings(Independentsoft.Exchange.RetentionSettings)">
            <summary>
            Creates the retention settings.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRetentionSettings(Independentsoft.Exchange.RetentionSettings,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates the retention settings.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRetentionSettings(Independentsoft.Exchange.RetentionSettings,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the retention settings.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateRetentionSettingsImplementation(Independentsoft.Exchange.RetentionSettings,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the retention settings implementation.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRetentionSettings(Independentsoft.Exchange.RetentionSettings)">
            <summary>
            Updates the retention settings.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRetentionSettings(Independentsoft.Exchange.RetentionSettings,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Updates the retention settings.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRetentionSettings(Independentsoft.Exchange.RetentionSettings,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the retention settings.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateRetentionSettingsImplementation(Independentsoft.Exchange.RetentionSettings,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the retention settings implementation.
            </summary>
            <param name="retentionSettings">The retention settings.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRetentionSettings">
            <summary>
            Gets the retention settings.
            </summary>
            <returns>RetentionSettings.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRetentionSettings(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Gets the retention settings.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>RetentionSettings.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRetentionSettings(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the retention settings.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>RetentionSettings.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetRetentionSettingsImplementation(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the retention settings implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRetentionSettings">
            <summary>
            Deletes the retention settings.
            </summary>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRetentionSettings(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Deletes the retention settings.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteRetentionSettings(Independentsoft.Exchange.FolderId)">
            <summary>
            Deletes the retention settings.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOwaOptions">
            <summary>
            Gets the owa options.
            </summary>
            <returns>OwaOptions.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOwaOptions(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Gets the owa options.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>OwaOptions.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOwaOptions(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the owa options.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>OwaOptions.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOwaOptionsImplementation(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the owa options implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateOwaOptions(Independentsoft.Exchange.OwaOptions)">
            <summary>
            Creates the owa options.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateOwaOptions(Independentsoft.Exchange.OwaOptions,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates the owa options.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateOwaOptions(Independentsoft.Exchange.OwaOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the owa options.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateOwaOptionsImplementation(Independentsoft.Exchange.OwaOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the owa options implementation.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateOwaOptions(Independentsoft.Exchange.OwaOptions)">
            <summary>
            Updates the owa options.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateOwaOptions(Independentsoft.Exchange.OwaOptions,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Updates the owa options.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateOwaOptions(Independentsoft.Exchange.OwaOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the owa options.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateOwaOptionsImplementation(Independentsoft.Exchange.OwaOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the owa options implementation.
            </summary>
            <param name="owaOptions">The owa options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteOwaOptions">
            <summary>
            Deletes the owa options.
            </summary>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteOwaOptions(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Deletes the owa options.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteOwaOptions(Independentsoft.Exchange.FolderId)">
            <summary>
            Deletes the owa options.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCalendarOptions(Independentsoft.Exchange.CalendarOptions)">
            <summary>
            Creates the calendar options.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCalendarOptions(Independentsoft.Exchange.CalendarOptions,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates the calendar options.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCalendarOptions(Independentsoft.Exchange.CalendarOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the calendar options.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCalendarOptionsImplementation(Independentsoft.Exchange.CalendarOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the calendar options implementation.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCalendarOptions(Independentsoft.Exchange.CalendarOptions)">
            <summary>
            Updates the calendar options.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCalendarOptions(Independentsoft.Exchange.CalendarOptions,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Updates the calendar options.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCalendarOptions(Independentsoft.Exchange.CalendarOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the calendar options.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCalendarOptionsImplementation(Independentsoft.Exchange.CalendarOptions,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the calendar options implementation.
            </summary>
            <param name="calendarOptions">The calendar options.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCalendarOptions">
            <summary>
            Gets the calendar options.
            </summary>
            <returns>CalendarOptions.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCalendarOptions(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Gets the calendar options.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>CalendarOptions.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCalendarOptions(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the calendar options.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>CalendarOptions.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCalendarOptionsImplementation(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the calendar options implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteCalendarOptions">
            <summary>
            Deletes the calendar options.
            </summary>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteCalendarOptions(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Deletes the calendar options.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteCalendarOptions(Independentsoft.Exchange.FolderId)">
            <summary>
            Deletes the calendar options.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCategoryList(Independentsoft.Exchange.CategoryList)">
            <summary>
            Creates the category list.
            </summary>
            <param name="categoryList">The category list.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCategoryList(Independentsoft.Exchange.CategoryList,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Creates the category list.
            </summary>
            <param name="categoryList">The category list.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCategoryList(Independentsoft.Exchange.CategoryList,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the category list.
            </summary>
            <param name="categoryList">The category list.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateCategoryListImplementation(Independentsoft.Exchange.CategoryList,Independentsoft.Exchange.FolderId)">
            <summary>
            Creates the category list implementation.
            </summary>
            <param name="categoryList">The category list.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCategoryList(Independentsoft.Exchange.CategoryList)">
            <summary>
            Updates the category list.
            </summary>
            <param name="categoryList">The category list.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCategoryList(Independentsoft.Exchange.CategoryList,Independentsoft.Exchange.StandardFolder)">
            <summary>
            Updates the category list.
            </summary>
            <param name="categoryList">The category list.</param>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCategoryList(Independentsoft.Exchange.CategoryList,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the category list.
            </summary>
            <param name="categoryList">The category list.</param>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.UpdateCategoryListImplementation(Independentsoft.Exchange.CategoryList,Independentsoft.Exchange.FolderId)">
            <summary>
            Updates the category list implementation.
            </summary>
            <param name="categoryList">The category list.</param>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCategoryList">
            <summary>
            Gets the category list.
            </summary>
            <returns>CategoryList.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCategoryList(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Gets the category list.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>CategoryList.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCategoryList(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the category list.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>CategoryList.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetCategoryListImplementation(Independentsoft.Exchange.FolderId)">
            <summary>
            Gets the category list implementation.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteCategoryList">
            <summary>
            Deletes the category list.
            </summary>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteCategoryList(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Deletes the category list.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.DeleteCategoryList(Independentsoft.Exchange.FolderId)">
            <summary>
            Deletes the category list.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddImGroup(System.String)">
            <summary>
            Adds the im group.
            </summary>
            <param name="displayName">The display name.</param>
            <returns>ImGroupInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddImGroupImplementation(System.String)">
            <summary>
            Adds the im group implementation.
            </summary>
            <param name="displayName">The display name.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">displayName</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetImGroup(Independentsoft.Exchange.ItemId,System.String)">
            <summary>
            Sets the im group.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="displayName">The display name.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.SetImGroupImplementation(Independentsoft.Exchange.ItemId,System.String)">
            <summary>
            Sets the im group implementation.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="displayName">The display name.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveImGroup(Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the im group.
            </summary>
            <param name="groupId">The group identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:System.ArgumentNullException">groupId</exception>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveImGroupImplementation(Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the im group implementation.
            </summary>
            <param name="groupId">The group identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">groupId</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveContactFromImList(Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the contact from im list.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveContactFromImListImplementation(Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the contact from im list implementation.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">contactId</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveDistributionGroupFromImList(Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the distribution group from im list.
            </summary>
            <param name="groupId">The group identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveDistributionGroupFromImListImplementation(Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the distribution group from im list implementation.
            </summary>
            <param name="groupId">The group identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">groupId</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveImContactFromGroup(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the im contact from group.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="contactId">The contact identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.RemoveImContactFromGroupImplementation(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemId)">
            <summary>
            Removes the im contact from group implementation.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="contactId">The contact identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            groupId
            or
            contactId
            </exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddNewTelUriContactToGroup(Independentsoft.Exchange.ItemId,System.String,System.String,System.String)">
            <summary>
            Adds the new tel URI contact to group.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="telUriAddress">The tel URI address.</param>
            <param name="imTelephoneNumber">The im telephone number.</param>
            <param name="imContactSipUriAddress">The im contact sip URI address.</param>
            <returns>PersonaInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddNewTelUriContactToGroupImplementation(Independentsoft.Exchange.ItemId,System.String,System.String,System.String)">
            <summary>
            Adds the new tel URI contact to group implementation.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="telUriAddress">The tel URI address.</param>
            <param name="imTelephoneNumber">The im telephone number.</param>
            <param name="imContactSipUriAddress">The im contact sip URI address.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddDistributionGroupToImList(System.String,System.String)">
            <summary>
            Adds the distribution group to im list.
            </summary>
            <param name="smtpAddress">The SMTP address.</param>
            <param name="displayName">The display name.</param>
            <returns>ImGroupInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddDistributionGroupToImListImplementation(System.String,System.String)">
            <summary>
            Adds the distribution group to im list implementation.
            </summary>
            <param name="smtpAddress">The SMTP address.</param>
            <param name="displayName">The display name.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddNewImContactToGroup(Independentsoft.Exchange.ItemId,System.String)">
            <summary>
            Adds the new im contact to group.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="imAddress">The im address.</param>
            <returns>PersonaInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddNewImContactToGroup(Independentsoft.Exchange.ItemId,System.String,System.String)">
            <summary>
            Adds the new im contact to group.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="imAddress">The im address.</param>
            <param name="displayName">The display name.</param>
            <returns>PersonaInfoResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddNewImContactToGroupImplementation(Independentsoft.Exchange.ItemId,System.String,System.String)">
            <summary>
            Adds the new im contact to group implementation.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="imAddress">The im address.</param>
            <param name="displayName">The display name.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddImContactToGroup(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemId)">
            <summary>
            Adds the im contact to group.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="contactId">The contact identifier.</param>
            <returns>Response.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.AddImContactToGroupImplementation(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ItemId)">
            <summary>
            Adds the im contact to group implementation.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="contactId">The contact identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetImItemList">
            <summary>
            Gets the im item list.
            </summary>
            <returns>GetImItemListResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetImItemList(Independentsoft.Exchange.ExtendedPropertyList)">
            <summary>
            Gets the im item list.
            </summary>
            <param name="extendedProperties">The extended properties.</param>
            <returns>GetImItemListResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetImItemListImplementation(Independentsoft.Exchange.ExtendedPropertyList)">
            <summary>
            Gets the im item list implementation.
            </summary>
            <param name="extendedProperties">The extended properties.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetImItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Gets the im items.
            </summary>
            <param name="groupIds">The group ids.</param>
            <returns>GetImItemsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetImItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Collections.Generic.IList{Independentsoft.Exchange.ItemId})">
            <summary>
            Gets the im items.
            </summary>
            <param name="groupIds">The group ids.</param>
            <param name="contactIds">The contact ids.</param>
            <returns>GetImItemsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetImItems(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.ExtendedPropertyList)">
            <summary>
            Gets the im items.
            </summary>
            <param name="groupIds">The group ids.</param>
            <param name="contactIds">The contact ids.</param>
            <param name="extendedProperties">The extended properties.</param>
            <returns>GetImItemsResponse.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetImItemsImplementation(System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},System.Collections.Generic.IList{Independentsoft.Exchange.ItemId},Independentsoft.Exchange.ExtendedPropertyList)">
            <summary>
            Gets the im items implementation.
            </summary>
            <param name="groupIds">The group ids.</param>
            <param name="contactIds">The contact ids.</param>
            <param name="extendedProperties">The extended properties.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.GetOAuthToken(System.String,System.String,System.String)">
            <summary>
            Gets OAuthToken.
            </summary>
            <param name="clientId">client ID.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseUploadItemsResponse(System.IO.Stream)">
            <summary>
            Parses the upload items response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseMarkAsJunkResponse(System.IO.Stream)">
            <summary>
            Parses the mark as junk response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseExportItemsResponse(System.IO.Stream)">
            <summary>
            Parses the export items response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseImGroupInfoResponse(System.IO.Stream,System.String)">
            <summary>
            Parses the im group information response.
            </summary>
            <param name="stream">The stream.</param>
            <param name="localName">Name of the local.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseFolderInfoResponse(System.IO.Stream,System.String)">
            <summary>
            Parses the folder information response.
            </summary>
            <param name="stream">The stream.</param>
            <param name="localName">Name of the local.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseConversationItemResponse(System.IO.Stream,System.String)">
            <summary>
            Parses the conversation item response.
            </summary>
            <param name="stream">The stream.</param>
            <param name="localName">Name of the local.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseItemInfoResponse(System.IO.Stream,System.String)">
            <summary>
            Parses the item information response.
            </summary>
            <param name="stream">The stream.</param>
            <param name="localName">Name of the local.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseFindFolderResponse(System.IO.Stream)">
            <summary>
            Parses the find folder response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseGetImItemsResponse(System.IO.Stream)">
            <summary>
            Parses the get im items response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseGetImItemListResponse(System.IO.Stream)">
            <summary>
            Parses the get im item list response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseFindPeopleResponse(System.IO.Stream)">
            <summary>
            Parses the find people response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParsePersonaInfoResponse(System.IO.Stream,System.String)">
            <summary>
            Parses the persona information response.
            </summary>
            <param name="stream">The stream.</param>
            <param name="localName">Name of the local.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseFindItemResponse(System.IO.Stream)">
            <summary>
            Parses the find item response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseCreateAttachmentResponse(System.IO.Stream)">
            <summary>
            Parses the create attachment response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseConvertIdResponse(System.IO.Stream)">
            <summary>
            Parses the convert identifier response.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseResponse(System.IO.Stream,System.String)">
            <summary>
            Parses the response.
            </summary>
            <param name="stream">The stream.</param>
            <param name="localName">Name of the local.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolderIds(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Creates the folder ids.
            </summary>
            <param name="folders">The folders.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateParentFolderIds(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Creates the parent folder ids.
            </summary>
            <param name="folders">The folders.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFoldersXml(System.Collections.Generic.IList{Independentsoft.Exchange.Folder})">
            <summary>
            Creates the folders XML.
            </summary>
            <param name="folders">The folders.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.CreateFolderNamesXml(System.Collections.Generic.IList{System.String})">
            <summary>
            Creates the folder names XML.
            </summary>
            <param name="folderNames">The folder names.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.ParseWebException(System.Net.WebException,System.String)">
            <summary>
            Parses the web exception.
            </summary>
            <param name="webException">The web exception.</param>
            <param name="requestBody">The request body.</param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FilterItemPropertyPaths(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Filters the item property paths.
            </summary>
            <param name="propertyPaths">The property paths.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FilterFolderShape1(Independentsoft.Exchange.FolderShape)">
            <summary>
            Filters the folder shape.
            </summary>
            <param name="folderShape">The folder shape.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Service.FilterFolderShape2(Independentsoft.Exchange.FolderShape)">
            <summary>
            Filters the folder shape.
            </summary>
            <param name="folderShape">The folder shape.</param>
        </member>
        <member name="P:Independentsoft.Exchange.Service.AllowAutoRedirect">
            <summary>
            Gets or sets a value that indicates whether the request should follow redirection responses.
            </summary>
            <value><c>true</c> if [allow automatic redirect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.AllowWriteStreamBuffering">
            <summary>
            Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.
            </summary>
            <value><c>true</c> if [allow write stream buffering]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.SendChunked">
            <summary>
            Gets or sets a value indicating whether to send data in segments to the Internet resource.
            </summary>
            <value><c>true</c> if [send chunked]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.PreAuthenticate">
            <summary>
            Gets or sets a value indicating whether to send a authenticate header with the request.
            </summary>
            <value><c>true</c> if [pre authenticate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.KeepAlive">
            <summary>
            Gets or sets a value indicating whether to make a persistent connection.
            </summary>
            <value><c>true</c> if [keep alive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.Timeout">
            <summary>
            Gets or sets the time-out value for a request.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.ClientCertificate">
            <summary>
            Gets or sets the security client certificate.
            </summary>
            <value>The client certificate.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.Credentials">
            <summary>
            Gets or sets user's credentials.
            </summary>
            <value>The credentials.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.Proxy">
            <summary>
            Gets or sets proxy server.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.Url">
            <summary>
            Gets or sets URL of Exchange Web Services.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.RequestEncoding">
            <summary>
            Gets or sets encoding used for a request.
            </summary>
            <value>The request encoding.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.ExchangeImpersonation">
            <summary>
            Gets or sets the ID of the user that Exchange Web Services (EWS) should impersonate.
            </summary>
            <value>The exchange impersonation.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.RequestServerVersion">
            <summary>
            Contains the versioning information that identifies the schema version to target for a request.
            </summary>
            <value>The request server version.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.DateTimePrecision">
            <summary>
            Gets or sets the date time precision.
            </summary>
            <value>The date time precision.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.TimeZoneContext">
            <summary>
            Gets or sets the time zone context.
            </summary>
            <value>The time zone context.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.MailboxCulture">
            <summary>
            Gets or sets the mailbox culture that is used when opening a mailbox
            </summary>
            <value>The mailbox culture.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.ConnectionGroupName">
            <summary>
            Gets or sets the name of the connection group for the request.
            </summary>
            <value>The name of the connection group.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Service.Headers">
            <summary>
            Contains custom HTTP headers.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Service.OAuthToken">
            <summary>
            Gets or sets OAuthToken.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PhoneEntity">
            <summary>
            Represents a single phone number entity.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PhoneEntity.#ctor">
            <summary>
            Initializes a new instance of the PhoneEntity class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PhoneEntity.ToString">
            <summary>
            Converts the value of the current PhoneEntity object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.PhoneEntity.Position">
            <summary>
            Represents the position of the entity.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PhoneEntity.OriginalPhone">
            <summary>
            Represents the original phone number for a contact or persona.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PhoneEntity.Phone">
            <summary>
            Represents the phone number for an extracted contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PhoneEntity.Type">
            <summary>
            Represents the type of phone number, for example, "Home" or "Business".
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Occurrence">
            <summary>
            Represents a single modified occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Occurrence.#ctor">
            <summary>
            Initializes a new instance of the Occurrence class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Occurrence.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the Occurrence class.
            </summary>
            <param name="itemId">The item identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.Occurrence.ToString">
            <summary>
            Converts the value of the current Occurrence object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current NumberedRecurrenceRange object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Occurrence.ItemId">
            <summary>
            Contains the unique identifier and change key of a modified occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Occurrence.StartTime">
            <summary>
            Represents the start time of a modified occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Occurrence.EndTime">
            <summary>
            Represents the end time of a modified occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Occurrence.OriginalStartTime">
            <summary>
            Represents the original start time of a modified occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MessageTrackingSearchResult">
            <summary>
            Contains a single message result for a FindMessageTrackingReportResponse element.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingSearchResult.Subject">
            <summary>
            Contains the e-mail message subject.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingSearchResult.Sender">
            <summary>
            Contains the e-mail message sender�s address.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingSearchResult.PurportedSender">
            <summary>
            Contains contact information for the alleged sender of an e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingSearchResult.Recipients">
            <summary>
            Contains a list of e-mail addresses that received this message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingSearchResult.SubmittedTime">
            <summary>
            Contains the time that the message was submitted.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingSearchResult.MessageTrackingReportId">
            <summary>
            Contains an internal ID that identifies the message in the transport database.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageTrackingSearchResult.PreviousHopServer">
            <summary>
            Contains the name of the server in the forest that previously accepted the message.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.LegacyFreeBusy">
            <summary>
            Represents the free/busy status of the calendar item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LegacyFreeBusy.Free">
            <summary>
            The time slot that is associated with the appointment appears as free.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LegacyFreeBusy.Tentative">
            <summary>
            The time slot that is associated with the appointment appears as tentative.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LegacyFreeBusy.Busy">
            <summary>
            The time slot that is associated with the appointment appears as busy. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LegacyFreeBusy.OutOfOffice">
            <summary>
            The time slot that is associated with the appointment appears as out of office (OOF). 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LegacyFreeBusy.NoData">
            <summary>
            No free/busy status is associated with the appointment. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LegacyFreeBusy.WorkingElsewhere">
            <summary>
            Specifies the status as working outside the office.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LegacyFreeBusy.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.InvalidRecipient">
            <summary>
            Contains the SMTP address of the invalid recipient and information about why the recipient is invalid.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.InvalidRecipient.SmtpAddress">
            <summary>
            Contains the SMTP address of the invalid recipient. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.InvalidRecipient.ResponseCode">
            <summary>
            Provides an error code that identifies the specific error that the request encountered.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.InvalidRecipient.MessageText">
            <summary>
            Provides a text description of the status of the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GroupAttendeeConflict">
            <summary>
            Contains aggregate conflict information about the number of users who are available, the number of users who have conflicts, and the number of users who do not have availability information in a distribution list for a suggested meeting time.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.GroupAttendeeConflict.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.GroupAttendeeConflict"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GroupAttendeeConflict.NumberOfMembers">
            <summary>
            Represents the number of users, resources, and rooms in a distribution list.
            </summary>
            <value>The number of members.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GroupAttendeeConflict.NumberOfMembersAvailable">
            <summary>
            Represents the number of distribution list members who are available for a suggested meeting time. This element represents members for whom the status is Free.
            </summary>
            <value>The number of members available.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GroupAttendeeConflict.NumberOfMembersWithConflict">
            <summary>
            Represents the number of distribution list members who have a conflict with a suggested meeting time. This element represents members who have a Busy, OOF, or Tentative status.
            </summary>
            <value>The number of members with conflict.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GroupAttendeeConflict.NumberOfMembersWithNoData">
            <summary>
            Represents the number of group members who do not have published free/busy data to compare to a suggested meeting time. This element represents members of a distribution list that is too large or members who have No Data status.
            </summary>
            <value>The number of members with no data.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetMessageTrackingReportResponse">
            <summary>
            Contains the response for the GetMessageTrackingReport Operation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetMessageTrackingReportResponse.MessageTrackingReport">
            <summary>
            Contains a single message that is returned in a GetMessageTrackingReport Operation.
            </summary>
            <value>The message tracking report.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GetMessageTrackingReportResponse.Diagnostics">
            <summary>
            Provides timing and performance information that is used for reporting in a DataCenter.
            </summary>
            <value>The diagnostics.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GetMessageTrackingReportResponse.Warnings">
            <summary>
            Gets the warnings.
            </summary>
            <value>The warnings.</value>
        </member>
        <member name="T:Independentsoft.Exchange.FlagIcon">
            <summary>
            Specifies whether an item is flagged, and if it is, the color associated with the flagged item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagIcon.Purple">
            <summary>
            Purple has been associated with the flagged item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagIcon.Orange">
            <summary>
            Orange has been associated with the flagged item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagIcon.Green">
            <summary>
            Green has been associated with the flagged item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagIcon.Yellow">
            <summary>
            Yellow has been associated with the flagged item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagIcon.Blue">
            <summary>
            Blue has been associated with the flagged item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagIcon.Red">
            <summary>
            Red has been associated with the flagged item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagIcon.None">
            <summary>
            No flag has been associated with the item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.EmailAddressEntity">
            <summary>
            Represents a single email address.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EmailAddressEntity.#ctor">
            <summary>
            Initializes a new instance of the EmailAddressEntity class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EmailAddressEntity.ToString">
            <summary>
            Converts the value of the current EmailAddressEntity object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.EmailAddressEntity.Position">
            <summary>
            Represents the position of the entity.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EmailAddressEntity.EmailAddress">
            <summary>
            Represents an email address.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DistributionList">
            <summary>
            Represents a distribution list.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DistributionList.#ctor">
            <summary>
            Initializes a new instance of the DistributionList class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DistributionList.ToString">
            <summary>
            Returns the string representation for the current <see cref="T:Independentsoft.Exchange.DistributionList"/>
            </summary>
            <returns>The string representing the current <see cref="T:Independentsoft.Exchange.DistributionList"/></returns>
        </member>
        <member name="P:Independentsoft.Exchange.DistributionList.FileAs">
            <summary>
            Represents how a distribution list is filed in the Contacts folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DistributionList.ContactSource">
            <summary>
            Describes whether the contact is located in the Exchange store or in Active Directory Domain Services (AD DS).
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DistributionList.Members">
            <summary>
            Contains a list of members of the distribution list.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DelegateUser">
            <summary>
            Identifies a single delegate to add or update in a mailbox or a delegate returned in a delegate management response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DelegateUser.#ctor">
            <summary>
            Initializes a new instance of the DelegateUser class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DelegateUser.#ctor(Independentsoft.Exchange.UserId)">
            <summary>
            Initializes a new instance of the DelegateUser class.
            </summary>
            <param name="userId">The user identifier of the delegate</param>
        </member>
        <member name="M:Independentsoft.Exchange.DelegateUser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DelegateUser class.
            </summary>
            <param name="primarySmtpAddress">The primary SMTP Address of the delegate</param>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.UserId">
            <summary>
            Identifies the delegate.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.CalendarFolderPermissionLevel">
            <summary>
            Contains the permissions for the default Calendar folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.TasksFolderPermissionLevel">
            <summary>
            Contains the permissions for the default Task folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.InboxFolderPermissionLevel">
            <summary>
            Contains the permissions for the default Inbox folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.ContactsFolderPermissionLevel">
            <summary>
            Contains the permissions for the default Contacts folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.NotesFolderPermissionLevel">
            <summary>
            Contains the permissions for the default Notes folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.JournalFolderPermissionLevel">
            <summary>
            Contains the permissions for the default Journal folder. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.ReceiveCopiesOfMeetingMessages">
            <summary>
            Indicates whether a delegate receives copies of meeting-related messages that are addressed to the principal. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUser.ViewPrivateItems">
            <summary>
            Indicates whether a delegate has permission to view private calendar items in the principal's mailbox.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationShape">
            <summary>
            Identifies a set of properties to return in a FindConversation operation.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationShape.#ctor">
            <summary>
            Initializes a new instance of the ConversationShape class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationShape.#ctor(Independentsoft.Exchange.ShapeType)">
            <summary>
            Initializes a new instance of the ConversationShape class.
            </summary>
            <param name="type">The <see cref="T:Independentsoft.Exchange.ShapeType"/> of the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the ConversationShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the ConversationShape class.
            </summary>
            <param name="type">The <see cref="T:Independentsoft.Exchange.ShapeType"/> of the response</param>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationShape.ToString">
            <summary>
            Converts the value of the current ConversationShape object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current ConversationShape object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationShape.Type">
            <summary>
            Identifies the basic configuration of properties to return in an item or folder response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationShape.PropertyPaths">
            <summary>
            Identifies additional properties to return in a response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationNode">
            <summary>
            Represents a Conversation
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationNode.InternetMessageId">
            <summary>
            Gets the Internet message identifier for a conversation node.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationNode.ParentInternetMessageId">
            <summary>
            Gets the parent internet message identifier for a conversation node.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationNode.Items">
            <summary>
            Contains a collection of items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationAction">
            <summary>
            Contains a single action to be applied to a single conversation.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationAction.#ctor">
            <summary>
            Initializes a new instance of the ConversationAction class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.Action">
            <summary>
            Contains the action to perform on the conversation specified by the ConversationId element.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.ConversationId">
            <summary>
            Contains the identifier of the conversation that will have the action specified by the Action (ConversationActionTypeType) element applied to items in the conversation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.ContextFolderId">
            <summary>
            Indicates the folder that is targeted for actions that use folders. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.ConversationLastSyncTime">
            <summary>
            Contains the date and time that a conversation was last synchronized. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.ProcessRightAway">
            <summary>
            Indicates whether the response is sent as soon as the action starts processing on the server or whether the response is sent after the action has completed. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.DestinationFolderId">
            <summary>
            Indicates the destination folder for copy and move actions.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.Categories">
            <summary>
            Contains a collection of strings that identify the categories to which items in a conversation belong.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.EnableAlwaysDelete">
            <summary>
            Specifies a flag that enables deletion for all new items in a conversation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.IsRead">
            <summary>
            Indicates whether a message has been read.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationAction.DeleteType">
            <summary>
            Indicates how items in a conversation are deleted.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContactPropertyPath">
             <summary>
             Represents a contact property path
             </summary>
             <example>
             This example finds all contacts named "John" and prints the contact's info
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             IsEqualTo restriction = new IsEqualTo(ContactPropertyPath.GivenName, "John");
            
             FindItemResponse response = service.FindItem(StandardFolder.Contacts, ContactPropertyPath.AllPropertyPaths, restriction);
             for (int i = 0; i &lt; response.Items.Count; i++)
             {
                 if (response.Items[i] is Contact)
                 {
                     Contact contact = (Contact)response.Items[i];
            
                     CrestronConsole.PrintLine("GivenName = " + contact.GivenName);
                     CrestronConsole.PrintLine("Surname = " + contact.Surname);
                     CrestronConsole.PrintLine("CompanyName = " + contact.CompanyName);
                     CrestronConsole.PrintLine("BusinessAddress = " + contact.BusinessAddress);
                     CrestronConsole.PrintLine("BusinessPhone = " + contact.BusinessPhone);
                     CrestronConsole.PrintLine("Email1DisplayName = " + contact.Email1DisplayName);
                     CrestronConsole.PrintLine("Email1Address = " + contact.Email1Address);
                     CrestronConsole.PrintLine("----------------------------------------------------------------");
                 }
             }
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.FileAs">
            <summary>
            Represents how a contact or distribution list is filed in the Contacts folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.FileAsMapping">
            <summary>
            Defines how to construct what is displayed for a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.GivenName">
            <summary>
            Contains a contact's given name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Initials">
            <summary>
            Represents the initials of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.MiddleName">
            <summary>
            Represents the middle name of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Nickname">
            <summary>
            Represents the nickname of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.CompleteName">
            <summary>
            Represents the complete name of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.CompanyName">
            <summary>
            Represents the company name that is associated with a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomeAddress">
            <summary>
            Specifies the complete address of the contact’s home address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessAddress">
            <summary>
            Specifies the contact's complete work address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherAddress">
            <summary>
            Specifies the contact's complete other address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomeAddressStreet">
            <summary>
            Specifies the contact's complete home address street
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomeAddressCity">
            <summary>
            Specifies the contact's complete home address city
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomeAddressState">
            <summary>
            Specifies the contact's complete other home address state
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomeAddressCountry">
            <summary>
            Specifies the contact's complete home address country
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomeAddressPostalCode">
            <summary>
            Specifies the contact's complete home address postal code
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessAddressStreet">
            <summary>
            Specifies the contact's complete business address street
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessAddressCity">
            <summary>
            Specifies the contact's complete business address city
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessAddressState">
            <summary>
            Specifies the contact's complete business address state
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessAddressCountry">
            <summary>
            Specifies the contact's complete business address country
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessAddressPostalCode">
            <summary>
            Specifies the contact's complete business address postal code
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherAddressStreet">
            <summary>
            Specifies the contact's complete other address street
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherAddressCity">
            <summary>
            Specifies the contact's complete other address city
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherAddressState">
            <summary>
            Specifies the contact's complete other address city
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherAddressCountry">
            <summary>
            Specifies the contact's complete other address country
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherAddressPostalCode">
            <summary>
            Specifies the contact's complete other address postal code
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.AssistantPhone">
            <summary>
            Specifies the contact's assistant phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessFax">
            <summary>
            Specifies the contact's business fax
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessPhone">
            <summary>
            Specifies the contact's business phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessPhone2">
            <summary>
            Specifies the contact's second business phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.CallbackPhone">
            <summary>
            Specifies the contact's callback phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.CarPhone">
            <summary>
            Specifies the contact's car phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.CompanyPhone">
            <summary>
            Specifies the contact's company phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomeFax">
            <summary>
            Specifies the contact's home fax
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomePhone">
            <summary>
            Specifies the contact's home phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HomePhone2">
            <summary>
            Specifies the contact's second home phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Isdn">
            <summary>
            Specifies the contact's isdn
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.MobilePhone">
            <summary>
            Specifies the contact's mobile phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherFax">
            <summary>
            Specifies the contact's other fax
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OtherPhone">
            <summary>
            Specifies the contact's other phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Pager">
            <summary>
            Specifies the contact's pager
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.PrimaryPhone">
            <summary>
            Specifies the contact's primary phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.RadioPhone">
            <summary>
            Specifies the contact's radio phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Telex">
            <summary>
            Specifies the contact's telex
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.TtyTddPhone">
            <summary>
            Specifies the contact's ttytdd phone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.AssistantName">
            <summary>
            Represents an assistant to a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Birthday">
            <summary>
            Represents the birth date of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.BusinessHomePage">
            <summary>
            Represents the Home page (Web address) for the contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Children">
            <summary>
            Contains the names of a contact's children
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Companies">
            <summary>
            Represents the collection of companies that are associated with a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Department">
            <summary>
            Represents the contact's department at work
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Generation">
            <summary>
            Represents a generational abbreviation that follows the full name of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.InstantMessengerAddress1">
            <summary>
            Specifies the contact's instant messenger address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.InstantMessengerAddress2">
            <summary>
            Specifies the contact's second instant messenger address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.InstantMessengerAddress3">
            <summary>
            Specifies the contact's third instant messenger address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.JobTitle">
            <summary>
            Represents the job title of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Manager">
            <summary>
            Represents a contact's manager
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Mileage">
            <summary>
            Represents mileage for a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.OfficeLocation">
            <summary>
            Represents the office location of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.SelectedMailingAddress">
            <summary>
            Represents the display types for physical addresses
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Profession">
            <summary>
            Represents the profession of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.SpouseName">
            <summary>
            Represents the name of a contact's spouse or partner
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Surname">
            <summary>
            Represents the surname of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.WeddingAnniversary">
            <summary>
            Contains the wedding anniversary of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Alias">
            <summary>
            Contains the email alias of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.DirectoryId">
            <summary>
            Contains the directory ID of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.DirectReports">
            <summary>
            Contains SMTP information that identifies the direct reports of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.ManagerMailbox">
            <summary>
            Contains SMTP information that identifies the mailbox of the contact's manager
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.MSExchangeCertificate">
            <summary>
            Contains a value that encodes the Microsoft Exchange certificate of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Notes">
            <summary>
            Contains supplementary contact information
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.PhoneticFullName">
            <summary>
            Contains the full name of a contact, including the first and last name, spelled phonetically
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.PhoneticFirstName">
            <summary>
            Contains the first name of a contact, spelled phonetically
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.PhoneticLastName">
            <summary>
            Contains the last name of a contact, spelled phonetically
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Photo">
            <summary>
            Contains a value that encodes the photo of a contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.UserSMIMECertificate">
            <summary>
            Contains a value that encodes a contact's SMIME certificate
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email1Address">
            <summary>
            Specifies the first e-mail address of the contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email2Address">
            <summary>
            Specifies the second e-mail address of the contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email3Address">
            <summary>
            Specifies the third e-mail address of the contact
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email1DisplayName">
            <summary>
            Specifies the display name of the contact's first e-mail address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email2DisplayName">
            <summary>
            Specifies the display name of the contact's second e-mail address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email3DisplayName">
            <summary>
            Specifies the display name of the contact's third e-mail address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email1DisplayAs">
            <summary>
            Specifies how to display the contact's first email address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email2DisplayAs">
            <summary>
            Specifies how to display the contact's second email address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email3DisplayAs">
            <summary>
            Specifies how to display the contact's third email address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email1Type">
            <summary>
            The type of the contact's first email address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email2Type">
            <summary>
            The type of the contact's second email address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Email3Type">
            <summary>
            The type of the contact's third email address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.HasPicture">
            <summary>
            Indicates if the contact has a picture
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Gender">
            <summary>
            Contains the contact's gender
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContactPropertyPath.Title">
            <summary>
            Contains the contact's title
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CompleteName">
            <summary>
            Represents the complete name of a contact.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CompleteName.#ctor">
            <summary>
            Initializes a new instance of the CompleteName class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CompleteName.ToString">
            <summary>
            Converts the value of the current CompleteName object to its equivalent string representation.
            </summary>
            <returns>Returns the string representation of the current CompleteName object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.Title">
            <summary>
            Represents the title of a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.FirstName">
            <summary>
            Represents the first name of contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.MiddleName">
            <summary>
            Represents the middle name of a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.LastName">
            <summary>
            Represents the last name of a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.Suffix">
            <summary>
            Represents a suffix to a contact's name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.Initials">
            <summary>
            Represents the initials of a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.FullName">
            <summary>
            Represents the full name of a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.Nickname">
            <summary>
            Represents the nickname of a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.YomiFirstName">
            <summary>
            Represents the name used in Japan for the searchable or phonetic spelling of a Japanese first name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CompleteName.YomiLastName">
            <summary>
            Represents the name used in Japan for the searchable or phonetic spelling of a Japanese last name.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ClientAccessTokenType">
            <summary>
            Defines the client access token type
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ClientAccessTokenType.CallerIdentity">
            <summary>
            The identity of the caller
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ClientAccessTokenType.ExtensionCallback">
            <summary>
            A reference to a client access token type extension callback
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.ProtocolType">
            <summary>
            Identifies the type of the configured mail account.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ProtocolType.Exchange">
            <summary>
            The protocol that is used to connect to the server is Exchange RPC.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ProtocolType.ExchangeProxy">
            <summary>
            The protocol that is used to connect to the server is Exchange RPC over HTTP, using an RPC proxy server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ProtocolType.Web">
            <summary>
            E-mail is accessed from a Web browser by using the URL that is specified in the Server (POX) element. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol">
            <summary>
            Contains the protocol that is used to connect to the server is Exchange RPC over HTTP, using an RPC proxy server.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.#ctor">
            <summary>
            Initializes a new instance of the ExchangeProxyProtocol class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.Type">
            <summary>
            Identifies the type of the configured mail account.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.AuthenticationPackage">
            <summary>
            Specifies the authentication scheme that is used when authenticating against the computer that is running Microsoft Exchange Server that has the Mailbox server role installed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.Server">
            <summary>
            Specifies the name of the mail server.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ServerDN">
            <summary>
            Specifies the distinguished name of the computer that is running Microsoft Exchange Server.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ServerVersion">
            <summary>
            Represents the version number of the computer that is running Microsoft Exchange Server.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ActiveDirectory">
            <summary>
            Specifies the active directory
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.MailboxDatabaseLegacyDN">
            <summary>
            Represents the distinguished name of the mailbox database.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.AvailabilityServiceUrl">
            <summary>
            Specifies the URL of the best instance of the Exchange Web Services for a mail-enabled user
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ExchangeWebServiceUrl">
            <summary>
            Specifies the URL for the Web services virtual directory.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.UnifiedMessagingServiceUrl">
            <summary>
            Specifies the URL of the best instance of the Unified Messaging Web service for a mail-enabled user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.OutOfOfficeUrl">
            <summary>
            Specifies the URL of the best instance of the Availability service for a mail-enabled user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.OfflineAddressBookUrl">
            <summary>
            Specifies the Offline Address Book configuration server URL for an Exchange topology.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.SslEnabled">
            <summary>
            Specifies whether secure logon is required.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ExchangeControlPanelUrl">
            <summary>
            Specifies the the base Exchange Control Panel (ECP) URL. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ExchangeControlPanelUnifiedMessagingUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for voice mail.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ExchangeControlPanelEmailAggregationUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for e-mail aggregation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ExchangeControlPanelTextMessagingUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for Mobile Notifications Short Message Service (SMS).
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ExchangeControlPanelMessageTrackingUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for E-Message Tracking.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.ExchangeControlPanelRetentionTagsUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for retention tags.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProxyProtocol.PublicFolderServer">
            <summary>
            Contains the fully qualified domain name (FQDN) of an Exchange Mailbox server that has a public folder database.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AggregateOn">
            <summary>
            Represents the property that is used to determine the order of grouped items for a grouped FindItem result set.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AggregateOn.#ctor">
            <summary>
            Initializes a new instance of the AggregateOn class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AggregateOn.#ctor(Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the AggregateOn class with the specified propertyPath.
            </summary>
            <param name="propertyPath">The property path.</param>
        </member>
        <member name="M:Independentsoft.Exchange.AggregateOn.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.Aggregate)">
            <summary>
            Initializes a new instance of the AggregateOn class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="aggregate">The aggregate.</param>
        </member>
        <member name="M:Independentsoft.Exchange.AggregateOn.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.AggregateOn.PropertyPath">
            <summary>
            Gets or sets the property path.
            </summary>
            <value>The property path.</value>
        </member>
        <member name="P:Independentsoft.Exchange.AggregateOn.Aggregate">
            <summary>
            Gets or sets the aggregate.
            </summary>
            <value>The aggregate.</value>
        </member>
        <member name="T:Independentsoft.Msg.Sensitivity">
            <summary>
            Identifies the sensitivity level assigned to a message item. These levels are arbitrarily set and filtered for, by the user.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Sensitivity.Personal">
            <summary>
            The message has the Personal sensitivity setting.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Sensitivity.Private">
            <summary>
            The message has the Private sensitivity setting.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Sensitivity.Confidential">
            <summary>
            The message has the Confidential sensitivity setting
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Sensitivity.None">
            <summary>
            The message has the Normal sensitivity setting. 
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.CalendarType">
            <summary>
            Enum CalendarType
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.Gregorian">
            <summary>
            Gregorian
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.GregorianUS">
            <summary>
            GregorianUS
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.JapaneseEmperorEra">
            <summary>
            JapaneseEmperorEra
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.Taiwan">
            <summary>
            Taiwan
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.KoreanTangunEra">
            <summary>
            KoreanTangunEra
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.Hijri">
            <summary>
            Hijri
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.Thai">
            <summary>
            Thai
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.HebrewLunar">
            <summary>
            HebrewLunar
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.GregorianMiddleEastFrench">
            <summary>
            GregorianMiddleEastFrench
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.GregorianArabic">
            <summary>
            GregorianArabic
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.GregorianTransliteratedEnglish">
            <summary>
            GregorianTransliteratedEnglish
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.GregorianTransliteratedFrench">
            <summary>
            GregorianTransliteratedFrench
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.JapaneseLunar">
            <summary>
            JapaneseLunar
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.ChineseLunar">
            <summary>
            ChineseLunar
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.SakaEra">
            <summary>
            SakaEra
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.LunarETOChinese">
            <summary>
            LunarETOChinese
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.LunarETOKorean">
            <summary>
            LunarETOKorean
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.LunarRokuyou">
            <summary>
            LunarRokuyou
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.KoreanLunar">
            <summary>
            KoreanLunar
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.UmAlQura">
            <summary>
            UmAlQura
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.CalendarType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UserConfigurationDictionaryEntry">
            <summary>
            Specifies the contents of a single dictionary entry property.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryEntry.#ctor">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryEntry class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryEntry.#ctor(Independentsoft.Exchange.UserConfigurationDictionaryKey,Independentsoft.Exchange.UserConfigurationDictionaryValue)">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryEntry class.
            </summary>
            <param name="key">The dictionary key</param>
            <param name="value">The dictionary value</param>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationDictionaryEntry.Key">
            <summary>
            Specifies the dictionary key for a dictionary property.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationDictionaryEntry.Value">
            <summary>
            Specifies the dictionary value for a dictionary property.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SuggestionDay">
            <summary>
            Represents a single day that contains suggested meeting times.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SuggestionDay.#ctor">
            <summary>
            Initializes a new instance of the SuggestionDay class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SuggestionDay.#ctor(Crestron.SimplSharp.CrestronXml.XmlTextReader)">
            <summary>
            Initializes a new instance of the SuggestionDay class.
            </summary>
            <param name="reader">A <see cref="T:Crestron.SimplSharp.CrestronXml.XmlTextReader"/> with XML data to load this <see cref="T:Independentsoft.Exchange.SuggestionDay"/></param>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionDay.Date">
            <summary>
            Represents the date that contains the suggested meeting times.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionDay.Quality">
            <summary>
            Represents the quality of the day for containing quality suggested meeting times.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SuggestionDay.Suggestions">
            <summary>
            Contains a collection of meeting suggestions.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Suggestion">
            <summary>
            Represents a single meeting suggestion.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Suggestion.#ctor">
            <summary>
            Initializes a new instance of the Suggestion class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Suggestion.#ctor(Crestron.SimplSharp.CrestronXml.XmlTextReader)">
            <summary>
            Initializes a new instance of the Suggestion class.
            </summary>
            <param name="reader">A <see cref="T:Crestron.SimplSharp.CrestronXml.XmlTextReader"/> with XML data to load this <see cref="T:Independentsoft.Exchange.Suggestion"/></param>
        </member>
        <member name="P:Independentsoft.Exchange.Suggestion.MeetingTime">
            <summary>
            Represents a suggested meeting time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Suggestion.IsWorkTime">
            <summary>
            Represents whether the suggested meeting time occurs during scheduled work hours.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Suggestion.Quality">
            <summary>
            Represents the quality of the suggested meeting time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Suggestion.AttendeeConflicts">
            <summary>
            Contains a collection of information that describes conflicts between users and resources and the suggested meeting time.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SubscribeResponse">
            <summary>
            Contains the status and result of a single Subscribe Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SubscribeResponse.SubscriptionId">
            <summary>
            Represents the identifier for a subscription.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SubscribeResponse.Watermark">
            <summary>
            Represents an event bookmark in the mailbox event queue.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StandardFolderId">
            <summary>
            Class StandardFolderId.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StandardFolderId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StandardFolderId"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StandardFolderId.#ctor(Independentsoft.Exchange.StandardFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StandardFolderId"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StandardFolderId.#ctor(Independentsoft.Exchange.StandardFolder,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StandardFolderId"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="changeKey">The change key.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StandardFolderId.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Mailbox)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StandardFolderId"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="mailbox">The mailbox.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StandardFolderId.#ctor(Independentsoft.Exchange.StandardFolder,System.String,Independentsoft.Exchange.Mailbox)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StandardFolderId"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="changeKey">The change key.</param>
            <param name="mailbox">The mailbox.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StandardFolderId.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.StandardFolderId.Id">
            <summary>
            Contains a string that identifies a folder in the Exchange store.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.StandardFolderId.Mailbox">
            <summary>
            Gets or sets the mailbox.
            </summary>
            <value>The mailbox.</value>
        </member>
        <member name="T:Independentsoft.Exchange.SearchPageDirection">
            <summary>
            Defines the direction for a mailbox search
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchPageDirection.Previous">
            <summary>
            The search direction is backwards
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchPageDirection.Next">
            <summary>
            The search direction is forward
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchPageDirection.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ResolveNamesSearchScope">
            <summary>
            Identifies the order and scope for a ResolveNames search. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResolveNamesSearchScope.ActiveDirectory">
            <summary>
            Only the Active Directory directory service is searched.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResolveNamesSearchScope.ActiveDirectoryContacts">
            <summary>
            Active Directory is searched first, and then the contact folders that are specified in the ParentFolderIds property are searched.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResolveNamesSearchScope.Contacts">
            <summary>
            Only the contact folders that are identified by the ParentFolderIds are searched.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResolveNamesSearchScope.ContactsActiveDirectory">
            <summary>
            Contact folders that are identified by the ParentFolderIds property are searched first and then Active Directory is searched.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResolveNamesSearchScope.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.QueryString">
            <summary>
            Class QueryString.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.QueryString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.QueryString"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.QueryString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.QueryString"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="P:Independentsoft.Exchange.QueryString.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:Independentsoft.Exchange.QueryString.ResetCache">
            <summary>
            Gets or sets a value indicating whether [reset cache].
            </summary>
            <value><c>true</c> if [reset cache]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.QueryString.ReturnHighlightTerms">
            <summary>
            Gets or sets a value indicating whether [return highlight terms].
            </summary>
            <value><c>true</c> if [return highlight terms]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.QueryString.ReturnDeletedItems">
            <summary>
            Gets or sets a value indicating whether [return deleted items].
            </summary>
            <value><c>true</c> if [return deleted items]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Independentsoft.Exchange.PreviewItem">
            <summary>
            Represents Mailbox search preview item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItem.#ctor">
            <summary>
            Initializes a new instance of the PreviewItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItem.ToString">
            <summary>
            Converts the value of the current PreviewItem object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.ItemId">
            <summary>
            Contains the unique identifier and change key of an item in the Exchange store.
            </summary>
            <value>The item identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.Mailbox">
            <summary>
            Gets the mailbox.
            </summary>
            <value>The mailbox.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.ParentItemId">
            <summary>
            Represents the identifier of the parent item.
            </summary>
            <value>The parent item identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.ItemClass">
            <summary>
            Represents the message class of an item.
            </summary>
            <value>The item class.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.UniqueHash">
            <summary>
            Gets the unique hash.
            </summary>
            <value>The unique hash.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.SortValue">
            <summary>
            Gets the sort value.
            </summary>
            <value>The sort value.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.OwaLink">
            <summary>
            Gets the owa link.
            </summary>
            <value>The owa link.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.ToRecipients">
            <summary>
            Gets to recipients.
            </summary>
            <value>To recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.CcRecipients">
            <summary>
            Gets the cc recipients.
            </summary>
            <value>The cc recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.BccRecipients">
            <summary>
            Gets the BCC recipients.
            </summary>
            <value>The BCC recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.CreatedTime">
            <summary>
            Represents the date and time that a given item in the mailbox was created.
            </summary>
            <value>The created time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.ReceivedTime">
            <summary>
            Gets the received time.
            </summary>
            <value>The received time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.SentTime">
            <summary>
            Gets the sent time.
            </summary>
            <value>The sent time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.Subject">
            <summary>
            Represents the subject for Exchange store items and response objects.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.Size">
            <summary>
            Represents the size in bytes of an item.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.Preview">
            <summary>
            Gets the preview.
            </summary>
            <value>The preview.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.Importance">
            <summary>
            Contains the importance of an item.
            </summary>
            <value>The importance.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.IsRead">
            <summary>
            Gets a value indicating whether this instance is read.
            </summary>
            <value><c>true</c> if this instance is read; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.HasAttachment">
            <summary>
            Represents a property that is set to true if an item has attachments at least one visible attachment.
            </summary>
            <value><c>true</c> if this instance has attachment; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItem.ExtendedProperties">
            <summary>
            Gets a list of extended properties that are defined on this item.
            </summary>
            <value>The extended properties.</value>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaPostalAddress">
            <summary>
            Specifies a postal address.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaPostalAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.PersonaPostalAddress"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.Street">
            <summary>
            Represents the street portion of a postal address
            </summary>
            <value>The street.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.City">
            <summary>
            Represents the city portion of a postal address
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.State">
            <summary>
            Represents the state portion of a postal address
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.Country">
            <summary>
            Represents the country portion of a postal address
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.PostalCode">
            <summary>
            Represents the postal code portion of a postal address
            </summary>
            <value>The postal code.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.PostOfficeBox">
            <summary>
            Represents the post office box portion of a postal address
            </summary>
            <value>The post office box.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.Type">
            <summary>
            Specifies the type of postal address; for example, Home or Business.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.Latitude">
            <summary>
            Represents the latitude of the location of the associated postal address.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.Longitude">
            <summary>
            Represents the longitude of the location of the associated postal address.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.Accuracy">
            <summary>
            Represents the accuracy of the latitude and longitude of the associated postal address.
            </summary>
            <value>The accuracy.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.Altitude">
            <summary>
            Represents the altitude of the associated postal address.
            </summary>
            <value>The altitude.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.AltitudeAccuracy">
            <summary>
            Represents the accuracy of the altitude of the associated postal address.
            </summary>
            <value>The altitude accuracy.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.FormattedAddress">
            <summary>
            Specifies the formatted display value of the associated postal address.
            </summary>
            <value>The formatted address.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.LocationUri">
            <summary>
            Specifies a URI, for example for an Internet address, of the associated postal address.
            </summary>
            <value>The location URI.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPostalAddress.LocationSource">
            <summary>
            Contains information about the origin of the associated postal address; for example, a contact or a telephone book.
            </summary>
            <value>The location source.</value>
        </member>
        <member name="T:Independentsoft.Exchange.PermissionReadAccess">
            <summary>
            Specifies whether a user has permission to read items in a folder. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionReadAccess.FullDetails">
            <summary>
            The user has permission to read all items in the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionReadAccess.None">
            <summary>
            The user does not have permission to read items in the folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Period">
            <summary>
            Defines the name, time offset, and unique identifier for a specific stage of the time zone.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Period.ToString">
            <summary>
            Converts the value of the current Period object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current Period object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Period.Bias">
            <summary>
            Contains a xs:duration value that represents the time offset from Coordinated Universal Time (UTC) for the period.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Period.Name">
            <summary>
            Contains a string value that represents the descriptive name of the period.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Period.Id">
            <summary>
            Contains a string value that represents the identifier for the period.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.OutOfOfficeState">
            <summary>
            Contains the user's Out of Office (OOF) state.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OutOfOfficeState.Disabled">
            <summary>
            Indicates that the OOF status is set to Disabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OutOfOfficeState.Enabled">
            <summary>
            Indicates that the OOF status is set to Enabled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OutOfOfficeState.Scheduled">
            <summary>
            Indicates that the OOF status is set to Enabled during a time period identified by the Duration (UserOofSettings) element.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.NotePropertyPath">
            <summary>
            Contains property paths for a note
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NotePropertyPath.Width">
            <summary>
            The width of the note
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NotePropertyPath.Height">
            <summary>
            The height of the note
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NotePropertyPath.Left">
            <summary>
            The left of the note
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NotePropertyPath.Top">
            <summary>
            The top of the note
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NotePropertyPath.Color">
            <summary>
            The note color
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NotePropertyPath.Contacts">
            <summary>
            The contacts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.NotePropertyPath.IconColor">
            <summary>
            The icon color
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NotePropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.NewMailEvent">
            <summary>
            Represents an event that is triggered by a new mail item in a mailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.NewMailEvent.#ctor">
            <summary>
            Initializes a new instance of the NewMailEvent class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NewMailEvent.TimeStamp">
            <summary>
            Represents the timestamp of the arrival of a new mail item in a mailbox.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NewMailEvent.Id">
            <summary>
            Represents the identifier of a new mail item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NewMailEvent.ParentFolderId">
            <summary>
            Represents the identifier of the parent folder of the new mail item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MovedEvent">
            <summary>
            Represents an event in which an item or folder is moved from one parent folder to another parent folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MovedEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MovedEvent"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MovedEvent.TimeStamp">
            <summary>
            Represents the timestamp of a move item/folder mailbox event.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MovedEvent.Id">
            <summary>
            Represents the identifier of the moved item.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MovedEvent.ParentFolderId">
            <summary>
            Represents the identifier of the folder that contains the moved item or folder.
            </summary>
            <value>The parent folder identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MovedEvent.OldId">
            <summary>
            Contains the unique identifier of the original item before it was moved.
            </summary>
            <value>The old identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MovedEvent.OldParentFolderId">
            <summary>
            Contains the identifier of the original parent folder of an item or folder that was moved.
            </summary>
            <value>The old parent folder identifier.</value>
        </member>
        <member name="T:Independentsoft.Exchange.MessageTrackingScope">
            <summary>
            Specifies the scope of the message tracking report
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingScope.Organization">
            <summary>
            The message tracking scopes spans across an organization
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingScope.Forest">
            <summary>
            The message tracking scopes spans across a forest
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingScope.Site">
            <summary>
            The message tracking scopes spans across a site
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingResponsePropertyPath">
            <summary>
            Represents a meeting response property path
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingMessagePropertyPath">
            <summary>
            Represents a meeting message property path
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MessagePropertyPath">
            <summary>
            Represents a message property path
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ReceivedTime">
            <summary>
            Represents the date and time that an item in a mailbox was received
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.InReplyTo">
            <summary>
            Represents the identifier of the item to which this item is a reply
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsSubmitted">
            <summary>
            Indicates whether an item has been submitted to the Outbox default folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsDraft">
            <summary>
            Indicates whether an item has not yet been sent
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsFromMe">
            <summary>
            Indicates whether a user sent an item to him or herself
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsResend">
            <summary>
            Indicates whether the item had previously been sent
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsUnmodified">
            <summary>
            Indicates whether the item has been modified
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.InternetMessageHeaders">
            <summary>
            Contains a collection of some of the Internet message headers that are contained in an item in a mailbox
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.SentTime">
            <summary>
            Represents the date and time at which an item in a mailbox was sent
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ResponseItems">
            <summary>
            Contains a collection of all the response objects that are associated with an item in the Exchange store
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.DisplayCc">
            <summary>
            Represents the display string that is used for the contents of the Cc box. This is the concatenated string of all Cc recipient display names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.DisplayTo">
            <summary>
            Represents the display string that is used for the contents of the To box. This is the concatenated string of all To recipient display names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.Sender">
            <summary>
            Identifies the sender of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ToRecipients">
            <summary>
            Contains an array of recipients of an item. These are the primary recipients of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.CcRecipients">
            <summary>
            Represents a collection of recipients that will receive a copy of the message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.BccRecipients">
            <summary>
            Represents a collection of recipients to receive a blind carbon copy (Bcc) of an e-mail message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsReadReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a read receipt
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsDeliveryReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a delivery receipt
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ConversationIndex">
            <summary>
            Contains a binary ID that represents the thread to which this message belongs
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ConversationTopic">
            <summary>
            Represents the conversation topic
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.From">
            <summary>
            Represents the address from which the message was sent
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.InternetMessageId">
            <summary>
            Represents the Internet message identifier of an item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsRead">
            <summary>
            Indicates whether a message has been read
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.IsResponseRequested">
            <summary>
            Indicates whether a response to an item is requested
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.References">
            <summary>
            Represents the Usenet header that is used to associate replies with the original messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ReplyTo">
            <summary>
            Identifies an array of addresses to which replies should be sent
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ReceivedBy">
            <summary>
            Identifies the delegate in a delegate access scenario
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.ReceivedRepresenting">
            <summary>
            Identifies the principal in a delegate access scenario
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.LastVerbExecuted">
            <summary>
            Contains the last verb executed
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.InReplyToId">
            <summary>
            Contains the value of the original message's <see cref="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_MESSAGE_ID"/> property value.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.FlagStatus">
            <summary>
            Contains the message's Outlook follow-up flags (NULL = no flag, 1 = Complete flag, and 2 = Active flag)
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.FlagIcon">
            <summary>
            The flag icon index
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.FlagCompleteTime">
            <summary>
            Specifies the date and time, in UTC, that the Message object was flagged as complete
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.FlagRequest">
            <summary>
            Represents a flag request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.HideAttachments">
            <summary>
            Specifies whether to hide attachments or not
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.VotingOptions">
            <summary>
            Contains the message voting options
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.VotingResponse">
            <summary>
            Contains the voting response
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.DeferredDeliveryTime">
            <summary>
            Contains the date and time at which a message sender wants a message delivered.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.DeferredSendTime">
            <summary>
            Contains the date and time at which a message sender wants a message sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.StartDate">
            <summary>
            Contains the start date of the message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.DueDate">
            <summary>
            Contains the due date of the message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.MessageFlags">
            <summary>
            Contains a bitmask of flags that indicate the origin and current state of a message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessagePropertyPath.BodyRtf">
            <summary>
            Contains the Rich Text Format version of the message text, usually in compressed form.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessagePropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.AppointmentId">
            <summary>
            Identifies the meeting message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.IsDelegated">
            <summary>
            Indicates whether a meeting was handled by an account that has delegate access
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.IsOutOfDate">
            <summary>
            Indicates whether a meeting message is out of date
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.HasBeenProcessed">
            <summary>
            Indicates whether a meeting message item has been processed
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.ResponseType">
            <summary>
            Represents the type of recipient response that is received for a meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.Uid">
            <summary>
            Uniquely identifies a calendar item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.RecurrenceId">
            <summary>
            Used to identify a specific instance of a recurring calendar item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingMessagePropertyPath.DateTimeStamp">
            <summary>
            Indicates the date and time that an instance of a calendar object was created
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingMessagePropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingResponsePropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxAttributedValue">
            <summary>
            Class MailboxAttributedValue.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxAttributedValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxAttributedValue"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxAttributedValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxAttributedValue.Attributions">
            <summary>
            Gets the attributions.
            </summary>
            <value>The attributions.</value>
        </member>
        <member name="T:Independentsoft.Exchange.IndividualAttendeeConflict">
            <summary>
            Contains a user's or contact's free/busy status for a time window that occurs at the same time as the suggested meeting time identified in the Suggestion element.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IndividualAttendeeConflict.#ctor">
            <summary>
            Initializes a new instance of the IndividualAttendeeConflict class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.IndividualAttendeeConflict.BusyType">
            <summary>
            Represents the free/busy status of a user for a suggested meeting time.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.HoldOnMailboxesInfo">
            <summary>
            Class HoldOnMailboxesInfo.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.HoldOnMailboxesInfo.MailboxHoldResult">
            <summary>
            Gets the mailbox hold result.
            </summary>
            <value>The mailbox hold result.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetPasswordExpirationDateResponse">
            <summary>
            Class GetPasswordExpirationDateResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetPasswordExpirationDateResponse.PasswordExpirationDate">
            <summary>
            Gets the password expiration date.
            </summary>
            <value>The password expiration date.</value>
        </member>
        <member name="T:Independentsoft.Exchange.FolderPropertyPath">
             <summary>
             Contains property paths for a folder
             </summary>
             <example>
             The following example displays all contact folders in the mailbox root
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             service.RequestServerVersion = RequestServerVersion.Exchange2010SP2;
            
             IsEqualTo restriction = new IsEqualTo(FolderPropertyPath.FolderClass, FolderClass.ContactFolder);
             FindFolderResponse findFolderResponse = service.FindFolder(StandardFolder.MailboxRoot, restriction, FolderQueryTraversal.Deep);
            
             for (int i = 0; i &lt; findFolderResponse.Folders.Count; i++)
             {
                 CrestronConsole.PrintLine(findFolderResponse.Folders[i].DisplayName);
                 CrestronConsole.PrintLine(findFolderResponse.Folders[i].FolderId.ToString());
                 CrestronConsole.PrintLine("----------------------------------------------------------");
             }
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.Id">
            <summary>
            Contains the folder id
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.FolderId">
            <summary>
            Identifies this folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.ParentId">
            <summary>
            Identifies the parent folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.FolderClass">
            <summary>
            Specifies the folder class
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.DisplayName">
            <summary>
            The display name of a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.ManagedFolderInformation">
            <summary>
            Contains information about a managed custom folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.EffectiveRights">
            <summary>
            Contains the client's rights based on the permission settings for the item or folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.PermissionSet">
            <summary>
            Contains all the permissions that are configured for a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.DistinguishedFolderId">
            <summary>
            Identifies folders that can be referenced by name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.RetentionTag">
            <summary>
            Specifies the retention identifier on a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.ArchiveTag">
            <summary>
            Specifies the retention identifier of the archive tag set on a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.TotalCount">
            <summary>
            Represents the total count of items within a given folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.ChildFolderCount">
            <summary>
            Represents the number of immediate child folders that are contained within a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.UnreadCount">
            <summary>
            Contains the number of unread messages in a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.Comment">
            <summary>
            Contains a comment about the purpose or content of a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.EntryId">
            <summary>
            Contains the entry id for the folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.CreationTime">
            <summary>
            Contains the creation time of the folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.LastModifiedTime">
            <summary>
            Contains the last modified time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.Size">
            <summary>
            Contains the size of the folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.IsHidden">
            <summary>
            Indicate if the folder is hidden
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.IsReadOnly">
            <summary>
            Indicates if this folder is reader only
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.IsSystem">
            <summary>
            Indicates if this folder is system or not
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.HasSubFolders">
            <summary>
            Indicates if this folder has subfolders
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderPropertyPath.SearchKey">
            <summary>
            The search key
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FolderPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FileAsMapping">
            <summary>
            Defines how to construct what is displayed for a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.LastCommaFirst">
            <summary>
            Indicates that the contact is displayed as the last name followed by a comma and the first name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.FirstSpaceLast">
            <summary>
            Indicates that the contact is displayed as the first name followed by a space and the last name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.Company">
            <summary>
            Indicates that the company name is displayed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.LastCommaFirstCompany">
            <summary>
            Indicates that the contact is displayed as the last name, a comma, the first name, and the company name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.CompanyLastFirst">
            <summary>
            Indicates that the contact is displayed as the company name, the last name, and the first name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.LastFirst">
            <summary>
            Indicates that the contact is displayed as the last name, the first name, and the company name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.LastFirstCompany">
            <summary>
            Indicates that the contact is displayed as the last name, the first name, and the company name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.CompanyLastCommaFirst">
            <summary>
            Indicates that the contact is displayed as the company name, the last name, a comma, and the first name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.LastFirstSuffix">
            <summary>
            Indicates that the contact is displayed as the last name, the first name, and the suffix for the contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.LastSpaceFirstCompany">
            <summary>
            Indicates that the contact is displayed as the last name, a space, the first name, and the company name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.CompanyLastSpaceFirst">
            <summary>
            Indicates that the contact is displayed as the company name, the last name, a space, and the first name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.LastSpaceFirst">
            <summary>
            Indicates that the contact is displayed as the last name, followed by a space and the first name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FileAsMapping.None">
            <summary>
            Indicates that the FileAs value is not constructed from other contact?s properties, but is represented by a string, saved "as is". 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ExpandDistributionListResponse">
            <summary>
            Contains the status and result of a single ExpandDL Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExpandDistributionListResponse.IndexedPagingOffset">
            <summary>
            Represents the next index that should be used for the next request when an indexed paging view is used.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExpandDistributionListResponse.NumeratorOffset">
            <summary>
            Represents the new numerator value to use for the next request when fraction page views are used.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExpandDistributionListResponse.AbsoluteDenominator">
            <summary>
            Represents the next denominator to use for the next request when doing fractional paging.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExpandDistributionListResponse.IncludesLastItemInRange">
            <summary>
            Indicates that additional paging is not needed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExpandDistributionListResponse.TotalItemsInView">
            <summary>
            Represents the total number of items that pass the restriction.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExpandDistributionListResponse.Mailboxes">
            <summary>
            The mailboxes contained in the distribution list
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.EntityExtractionResult">
            <summary>
            Represents entity extraction from an item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EntityExtractionResult.#ctor">
            <summary>
            Initializes a new instance of the EntityExtractionResult class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EntityExtractionResult.Addresses">
            <summary>
            Represents a list of AddressEntity elements.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EntityExtractionResult.MeetingSuggestions">
            <summary>
            Represents a list of MeetingSuggestion elements.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EntityExtractionResult.TaskSuggestions">
            <summary>
            Represents a list of TaskSuggestion elements.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EntityExtractionResult.EmailAddresses">
            <summary>
            Represents a list of EmailAddressEntity elements.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EntityExtractionResult.Contacts">
            <summary>
            Represents a list of ContactEntity elements.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EntityExtractionResult.Urls">
            <summary>
            Represents a list of UrlEntity elements.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EntityExtractionResult.PhoneNumbers">
            <summary>
            Represents a list of PhoneEntity elements.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.EmailAddress">
            <summary>
            Represents a single e-mail address for a contact.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EmailAddress.#ctor">
            <summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EmailAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
            <param name="address">The email address</param>
        </member>
        <member name="M:Independentsoft.Exchange.EmailAddress.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
            <param name="address">The email address</param>
            <param name="name">The name of the mailbox user</param>
        </member>
        <member name="M:Independentsoft.Exchange.EmailAddress.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
            <param name="address">The email address</param>
            <param name="name">The name of the mailbox user</param>
            <param name="routingType">The routing to use for the mailbox</param>
        </member>
        <member name="M:Independentsoft.Exchange.EmailAddress.ToString">
            <summary>
            Converts the value of the current EmailAddress object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current EmailAddress object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.EmailAddress.Name">
            <summary>
            Defines the name of the mailbox user. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EmailAddress.Address">
            <summary>
            Defines the e-mail address. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EmailAddress.RoutingType">
            <summary>
            Defines the routing that is used for the mailbox.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DayOfWeekIndex">
            <summary>
            Describes which week in a month is used in a relative recurrence pattern.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeekIndex.First">
            <summary>
            First.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeekIndex.Second">
            <summary>
            Second.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeekIndex.Third">
            <summary>
            Third.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeekIndex.Fourth">
            <summary>
            Fourth.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeekIndex.Last">
            <summary>
            Last.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeekIndex.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DateTimePrecision">
            <summary>
            Defines the DateTime precision
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DateTimePrecision.Seconds">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DateTimePrecision.Milliseconds">
            <summary>
            Milliseconds
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DateTimePrecision.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DailyRegeneratingPattern">
            <summary>
            Describes the frequency, in days, in which a task is regenerated.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DailyRegeneratingPattern.#ctor">
            <summary>
            Initializes a new instance of the DailyRegeneratingPattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DailyRegeneratingPattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DailyRegeneratingPattern class.
            </summary>
            <param name="interval">The day interval between two consecutive recurring items, 
            the value must be in the range from 1 to 999</param>
        </member>
        <member name="M:Independentsoft.Exchange.DailyRegeneratingPattern.ToString">
            <summary>
            Converts the value of the current DailyRegeneratingPattern object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current DailyRegeneratingPattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.DailyRegeneratingPattern.Interval">
            <summary>
            Defines the interval, in days, between two consecutive recurring items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConflictResolution">
            <summary>
            Defines how conflict resolutions are handled in update operations.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConflictResolution.NeverOverwrite">
            <summary>
            Local property changes are discarded.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConflictResolution.AutoResolve">
            <summary>
            Local property changes are applied to the server unless the server-side copy is more recent than the local copy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConflictResolution.AlwaysOverwrite">
            <summary>
            Local property changes overwrite server-side changes.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarOptions">
            <summary>
            Represents calendar options
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.CalendarOptions"/> class
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarOptions.RemoveForwardedMeetingNotifications">
            <summary>
            Get or set whether to remove forwarded meeting notifications
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarOptions.AutoProcessNewItems">
            <summary>
            Get or set whether to automatically process new items
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarOptions.AutoProcessExternal">
            <summary>
            Get or set whether to automatically process externals
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarOptions.ReminderDefault">
            <summary>
            Get or set the default reminder time, default value is 15
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarOptions.ReminderUpgradeTime">
            <summary>
            Get or set the reminder upgrade time
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarOptions.DeleteUpdatedItems">
            <summary>
            Get or set whether updated items are deleted
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarOptions.AutoProcess">
            <summary>
            Get ot set whether to automatically process meeting requests and meeting responses
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.ExchangeProtocol">
            <summary>
            Contains the specifications for connecting a client to the computer that is running Microsoft Exchange Server that has the Client Access server role installed.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.#ctor">
            <summary>
            Initializes a new instance of the ExchangeProtocol class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.Type">
            <summary>
            Identifies the type of the configured mail account.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.AuthenticationPackage">
            <summary>
            Specifies the authentication scheme that is used when authenticating against the Exchange server that has the Mailbox server role installed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.Server">
            <summary>
            Specifies the name of the mail server.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ServerDN">
            <summary>
            Specifies the Exchange Server distinguished name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ServerVersion">
            <summary>
            Represents the Exchange Server version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ActiveDirectory">
            <summary>
            Specifies the active directory
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.MailboxDatabaseLegacyDN">
            <summary>
            Represents the distinguished name of the mailbox database.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.AvailabilityServiceUrl">
            <summary>
            Specifies the URL of the best instance of the Exchange Web Services for a mail-enabled user
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ExchangeWebServiceUrl">
            <summary>
            Specifies the URL for the Web services virtual directory.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.UnifiedMessagingServiceUrl">
            <summary>
            Specifies the URL of the best instance of the Unified Messaging Web service for a mail-enabled user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.OutOfOfficeUrl">
            <summary>
            Specifies the URL of the best instance of the Availability service for a mail-enabled user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.OfflineAddressBookUrl">
            <summary>
            Specifies the Offline Address Book configuration server URL for an Exchange topology.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.SslEnabled">
            <summary>
            Specifies whether secure logon is required.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ExchangeControlPanelUrl">
            <summary>
            Specifies the the base Exchange Control Panel (ECP) URL. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ExchangeControlPanelUnifiedMessagingUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for voice mail.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ExchangeControlPanelEmailAggregationUrl">
            <summary>
            In conjunction with the EcpUrl element,specifies the landing page path for e-mail aggregation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ExchangeControlPanelTextMessagingUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for Mobile Notifications Short Message Service (SMS).
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ExchangeControlPanelMessageTrackingUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for E-Message Tracking.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.ExchangeControlPanelRetentionTagsUrl">
            <summary>
            In conjunction with the EcpUrl element, specifies the landing page path for retention tags.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExchangeProtocol.PublicFolderServer">
            <summary>
            Contains the fully qualified domain name (FQDN) of an Exchange Mailbox server that has a public folder database.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.ContentType">
            <summary>
            Class ContentType.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.ContentType"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.ContentType"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="subtype">The subtype.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentType.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.ContentType"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="subtype">The subtype.</param>
            <param name="charset">The charset.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.ContentType"/> class.
            </summary>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.ContentType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.ContentType.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.ContentType.SubType">
            <summary>
            Gets or sets the type of the sub.
            </summary>
            <value>The type of the sub.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.ContentType.CharSet">
            <summary>
            Gets or sets the character set.
            </summary>
            <value>The character set.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.ContentType.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Independentsoft.Msg.RecurrenceEndType">
            <summary>
            Specifies the recurrence end type
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceEndType.EndAfterDate">
            <summary>
            Series ends after the specified date
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceEndType.EndAfterNOccurrences">
            <summary>
            Series ends after the specified number of occurrences
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceEndType.NeverEnd">
            <summary>
            Series never ends
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.ExtendedProperty">
            <summary>
            Class ExtendedProperty.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">
            tag
            or
            value
            </exception>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">
            tag
            or
            value
            </exception>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.#ctor(Independentsoft.Msg.ExtendedPropertyTag,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetStringValue">
            <summary>
            Gets the string value.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetStringArrayValue">
            <summary>
            Gets the string array value.
            </summary>
            <returns>System.String[][].</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetBooleanValue">
            <summary>
            Gets the boolean value.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetShortValue">
            <summary>
            Gets the short value.
            </summary>
            <returns>System.Int16.</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetIntegerValue">
            <summary>
            Gets the integer value.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetLongValue">
            <summary>
            Gets the long value.
            </summary>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetFloatValue">
            <summary>
            Gets the float value.
            </summary>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetDoubleValue">
            <summary>
            Gets the double value.
            </summary>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedProperty.GetDateTimeValue">
            <summary>
            Gets the date time value.
            </summary>
            <returns>DateTime.</returns>
        </member>
        <member name="P:Independentsoft.Msg.ExtendedProperty.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:Independentsoft.Msg.ExtendedProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonNumber">
            <summary>
            Definition of JsonNumber class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.#ctor(System.Int32)">
            <summary>
            Constructor of JsonNumber object.
            </summary>
            <param name="value">the value of this object.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.#ctor(System.Int64)">
            <summary>
            Constructor of JsonNumber object.
            </summary>
            <param name="value">the value of this object.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.#ctor(System.Single)">
            <summary>
            Constructor of JsonNumber object.
            </summary>
            <param name="value">the value of this object.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.#ctor(System.Double)">
            <summary>
            Constructor of JsonNumber object.
            </summary>
            <param name="value">the value of this object.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.#ctor(System.String)">
            <summary>
            Constructor of JsonNumber object.
            </summary>
            <param name="value">the value of this object.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.ToInteger">
            <summary>
            Reports the object's value in integer format.
            </summary>
            <returns>the value in integer.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.ToLong">
            <summary>
            Reports the object's value in 64-bit signed integer.
            </summary>
            <returns>the value in 64-bit signed integer.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.ToFloat">
            <summary>
            Reports the object's value in single-precision floating-point number.
            </summary>
            <returns>the value in single-precision floating-point number</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.ToDouble">
            <summary>
            Reports the object's value in double-precision floating-point number.
            </summary>
            <returns>the value in double-precision floating-point number.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.ToString">
            <summary>
            Reports the object's value in String format.
            </summary>
            <returns>the value in String format</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.GetHashCode">
            <summary>
            Reports the hash code of the value of this object.
            </summary>
            <returns>the hash code of the value.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNumber.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current JsonNumber.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns><b>true</b> if the specified Object is equal to the current JsonNumber; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonNull">
            <summary>
            Definition of JsonNull class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNull.#ctor">
            <summary>
            Initializes a JsonNull instance.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNull.ToString">
            <summary>
            Reports a JsonNull object value in string format.
            </summary>
            <returns>string returned.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNull.GetHashCode">
            <summary>
            Reports the hash code of the value of this object.
            </summary>
            <returns>the hash code of the value.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonNull.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current JsonNull.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns><b>true</b> if the specified Object is equal to the current JsonNull; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.UnifiedMessaging.CallState">
            <summary>
            Contains a value that indicates the status of a call.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Idle">
            <summary>
            Idle.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Connecting">
            <summary>
            Connecting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Alerted">
            <summary>
            Alerted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Connected">
            <summary>
            Connected.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Disconnected">
            <summary>
            Disconnected.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Incoming">
            <summary>
            Incoming.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Transferring">
            <summary>
            Transferring.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.CallState.Forwarding">
            <summary>
            Forwarding.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SyncItemsResponse">
            <summary>
            Element contains the status and result of a single SyncFolderItems Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncItemsResponse.State">
            <summary>
            This is used to identify the synchronization state. Contains a base64-encoded form of the synchronization data that is updated after each successful request. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncItemsResponse.IncludesLastItemInRange">
            <summary>
            Indicates whether the last item to synchronize has been included in the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncItemsResponse.CreatedItems">
            <summary>
            Identifies a collection of items to create in the local client store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncItemsResponse.UpdatedItems">
            <summary>
            Identifies a collection of items to update in the local client store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncItemsResponse.DeletedItems">
            <summary>
            Identifies a single item to delete in the local client store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SyncItemsResponse.ReadFlagChangedItems">
             <summary>
            Identifies a collection of items when an item has been read.
             </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StringAttributedValue">
            <summary>
            Represents a string attributed value
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StringAttributedValue.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Independentsoft.Exchange.StringAttributedValue"/> class
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.StringAttributedValue.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.StringAttributedValue.Attributions">
            <summary>
            The Attributions
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StatusEvent">
            <summary>
            Represents a notification that no new activity has occurred in the mailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StatusEvent.#ctor">
            <summary>
            Initializes a new instance of the StatusEvent class.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ServiceConfigurationResponse">
            <summary>
            Defines a response to a GetServiceConfiguration request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceConfigurationResponse.MailTipsConfiguration">
            <summary>
            Contains service configuration information for the mail tips service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceConfigurationResponse.UnifiedMessagingConfiguration">
            <summary>
            Contains service configuration information for the Unified Messaging service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServiceConfigurationResponse.ProtectionRulesConfiguration">
            <summary>
            Contains service configuration information for the protection rules service.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SerializableTimeZoneTime">
            <summary>
            Represents an offset from the time relative to Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SerializableTimeZoneTime.#ctor">
            <summary>
            Initializes a new instance of the SerializableTimeZoneTime class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SerializableTimeZoneTime.#ctor(System.Int32,Independentsoft.Exchange.Time,Independentsoft.Exchange.DayOrder,Independentsoft.Exchange.Month,Independentsoft.Exchange.DayOfWeek)">
            <summary>
            Initializes a new instance of the SerializableTimeZoneTime class.
            </summary>
            <param name="offset">The minute offset from the UTC offset</param>
            <param name="time">The transition time</param>
            <param name="dayOrder">The nth occurrence of the specified day</param>
            <param name="month">The transition month of the year</param>
            <param name="dayOfWeek">The day of the week when the transition occurs</param>
        </member>
        <member name="M:Independentsoft.Exchange.SerializableTimeZoneTime.#ctor(System.Int32,Independentsoft.Exchange.Time,Independentsoft.Exchange.DayOrder,Independentsoft.Exchange.Month,Independentsoft.Exchange.DayOfWeek,System.String)">
            <summary>
            Initializes a new instance of the SerializableTimeZoneTime class.
            </summary>
            <param name="offset">The minute offset from the UTC offset</param>
            <param name="time">The transition time</param>
            <param name="dayOrder">The nth occurrence of the specified day</param>
            <param name="month">The transition month of the year</param>
            <param name="dayOfWeek">The day of the week when the transition occurs</param>
            <param name="year">Defines a time zone that changes depending on the year</param>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZoneTime.Offset">
            <summary>
            The property gets or sets the offset from the Coordinated Universal Time (UTC) offset.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZoneTime.Time">
            <summary>
            The Time property gets or sets the transition time of day to and from standard time and daylight saving time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZoneTime.DayOrder">
            <summary>
            The DayOrder property represents the nth occurrence of the day that is specified in the DayOfWeek property that represents the date of transition from and to standard time and daylight saving time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZoneTime.Month">
            <summary>
            The Month property gets or sets the transition month of the year to and from standard time and daylight saving time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZoneTime.DayOfWeek">
            <summary>
            The DayOfWeek property gets or sets the day of the week when the transition to and from standard time and daylight saving time occurs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZoneTime.Year">
            <summary>
            Defines a time zone that changes depending on the year. This element is optional
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SendMeetingOption">
            <summary>
            Describes how meeting updates are communicated after a calendar item is updated. This is required for calendar items and calendar item occurrences
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingOption.SendToNone">
            <summary>
            Do not send meeting invitations.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingOption.SendToAll">
            <summary>
            Send meeting invitations to all attendees; do not save a copy of the meeting invitation in the organizer's Sent Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingOption.SendToChanged">
            <summary>
            Send meeting invitations only to attendees that have been added or modified; do not save a copy of the meeting invitation in the organizer's Sent Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingOption.SendToAllAndSaveCopy">
            <summary>
            Send meeting invitations to all attendees and save a copy of the meeting invitation in the organizer's Sent Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingOption.SendToChangedAndSaveCopy">
            <summary>
            Send meeting invitations only to attendees that have been added or modified and save a copy of the meeting invitation in the organizer's Sent Items folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RuleValidationError">
            <summary>
            Represents a single validation error on a particular rule property value, predicate property value, or action property value.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RuleValidationError.#ctor">
            <summary>
            Initializes a new instance of the RuleValidationError class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleValidationError.FieldUri">
            <summary>
            Specifies the URI to the rule field that caused the validation error. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleValidationError.ErrorCode">
            <summary>
            Represents a rule validation error code that describes what failed validation for each rule predicate or action.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleValidationError.ErrorMessage">
            <summary>
            Represents the reason for the validation error. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleValidationError.FieldValue">
            <summary>
            Represents the value of the field that caused the validation error. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RulePredicateDateRange">
            <summary>
            Specifies the date range within which incoming messages have to have been received in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RulePredicateDateRange.#ctor">
            <summary>
            Initializes a new instance of the RulePredicateDateRange class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RulePredicateDateRange.StartDate">
            <summary>
            Specifies the rule time period and indicates that the rule condition is met after this value. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RulePredicateDateRange.EndDate">
            <summary>
            Specifies the rule time period and indicates that the rule condition is met before this value. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RuleConditions">
            <summary>
            Identifies the conditions that, when fulfilled, will trigger the rule actions for a rule.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RuleConditions.#ctor">
            <summary>
            Initializes a new instance of the RuleConditions class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.Categories">
            <summary>
            Contains the categories that must be applied to an incoming message in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.ContainsBodyStrings">
            <summary>
            Indicates the strings that must appear in the body of incoming messages in order for the condition or exception to apply.    
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.ContainsHeaderStrings">
            <summary>
            Indicates the strings that must appear in the headers of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.ContainsRecipientStrings">
            <summary>
            Indicates the strings that must appear in either the ToRecipients or CcRecipients properties of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.ContainsSenderStrings">
            <summary>
            Indicates the strings that must appear in the From property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.ContainsSubjectOrBodyStrings">
            <summary>
            Indicates the strings that must appear in either the body or the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.ContainsSubjectStrings">
            <summary>
            Indicates the strings that must appear in the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.FlaggedForAction">
            <summary>
            Specifies the flag for action value that must appear on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.FromAddresses">
            <summary>
            Indicates the e-mail addresses from which incoming messages must be sent in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.FromConnectedAccounts">
            <summary>
            Represents the e-mail account names from which incoming messages have to have been aggregated in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.HasAttachments">
            <summary>
            Indicates whether incoming messages have to have attachments in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.Importance">
            <summary>
            Specifies the importance that is stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsApprovalRequest">
            <summary>
            Indicates whether incoming messages must be approval requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsAutomaticForward">
            <summary>
            Indicates whether incoming messages must be automatic forwards in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsAutomaticReply">
            <summary>
            Indicates whether incoming messages must be automatic replies in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsEncrypted">
            <summary>
            Indicates whether incoming messages must be S/MIME encrypted in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsMeetingRequest">
            <summary>
            Indicates whether incoming messages must be meeting requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsMeetingResponse">
            <summary>
            Indicates whether incoming messages must be meeting responses in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsNDR">
            <summary>
            Indicates whether incoming messages must be non-delivery reports (NDRs) in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsPermissionControlled">
            <summary>
            Indicates whether incoming messages must be permission controlled (RMS protected) in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsReadReceipt">
            <summary>
            Indicates whether incoming messages must be read receipts in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsSigned">
            <summary>
            Indicates whether incoming messages must be S/MIME signed in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.IsVoiceMail">
            <summary>
            Indicates whether incoming messages must be voice mail messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.ItemClasses">
            <summary>
            Represents the item classes that must be stamped on incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.MessageClassifications">
            <summary>
            Represents the message classifications that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.NotSentToMe">
            <summary>
            Indicates whether the owner of the mailbox must not be in the ToRecipients property of the incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.SentCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the CcRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.SentOnlyToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be the only one in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.SentToAddresses">
            <summary>
            Indicates the e-mail addresses that incoming messages have to have been sent to in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.SentToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.SentToOrCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in either a ToRecipients or CcRecipients property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.Sensitivity">
            <summary>
            Indicates the sensitivity that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.WithinDateRange">
            <summary>
            Specifies the date range within which incoming messages have to have been received in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleConditions.WithinSizeRange">
            <summary>
            Specifies the minimum and maximum sizes that incoming messages must be in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RuleActions">
            <summary>
            Represents the set of actions that are available to be taken on a message when the conditions are fulfilled.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RuleActions.#ctor">
            <summary>
            Initializes a new instance of the RuleActions class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.AssignCategories">
            <summary>
            Represents the categories that are stamped on e-mail messages.
            </summary>
            <value>The assign categories.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.CopyToFolder">
            <summary>
            Identifies the ID of the folder that e-mail items will be copied to.
            </summary>
            <value>The copy to folder.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.Delete">
            <summary>
            Indicates whether messages are to be moved to the Deleted Items folder.
            </summary>
            <value><c>true</c> if delete; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.ForwardAsAttachmentToRecipients">
            <summary>
            Indicates the e-mail addresses to which messages are to be forwarded as attachments.
            </summary>
            <value>The forward as attachment to recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.ForwardToRecipients">
            <summary>
            Indicates the e-mail addresses to which messages are to be forwarded.
            </summary>
            <value>The forward to recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.MarkImportance">
            <summary>
            Specifies the importance that is to be stamped on messages.
            </summary>
            <value>The mark importance.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.MarkAsRead">
            <summary>
            Indicates whether messages are to be marked as read.
            </summary>
            <value><c>true</c> if [mark as read]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.MoveToFolder">
            <summary>
            Identifies the ID of the folder that e-mail items will be moved to.
            </summary>
            <value>The move to folder.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.PermanentDelete">
            <summary>
            Indicates whether messages are to be permanently deleted and not saved to the Deleted Items folder.
            </summary>
            <value><c>true</c> if [permanent delete]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.RedirectToRecipients">
            <summary>
            Indicates the e-mail addresses to which messages are to be redirected.
            </summary>
            <value>The redirect to recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.SendSMSAlertToRecipients">
            <summary>
            Indicates the mobile phone numbers to which a Short Message Service (SMS) alert is to be sent.
            </summary>
            <value>The send SMS alert to recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.ServerReplyWithMessage">
            <summary>
            Indicates the ID of the template message that is to be sent as a reply to incoming messages.
            </summary>
            <value>The server reply with message.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RuleActions.StopProcessingRules">
            <summary>
            Indicates whether subsequent rules are to be evaluated.
            </summary>
            <value><c>true</c> if [stop processing rules]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Independentsoft.Exchange.RequestServerVersion">
            <summary>
            Contains the versioning information that identifies the schema version to target for a request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2007">
            <summary>
            Target the schema files for the initial release version of Exchange 2007.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2007SP1">
            <summary>
            Target the schema files for Exchange 2007 Service Pack 1 (SP1).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2010">
            <summary>
            Target the schema files for Exchange 2010.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2010SP1">
            <summary>
            Target the schema files for Exchange 2010 Service Pack 1 (SP1).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2010SP2">
            <summary>
            Target the schema files for Exchange 2010 Service Pack 2 (SP2).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2013">
            <summary>
            Target the schema files for Exchange 2013.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2013SP1">
            <summary>
            Target the schema files for Exchange 2013 Service Pack 1 (SP1).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RequestServerVersion.Exchange2016">
            <summary>
            Target the schema files for Exchange 2016.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RecurringMasterItemId">
            <summary>
            Identifies a recurrence master item by identifying the identifiers of one of its related occurrence items.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringMasterItemId.#ctor">
            <summary>
            Initializes a new instance of the RecurringMasterItemId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringMasterItemId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RecurringMasterItemId class.
            </summary>
            <param name="id">The identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringMasterItemId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RecurringMasterItemId class.
            </summary>
            <param name="id">The identifier</param>
            <param name="changeKey">Identifies a specific version of a single occurrence of a recurring master item</param>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringMasterItemId.ToString">
            <summary>
            Converts the value of the current RecurringMasterItemId object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current RecurringMasterItemId object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.PullSubscription">
            <summary>
            Represents a subscription to a pull-based event notification subscription.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(System.Boolean,Independentsoft.Exchange.EventType)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="subscribeToAllFolders">Indicates whether to subscribe to all available folders</param>
            <param name="eventType">The type of the event</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(System.Boolean,System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="subscribeToAllFolders">Indicates whether to subscribe to all available folders</param>
            <param name="eventTypes">The type of the events</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType,System.Int32)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType,System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.Int32)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folderId">The identifier for the folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType,System.Int32)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType,System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventType">The type of the event</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.Int32)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="standardFolder">The standard folder to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.Int32)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="M:Independentsoft.Exchange.PullSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType},System.Int32,System.String)">
            <summary>
            Initializes a new instance of the PullSubscription class.
            </summary>
            <param name="folders">A list of folders to monitor</param>
            <param name="eventTypes">The type of the events</param>
            <param name="timeout">The duration, in minutes, that the subscription can remain idle without a request from the client</param>
            <param name="watermark">An event bookmark in the mailbox events table</param>
        </member>
        <member name="P:Independentsoft.Exchange.PullSubscription.Timeout">
            <summary>
            Represents the duration, in minutes, that the subscription can remain idle without a GetEvents request from the client.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PropertyOrder">
            <summary>
            Represents a single field by which to sort results and indicates the direction for the sort.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyOrder.#ctor">
            <summary>
            Initializes a new instance of the PropertyOrder class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyOrder.#ctor(Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the PropertyOrder class.
            </summary>
            <param name="propertyPath">The property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyOrder.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.SortDirection)">
            <summary>
            Initializes a new instance of the PropertyOrder class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="order">Specifies how to sort the response items</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyOrder.ToString">
            <summary>
            Converts the value of the current PropertyOrder object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current PropertyOrder object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyOrder.PropertyPath">
            <summary>
            Contains property path.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyOrder.Order">
            <summary>
            Contains the sort order direction. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PostReplyItem">
            <summary>
            Contains a reply to a post item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PostReplyItem.#ctor">
            <summary>
            Initializes a new instance of the PostReplyItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PostReplyItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the PostReplyItem class.
            </summary>
            <param name="referenceItemId">The ItemId</param>
        </member>
        <member name="M:Independentsoft.Exchange.PostReplyItem.ToString">
            <summary>
            Converts the value of the current PostReplyItem object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current PostReplyItem object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PostReplyItem.NewBody">
            <summary>
            Represents the new body content of a post item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaInfoResponse">
            <summary>
            Contains the status and result of a single GetPersona operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaInfoResponse.Persona">
            <summary>
            Contains a persona found by using the GetPersona operation.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PermissionLevel">
            <summary>
            Represents the permission level that a user has on a folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.Owner">
            <summary>
            Indicates that the user can create, read, edit, and delete all items in the folder, and create subfolders. The user is both folder owner and folder contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.PublishingEditor">
            <summary>
            Indicates that the user can create, read, edit, and delete all items in the folder, and create subfolders.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.Editor">
            <summary>
            Indicates that the user can create, read, edit, and delete all items in the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.PublishingAuthor">
            <summary>
            Indicates that the user can create and read all items in the folder, edit and delete only items that the user creates, and create subfolders.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.Author">
            <summary>
            Indicates that the user can create and read all items in the folder, and edit and delete only items that the user creates.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.NoneditingAuthor">
            <summary>
            Indicates that the user can create and read all items in the folder, and delete only items that the user creates.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.Reviewer">
            <summary>
            Indicates that the user can read all items in the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.Contributor">
            <summary>
            Indicates that the user can create items in the folder. The contents of the folder do not appear.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.Custom">
            <summary>
            Indicates that the user has custom access permissions on the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionLevel.None">
            <summary>
            Indicates that the user has no permissions on the folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.NoEndRecurrenceRange">
            <summary>
            Describes the start date of an item recurrence pattern that does not have a defined end date.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.NoEndRecurrenceRange.#ctor">
            <summary>
            Initializes a new instance of the NoEndRecurrenceRange class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.NoEndRecurrenceRange.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the NoEndRecurrenceRange class.
            </summary>
            <param name="startDate">The start date of a recurring task or calendar item</param>
        </member>
        <member name="M:Independentsoft.Exchange.NoEndRecurrenceRange.ToString">
            <summary>
            Converts the value of the current NoEndRecurrenceRange object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current NoEndRecurrenceRange object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.NoEndRecurrenceRange.StartDate">
            <summary>
            Represents the start date of a recurring task or calendar item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ModifiedEvent">
            <summary>
            Represents an event in which an item or folder is modified.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ModifiedEvent.#ctor">
            <summary>
            Initializes a new instance of the ModifiedEvent class. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ModifiedEvent.TimeStamp">
            <summary>
            Represents the timestamp of a modified item or folder mailbox event.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ModifiedEvent.Id">
            <summary>
            Represents the identifier of the modified item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ModifiedEvent.ParentFolderId">
            <summary>
            Represents the identifier of the parent folder of the modified item or folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ModifiedEvent.UnreadCount">
            <summary>
            Represents the count of unread items within a given folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MimeContent">
            <summary>
            Contains the native Multipurpose Internet Mail Extensions (MIME) stream of an object that is represented in base64Binary format.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MimeContent.#ctor">
            <summary>
            Initializes a new instance of the MimeContent class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MimeContent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MimeContent class.
            </summary>
            <param name="text">The text of the MIME content</param>
        </member>
        <member name="M:Independentsoft.Exchange.MimeContent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the MimeContent class.
            </summary>
            <param name="text">The text of the MIME content</param>
            <param name="characterSet">The character set of the text</param>
        </member>
        <member name="P:Independentsoft.Exchange.MimeContent.Text">
            <summary>
            Contains a text value that represents a base64Binary MIME stream is required if this element is used.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MimeContent.CharacterSet">
            <summary>
            Contains the International Standards Organization (ISO) name of the character set used in the MIME message.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MessageResponse">
            <summary>
            Represents a message response 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.ToRecipients">
            <summary>
            Contains a set of recipients of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.CcRecipients">
            <summary>
            Represents a collection of recipients that will receive a copy of the message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.BccRecipients">
            <summary>
            Represents a collection of recipients to receive a blind carbon copy (Bcc) of an e-mail.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.IsReadReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a read receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.IsDeliveryReceiptRequested">
            <summary>
            Indicates whether the sender of an item requests a delivery receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.NewBody">
            <summary>
            Represents the actual body content of a message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.From">
            <summary>
            Represents the addressee from whom the message was sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.ReceivedBy">
            <summary>
            Identifies the delegate in a delegate access scenario.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MessageResponse.ReceivedRepresenting">
            <summary>
            Identifies the principal in a delegate access scenario.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MapiPropertyTag">
            <summary>
            Defines Mapi Property Tag constants
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACKNOWLEDGEMENT_MODE">
            <summary>
            Contains the identifier of the mode for message acknowledgment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ALTERNATE_RECIPIENT_ALLOWED">
            <summary>
            Contains TRUE if the sender permits autoforwarding of this message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AUTHORIZING_USERS">
            <summary>
            Contains a list of entry identifiers for users who have authorized the sending of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AUTO_FORWARD_COMMENT">
            <summary>
            Contains a comment added by the autoforwarding agent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AUTO_FORWARDED">
            <summary>
            Contains TRUE if an automatic agent has forwarded a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_CONFIDENTIALITY_ALGORITHM_ID">
            <summary>
            Contains an identifier for the algorithm used to confirm message content confidentiality.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_CORRELATOR">
            <summary>
            Contains a value the message sender can use to match a report with the original message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_IDENTIFIER">
            <summary>
            Contains a key value that enables the message recipient to identify its content.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_LENGTH">
            <summary>
            Contains a message length, in bytes, passed to a client application or service provider to determine if a message of that length can be delivered.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_RETURN_REQUESTED">
            <summary>
            Contains TRUE if a message should be returned with a nondelivery report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONVERSATION_KEY">
            <summary>
            The obsolete precursor of the PR_CONVERSATION_INDEX and PR_CONVERSATION_TOPIC properties. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONVERSION_EITS">
            <summary>
            Contains the encoded information types (EITs) that are applied to a message in transit to describe conversions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONVERSION_WITH_LOSS_PROHIBITED">
            <summary>
            Contains TRUE if a message transfer agent (MTA) is prohibited from making message text conversions that lose information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONVERTED_EITS">
            <summary>
            Contains an identifier for the types of text in a message after conversion.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEFERRED_DELIVERY_TIME">
            <summary>
            Contains the date and time at which a message sender wants a message delivered.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELIVER_TIME">
            <summary>
            Contains the date and time at which the original message was delivered.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISCARD_REASON">
            <summary>
            Contains a reason why a message transfer agent (MTA) has discarded a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISCLOSURE_OF_RECIPIENTS">
            <summary>
            Contains TRUE if disclosure of recipients is allowed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DL_EXPANSION_HISTORY">
            <summary>
            Contains a history showing how a distribution list has been expanded during message transmission.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DL_EXPANSION_PROHIBITED">
            <summary>
            Contains TRUE if a message transfer agent (MTA) is prohibited from expanding distribution lists.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXPIRY_TIME">
            <summary>
            Contains the date and time at which the messaging system can invalidate the content of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IMPLICIT_CONVERSION_PROHIBITED">
            <summary>
            Contains TRUE if a message transfer agent (MTA) is prohibited from making implicit message text conversions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IMPORTANCE">
            <summary>
            Contains a value indicating the message sender's opinion of the importance of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_ID">
            <summary>
            Was originally meant to contain an X.400 identifier of an interpersonal message. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LATEST_DELIVERY_TIME">
            <summary>
            Contains the latest date and time when a message transfer agent (MTA) should deliver a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_CLASS">
            <summary>
            Contains a text string that identifies the sender-defined message class, such as IPM.Note
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_DELIVERY_ID">
            <summary>
            Contains a message transfer system (MTS) identifier for a message delivered to a client application.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_SECURITY_LABEL">
            <summary>
            Contains a security label for a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OBSOLETED_IPMS">
            <summary>
            Contains the identifiers of messages that this message supersedes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINALLY_INTENDED_RECIPIENT_NAME">
            <summary>
            Contains the encoded name of the originally intended recipient of an autoforwarded message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_EITS">
            <summary>
            Contains a copy of the original encoded information types (EITs) for message text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_CERTIFICATE">
            <summary>
            Contains an ASN.1 certificate for the message originator.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_DELIVERY_REPORT_REQUESTED">
            <summary>
            Contains TRUE if a message sender requests a delivery report for a particular recipient from the messaging system before the message is placed in the message store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_RETURN_ADDRESS">
            <summary>
            Contains the binary-encoded return address of the message originator.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PARENT_KEY">
            <summary>
            Was originally meant to contain a value used in correlating conversation threads. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PRIORITY">
            <summary>
            Contains the relative priority of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGIN_CHECK">
            <summary>
            Contains a binary verification value enabling a delivery report recipient to verify the origin of the original message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROOF_OF_SUBMISSION_REQUESTED">
            <summary>
            Contains TRUE if a message sender requests proof that the message transfer system has submitted a message for delivery to the originally intended recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_READ_RECEIPT_REQUESTED">
            <summary>
            Contains TRUE if a message sender wants the messaging system to generate a read report when the recipient has read a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECEIPT_TIME">
            <summary>
            Contains the date and time a delivery report is generated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_REASSIGNMENT_PROHIBITED">
            <summary>
            Contains TRUE if recipient reassignment is prohibited.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REDIRECTION_HISTORY">
            <summary>
            Contains information about the route covered by a delivered message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RELATED_IPMS">
            <summary>
            Contains a list of identifiers for messages to which a message is related.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENSITIVITY">
            <summary>
            Contains the sensitivity value assigned by the sender of the first version of a message - that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LANGUAGES">
            <summary>
            Contains an ASCII list of the languages incorporated in a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLY_TIME">
            <summary>
            Contains the date and time by which a reply is expected for a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_TAG">
            <summary>
            Contains a binary tag value that the messaging system should copy to any report generated for the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_TIME">
            <summary>
            Contains the date and time when the messaging system generated a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RETURNED_IPM">
            <summary>
            Contains TRUE if the original message is being returned with a nonread report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SECURITY">
            <summary>
            Contains a flag that indicates the security level of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INCOMPLETE_COPY">
            <summary>
            Contains TRUE if this message is an incomplete copy of another message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENSITIVITY">
            <summary>
            Contains a value that indicates the message sender's opinion of the sensitivity of a message
            </summary>
            <summary>
            Contains a value indicating the message sender's opinion of the sensitivity of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUBJECT">
            <summary>
            Contains the full subject of a message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUBJECT_IPM">
            <summary>
            Contains a binary value that is copied from the message for which a report is being generated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CLIENT_SUBMIT_TIME">
            <summary>
            Contains the date and time the message sender submitted a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_NAME">
            <summary>
            Contains the display name for the recipient that should get reports for this message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENT_REPRESENTING_SEARCH_KEY">
            <summary>
            Contains the search key for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_X400_CONTENT_TYPE">
            <summary>
            Contains the content type for a submitted message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUBJECT_PREFIX">
            <summary>
            The subject prefix, typically indicates an action to take on a message. Ex) "FW:"
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NON_RECEIPT_REASON">
            <summary>
            Contains reasons why a message was not received that forms part of a nondelivery report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECEIVED_BY_ENTRYID">
            <summary>
            Contains the entry identifier of the messaging user that actually receives the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECEIVED_BY_NAME">
            <summary>
            Contains the display name of the messaging user that actually receives the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENT_REPRESENTING_ENTRYID">
            <summary>
            Contains the entry identifier for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENT_REPRESENTING_NAME">
            <summary>
            Contains the display name for the messaging user represented by the sender
            </summary>
            <summary>
            Contains the display name for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RCVD_REPRESENTING_ENTRYID">
            <summary>
            Contains the entry identifier for the messaging user represented by the receiving user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RCVD_REPRESENTING_NAME">
            <summary>
            Contains the display name for the messaging user represented by the receiving user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_ENTRYID">
            <summary>
            Contains the entry identifier for the recipient that should get reports for this message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_READ_RECEIPT_ENTRYID">
            <summary>
            Contains an entry identifier for the messaging user to which the messaging system should direct a read report for this message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_SUBMISSION_ID">
            <summary>
            Contains a message transfer system (MTS) identifier for the message transfer agent (MTA).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MTS_ID">
            <summary>
            The identifier for the message transfer envelope
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MTS_REPORT_ID">
            <summary>
            The identifier for a MTS report
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROVIDER_SUBMIT_TIME">
            <summary>
            Contains the date and time a transport provider passed a message to its underlying messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SUBJECT">
            <summary>
            Contains the subject of an original message for use in a report about the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISC_VAL">
            <summary>
            The obsolete precursor of the PR_DISCRETE_VALUES property. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIG_MESSAGE_CLASS">
            <summary>
            Contains the class of the original message for use in a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_AUTHOR_ENTRYID">
            <summary>
            Contains the entry identifier of the author of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_AUTHOR_NAME">
            <summary>
            Contains the display name of the author of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SUBMIT_TIME">
            <summary>
            Contains the original submission date and time of the message in the report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLY_RECIPIENT_ENTRIES">
            <summary>
            Contains a sized array of entry identifiers for recipients that are to get a reply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLY_RECIPIENT_NAMES">
            <summary>
            Contains a list of display names for recipients that are to get a reply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECEIVED_BY_SEARCH_KEY">
            <summary>
            Contains the search key of the messaging user that actually receives the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RCVD_REPRESENTING_SEARCH_KEY">
            <summary>
            Contains the search key for the messaging user represented by the receiving user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_READ_RECEIPT_SEARCH_KEY">
            <summary>
            Contains a search key for the messaging user to which the messaging system should direct a read report for a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_SEARCH_KEY">
            <summary>
            Contains the search key for the recipient that should get reports for this message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_DELIVERY_TIME">
            <summary>
            The date and time of when the message was sent
            </summary>
            <summary>
            Contains a copy of the original message's delivery date and time in a thread.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_AUTHOR_SEARCH_KEY">
            <summary>
            Contains the search key of the author of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_TO_ME">
            <summary>
            Contains TRUE if this messaging user is specifically named as a primary (To) recipient of this message and is not part of a distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_CC_ME">
            <summary>
            Contains TRUE if this messaging user is specifically named as a carbon copy (CC) recipient of this message and is not part of a distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_RECIP_ME">
            <summary>
            Contains TRUE if this messaging user is specifically named as a primary (To), carbon copy (CC), or blind carbon copy (BCC) recipient of this message and is not part of a distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENDER_NAME">
            <summary>
            Contains the display name of the sender of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENDER_ENTRYID">
            <summary>
            Contains the entry identifier of the sender of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENDER_SEARCH_KEY">
            <summary>
            Contains the search key for the sender of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENT_REPRESENTING_NAME">
            <summary>
            Contains the display name of the messaging user on whose behalf the original message was sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENT_REPRESENTING_ENTRYID">
            <summary>
            Contains the entry identifier of the messaging user on whose behalf the original message was sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENT_REPRESENTING_SEARCH_KEY">
            <summary>
            Contains the search key of the messaging user on whose behalf the original message was sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_START_DATE">
            <summary>
            Contains the starting date and time of an appointment as managed by a scheduling application.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_DATE">
            <summary>
            Contains the ending date and time of an appointment as managed by a scheduling application.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OWNER_APPT_ID">
            <summary>
            Contains an identifier for an appointment in the owner's schedule.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESPONSE_REQUESTED">
            <summary>
            Contains TRUE if the message sender wants a response to a meeting request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENT_REPRESENTING_ADDRTYPE">
            <summary>
            Contains the address type for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENT_REPRESENTING_EMAIL_ADDRESS">
            <summary>
            Contains the e-mail address for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENDER_ADDRTYPE">
            <summary>
            Contains the address type of the sender of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENDER_EMAIL_ADDRESS">
            <summary>
            Contains the e-mail address of the sender of the first version of a message, that is, the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENT_REPRESENTING_ADDRTYPE">
            <summary>
            Contains the address type of the messaging user on whose behalf the original message was sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENT_REPRESENTING_EMAIL_ADDRESS">
            <summary>
            Contains the e-mail address of the messaging user on whose behalf the original message was sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONVERSATION_TOPIC">
            <summary>
            Contains the topic of the first message in a conversation thread.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONVERSATION_INDEX">
            <summary>
            Contains a binary value that indicates the relative position of this message within a conversation thread.
            </summary>
            <summary>
            Contains a binary value that indicates the relative position of this message within a conversation thread.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_DISPLAY_BCC">
            <summary>
            Contains the display names of any blind carbon copy (BCC) recipients of the original message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_DISPLAY_CC">
            <summary>
            Contains the display names of any carbon copy (CC) recipients of the original message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_DISPLAY_TO">
            <summary>
            Contains the display names of the primary (To) recipients of the original message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECEIVED_BY_ADDRTYPE">
            <summary>
            Contains the e-mail address type, such as SMTP, for the messaging user that actually receives the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECEIVED_BY_EMAIL_ADDRESS">
            <summary>
            Contains the e-mail address for the messaging user that actually receives the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RCVD_REPRESENTING_ADDRTYPE">
            <summary>
            Contains the address type for the messaging user represented by the user actually receiving the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RCVD_REPRESENTING_EMAIL_ADDRESS">
            <summary>
            Contains the e-mail address for the messaging user represented by the receiving user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_AUTHOR_ADDRTYPE">
            <summary>
            Contains the address type of the author of the first version of a message. That is - the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_AUTHOR_EMAIL_ADDRESS">
            <summary>
            Contains the e-mail address of the author of the first version of a message. That is - the message before being forwarded or replied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINALLY_INTENDED_RECIP_ADDRTYPE">
            <summary>
            Contains the address type of the originally intended recipient of an autoforwarded message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINALLY_INTENDED_RECIP_EMAIL_ADDRESS">
            <summary>
            Contains the e-mail address of the originally intended recipient of an autoforwarded message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRANSPORT_MESSAGE_HEADERS">
            <summary>
            Contains transport-specific message envelope information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELEGATION">
            <summary>
            Contains the converted value of the attDelegate workgroup property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TNEF_CORRELATION_KEY">
            <summary>
            Contains a value used to correlate a Transport Neutral Encapsulation Format (TNEF) attachment with a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_INTEGRITY_CHECK">
            <summary>
            Contains an ASN.1 content integrity check value that allows a message sender to help protect message content from disclosure to unauthorized recipients.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXPLICIT_CONVERSION">
            <summary>
            Contains a value that indicates that a message sender has requested a message content conversion for a particular recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_RETURN_REQUESTED">
            <summary>
            Contains TRUE if this message should be returned with a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_TOKEN">
            <summary>
            Contains an ASN.1 security token for a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NDR_REASON_CODE">
            <summary>
            Contains an encoded reason for nondelivery that forms part of a nondelivery report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NDR_DIAG_CODE">
            <summary>
            Contains a diagnostic code that forms part of a nondelivery report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NON_RECEIPT_NOTIFICATION_REQUESTED">
            <summary>
            Contains TRUE if a message sender wants notification of non-receipt for a specified recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELIVERY_POINT">
            <summary>
            Contains a value that specifies the nature of the functional entity by means of which a message was or would have been delivered to the recipient. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_NON_DELIVERY_REPORT_REQUESTED">
            <summary>
            Contains TRUE if a message sender requests a nondelivery report for a particular recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_REQUESTED_ALTERNATE_RECIPIENT">
            <summary>
            Contains an entry identifier for an alternate recipient designated by the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PHYSICAL_DELIVERY_BUREAU_FAX_DELIVERY">
            <summary>
            Contains TRUE if the messaging system should use a fax bureau for physical delivery of this message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PHYSICAL_DELIVERY_MODE">
            <summary>
            Contains a bitmask of flags defining the physical delivery mode (for example, special delivery) for a message designated for a specific recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PHYSICAL_DELIVERY_REPORT_REQUEST">
            <summary>
            Contains the mode of a report to be delivered to a particular message recipient upon completion of physical message delivery or delivery by the message handling system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PHYSICAL_FORWARDING_ADDRESS">
            <summary>
            Contains the physical forwarding address of a message recipient and is used only with message reports.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PHYSICAL_FORWARDING_ADDRESS_REQUESTED">
            <summary>
            Contains TRUE if a message sender requests the message transfer agent to attach a physical forwarding address for a message recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PHYSICAL_FORWARDING_PROHIBITED">
            <summary>
            Contains TRUE if a message sender prohibits physical message forwarding for a specific recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PHYSICAL_RENDITION_ATTRIBUTES">
            <summary>
            Contains an ASN.1 object identifier used for rendering message attachments.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROOF_OF_DELIVERY">
            <summary>
            Contains an ASN.1 proof of delivery value.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROOF_OF_DELIVERY_REQUESTED">
            <summary>
            Contains TRUE if a message sender requests proof of delivery for a particular recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_CERTIFICATE">
            <summary>
            Contains a message recipient's ASN.1 certificate for use in a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_NUMBER_FOR_ADVICE">
            <summary>
            Contains a message recipient's voice telephone number to call to advise of the physical delivery of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_TYPE">
            <summary>
            Contains the recipient type for a message recipient
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REGISTERED_MAIL_TYPE">
            <summary>
            Contains the type of registration used for physical delivery of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLY_REQUESTED">
            <summary>
            Contains TRUE if a message sender requests a reply from a recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REQUESTED_DELIVERY_METHOD">
            <summary>
            Contains a binary array of delivery methods (service providers), in order of a message sender's preference.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENDER_ENTRYID">
            <summary>
            Contains the message sender's entry identifier.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENDER_NAME">
            <summary>
            Contains the message sender's display name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUPPLEMENTARY_INFO">
            <summary>
            Contains additional information for use in a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TYPE_OF_MTS_USER">
            <summary>
            Contains the type of a message recipient, for use in a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENDER_SEARCH_KEY">
            <summary>
            Contains the message sender's search key.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENDER_ADDRTYPE">
            <summary>
            Contains the message sender's e-mail address type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENDER_EMAIL_ADDRESS">
            <summary>
            Contains the message sender's e-mail address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CURRENT_VERSION">
            <summary>
            Was originally meant to contain the current version of a message store. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETE_AFTER_SUBMIT">
            <summary>
            Contains TRUE if a client application wants MAPI to delete the associated message after submission.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISPLAY_BCC">
            <summary>
            Contains an ASCII list of the display names of any blind carbon copy (BCC) message recipients, separated by semicolons (;).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISPLAY_CC">
            <summary>
            Contains an ASCII list of the display names of any carbon copy (CC) message recipients, separated by semicolons (;)
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISPLAY_TO">
            <summary>
            Contains a list of the display names of the primary (To) message recipients, separated by semicolons (;)
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PARENT_DISPLAY">
            <summary>
            Contains the display name of the folder where a message was found during a search
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_DELIVERY_TIME">
            <summary>
            Contains the date and time when a message was delivered
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_FLAGS">
            <summary>
            Contains a bitmask of flags that indicate the origin and current state of a message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_SIZE">
            <summary>
            Contains the sum, in bytes, of the sizes of all properties on a message object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_SIZE_EXTENDED">
            <summary>
            Contains a 64 bit integer version of the <see cref="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_SIZE"/> property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PARENT_ENTRYID">
            <summary>
            Contains the entry identifier of the folder that contains a folder or message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENTMAIL_ENTRYID">
            <summary>
            Contains the entry identifier of the folder where the message should be moved after submission.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CORRELATE">
            <summary>
            Contains TRUE if the sender of a message requests the correlation feature of the messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CORRELATE_MTSID">
            <summary>
            Contains the message transfer system (MTS) identifier used in correlating reports with sent messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISCRETE_VALUES">
            <summary>
            Contains TRUE if a nondelivery report applies only to discrete members of a distribution list rather than the entire list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESPONSIBILITY">
            <summary>
            Contains TRUE if some transport provider has already accepted responsibility for delivering the message to this recipient, and FALSE if the MAPI spooler considers that this transport provider should accept responsibility.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SPOOLER_STATUS">
            <summary>
            Contains the status of the message based on information that is available to the MAPI spooler.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRANSPORT_STATUS">
            <summary>
            Obsolete MAPI spooler property. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_RECIPIENTS">
            <summary>
            Contains a table of restrictions that can be applied to a contents table to find all messages that contain recipient subobjects meeting the restrictions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_ATTACHMENTS">
            <summary>
            Contains a table of restrictions that can be applied to a contents table to find all messages that contain attachment subobjects meeting the restrictions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUBMIT_FLAGS">
            <summary>
            Contains a bitmask of flags indicating details about a message submission.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_STATUS">
            <summary>
            Contains a value used by the MAPI spooler in assigning delivery responsibility among transport providers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRANSPORT_KEY">
            <summary>
            Contains a value used by the MAPI spooler to track the progress of an outbound message through the outgoing transport providers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_STATUS">
            <summary>
            Contains a 32-bit bitmask of flags that defines the status of a message in a contents table
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_DOWNLOAD_TIME">
            <summary>
            Contains the estimated time to download a message from a remote server to a local message store
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATION_VERSION">
            <summary>
            Was originally meant to contain the message store version current at the time a message was created. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MODIFY_VERSION">
            <summary>
            Was originally meant to contain the message store version current at the time the message was last modified. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HASATTACH">
            <summary>
            Contains TRUE if a message contains at least one attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BODY_CRC">
            <summary>
            Contains a circular redundancy check (CRC) value on the message text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NORMALIZED_SUBJECT">
            <summary>
            Contains the message subject with any prefix removed
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RTF_IN_SYNC">
            <summary>
            Contains TRUE if PR_RTF_COMPRESSED has the same text content as PR_BODY for this message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_SIZE">
            <summary>
            Contains the sum, in bytes, of the sizes of all properties on an attachment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_NUM">
            <summary>
            Contains a number that uniquely identifies the attachment within its parent message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PREPROCESS">
            <summary>
            Contains TRUE if the message requires preprocessing.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_ARTICLE_NUMBER">
            <summary>
            A number associated with an item in a message store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NEWSGROUP_NAME">
            <summary>
            Contains the newsgroup name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATING_MTA_CERTIFICATE">
            <summary>
            Contains an identifier for the message transfer agent (MTA) that originated the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROOF_OF_SUBMISSION">
            <summary>
            Contains an ASN.1 proof of submission value.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NT_SECURITY_DESCRIPTOR">
            <summary>
            Contains the NT security descriptors of the users or groups with access to the folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATOR_SID">
            <summary>
            The creator's security identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_MODIFIER_SID">
            <summary>
            The last modifier's security identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MIME_HANDLER_CLASSIDS">
            <summary>
            The identifier of the mime handle class
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_URL_COMP_NAME_POSTFIX">
            <summary>
            Contains the postfix of the url computer name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_URL_COMP_NAME_SET">
            <summary>
            Contains the url computer name set
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUBFOLDER_CT">
            <summary>
            The PR_SUBFOLDER_CT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_SUBFOLDER_CT">
            <summary>
            The PR_DELETED_SUBFOLDER_CT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETE_TIME">
            <summary>
            Contains the date and time of when the item was deleted
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AGE_LIMIT">
            <summary>
            Contains the age limit
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRUST_SENDER">
            <summary>
            Specifies whether the associated message was delivered through a trusted transport channel
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_VIRUS_SCAN_INFO">
            <summary>
            Contains attachment virus scan info
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACCESS">
            <summary>
            Contains a bitmask of flags indicating the operations that are available to the client for the object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ROW_TYPE">
            <summary>
            The type of a row in a table.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INSTANCE_KEY">
            <summary>
            Contains a value that uniquely identifies a row in a table. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACCESS_LEVEL">
            <summary>
            Indicates the client's access level to the object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAPPING_SIGNATURE">
            <summary>
            Contains the mapping signature for named properties of a particular MAPI object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECORD_KEY">
            <summary>
            Contains a unique binary-comparable identifier for a specific object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORE_RECORD_KEY">
            <summary>
            Contains the unique binary-comparable identifier (record key) of the message store in which an object resides
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORE_ENTRYID">
            <summary>
            Contains the unique entry identifier of the message store where an object resides
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MINI_ICON">
            <summary>
            Contains a bitmap of a half-size icon for a form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ICON">
            <summary>
            Contains a bitmap of a full size icon for a form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OBJECT_TYPE">
            <summary>
            Contains the type of an object. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ENTRYID">
            <summary>
            Contains a MAPI entry identifier used to open and edit properties of a particular MAPI object. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MEMBER_ENTRYID">
            <summary>
            Contains the directory object entry identifier of a system access control list (SACL) table member.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BODY">
            <summary>
            Contains the message text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_TEXT">
            <summary>
            Contains optional text for a report generated by the messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_AND_DL_EXPANSION_HISTORY">
            <summary>
            Contains information about a message originator and a distribution list expansion history.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORTING_DL_NAME">
            <summary>
            Contains the display name of a distribution list for which the messaging system is delivering a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORTING_MTA_CERTIFICATE">
            <summary>
            Contains an identifier for the message transfer agent that generated a report.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RTF_SYNC_BODY_CRC">
            <summary>
            Contains the cyclical redundancy check (CRC) computed for the message text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RTF_SYNC_BODY_COUNT">
            <summary>
            Contains a count of the significant characters of the message text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RTF_SYNC_BODY_TAG">
            <summary>
            Contains significant characters that appear at the beginning of the message text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RTF_COMPRESSED">
            <summary>
            Contains the Rich Text Format version of the message text, usually in compressed form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RTF_SYNC_PREFIX_COUNT">
            <summary>
            Contains a count of the ignorable characters that appear before the significant characters of the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RTF_SYNC_TRAILING_COUNT">
            <summary>
            Contains a count of the ignorable characters that appear after the significant characters of the message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINALLY_INTENDED_RECIP_ENTRYID">
            <summary>
            Contains the entry identifier of the originally intended recipient of an auto-forwarded message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HTML">
            <summary>
            Contains the message body text in HTML format.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_APPROVED">
            <summary>
            The PR_INTERNET_APPROVED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_CONTROL">
            <summary>
            The PR_INTERNET_CONTROL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_DISTRIBUTION">
            <summary>
            The PR_INTERNET_DISTRIBUTION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_FOLLOWUP_TO">
            <summary>
            The PR_INTERNET_FOLLOWUP_TO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_LINES">
            <summary>
            The PR_INTERNET_LINES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_MESSAGE_ID">
            <summary>
            Corresponds to the message-id field
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_NEWSGROUPS">
            <summary>
            The PR_INTERNET_NEWSGROUPS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_ORGANIZATION">
            <summary>
            The PR_INTERNET_ORGANIZATION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_NNTP_PATH">
            <summary>
            The PR_INTERNET_NNTP_PATH property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_REFERENCES">
            <summary>
            Contains a list of message IDs that specify the messages to which this reply is related
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUPERSEDES">
            <summary>
            The PR_SUPERSEDES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POST_FOLDER_ENTRIES">
            <summary>
            The PR_POST_FOLDER_ENTRIES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POST_FOLDER_NAMES">
            <summary>
            The PR_POST_FOLDER_NAMES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POST_REPLY_FOLDER_ENTRIES">
            <summary>
            The PR_POST_REPLY_FOLDER_ENTRIES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POST_REPLY_FOLDER_NAMES">
            <summary>
            The PR_POST_REPLY_FOLDER_NAMES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POST_REPLY_DENIED">
            <summary>
            The PR_POST_REPLY_DENIED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NNTP_XREF">
            <summary>
            The PR_NNTP_XREF property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_PRECEDENCE">
            <summary>
            The PR_INTERNET_PRECEDENCE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IN_REPLY_TO_ID">
            <summary>
            Contains the value of the original message's <see cref="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_MESSAGE_ID"/> property value.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LIST_HELP">
            <summary>
            Contains a URI that provides detailed help information for the mailing list from which an email message was sent
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LIST_SUBSCRIBE">
            <summary>
            Contains the URI that subscribes a recipient to a  message’s associated mailing list
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LIST_UNSUBSCRIBE">
            <summary>
            Contains the URI that unsubscribes a recipient from a message’s associated mailing list
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACTION">
            <summary>
            The PR_ACTION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACTION_FLAG">
            <summary>
            Contains the last verb executed
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACTION_DATE">
            <summary>
            Contains the date and time of when the last verb was executed
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FLAG_STATUS">
            <summary>
            Contains the message's Outlook follow-up flags (NULL = no flag, 1 = Complete flag, and 2 = Active flag).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FLAG_ICON">
            <summary>
            The flag icon index
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FLAG_COMPLETE">
            <summary>
            Specifies the date and time, in UTC, that the Message object was flagged as complete
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SMTP_TEMP_TBL_DATA">
            <summary>
            The PR_SMTP_TEMP_TBL_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SMTP_TEMP_TBL_DATA_2">
            <summary>
            The PR_SMTP_TEMP_TBL_DATA_2 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SMTP_TEMP_TBL_DATA_3">
            <summary>
            The PR_SMTP_TEMP_TBL_DATA_3 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CAL_START_TIME">
            <summary>
            The PR_CAL_START_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CAL_END_TIME">
            <summary>
            The PR_CAL_END_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CAL_RECURRING_ID">
            <summary>
            Identifies a specific instance of a recurring appointment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DAV_SUBMIT_DATA">
            <summary>
            The PR_DAV_SUBMIT_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CDO_EXPANSION_INDEX">
            <summary>
            The PR_CDO_EXPANSION_INDEX property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IFS_INTERNAL_DATA">
            <summary>
            The PR_IFS_INTERNAL_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CAL_REMINDER_NEXT_TIME">
            <summary>
            The PR_CAL_REMINDER_NEXT_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OWA_URL">
            <summary>
            The PR_OWA_URL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISABLE_FULL_FIDELITY">
            <summary>
            Indicates whether to disable full fidelity
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_URL_COMP_NAME">
            <summary>
            The message's url component name, contains the .eml filename
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTR_HIDDEN">
            <summary>
            Specifies the hide or show status of a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTR_SYSTEM">
            <summary>
            The PR_ATTR_SYSTEM property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTR_READONLY">
            <summary>
            Indicates whether an item can be modified or deleted
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_P1_CONTENT">
            <summary>
            The PR_P1_CONTENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_P1_CONTENT_TYPE">
            <summary>
            The PR_P1_CONTENT_TYPE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ROWID">
            <summary>
            Contains a unique identifier for a recipient in a recipient table or status table.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISPLAY_NAME">
            <summary>
            Contains the display name for a given MAPI object. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ADDRTYPE">
            <summary>
            Contains the messaging user's e-mail address type, such as SMTP
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EMAIL_ADDRESS">
            <summary>
            Contains the messaging user's e-mail address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_COMMENT">
            <summary>
            Contains a comment about the purpose or content of an object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEPTH">
            <summary>
            Contains an integer that represents the relative level of indentation, or depth, of an object in a hierarchy table
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROVIDER_DISPLAY">
            <summary>
            Contains the vendor-defined display name for a service provider.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATION_TIME">
            <summary>
            Contains the creation date and time of a message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_MODIFICATION_TIME">
            <summary>
            Contains the date and time when the object or subobject was last modified
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESOURCE_FLAGS">
            <summary>
            Contains a bitmask of flags for message services and providers.
            </summary>
            <summary>
            Contains a bitmask of flags for message services and providers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROVIDER_DLL_NAME">
            <summary>
            Contains the base file name of the MAPI service provider dynamic-link library (DLL).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SEARCH_KEY">
            <summary>
            Contains a binary-comparable key that identifies correlated objects for a search
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROVIDER_UID">
            <summary>
            Contains a MAPIUID structure of the service provider that is handling a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROVIDER_ORDINAL">
            <summary>
            Contains the zero-based index of a service provider's position in the provider table.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_VERSION">
            <summary>
            Contains the version of a form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_CLSID">
            <summary>
            Contains the 128-bit OLE globally unique identifier (GUID) of a form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_CONTACT_NAME">
            <summary>
            Contains the name of a contact for information concerning a form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_CATEGORY">
            <summary>
            Contains the category of a form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_CATEGORY_SUB">
            <summary>
            Contains the subcategory of a form, as defined by a client application.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_HOST_MAP">
            <summary>
            Contains a host map of available forms.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_HIDDEN">
            <summary>
            Contains TRUE if a form is to be suppressed from display by compose menus and dialog boxes.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_DESIGNER_NAME">
            <summary>
            Contains the display name for the object used to design the form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_DESIGNER_GUID">
            <summary>
            Contains the unique identifier for the object used to design a form.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FORM_MESSAGE_BEHAVIOR">
            <summary>
            Contains TRUE if a message should be composed in the current folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEFAULT_STORE">
            <summary>
            Contains TRUE if a message store is the default message store in the message store table. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORE_SUPPORT_MASK">
            <summary>
            Contains a bitmask of flags that client applications query to determine the characteristics of a message store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORE_STATE">
            <summary>
            Contains a flag that describes the state of the message store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_SUBTREE_SEARCH_KEY">
            <summary>
            Was originally meant to contain the search key of the interpersonal message (IPM) root folder. No longer supported
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_OUTBOX_SEARCH_KEY">
            <summary>
            Was originally meant to contain the search key of the standard Outbox folder. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_WASTEBASKET_SEARCH_KEY">
            <summary>
            Was originally meant to contain the search key of the standard Deleted Items folder. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_SENTMAIL_SEARCH_KEY">
            <summary>
            Was originally meant to contain the search key of the standard Sent Items folder. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MDB_PROVIDER">
            <summary>
            Contains a provider-defined MAPIUID structure that indicates the type of the message store. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECEIVE_FOLDER_SETTINGS">
            <summary>
            Contains a table of a message store's receive folder settings.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VALID_FOLDER_MASK">
            <summary>
            Contains a bitmask of flags that indicate the validity of the entry identifiers of the folders in a message store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_SUBTREE_ENTRYID">
            <summary>
            Contains the interpersonal message subtree's root folder ID in the message store's folder tree.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_OUTBOX_ENTRYID">
            <summary>
            Contains the ID of the standard interpersonal message (IPM) Outbox folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_WASTEBASKET_ENTRYID">
            <summary>
            Contains the ID of the standard interpersonal message (IPM) Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_SENTMAIL_ENTRYID">
            <summary>
            Contains the ID of the standard interpersonal message (IPM) Sent Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VIEWS_ENTRYID">
            <summary>
            Contains the entry identifier of the user-defined Views folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_COMMON_VIEWS_ENTRYID">
            <summary>
            Contains the entry identifier of the predefined common view folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FINDER_ENTRYID">
            <summary>
            Contains the entry identifier for the folder in which search results are typically created.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTAINER_FLAGS">
            <summary>
            Contains a bitmask of flags describing capabilities of an address book container.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_TYPE">
            <summary>
            Contains a constant that indicates the folder type
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_COUNT">
            <summary>
            Contains the number of messages in a folder, as computed by the message store
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_UNREAD">
            <summary>
            Contains the number of unread messages in a folder, as computed by the message store
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATE_TEMPLATES">
            <summary>
            Contains an embedded table object that contains dialog box template entry identifiers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DETAILS_TABLE">
            <summary>
            Contains an embedded display table object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SEARCH">
            <summary>
            Contains a container object that is used for advanced searches.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SELECTABLE">
            <summary>
            Contains TRUE if the entry in the one-off table can be selected.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUBFOLDERS">
            <summary>
            Contains TRUE if a folder contains subfolders
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STATUS">
            <summary>
            Contains a 32-bit bitmask of flags that define folder status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ANR">
            <summary>
            Contains a string value for use in a property restriction on an address book container contents table.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENTS_SORT_ORDER">
            <summary>
            Originally meant to contain a value specifying the sort order for the columns of a container. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTAINER_HIERARCHY">
            <summary>
            Contains an embedded hierarchy table object that provides information about the child containers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTAINER_CONTENTS">
            <summary>
            Contains an embedded contents table object that provides information about a container.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_ASSOCIATED_CONTENTS">
            <summary>
            Contains an embedded contents table object that provides information about the associated contents table.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEF_CREATE_DL">
            <summary>
            Contains the template entry identifier for a default distribution list object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEF_CREATE_MAILUSER">
            <summary>
            Contains the template entry identifier for a default messaging user object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTAINER_CLASS">
            <summary>
            Was originally meant to contain a text string describing the type of a folder. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTAINER_MODIFY_VERSION">
            <summary>
            Was originally meant to contain the current modification version for a folder. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AB_PROVIDER_ID">
            <summary>
            Contains an address book provider's MAPIUID structure
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEFAULT_VIEW_ENTRYID">
            <summary>
            Contains the entry identifier of a folder's default view.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ASSOC_CONTENT_COUNT">
            <summary>
            Contains the count of items in the associated contents table of the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PACKED_NAME_PROPS">
            <summary>
            Contains schema references
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_APPOINTMENT_ENTRYID">
            <summary>
            Contains the EntryID of the Calendar folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_CONTACT_ENTRYID">
            <summary>
            Contains the EntryID of the Contacts folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_JOURNAL_ENTRYID">
            <summary>
            Contains the EntryID of the Journal folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_NOTE_ENTRYID">
            <summary>
            Contains the EntryID of the Notes folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_TASK_ENTRYID">
            <summary>
            Contains the EntryID of the Tasks folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REMINDERS_ONLINE_ENTRYID">
            <summary>
            Contains an EntryID for the Reminders folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REMINDERS_OFFLINE_ENTRYID">
            <summary>
            Contains the entry identifier for the 'Offline reminders' folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_DRAFTS_ENTRYID">
            <summary>
            Contains the EntryID of the Drafts folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OUTLOOK_2003_ENTRYIDS">
            <summary>
            Contains the following references to special folders if they exist in the store: 0 - conflicts folder, 1 - sync issues folder, 
            2 - local failures folder, 3 - server failures folder, 4 - junk E-mail folder 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_WEBVIEWINFO">
            <summary>
            Contains the home page url for a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_XVIEWINFO_E">
            <summary>
            Used internally to store the last-used view of a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_VIEWS_ONLY">
            <summary>
            The PR_FOLDER_VIEWS_ONLY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_ENTRYIDS">
            <summary>
            Contains EntryIDs of the Delegate Information object, the free/busy message of the logged on user, and the folder with the <see cref="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISPLAY_NAME"/> value of "Freebusy Data"
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEF_MSG_CLASS">
            <summary>
            Contains the message class of the object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEF_FORM_NAME">
            <summary>
            The PR_DEF_FORM_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GENERATE_EXCHANGE_VIEWS">
            <summary>
            The PR_GENERATE_EXCHANGE_VIEWS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AGING_PERIOD">
            <summary>
            Represents the time before an item in a folder is archived
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AGING_GRANULARITY">
            <summary>
            Represents the time unit used to determine the time before an item in a folder is archived
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACHMENT_X400_PARAMETERS">
            <summary>
            Was originally meant to contain an ASN.1 object identifier specifying how the attachment should be handled during transmission, no longer supported
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_DATA_OBJ">
            <summary>
            Contains an attachment object typically accessed through the Object Linking and Embedding (OLE) IStorage interface.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_DATA_BIN">
            <summary>
            Contains binary attachment data typically accessed through the OLE IStream interface.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_ENCODING">
            <summary>
            The ASN.1 object identifier that specifies an attachment's encoding 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_EXTENSION">
            <summary>
            Contains a file name extension that indicates the document type of an attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_FILENAME">
            <summary>
            Contains an attachment's base file name and extension, excluding the path
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_METHOD">
            <summary>
            Contains a MAPI-defined constant representing the way the contents of an attachment can be accessed 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_LONG_FILENAME">
            <summary>
            Contains an attachment's long filename and extension, excluding path
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_PATHNAME">
            <summary>
            An attachment's fully qualified path and file name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_RENDERING">
            <summary>
            Contains a Microsoft Windows metafile with rendering information for an attachment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_TAG">
            <summary>
            Contains an ASN.1 object identifier specifying the application that supplied an attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RENDERING_POSITION">
            <summary>
            Contains the character offset to use in rendering an attachment within the main message text.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_TRANSPORT_NAME">
            <summary>
            Contains the name of an attachment file modified so that it can be associated with TNEF messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_LONG_PATHNAME">
            <summary>
            Contains an attachment's fully-qualified long path and filename
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_MIME_TAG">
            <summary>
            Contains formatting information for a MIME attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_ADDITIONAL_INFO">
            <summary>
            Provides information for a non-Windows attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_CONTENT_ID">
            <summary>
            Contains the content ID header for a MIME message attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_CONTENT_LOCATION">
            <summary>
            Contains the content location header for a MIME message attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_FLAGS">
            <summary>
            The bitmask flags for an attachment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_CONTENT_DISPOSITION">
            <summary>
            Contains the attachment content disposition
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SYNCEVENT_SUPPRESS_GUID">
            <summary>
            Contains the sync event suppress identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISPLAY_TYPE">
            <summary>
            Contains a value used to associate an icon with a particular row of a table
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TEMPLATEID">
            <summary>
            Contains an entry identifier that can find the code associated with a service provider.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PRIMARY_CAPABILITY">
            <summary>
            Obsolete address book property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SMTP_ADDRESS">
            <summary>
            Contains the SMTP address for an address book object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_7BIT_DISPLAY_NAME">
            <summary>
            Contains a 7-bit ASCII version of a messaging user's name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EMS_AB_DISPLAY_NAME_PRINTABLE">
            <summary>
            Contains a 7 bit ACSII string of a messaging user's name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACCOUNT">
            <summary>
            Contains the recipient's account name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ALTERNATE_RECIPIENT">
            <summary>
            Contains a list of entry identifiers for alternate recipients designated by the originally intended recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CALLBACK_TELEPHONE_NUMBER">
            <summary>
            Contains a telephone number that the message recipient can use to reach the sender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONVERSION_PROHIBITED">
            <summary>
            Contains TRUE if message conversions are prohibited by default for the associated messaging user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISCLOSE_RECIPIENTS">
            <summary>
            Contains TRUE if disclosure of this recipient is allowed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GENERATION">
            <summary>
            Contains a generational abbreviation that follows the full name of the recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GIVEN_NAME">
            <summary>
            Contains the first name of the recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GOVERNMENT_ID_NUMBER">
            <summary>
            Contains a government identifier for the recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_TELEPHONE_NUMBER">
            <summary>
            Contains the primary telephone number of the recipient's place of business.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OFFICE_TELEPHONE_NUMBER">
            <summary>
            Contains the telephone number of the recipient's office.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_TELEPHONE_NUMBER">
            <summary>
            Contains the primary telephone number of the recipient's home.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INITIALS">
            <summary>
            Contains the initials for parts of the full name of the recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_KEYWORD">
            <summary>
            Contains a keyword identifying the recipient to the recipient's system administrator.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LANGUAGE">
            <summary>
            Contains a value indicating the language in which the messaging user is writing messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LOCATION">
            <summary>
            Contains the location of the recipient in a format that is useful to the recipient's organization.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAIL_PERMISSION">
            <summary>
            Contains TRUE if the messaging user is allowed to send and receive messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MHS_COMMON_NAME">
            <summary>
            Contains the common name of a messaging user for use in a message header.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORGANIZATIONAL_ID_NUMBER">
            <summary>
            Contains an identifier for the recipient used within the recipient's organization.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SURNAME">
            <summary>
            Contains the recipient's family name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_ENTRYID">
            <summary>
            Contains the original entry identifier for an entry copied from an address book to a personal address book or other writeable address book.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_DISPLAY_NAME">
            <summary>
            Contains the original display name for an entry copied from an address book to a personal address book or other writable address book.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SEARCH_KEY">
            <summary>
            Contains the original search key for an entry copied from an address book to a personal address book or other writeable address book.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POSTAL_ADDRESS">
            <summary>
            Contains the recipient's postal address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_COMPANY_NAME">
            <summary>
            Contains the recipient's company name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TITLE">
            <summary>
            Contains the recipient's job title.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEPARTMENT_NAME">
            <summary>
            Contains a name for the department in which the recipient works.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OFFICE_LOCATION">
            <summary>
            Contains the recipient's office location.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PRIMARY_TELEPHONE_NUMBER">
            <summary>
            Contains the recipient's primary telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS2_TELEPHONE_NUMBER">
            <summary>
            Contains a secondary telephone number at the recipient's place of business.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OFFICE2_TELEPHONE_NUMBER">
            <summary>
            Contains a secondary telephone number at the recipient's office.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CELLULAR_TELEPHONE_NUMBER">
            <summary>
            Contains the recipient's cellular telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MOBILE_TELEPHONE_NUMBER">
            <summary>
            Contains the recipient's mobile telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RADIO_TELEPHONE_NUMBER">
            <summary>
            Contains the recipient's radio telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CAR_TELEPHONE_NUMBER">
            <summary>
            Contains the recipient's car telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OTHER_TELEPHONE_NUMBER">
            <summary>
            Contains an alternate telephone number for the recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRANSMITABLE_DISPLAY_NAME">
            <summary>
            Contains a recipient's display name in a form with enhanced security so that it cannot be changed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BEEPER_TELEPHONE_NUMBER">
            <summary>
            Contains the recipient's beeper telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PAGER_TELEPHONE_NUMBER">
            <summary>
            Contains the recipient's pager telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_USER_CERTIFICATE">
            <summary>
            Contains an ASN.1 authentication certificate for a messaging user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PRIMARY_FAX_NUMBER">
            <summary>
            Contains the telephone number of the recipient's primary fax machine.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_FAX_NUMBER">
            <summary>
            Contains the telephone number of the recipient's business fax machine.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_FAX_NUMBER">
            <summary>
            Contains the telephone number of the recipient's home fax machine.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_ADDRESS_COUNTRY">
            <summary>
            Contains the name of the country/region where the recipient's business is located.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_COUNTRY">
            <summary>
            Contains the name of the recipient's country/region.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_ADDRESS_CITY">
            <summary>
            Contains the name of the city where the recipient's business is located.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LOCALITY">
            <summary>
            Contains the name of the recipient's locality, such as the town or city.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_ADDRESS_STATE_OR_PROVINCE">
            <summary>
            Contains the name of the state or province where the recipient's business is located.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STATE_OR_PROVINCE">
            <summary>
            Contains the name of the recipient's state or province.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_ADDRESS_STREET">
            <summary>
            Contains the street address where the recipient's business is located.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STREET_ADDRESS">
            <summary>
            Contains the recipient's street address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_ADDRESS_POSTAL_CODE">
            <summary>
            Contains the postal code of the recipient's business address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POSTAL_CODE">
            <summary>
            Contains the postal code for the recipient's postal address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_ADDRESS_POST_OFFICE_BOX">
            <summary>
            Contains the post office box number of the recipient's business.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_POST_OFFICE_BOX">
            <summary>
            Contains the number or identifier of the recipient's post office box.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TELEX_NUMBER">
            <summary>
            Contains the recipient's telex number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ISDN_NUMBER">
            <summary>
            Contains the recipient's ISDN-capable telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ASSISTANT_TELEPHONE_NUMBER">
            <summary>
            Contains the telephone number of the recipient's administrative assistant.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME2_TELEPHONE_NUMBER">
            <summary>
            Contains a secondary telephone number at the recipient's home.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ASSISTANT">
            <summary>
            Contains the name of the recipient's administrative assistant.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SEND_RICH_INFO">
            <summary>
            Contains TRUE if the recipient can receive all message content, including Rich Text Format (RTF) and Object Linking and Embedding (OLE) objects
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_WEDDING_ANNIVERSARY">
            <summary>
            Contains the date of the recipient's wedding anniversary.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BIRTHDAY">
            <summary>
            Contains the date of the recipient's birthday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOBBIES">
            <summary>
            Contains the names of the recipient's hobbies.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MIDDLE_NAME">
            <summary>
            Contains the recipient's middle name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISPLAY_NAME_PREFIX">
            <summary>
            Contains the display name prefix for a given MAPI object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFESSION">
            <summary>
            Contains the name of the recipient's line of business.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PREFERRED_BY_NAME">
            <summary>
            Contains the name that the recipient prefers to be called.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REFERRED_BY_NAME">
            <summary>
            Contains the preferred name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SPOUSE_NAME">
            <summary>
            Contains the name of the recipient's spouse/partner.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_COMPUTER_NETWORK_NAME">
            <summary>
            Contains the name of the recipient's computer network.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CUSTOMER_ID">
            <summary>
            Contains the recipient's customer identification number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TTYTDD_PHONE_NUMBER">
            <summary>
            Contains the recipient's Telecommunications Device For The Deaf (TTYTDD) telephone number.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FTP_SITE">
            <summary>
            Contains the recipient's File Transfer Protocol (FTP) site address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GENDER">
            <summary>
            Contains the recipient's gender.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MANAGER_NAME">
            <summary>
            Contains the name of the recipient's manager.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NICKNAME">
            <summary>
            Contains the recipient's nickname.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PERSONAL_HOME_PAGE">
            <summary>
            Contains the web address (URL) of the recipient's personal home page.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BUSINESS_HOME_PAGE">
            <summary>
            Contains the web address (URL) of the recipient's business home page.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTACT_VERSION">
            <summary>
            Contains the version of the recipient's contact information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTACT_ENTRYIDS">
            <summary>
            Contains the entry identifier of the recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTACT_ADDRTYPES">
            <summary>
            Contains the messaging user's e-mail address types, such as SMTP.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTACT_DEFAULT_ADDRESS_INDEX">
            <summary>
            Contains the messaging user's default address index.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTACT_EMAIL_ADDRESSES">
            <summary>
            Contains the messaging user's e-mail address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_COMPANY_MAIN_PHONE_NUMBER">
            <summary>
            Contains the main telephone number of the messaging user's company.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CHILDRENS_NAMES">
            <summary>
            Contains the names of the messaging user's children.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_ADDRESS_CITY">
            <summary>
            Contains the name of the city in the messaging user's home address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_ADDRESS_COUNTRY">
            <summary>
            Contains the name of the country/region in the messaging user's home address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_ADDRESS_POSTAL_CODE">
            <summary>
            Contains the postal code in the messaging user's home address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_ADDRESS_STATE_OR_PROVINCE">
            <summary>
            Contains the name of the state or province in the messaging user's home address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_ADDRESS_STREET">
            <summary>
            Contains the street address in the messaging user's home address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HOME_ADDRESS_POST_OFFICE_BOX">
            <summary>
            Contains the post office box number in the messaging user's home address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OTHER_ADDRESS_CITY">
            <summary>
            Contains the name of the city in the messaging user's other address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OTHER_ADDRESS_COUNTRY">
            <summary>
            Contains the name of the country/region in the messaging user's other address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OTHER_ADDRESS_POSTAL_CODE">
            <summary>
            Contains the postal code in the messaging user's other address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OTHER_ADDRESS_STATE_OR_PROVINCE">
            <summary>
            Contains the name of the state or province in the messaging user's other address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OTHER_ADDRESS_STREET">
            <summary>
            Contains the street address in the messaging user's other address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OTHER_ADDRESS_POST_OFFICE_BOX">
            <summary>
            Contains the post office box number in the messaging user's other address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_USER_X509_CERTIFICATE">
            <summary>
            Contains X509 version 3 security certificates for a messaging user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SEND_INTERNET_ENCODING">
            <summary>
            Contains a bitmask of encoding preferences
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORE_PROVIDERS">
            <summary>
            Contains a list of identifiers of message store providers in the current profile.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AB_PROVIDERS">
            <summary>
            Contains a list of identifiers for address book providers in the current profile.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRANSPORT_PROVIDERS">
            <summary>
            Contains a list of identifiers of transport providers in the current profile.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEFAULT_PROFILE">
            <summary>
            Contains TRUE if a messaging user profile is the MAPI default profile
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AB_SEARCH_PATH">
            <summary>
            Contains a list of entry identifiers for address book containers that are to be searched to resolve names.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AB_DEFAULT_DIR">
            <summary>
            Contains the entry identifier of the address book container that is to be shown to the user first.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AB_DEFAULT_PAB">
            <summary>
            Contains the entry identifier of the address book container that is to be used as the personal address book.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FILTERING_HOOKS">
            <summary>
            Was originally meant to contain hook identifiers. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICE_NAME">
            <summary>
            Contains the name of a message service as set by the user in the MapiSvc.inf file.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICE_DLL_NAME">
            <summary>
            Contains the filename of the DLL containing the message service provider entry point function to call for configuration.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICE_ENTRY_NAME">
            <summary>
            Contains the name of the entry point function for configuration of a message service.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICE_UID">
            <summary>
            Contains the MAPIUID structure for a message service.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICE_EXTRA_UIDS">
            <summary>
            Contains a list of MAPIUID structures that identify additional profile sections for the message service.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICES">
            <summary>
            Contains a list of identifiers of message services in the current profile.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICE_SUPPORT_FILES">
            <summary>
            Contains a list of the files that belong to the message service.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SERVICE_DELETE_FILES">
            <summary>
            Contains a list of filenames that are to be deleted when the message service is uninstalled.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AB_SEARCH_PATH_UPDATE">
            <summary>
            Contains a list of entry identifiers for address book containers explicitly configured by the user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_NAME">
            <summary>
            Contains the name of the profile.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ADMIN_SECURITY_DESCRIPTOR">
            <summary>
            Contains the NT security descriptor of the admin user
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IDENTITY_DISPLAY">
            <summary>
            Contains the display name for a service provider's identity as defined within a messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IDENTITY_ENTRYID">
            <summary>
            Contains the entry identifier for a service provider's identity as defined within a messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESOURCE_METHODS">
            <summary>
            Contains a bitmask of flags that indicate the methods in the IMAPIStatus interface that are supported by the status object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESOURCE_TYPE">
            <summary>
            Contains a value that indicates the service provider type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STATUS_CODE">
            <summary>
            Contains a bitmask of flags that indicate the current status of a session resource. All service providers set status codes as does MAPI to report on the status of the subsystem, the MAPI spooler, and the integrated address book.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IDENTITY_SEARCH_KEY">
            <summary>
            Contains the search key for a service provider's identity as defined within a messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OWN_STORE_ENTRYID">
            <summary>
            Contains the entry identifier of a transport's tightly coupled message store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESOURCE_PATH">
            <summary>
            Contains a path to the service provider's server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STATUS_STRING">
            <summary>
            Contains an ASCII message indicating the current status of a session resource.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_X400_DEFERRED_DELIVERY_CANCEL">
            <summary>
            Was originally meant to contain TRUE if the message transfer system (MTS) allows X.400 deferred delivery cancellation. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HEADER_FOLDER_ENTRYID">
            <summary>
            Was originally meant to contain the entry identifier that a remote transport provider furnishes for its header folder. No longer supported.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REMOTE_PROGRESS">
            <summary>
            Contains a number indicating the status of a remote transfer.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REMOTE_PROGRESS_TEXT">
            <summary>
            Contains an ASCII string indicating the status of a remote transfer.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REMOTE_VALIDATE_OK">
            <summary>
            Contains TRUE if the remote viewer is allowed to call the IMAPIStatus::ValidateState method.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTROL_FLAGS">
            <summary>
            Contains a bitmask of flags governing the behavior of a control used in a dialog box built from a display table
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTROL_STRUCTURE">
            <summary>
            Contains a pointer to a structure for a control used in a dialog box
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTROL_TYPE">
            <summary>
            Contains a value indicating a control type for a control used in a dialog box
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELTAX">
            <summary>
            Contains the width of a dialog box control in standard Windows dialog units
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELTAY">
            <summary>
            Contains the height of a dialog box control in standard Windows dialog units
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_XPOS">
            <summary>
            Contains the x coordinate of the starting position (the upper-left corner) of a dialog box control, in standard Windows dialog units
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_YPOS">
            <summary>
            Contains the y coordinate of the starting position (the upper-left corner) of a dialog box control, in standard Windows dialog units
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTROL_ID">
            <summary>
            Contains a unique identifier for a control used in a dialog box
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INITIAL_DETAILS_PANE">
            <summary>
            Contains the property page in a property sheet to be displayed first.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DID">
            <summary>
            The PR_DID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SEQID">
            <summary>
            The PR_SEQID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DRAFTID">
            <summary>
            The PR_DRAFTID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CHECK_IN_TIME">
            <summary>
            The PR_CHECK_IN_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CHECK_IN_COMMENT">
            <summary>
            The PR_CHECK_IN_COMMENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VERSION_OP_CODE">
            <summary>
            The PR_VERSION_OP_CODE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VERSION_OP_DATA">
            <summary>
            The PR_VERSION_OP_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VERSION_SEQUENCE_NUMBER">
            <summary>
            The PR_VERSION_SEQUENCE_NUMBER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_ID">
            <summary>
            The PR_ATTACH_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PKM_DOC_STATUS">
            <summary>
            The PR_PKM_DOC_STATUS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MV_PKM_OPERATION_REQ">
            <summary>
            The PR_MV_PKM_OPERATION_REQ property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PKM_DOC_INTERNAL_STATE">
            <summary>
            The PR_PKM_DOC_INTERNAL_STATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VERSIONING_FLAGS">
            <summary>
            The PR_VERSIONING_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PKM_LAST_UNAPPROVED_VID">
            <summary>
            The PR_PKM_LAST_UNAPPROVED_VID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MV_PKM_VERSION_LABELS">
            <summary>
            The PR_MV_PKM_VERSION_LABELS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MV_PKM_VERSION_STATUS">
            <summary>
            The PR_MV_PKM_VERSION_STATUS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PKM_INTERNAL_DATA">
            <summary>
            The PR_PKM_INTERNAL_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_CONFLICT">
            <summary>
            The PR_LAST_CONFLICT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONFLICT_MSG_KEY">
            <summary>
            The PR_CONFLICT_MSG_KEY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPL_HEADER">
            <summary>
            The PR_REPL_HEADER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPL_STATUS">
            <summary>
            The PR_REPL_STATUS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPL_CHANGES">
            <summary>
            The PR_REPL_CHANGES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPL_RGM">
            <summary>
            The PR_REPL_RGM property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RMI">
            <summary>
            The PR_RMI property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNAL_POST_REPLY">
            <summary>
            The PR_INTERNAL_POST_REPLY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NTSD_MODIFICATION_TIME">
            <summary>
            Contains the last modification time of the NT security descriptor
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PREVIEW_UNREAD">
            <summary>
            The PR_PREVIEW_UNREAD property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PREVIEW">
            <summary>
            The PR_PREVIEW property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ABSTRACT">
            <summary>
            The PR_ABSTRACT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DL_REPORT_FLAGS">
            <summary>
            The PR_DL_REPORT_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_BILATERAL_INFO">
            <summary>
            The PR_BILATERAL_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_BODY_ID">
            <summary>
            The PR_MSG_BODY_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_CPID">
            <summary>
            Specifies the code page used for the message body
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AUTO_RESPONSE_SUPPRESS">
            <summary>
            Specify whether to suppress auto responses or not
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACL_TABLE">
            <summary>
            Represents an access control list table object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACL_DATA">
            <summary>
            Represents access control list table data
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULES_TABLE">
            <summary>
            Contains a reference to the folder rules table object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULES_DATA">
            <summary>
            Contains a reference to the folder rules data object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_DESIGN_FLAGS">
            <summary>
            The PR_FOLDER_DESIGN_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELEGATED_BY_RULE">
            <summary>
            The PR_DELEGATED_BY_RULE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DESIGN_IN_PROGRESS">
            <summary>
            The PR_DESIGN_IN_PROGRESS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SECURE_ORIGINATION">
            <summary>
            The PR_SECURE_ORIGINATION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PUBLISH_IN_ADDRESS_BOOK">
            <summary>
            Determines whether a folder's display name appears in the address book
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESOLVE_METHOD">
            <summary>
            Contains the value of a folder's conflict resolution
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ADDRESS_BOOK_DISPLAY_NAME">
            <summary>
            The PR_ADDRESS_BOOK_DISPLAY_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EFORMS_LOCALE_ID">
            <summary>
            The PR_EFORMS_LOCALE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HAS_DAMS">
            <summary>
            The PR_HAS_DAMS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEFERRED_SEND_NUMBER">
            <summary>
            The PR_DEFERRED_SEND_NUMBER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEFERRED_SEND_UNITS">
            <summary>
            The PR_DEFERRED_SEND_UNITS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXPIRY_NUMBER">
            <summary>
            The PR_EXPIRY_NUMBER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXPIRY_UNITS">
            <summary>
            The PR_EXPIRY_UNITS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DEFERRED_SEND_TIME">
            <summary>
            Contains the date and time at which a message sender wants a message sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONFLICT_ENTRYID">
            <summary>
            Contains a conflict resolution message's entry identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_LOCALE_ID">
            <summary>
            Contains the LCID of the message's creator
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_TRIGGER_HISTORY">
            <summary>
            The PR_RULE_TRIGGER_HISTORY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MOVE_TO_STORE_ENTRYID">
            <summary>
            The PR_MOVE_TO_STORE_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MOVE_TO_FOLDER_ENTRYID">
            <summary>
            The PR_MOVE_TO_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORAGE_QUOTA_LIMIT">
            <summary>
            The PR_STORAGE_QUOTA_LIMIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXCESS_STORAGE_USED">
            <summary>
            The PR_EXCESS_STORAGE_USED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SVR_GENERATING_QUOTA_MSG">
            <summary>
            The PR_SVR_GENERATING_QUOTA_MSG property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATOR_NAME">
            <summary>
            The PR_CREATOR_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATOR_ENTRYID">
            <summary>
            The PR_CREATOR_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_VERB_EXECUTED">
            <summary>
            The PR_LAST_VERB_EXECUTED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_VERB_EXECUTION_TIME">
            <summary>
            The PR_LAST_VERB_EXECUTION_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_MODIFIER_NAME">
            <summary>
            Contains the last modifier's name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_MODIFIER_ENTRYID">
            <summary>
            Contains the last modifier's entry id
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLY_RECIPIENT_SMTP_PROXIES">
            <summary>
            The PR_REPLY_RECIPIENT_SMTP_PROXIES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_CODEPAGE">
            <summary>
            Contains the message's codepage
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXTENDED_ACL_DATA">
            <summary>
            Contains extended ACL data
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FROM_I_HAVE">
            <summary>
            The PR_FROM_I_HAVE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NEW_ATTACH">
            <summary>
            The PR_NEW_ATTACH property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_START_EMBED">
            <summary>
            The PR_START_EMBED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_EMBED">
            <summary>
            The PR_END_EMBED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_START_RECIP">
            <summary>
            The PR_START_RECIP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_RECIP">
            <summary>
            The PR_END_RECIP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_CC_RECIP">
            <summary>
            The PR_END_CC_RECIP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_BCC_RECIP">
            <summary>
            The PR_END_BCC_RECIP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_P1_RECIP">
            <summary>
            The PR_END_P1_RECIP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_START_TOP_FLD">
            <summary>
            The PR_START_TOP_FLD property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_START_SUB_FLD">
            <summary>
            The PR_START_SUB_FLD property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_FOLDER">
            <summary>
            The PR_END_FOLDER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_START_MESSAGE">
            <summary>
            The PR_START_MESSAGE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_MESSAGE">
            <summary>
            The PR_END_MESSAGE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_END_ATTACH">
            <summary>
            The PR_END_ATTACH property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EC_WARNING">
            <summary>
            The PR_EC_WARNING property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_START_FAI_MSG">
            <summary>
            The PR_START_FAI_MSG property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NEW_FX_FOLDER">
            <summary>
            The PR_NEW_FX_FOLDER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INCR_SYNC_CHG">
            <summary>
            The PR_INCR_SYNC_CHG property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INCR_SYNC_DEL">
            <summary>
            The PR_INCR_SYNC_DEL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INCR_SYNC_END">
            <summary>
            The PR_INCR_SYNC_END property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INCR_SYNC_MSG">
            <summary>
            The PR_INCR_SYNC_MSG property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FX_DEL_PROP">
            <summary>
            The PR_FX_DEL_PROP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IDSET_GIVEN">
            <summary>
            The PR_IDSET_GIVEN property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENDER_FLAGS">
            <summary>
            The PR_SENDER_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENT_REPRESENTING_FLAGS">
            <summary>
            The PR_SENT_REPRESENTING_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RCVD_BY_FLAGS">
            <summary>
            The PR_RCVD_BY_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RCVD_REPRESENTING_FLAGS">
            <summary>
            The PR_RCVD_REPRESENTING_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENDER_FLAGS">
            <summary>
            The PR_ORIGINAL_SENDER_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_SENT_REPRESENTING_FLAGS">
            <summary>
            The PR_ORIGINAL_SENT_REPRESENTING_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_FLAGS">
            <summary>
            The PR_REPORT_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_READ_RECEIPT_FLAGS">
            <summary>
            The PR_READ_RECEIPT_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SOFT_DELETES">
            <summary>
            The PR_SOFT_DELETES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_SUBMISSION_ID_FROM_CLIENT">
            <summary>
            The PR_MESSAGE_SUBMISSION_ID_FROM_CLIENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENDER_SIMPLE_DISP_NAME">
            <summary>
            The PR_SENDER_SIMPLE_DISP_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SENT_REPRESENTING_SIMPLE_DISP_NAME">
            <summary>
            The PR_SENT_REPRESENTING_SIMPLE_DISP_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATOR_SIMPLE_DISP_NAME">
            <summary>
            The PR_CREATOR_SIMPLE_DISP_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORG_ADDR_TYPE">
            <summary>
            Contains the original e-mail address type
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORG_EMAIL_ADDR">
            <summary>
            Contains the original e-mail address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CREATOR_FLAGS">
            <summary>
            The PR_CREATOR_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MODIFIER_FLAGS">
            <summary>
            The PR_MODIFIER_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_FLAGS">
            <summary>
            The PR_ORIGINATOR_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_DESTINATION_FLAGS">
            <summary>
            The PR_REPORT_DESTINATION_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINAL_AUTHOR_FLAGS">
            <summary>
            Contains the original author flags
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_SEARCH_KEY">
            <summary>
            The PR_ORIGINATOR_SEARCH_KEY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_DESTINATION_SEARCH_KEY">
            <summary>
            The PR_REPORT_DESTINATION_SEARCH_KEY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ER_FLAG">
            <summary>
            The PR_ER_FLAG property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_SUBJECT">
            <summary>
            The PR_INTERNET_SUBJECT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_SENT_REPRESENTING_NAME">
            <summary>
            The PR_INTERNET_SENT_REPRESENTING_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INET_MAIL_OVERRIDE_FORMAT">
            <summary>
            The PR_INET_MAIL_OVERRIDE_FORMAT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_EDITOR_FORMAT">
            <summary>
            The PR_MSG_EDITOR_FORMAT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DOTSTUFF_STATE">
            <summary>
            The PR_DOTSTUFF_STATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_SERVER_RULE_ID">
            <summary>
            The PR_RULE_SERVER_RULE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLY_TEMPLATE_ID">
            <summary>
            The PR_REPLY_TEMPLATE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SOURCE_KEY">
            <summary>
            Contains the item's global identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PARENT_SOURCE_KEY">
            <summary>
            Contains the global identifier of the item's parent folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CHANGE_KEY">
            <summary>
            Contains a global identifier specifying the last change to the object
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PREDECESSOR_CHANGE_LIST">
            <summary>
            Represents a PredecessorChangeList
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SYNCHRONIZE_FLAGS">
            <summary>
            The PR_SYNCHRONIZE_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AUTO_ADD_NEW_SUBS">
            <summary>
            The PR_AUTO_ADD_NEW_SUBS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NEW_SUBS_GET_AUTO_ADD">
            <summary>
            The PR_NEW_SUBS_GET_AUTO_ADD property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_SITE_NAME">
            <summary>
            The PR_MESSAGE_SITE_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MESSAGE_PROCESSED">
            <summary>
            The PR_MESSAGE_PROCESSED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_STATE">
            <summary>
            The PR_RULE_MSG_STATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_USER_FLAGS">
            <summary>
            The PR_RULE_MSG_USER_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_PROVIDER">
            <summary>
            The PR_RULE_MSG_PROVIDER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_NAME">
            <summary>
            The PR_RULE_MSG_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_LEVEL">
            <summary>
            The PR_RULE_MSG_LEVEL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_PROVIDER_DATA">
            <summary>
            The PR_RULE_MSG_PROVIDER_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_ACTIONS">
            <summary>
            The PR_RULE_MSG_ACTIONS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_CONDITION">
            <summary>
            The PR_RULE_MSG_CONDITION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_CONDITION_LCID">
            <summary>
            Contains the rule message condition's LCID
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_VERSION">
            <summary>
            The PR_RULE_MSG_VERSION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_MSG_SEQUENCE">
            <summary>
            The PR_RULE_MSG_SEQUENCE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PREVENT_MSG_CREATE">
            <summary>
            The PR_PREVENT_MSG_CREATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IMAP_INTERNAL_DATE">
            <summary>
            The PR_IMAP_INTERNAL_DATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_VERSION">
            <summary>
            Contains the current version of a MAPI profile that contains the service of Microsoft Exchange Server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_CONFIG_FLAGS">
            <summary>
            The PR_PROFILE_CONFIG_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_HOME_SERVER">
            <summary>
            The PR_PROFILE_HOME_SERVER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_USER">
            <summary>
            Contains the mailbox of a logged-on user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_CONNECT_FLAGS">
            <summary>
            Contains the profile connect flags
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_TRANSPORT_FLAGS">
            <summary>
            The PR_PROFILE_TRANSPORT_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_UI_STATE">
            <summary>
            Used to store the last state of the user interface.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_UNRESOLVED_NAME">
            <summary>
            The unresolved name of a user
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_UNRESOLVED_SERVER">
            <summary>
            The unresolved name of a server
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_OPEN_FLAGS">
            <summary>
            Determines the flags used for a specific information store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_BINDING_ORDER">
            <summary>
            The PR_PROFILE_BINDING_ORDER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_TYPE">
            <summary>
            The PR_PROFILE_TYPE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_MAILBOX">
            <summary>
            The PR_PROFILE_MAILBOX property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_SERVER">
            <summary>
            The PR_PROFILE_SERVER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_MAX_RESTRICT">
            <summary>
            The PR_PROFILE_MAX_RESTRICT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_AB_FILES_PATH">
            <summary>
            The PR_PROFILE_AB_FILES_PATH property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_FAVFLD_DISPLAY_NAME">
            <summary>
            The PR_PROFILE_FAVFLD_DISPLAY_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_OFFLINE_STORE_PATH">
            <summary>
            The PR_PROFILE_OFFLINE_STORE_PATH property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_OFFLINE_INFO">
            <summary>
            The PR_PROFILE_OFFLINE_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_HOME_SERVER_DN">
            <summary>
            The PR_PROFILE_HOME_SERVER_DN property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_HOME_SERVER_ADDRS">
            <summary>
            The PR_PROFILE_HOME_SERVER_ADDRS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_SERVER_DN">
            <summary>
            The PR_PROFILE_SERVER_DN property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_FAVFLD_COMMENT">
            <summary>
            The PR_PROFILE_FAVFLD_COMMENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_ALLPUB_DISPLAY_NAME">
            <summary>
            The PR_PROFILE_ALLPUB_DISPLAY_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_ALLPUB_COMMENT">
            <summary>
            The PR_PROFILE_ALLPUB_COMMENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISABLE_WINSOCK">
            <summary>
            The PR_DISABLE_WINSOCK property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IN_TRANSIT">
            <summary>
            The PR_IN_TRANSIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_AUTH_PACKAGE">
            <summary>
            The PR_PROFILE_AUTH_PACKAGE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_USER_ENTRYID">
            <summary>
            The PR_USER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_USER_NAME">
            <summary>
            The PR_USER_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBOX_OWNER_ENTRYID">
            <summary>
            The PR_MAILBOX_OWNER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBOX_OWNER_NAME">
            <summary>
            The PR_MAILBOX_OWNER_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OOF_STATE">
            <summary>
            The PR_OOF_STATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SCHEDULE_FOLDER_ENTRYID">
            <summary>
            The PR_SCHEDULE_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_DAF_ENTRYID">
            <summary>
            The PR_IPM_DAF_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NON_IPM_SUBTREE_ENTRYID">
            <summary>
            Contains the entry identifier of the NON-IPM-SUBTREE folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EFORMS_REGISTRY_ENTRYID">
            <summary>
            The PR_EFORMS_REGISTRY_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SPLUS_FREE_BUSY_ENTRYID">
            <summary>
            The PR_SPLUS_FREE_BUSY_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HIERARCHY_SERVER">
            <summary>
            The PR_HIERARCHY_SERVER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OFFLINE_ADDRBOOK_ENTRYID">
            <summary>
            The PR_OFFLINE_ADDRBOOK_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EFORMS_FOR_LOCALE_ENTRYID">
            <summary>
            The PR_EFORMS_FOR_LOCALE_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREE_BUSY_FOR_LOCAL_SITE_ENTRYID">
            <summary>
            The PR_FREE_BUSY_FOR_LOCAL_SITE_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ADDRBOOK_FOR_LOCAL_SITE_ENTRYID">
            <summary>
            The PR_ADDRBOOK_FOR_LOCAL_SITE_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OFFLINE_MESSAGE_ENTRYID">
            <summary>
            The PR_OFFLINE_MESSAGE_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GW_MTSIN_ENTRYID">
            <summary>
            The PR_GW_MTSIN_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GW_MTSOUT_ENTRYID">
            <summary>
            The PR_GW_MTSOUT_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRANSFER_ENABLED">
            <summary>
            The PR_TRANSFER_ENABLED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TEST_LINE_SPEED">
            <summary>
            The PR_TEST_LINE_SPEED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HIERARCHY_SYNCHRONIZER">
            <summary>
            The PR_HIERARCHY_SYNCHRONIZER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENTS_SYNCHRONIZER">
            <summary>
            The PR_CONTENTS_SYNCHRONIZER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_COLLECTOR">
            <summary>
            The PR_COLLECTOR property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAST_TRANSFER">
            <summary>
            The PR_FAST_TRANSFER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_FAVORITES_ENTRYID">
            <summary>
            The PR_IPM_FAVORITES_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IPM_PUBLIC_FOLDERS_ENTRYID">
            <summary>
            The PR_IPM_PUBLIC_FOLDERS_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORE_OFFLINE">
            <summary>
            The PR_STORE_OFFLINE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CHANGE_ADVISOR">
            <summary>
            The PR_CHANGE_ADVISOR property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAVORITES_DEFAULT_NAME">
            <summary>
            The PR_FAVORITES_DEFAULT_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SYS_CONFIG_FOLDER_ENTRYID">
            <summary>
            The PR_SYS_CONFIG_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CHANGE_NOTIFICATION_GUID">
            <summary>
            The PR_CHANGE_NOTIFICATION_GUID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_CHILD_COUNT">
            <summary>
            Contains the number of sub folders
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RIGHTS">
            <summary>
            The PR_RIGHTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HAS_RULES">
            <summary>
            Indicates email rules
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ADDRESS_BOOK_ENTRYID">
            <summary>
            Specifies the address book entry identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PUBLIC_FOLDER_ENTRYID">
            <summary>
            Reserved for internal use
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OFFLINE_FLAGS">
            <summary>
            The PR_OFFLINE_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HIERARCHY_CHANGE_NUM">
            <summary>
            Contains the count of how many times a sub folder is added to or deleted from the folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HAS_MODERATOR_RULES">
            <summary>
            The PR_HAS_MODERATOR_RULES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_MSG_COUNT">
            <summary>
            The PR_DELETED_MSG_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_FOLDER_COUNT">
            <summary>
            The PR_DELETED_FOLDER_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OLDEST_DELETED_ON">
            <summary>
            The PR_OLDEST_DELETED_ON property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_ASSOC_MSG_COUNT">
            <summary>
            The PR_DELETED_ASSOC_MSG_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICA_SERVER">
            <summary>
            The PR_REPLICA_SERVER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CLIENT_ACTIONS">
            <summary>
            The PR_CLIENT_ACTIONS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DAM_ORIGINAL_ENTRYID">
            <summary>
            The PR_DAM_ORIGINAL_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DAM_BACK_PATCHED">
            <summary>
            The PR_DAM_BACK_PATCHED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_ERROR">
            <summary>
            The PR_RULE_ERROR property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_ACTION_TYPE">
            <summary>
            The PR_RULE_ACTION_TYPE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HAS_NAMED_PROPERTIES">
            <summary>
            The PR_HAS_NAMED_PROPERTIES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICA_VERSION">
            <summary>
            The PR_REPLICA_VERSION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_ACTION_NUMBER">
            <summary>
            The PR_RULE_ACTION_NUMBER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_FOLDER_ENTRYID">
            <summary>
            The PR_RULE_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ACTIVE_USER_ENTRYID">
            <summary>
            The PR_ACTIVE_USER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_X400_ENVELOPE_TYPE">
            <summary>
            The PR_X400_ENVELOPE_TYPE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLD_TIME">
            <summary>
            The PR_MSG_FOLD_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ICS_CHANGE_KEY">
            <summary>
            The PR_ICS_CHANGE_KEY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_GW_ADMIN_OPERATIONS">
            <summary>
            The PR_GW_ADMIN_OPERATIONS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_CONTENT">
            <summary>
            The PR_INTERNET_CONTENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_HAS_ATTACH_FROM_IMAIL">
            <summary>
            The PR_HAS_ATTACH_FROM_IMAIL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_NAME">
            <summary>
            The PR_ORIGINATOR_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_ADDR">
            <summary>
            The PR_ORIGINATOR_ADDR property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_ADDRTYPE">
            <summary>
            The PR_ORIGINATOR_ADDRTYPE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ORIGINATOR_ENTRYID">
            <summary>
            The PR_ORIGINATOR_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ARRIVAL_TIME">
            <summary>
            The PR_ARRIVAL_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_TRACE_INFO">
            <summary>
            The PR_TRACE_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SUBJECT_TRACE_INFO">
            <summary>
            The PR_SUBJECT_TRACE_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_NUMBER">
            <summary>
            Contains an index into a table of recipients
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MTS_SUBJECT_ID">
            <summary>
            The PR_MTS_SUBJECT_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_DESTINATION_NAME">
            <summary>
            The PR_REPORT_DESTINATION_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPORT_DESTINATION_ENTRYID">
            <summary>
            The PR_REPORT_DESTINATION_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTENT_SEARCH_KEY">
            <summary>
            The PR_CONTENT_SEARCH_KEY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOREIGN_ID">
            <summary>
            The PR_FOREIGN_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOREIGN_REPORT_ID">
            <summary>
            The PR_FOREIGN_REPORT_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOREIGN_SUBJECT_ID">
            <summary>
            The PR_FOREIGN_SUBJECT_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNAL_TRACE_INFO">
            <summary>
            The PR_INTERNAL_TRACE_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROMOTE_PROP_ID_LIST">
            <summary>
            The PR_PROMOTE_PROP_ID_LIST property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IN_CONFLICT">
            <summary>
            The PR_IN_CONFLICT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LONGTERM_ENTRYID_FROM_TABLE">
            <summary>
            The PR_LONGTERM_ENTRYID_FROM_TABLE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MEMBER_ID">
            <summary>
            The PR_MEMBER_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MEMBER_NAME">
            <summary>
            The PR_MEMBER_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MEMBER_RIGHTS">
            <summary>
            The PR_MEMBER_RIGHTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_ID">
            <summary>
            The PR_RULE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_IDS">
            <summary>
            The PR_RULE_IDS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_SEQUENCE">
            <summary>
            The PR_RULE_SEQUENCE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_STATE">
            <summary>
            The PR_RULE_STATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_USER_FLAGS">
            <summary>
            The PR_RULE_USER_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_CONDITION">
            <summary>
            The PR_RULE_CONDITION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_MOAB">
            <summary>
            The PR_PROFILE_MOAB property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_MOAB_GUID">
            <summary>
            The PR_PROFILE_MOAB_GUID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_MOAB_SEQ">
            <summary>
            The PR_PROFILE_MOAB_SEQ property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IMPLIED_RESTRICTIONS">
            <summary>
            The PR_IMPLIED_RESTRICTIONS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_ACTIONS">
            <summary>
            The PR_RULE_ACTIONS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_PROVIDER">
            <summary>
            The PR_RULE_PROVIDER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_NAME">
            <summary>
            The PR_RULE_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_LEVEL">
            <summary>
            The PR_RULE_LEVEL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RULE_PROVIDER_DATA">
            <summary>
            The PR_RULE_PROVIDER_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_FULL_BACKUP">
            <summary>
            The PR_LAST_FULL_BACKUP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_ADDR_INFO">
            <summary>
            The PR_PROFILE_ADDR_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_OPTIONS_DATA">
            <summary>
            The PR_PROFILE_OPTIONS_DATA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EVENTS_ROOT_FOLDER_ENTRYID">
            <summary>
            The PR_EVENTS_ROOT_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NNTP_ARTICLE_FOLDER_ENTRYID">
            <summary>
            The PR_NNTP_ARTICLE_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NNTP_CONTROL_FOLDER_ENTRYID">
            <summary>
            The PR_NNTP_CONTROL_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NEWSGROUP_ROOT_FOLDER_ENTRYID">
            <summary>
            The PR_NEWSGROUP_ROOT_FOLDER_ENTRYID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INBOUND_NEWSFEED_DN">
            <summary>
            The PR_INBOUND_NEWSFEED_DN property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OUTBOUND_NEWSFEED_DN">
            <summary>
            The PR_OUTBOUND_NEWSFEED_DN property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_ON">
            <summary>
            The PR_DELETED_ON property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICATION_STYLE">
            <summary>
            The PR_REPLICATION_STYLE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICATION_SCHEDULE">
            <summary>
            The PR_REPLICATION_SCHEDULE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICATION_MESSAGE_PRIORITY">
            <summary>
            The PR_REPLICATION_MESSAGE_PRIORITY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OVERALL_MSG_AGE_LIMIT">
            <summary>
            The PR_OVERALL_MSG_AGE_LIMIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICATION_ALWAYS_INTERVAL">
            <summary>
            The PR_REPLICATION_ALWAYS_INTERVAL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICATION_MSG_SIZE">
            <summary>
            The PR_REPLICATION_MSG_SIZE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IS_NEWSGROUP_ANCHOR">
            <summary>
            The PR_IS_NEWSGROUP_ANCHOR property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IS_NEWSGROUP">
            <summary>
            The PR_IS_NEWSGROUP property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_REPLICA_LIST">
            <summary>
            The PR_REPLICA_LIST property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OVERALL_AGE_LIMIT">
            <summary>
            The PR_OVERALL_AGE_LIMIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_CHARSET">
            <summary>
            The PR_INTERNET_CHARSET property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_MESSAGE_SIZE_EXTENDED">
            <summary>
            The PR_DELETED_MESSAGE_SIZE_EXTENDED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_NORMAL_MESSAGE_SIZE_EXTENDED">
            <summary>
            The PR_DELETED_NORMAL_MESSAGE_SIZE_EXTENDED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_ASSOC_MESSAGE_SIZE_EXTENDED">
            <summary>
            The PR_DELETED_ASSOC_MESSAGE_SIZE_EXTENDED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SECURE_IN_SITE">
            <summary>
            The PR_SECURE_IN_SITE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NT_USER_NAME">
            <summary>
            The PR_NT_USER_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LOCALE_ID">
            <summary>
            The PR_LOCALE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_LOGON_TIME">
            <summary>
            The PR_LAST_LOGON_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_LOGOFF_TIME">
            <summary>
            The PR_LAST_LOGOFF_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORAGE_LIMIT_INFORMATION">
            <summary>
            The PR_STORAGE_LIMIT_INFORMATION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NEWSGROUP_COMPONENT">
            <summary>
            The PR_NEWSGROUP_COMPONENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NEWSFEED_INFO">
            <summary>
            The PR_NEWSFEED_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_NEWSGROUP_NAME">
            <summary>
            The PR_INTERNET_NEWSGROUP_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_FLAGS">
            <summary>
            The PR_FOLDER_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LAST_ACCESS_TIME">
            <summary>
            The PR_LAST_ACCESS_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RESTRICTION_COUNT">
            <summary>
            The PR_RESTRICTION_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CATEG_COUNT">
            <summary>
            The PR_CATEG_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CACHED_COLUMN_COUNT">
            <summary>
            The PR_CACHED_COLUMN_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NORMAL_MSG_W_ATTACH_COUNT">
            <summary>
            The PR_NORMAL_MSG_W_ATTACH_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ASSOC_MSG_W_ATTACH_COUNT">
            <summary>
            The PR_ASSOC_MSG_W_ATTACH_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_ON_NORMAL_MSG_COUNT">
            <summary>
            Contains the total number of recipients on the normal messages in a public folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RECIPIENT_ON_ASSOC_MSG_COUNT">
            <summary>
            Contains the total number of recipients on the associated messages in a public folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_ON_NORMAL_MSG_COUNT">
            <summary>
            The PR_ATTACH_ON_NORMAL_MSG_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_ON_ASSOC_MSG_COUNT">
            <summary>
            The PR_ATTACH_ON_ASSOC_MSG_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NORMAL_MESSAGE_SIZE">
            <summary>
            The PR_NORMAL_MESSAGE_SIZE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NORMAL_MESSAGE_SIZE_EXTENDED">
            <summary>
            The PR_NORMAL_MESSAGE_SIZE_EXTENDED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ASSOC_MESSAGE_SIZE">
            <summary>
            The PR_ASSOC_MESSAGE_SIZE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ASSOC_MESSAGE_SIZE_EXTENDED">
            <summary>
            The PR_ASSOC_MESSAGE_SIZE_EXTENDED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FOLDER_PATHNAME">
            <summary>
            The PR_FOLDER_PATHNAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OWNER_COUNT">
            <summary>
            The PR_OWNER_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONTACT_COUNT">
            <summary>
            The PR_CONTACT_COUNT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CODE_PAGE_ID">
            <summary>
            The PR_CODE_PAGE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RETENTION_AGE_LIMIT">
            <summary>
            The PR_RETENTION_AGE_LIMIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DISABLE_PERUSER_READ">
            <summary>
            The PR_DISABLE_PERUSER_READ property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_PARSE_STATE">
            <summary>
            The PR_INTERNET_PARSE_STATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_MESSAGE_INFO">
            <summary>
            The PR_INTERNET_MESSAGE_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PST_PATH">
            <summary>
            Contains the location of the object in the personal folder store to create or configure.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PST_REMEMBER_PW">
            <summary>
            The PR_PST_REMEMBER_PW property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OST_ENCRYPTION">
            <summary>
            The PR_OST_ENCRYPTION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PST_ENCRYPTION">
            <summary>
            Contains the encryption level at which to create a file in the personal folder store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PST_PW_SZ_OLD">
            <summary>
            The PR_PST_PW_SZ_OLD property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PST_PW_SZ_NEW">
            <summary>
            Contains the new password to use for future access to the personal folder store.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SORT_LOCALE_ID">
            <summary>
            The PR_SORT_LOCALE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_URL_NAME">
            <summary>
            The PR_URL_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LOCAL_COMMIT_TIME">
            <summary>
            The PR_LOCAL_COMMIT_TIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LOCAL_COMMIT_TIME_MAX">
            <summary>
            The PR_LOCAL_COMMIT_TIME_MAX property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELETED_COUNT_TOTAL">
            <summary>
            The PR_DELETED_COUNT_TOTAL property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_AUTO_RESET">
            <summary>
            The PR_AUTO_RESET property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_URL_COMP_NAME_HASH">
            <summary>
            The PR_URL_COMP_NAME_HASH property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_2">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_2 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_RANK">
            <summary>
            The PR_RANK property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_4">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_4 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_5">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_5 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_6">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_6 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_7">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_7 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_8">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_8 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_9">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_9 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_10">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_10 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_11">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_11 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MSG_FOLDER_TEMPLATE_RES_12">
            <summary>
            The PR_MSG_FOLDER_TEMPLATE_RES_12 property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PF_PLATINUM_HOME_MDB">
            <summary>
            The PR_PF_PLATINUM_HOME_MDB property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PF_PROXY_REQUIRED">
            <summary>
            The PR_PF_PROXY_REQUIRED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INTERNET_FREE_DOC_INFO">
            <summary>
            The PR_INTERNET_FREE_DOC_INFO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PF_OVER_HARD_QUOTA_LIMIT">
            <summary>
            The PR_PF_OVER_HARD_QUOTA_LIMIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PF_MSG_SIZE_LIMIT">
            <summary>
            The PR_PF_MSG_SIZE_LIMIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CONNECTION_MODULUS">
            <summary>
            The PR_CONNECTION_MODULUS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELIVER_TO_DN">
            <summary>
            The PR_DELIVER_TO_DN property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MIME_SIZE">
            <summary>
            The PR_MIME_SIZE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FILE_SIZE_EXTENDED">
            <summary>
            The PR_FILE_SIZE_EXTENDED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FID">
            <summary>
            The PR_FID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PARENT_FID">
            <summary>
            The PR_PARENT_FID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MID">
            <summary>
            The PR_MID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CATEG_ID">
            <summary>
            The PR_CATEG_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PARENT_CATEG_ID">
            <summary>
            The PR_PARENT_CATEG_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INST_ID">
            <summary>
            The PR_INST_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_INSTANCE_NUM">
            <summary>
            The PR_INSTANCE_NUM property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ADDRBOOK_MID">
            <summary>
            The PR_ADDRBOOK_MID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ICS_NOTIF">
            <summary>
            The PR_ICS_NOTIF property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ARTICLE_NUM_NEXT">
            <summary>
            The PR_ARTICLE_NUM_NEXT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_IMAP_LAST_ARTICLE_ID">
            <summary>
            The PR_IMAP_LAST_ARTICLE_ID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_NOT_822_RENDERABLE">
            <summary>
            The PR_NOT_822_RENDERABLE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_LTID">
            <summary>
            The PR_LTID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CN_EXPORT">
            <summary>
            The PR_CN_EXPORT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PCL_EXPORT">
            <summary>
            The PR_PCL_EXPORT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_CN_MV_EXPORT">
            <summary>
            The PR_CN_MV_EXPORT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PF_QUOTA_STYLE">
            <summary>
            The PR_PF_QUOTA_STYLE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PF_STORAGE_QUOTA">
            <summary>
            The PR_PF_STORAGE_QUOTA property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_SEARCH_FLAGS">
            <summary>
            The PR_SEARCH_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ASSOCIATED">
            <summary>
            The PR_ASSOCIATED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROFILE_SECURE_MAILBOX">
            <summary>
            The PR_PROFILE_SECURE_MAILBOX property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_BOUNCE_SERVER">
            <summary>
            The PR_MAILBEAT_BOUNCE_SERVER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_REQUEST_SENT">
            <summary>
            The PR_MAILBEAT_REQUEST_SENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_USENET_SITE_NAME">
            <summary>
            The PR_USENET_SITE_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_REQUEST_RECEIVED">
            <summary>
            The PR_MAILBEAT_REQUEST_RECEIVED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_REQUEST_PROCESSED">
            <summary>
            The PR_MAILBEAT_REQUEST_PROCESSED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_REPLY_SENT">
            <summary>
            The PR_MAILBEAT_REPLY_SENT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_REPLY_SUBMIT">
            <summary>
            The PR_MAILBEAT_REPLY_SUBMIT property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_REPLY_RECEIVED">
            <summary>
            The PR_MAILBEAT_REPLY_RECEIVED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_MAILBEAT_REPLY_PROCESSED">
            <summary>
            The PR_MAILBEAT_REPLY_PROCESSED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELEGATES_DISPLAY_NAMES">
            <summary>
            The PR_DELEGATES_DISPLAY_NAMES property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELEGATES_ENTRYIDS">
            <summary>
            The PR_DELEGATES_ENTRYIDS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_START_RANGE">
            <summary>
            The PR_FREEBUSY_START_RANGE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_END_RANGE">
            <summary>
            The PR_FREEBUSY_END_RANGE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_EMAIL_ADDRESS">
            <summary>
            The PR_FREEBUSY_EMAIL_ADDRESS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_ALL_MONTHS">
            <summary>
            The PR_FREEBUSY_ALL_MONTHS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_ALL_EVENTS">
            <summary>
            The PR_FREEBUSY_ALL_EVENTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_TENTATIVE_MONTHS">
            <summary>
            The PR_FREEBUSY_TENTATIVE_MONTHS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_TENTATIVE_EVENTS">
            <summary>
            The PR_FREEBUSY_TENTATIVE_EVENTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_BUSY_MONTHS">
            <summary>
            The PR_FREEBUSY_BUSY_MONTHS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_BUSY_EVENTS">
            <summary>
            The PR_FREEBUSY_BUSY_EVENTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_OOF_MONTHS">
            <summary>
            The PR_FREEBUSY_OOF_MONTHS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_OOF_EVENTS">
            <summary>
            The PR_FREEBUSY_OOF_EVENTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_LAST_MODIFIED">
            <summary>
            The PR_FREEBUSY_LAST_MODIFIED property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FREEBUSY_NUM_MONTHS">
            <summary>
            The PR_FREEBUSY_NUM_MONTHS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DELEGATES_SEE_PRIVATE">
            <summary>
            The PR_DELEGATES_SEE_PRIVATE property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PERSONAL_FREEBUSY">
            <summary>
            The PR_PERSONAL_FREEBUSY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_PROCESS_MEETING_REQUESTS">
            <summary>
            The PR_PROCESS_MEETING_REQUESTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DECLINE_RECURRING_MEETING_REQUESTS">
            <summary>
            The PR_DECLINE_RECURRING_MEETING_REQUESTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_DECLINE_CONFLICTING_MEETING_REQUESTS">
            <summary>
            The PR_DECLINE_CONFLICTING_MEETING_REQUESTS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VD_BINARY">
            <summary>
            The PR_VD_BINARY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VD_STRINGS">
            <summary>
            The PR_VD_STRINGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VD_FLAGS">
            <summary>
            The PR_VD_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VD_LINK_TO">
            <summary>
            The PR_VD_LINK_TO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VD_VIEW_FOLDER">
            <summary>
            The PR_VD_VIEW_FOLDER property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VD_NAME">
            <summary>
            The PR_VD_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_VD_VERSION">
            <summary>
            The PR_VD_VERSION property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_DISPLAY_NAME">
            <summary>
            The PR_FAV_DISPLAY_NAME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_DISPLAY_ALIAS">
            <summary>
            The PR_FAV_DISPLAY_ALIAS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_PUBLIC_SOURCE_KEY">
            <summary>
            The PR_FAV_PUBLIC_SOURCE_KEY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_OST_OSTID">
            <summary>
            The PR_OST_OSTID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_STORE_SLOWLINK">
            <summary>
            The PR_STORE_SLOWLINK property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_AUTOSUBFOLDERS">
            <summary>
            The PR_FAV_AUTOSUBFOLDERS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_PARENT_SOURCE_KEY">
            <summary>
            The PR_FAV_PARENT_SOURCE_KEY property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_LEVEL_MASK">
            <summary>
            The PR_FAV_LEVEL_MASK property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_INHERIT_AUTO">
            <summary>
            The PR_FAV_INHERIT_AUTO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_FAV_DEL_SUBS">
            <summary>
            The PR_FAV_DEL_SUBS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXCEPTION_STARTTIME">
            <summary>
            The PR_EXCEPTION_STARTTIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_EXCEPTION_ENDTIME">
            <summary>
            The PR_EXCEPTION_ENDTIME property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACHMENT_LINKID">
            <summary>
            The PR_ATTACHMENT_LINKID property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACHMENT_FLAGS">
            <summary>
            The PR_ATTACHMENT_FLAGS property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACHMENT_HIDDEN">
            <summary>
            The PR_ATTACHMENT_HIDDEN property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACHMENT_CONTACTPHOTO">
            <summary>
            The PR_ATTACHMENT_CONTACTPHOTO property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_EXTENSION_W">
            <summary>
            The PR_ATTACH_EXTENSION_W property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_FILENAME_W">
            <summary>
            The PR_ATTACH_FILENAME_W property tag
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyTag.PR_ATTACH_LONG_FILENAME_W">
            <summary>
            The PR_ATTACH_LONG_FILENAME_W property tag
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxType">
            <summary>
            Represents the type of mailbox that is represented by the e-mail address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxType.Mailbox">
            <summary>
            Represents a mail-enabled Active Directory object.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxType.PublicDistributionList">
            <summary>
            Represents a public distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxType.PrivateDistributionList">
            <summary>
            Represents a private distribution list in a user's mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxType.Contact">
            <summary>
            Represents a contact in a user's mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxType.PublicFolder">
            <summary>
            Represents a public folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxType.OneOff">
            <summary>
            Represents a one-off member of a personal distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxType.None">
            <summary>
            Represents an unknown type of mailbox.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IsLessThanOrEqualTo">
            <summary>
            Represents a search expression that compares a property with either a constant value or another property and returns true if the first property is less than or equal to the second.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the IsLessThanOrEqualTo class. 
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the IsLessThanOrEqualTo class. 
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the IsLessThanOrEqualTo class. 
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the IsLessThanOrEqualTo class. 
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the IsLessThanOrEqualTo class. 
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThanOrEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the IsLessThanOrEqualTo class. 
            </summary>
            <param name="propertyPath1">The first property path</param>
            <param name="propertyPath2">The second property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThanOrEqualTo.ToString">
            <summary>
            Converts the value of the current IsLessThanOrEqualTo object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current IsLessThanOrEqualTo object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.Identity">
            <summary>
            Represents an Identity
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Identity.#ctor">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Identity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
            <param name="primarySmtpAddress">The primary SMTP address</param>
        </member>
        <member name="P:Independentsoft.Exchange.Identity.PrincipalName">
            <summary>
            Contains the fully qualified domain name (FQDN) for the location of the user account.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Identity.Sid">
            <summary>
            Contains the security identifier of the account to be impersonated. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Identity.PrimarySmtpAddress">
            <summary>
            Contains the primary SMTP address that is used to create the connecting SID.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Identity.SmtpAddress">
            <summary>
            Represents the Simple Mail Transfer Protocol (SMTP) address of the account to use for Exchange Impersonation.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GroupBy">
            <summary>
            Specifies an arbitrary grouping for FindItem queries.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IGroupBy">
            <summary>
            Interface for grouping FindItem queries
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.GroupBy.#ctor">
            <summary>
            Initializes a new instance of the GroupBy class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.GroupBy.#ctor(Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the GroupBy class.
            </summary>
            <param name="propertyPath">The property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.GroupBy.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.SortDirection)">
            <summary>
            Initializes a new instance of the GroupBy class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="order">Specifies how to sort the response items</param>
        </member>
        <member name="M:Independentsoft.Exchange.GroupBy.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.AggregateOn)">
            <summary>
            Initializes a new instance of the GroupBy class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="aggregateOn">Determines the order of the response items</param>
        </member>
        <member name="M:Independentsoft.Exchange.GroupBy.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.SortDirection,Independentsoft.Exchange.AggregateOn)">
            <summary>
            Initializes a new instance of the GroupBy class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="order">Specifies how to sort the response items</param>
            <param name="aggregateOn">Determines the order of the response items</param>
        </member>
        <member name="M:Independentsoft.Exchange.GroupBy.ToString">
            <summary>
            Converts the value of the current GroupBy object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current GroupBy object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.GroupBy.PropertyPath">
            <summary>
            Identifies frequently referenced properties by URI.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GroupBy.Order">
            <summary>
            Determines the order of the groups in the grouped item array that is returned in the response. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GroupBy.AggregateOn">
            <summary>
            Represents the field that is used to determine the order of groups in a response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetUserPhotoResponse">
            <summary>
            Class GetUserPhotoResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetUserPhotoResponse.HasChanged">
            <summary>
            Gets a value indicating whether this instance has changed.
            </summary>
            <value><c>true</c> if this instance has changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GetUserPhotoResponse.PictureData">
            <summary>
            Gets the picture data.
            </summary>
            <value>The picture data.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetSearchableMailboxesResponse">
            <summary>
            Class GetSearchableMailboxesResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetSearchableMailboxesResponse.SearchableMailboxes">
            <summary>
            Gets the searchable mailboxes.
            </summary>
            <value>The searchable mailboxes.</value>
        </member>
        <member name="T:Independentsoft.Exchange.EmailUser">
            <summary>
            Represents an email user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EmailUser.#ctor">
            <summary>
            Initializes a new instance of the EmailUser class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EmailUser.ToString">
            <summary>
            Converts the value of the current EmailUser object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.EmailUser.Name">
            <summary>
            Represents the display name of the mailbox user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EmailUser.UserId">
            <summary>
            Represents the user identifier of an email user.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DelegateUserResponse">
            <summary>
            Contains the response message for a single delegate user. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DelegateUserResponse.DelegateUser">
            <summary>
            Identifies a single delegate that is returned in a delegate management response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CreatedEvent">
            <summary>
            Represents an event in which an item or folder is created.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CreatedEvent.#ctor">
            <summary>
            Initializes a new instance of the CreatedEvent class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CreatedEvent.TimeStamp">
            <summary>
            Represents the timestamp of a created item or folder mailbox event.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CreatedEvent.Id">
            <summary>
            Represents the identifier of the created item or folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CreatedEvent.ParentFolderId">
            <summary>
            Represents the identifier of the parent folder of the created item or folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CreateAction">
            <summary>
            Defines a create action
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CreateAction.CreateNew">
            <summary>
            Create new
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CreateAction.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CreateAction.UpdateOrCreate">
            <summary>
            Update or create
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ChangeHighlights">
            <summary>
            Encapsulates information on changes to a meeting request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ChangeHighlights.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ChangeHighlights"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ChangeHighlights.HasLocationChanged">
            <summary>
            Checks whether the location for the meeting has changed. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ChangeHighlights.Location">
            <summary>
            Gets the old location of the meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ChangeHighlights.HasStartTimeChanged">
            <summary>
            Checks whether the start time for the meeting has changed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ChangeHighlights.StartTime">
            <summary>
            Gets the old start date and time of the meeting. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ChangeHighlights.HasEndTimeChanged">
            <summary>
            Checks whether the end time of the meeting has changed. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ChangeHighlights.EndTime">
            <summary>
            Gets the old end date and time of the meeting. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarPermissionReadAccess">
            <summary>
            Indicates whether a user has permission to read items within a Calendar folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionReadAccess.TimeOnly">
            <summary>
            Indicates that the user has permission to view only free/busy time in the calendar.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionReadAccess.TimeAndSubjectAndLocation">
            <summary>
            Indicates that the user has permission to view free/busy time in the calendar and the subject and location of appointments.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionReadAccess.FullDetails">
            <summary>
            Indicates that the user has permission to view all items in the calendar, including free/busy time and subject, location, and details of appointments.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionReadAccess.None">
            <summary>
            Indicates that the user does not have permission to view items in the calendar.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.WebClientUrl">
            <summary>
            Represents the URL of an Exchange Web client.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.WebClientUrl.#ctor">
            <summary>
            Initializes a new instance of the WebClientUrl class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.WebClientUrl.AuthenticationMethods">
            <summary>
            Represents the authentication method to use when accessing the specified URL.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.WebClientUrl.Url">
            <summary>
            Represents the Web address for the URL.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AttachmentShape">
            <summary>
            Identifies additional properties to return in a response to a GetAttachment request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
            <param name="includeMimeContent">true to include MIME content in the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor(Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
            <param name="bodyType">Specifies how the body text is formatted in the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor(System.Boolean,Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
            <param name="includeMimeContent">true to include MIME content in the response</param>
            <param name="bodyType">Specifies how the body text is formatted in the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Boolean)">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
            <param name="includeMimeContent">true to include MIME content in the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
            <param name="bodyType">Specifies how the body text is formatted in the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Boolean,Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the AttachmentShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
            <param name="includeMimeContent">true to include MIME content in the response</param>
            <param name="bodyType">Specifies how the body text is formatted in the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentShape.ToString">
            <summary>
            Converts the value of the current AttachmentShape object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current AttachmentShape object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentShape.PropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentShape.IncludeMimeContent">
            <summary>
            Specifies whether the Multipurpose Internet Mail Extensions (MIME) content of an item or attachment is returned in the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentShape.BodyType">
            <summary>
            Identifies how the body text is formatted in the response. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentShape.FilterHtmlContent">
            <summary>
            Specifies if HTML content should be filtered from an attachment
            </summary>
            <remarks>Default value is false</remarks>
        </member>
        <member name="T:Independentsoft.Exchange.AcceptSharingInvitation">
            <summary>
            This class is used to accept a sharing invitation.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AcceptSharingInvitation.#ctor">
            <summary>
            Initializes a new instance of the AcceptSharingInvitation class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AcceptSharingInvitation.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the AcceptSharingInvitation class with ItemId of the referenced item.  
            </summary>
            <param name="referenceItemId">Identifies the item to which the response object refers.</param>
        </member>
        <member name="T:Independentsoft.Email.Mime.MessageFormatException">
            <summary>
            The exception that is thrown when load or parse message with wrong format.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.MessageFormatException.#ctor">
            <summary>
            Initializes a new instance of the MessageFormatException class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.MessageFormatException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MessageFormatException class with the specified error message.
            </summary>
            <param name="message">Error description.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.MessageFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MessageFormatException class with the specified error message and inner exception. 
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Independentsoft.Email.Mime.HeaderList">
            <summary>
            Class HeaderList.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.HeaderList.Remove(Independentsoft.Email.Mime.StandardHeader)">
            <summary>
            Removes the specified standard header.
            </summary>
            <param name="standardHeader">The standard header.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.HeaderList.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Independentsoft.Email.Mime.HeaderList.Item(Independentsoft.Email.Mime.StandardHeader)">
            <summary>
            Gets the <see cref="T:Independentsoft.Email.Mime.Header"/> with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>Header.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.HeaderList.Item(System.String)">
            <summary>
            Gets the <see cref="T:Independentsoft.Email.Mime.Header"/> with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>Header.</returns>
        </member>
        <member name="T:Independentsoft.Email.Mime.ContentTransferEncoding">
            <summary>
            Specifies the Content-Transfer-Encoding header information for an e-mail message attachment.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentTransferEncoding.SevenBit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentTransferEncoding.EightBit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentTransferEncoding.Base64">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentTransferEncoding.Binary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentTransferEncoding.QuotedPrintable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentTransferEncoding.IetfToken">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentTransferEncoding.XToken">
            <summary>
            
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.ResponseStatus">
            <summary>
            Indicates the response to a meeting request.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ResponseStatus.Organized">
            <summary>
            The appointment is on the Organizer's calendar or the recipient is the Organizer of the meeting. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ResponseStatus.Tentative">
            <summary>
            Meeting tentatively accepted. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ResponseStatus.Accepted">
            <summary>
            Meeting accepted. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ResponseStatus.Declined">
            <summary>
            Meeting declined. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ResponseStatus.NotResponded">
            <summary>
            Recipient has not responded. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.ResponseStatus.None">
            <summary>
            The appointment is a simple appointment and does not require a response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.MessageFlag">
            <summary>
            Contains a value that indicates the origin and current state of a message. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.Associated">
            <summary>
            The message is an associated message of a folder. The client or provider has read-only access to this flag. The Read flag is ignored for associated messages, which do not retain a read/unread state. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.FromMe">
            <summary>
            The messaging user sending was the messaging user receiving the message. This flag is meant to be set by the transport provider. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.HasAttachment">
            <summary>
            The message has at least one attachment. The client has read-only access to this flag. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.NonReadReportPending">
            <summary>
            A nonread report needs to be sent for the message. The client or provider has read-only access to this flag. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.OriginInternet">
            <summary>
            The incoming message arrived over the Internet. It originated either outside the organization or from a source the gateway cannot consider trusted. The client should display an appropriate message to the user. Transport providers set this flag; the client has read-only access. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.OriginMiscExternal">
            <summary>
            The incoming message arrived over an external link other than X.400 or the Internet. It originated either outside the organization or from a source the gateway cannot consider trusted. The client should display an appropriate message to the user. Transport providers set this flag; the client has read-only access. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.OriginX400">
            <summary>
            The incoming message arrived over an X.400 link. It originated either outside the organization or from a source the gateway cannot consider trusted. The client should display an appropriate message to the user. Transport providers set this flag; the client has read-only access. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.Read">
            <summary>
            The message is marked as having been read. This flag is ignored if the Associated flag is set. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.Resend">
            <summary>
            The message includes a request for a resend operation with a non-delivery report.  
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.ReadReportPending">
            <summary>
            A read report needs to be sent for the message. The client or provider has read-only access to this flag. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.Submit">
            <summary>
            The message is marked for sending. Message store providers set this flag; the client has read-only access. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.Unmodified">
            <summary>
            The outgoing message has not been modified since the first time that it was saved; the incoming message has not been modified since it was delivered. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.MessageFlag.Unsent">
            <summary>
            The message is still being composed. It is saved, but has not been sent. Typically, this flag is cleared after the message is sent.
            </summary>
        </member>
        <member name="T:Independentsoft.IO.StructuredStorage.RootDirectoryEntry">
            <summary>
            Represents a root node.
            </summary>
            <remarks>
            RootDirectoryEntry object in a compound file that must be accessed before any other <see cref="T:Independentsoft.IO.StructuredStorage.Storage"/> objects and <see cref="T:Independentsoft.IO.StructuredStorage.Stream"/> objects are referenced. It is the uppermost parent object in the storage object and stream object hierarchy.
            </remarks>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.RootDirectoryEntry.Name">
            <summary>
            Gets root's name.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.RootDirectoryEntry.DirectoryEntries">
            <summary>
            Gets collection of <see cref="T:Independentsoft.IO.StructuredStorage.DirectoryEntry"/>.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TaskStatus">
            <summary>
            Represents the status of a task item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskStatus.NotStarted">
            <summary>
            Task not started.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskStatus.InProgress">
            <summary>
            Task in progress.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskStatus.Completed">
            <summary>
            Task completed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskStatus.WaitingOnOthers">
            <summary>
            Task waiting on others.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskStatus.Deferred">
            <summary>
            Task deferred.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StandardTimeZone">
            <summary>
            Identifies a single time zone definition.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Utc">
            <summary>
            Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Gmt">
            <summary>
            Greenwich Mean Time (same as UTC).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Lisbon">
            <summary>
            Dublin, Edinburgh, Lisbon, London (UTC + 0:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Paris">
            <summary>
            Brussels, Copenhagen, Madrid, Paris, Vilnius (UTC + 1:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Berlin">
            <summary>
            Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna (UTC + 1:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.EasternEurope">
            <summary>
            Eastern Europe (UTC + 2:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Prague">
            <summary>
            Belgrade, Pozsony, Budapest, Ljubljana, Prague (UTC + 1:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Athens">
            <summary>
            Athens, Istanbul, Minsk (UTC + 2:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Brasilia">
            <summary>
            Brasilia (UTC - 3:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.AtlanticCanada">
            <summary>
            Atlantic time (UTC - 4:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Eastern">
            <summary>
            Eastern time (UTC - 5:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Central">
            <summary>
            Central time (UTC - 6:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Mountain">
            <summary>
            Mountain time (UTC - 7:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Pacific">
            <summary>
            Pacific time (UTC - 8:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Alaska">
            <summary>
            Alaska (UTC - 9:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Hawaii">
            <summary>
            Hawaii (UTC - 10:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.MidwayIsland">
            <summary>
            Midway Island, Samoa (UTC - 11:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Wellington">
            <summary>
            Auckland, Wellington (UTC + 12:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Brisbane">
            <summary>
            Brisbane (UTC + 10:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Adelaide">
            <summary>
            Adelaide (UTC + 9:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Tokyo">
            <summary>
            Osaka, Sapporo, Tokyo (UTC + 9:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.HongKong">
            <summary>
            Hong Kong SAR (UTC + 8:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Bangkok">
            <summary>
            Bangkok, Hanoi, Jakarta (UTC + 7:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Bombay">
            <summary>
            Mumbai, Calcutta, Madras, New Delhi (UTC + 5:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.AbuDhabi">
            <summary>
            Abu Dhabi, Muscat (UTC + 4:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Tehran">
            <summary>
            Tehran (UTC + 3:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Baghdad">
            <summary>
            Baghdad, Kuwait, Riyadh (UTC + 3:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Israel">
            <summary>
            Israel (UTC + 2:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Newfoundland">
            <summary>
            Newfoundland (UTC - 3:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Azores">
            <summary>
            Azores, Cape Verde Islands (UTC - 1:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.MidAtlantic">
            <summary>
            Mid Atlantic (UTC - 2:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Monrovia">
            <summary>
            Casablanca, Monrovia (UTC + 0:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.BuenosAires">
            <summary>
            Buenos Aires, Georgetown (UTC - 3:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Caracas">
            <summary>
            Caracas, La Paz (UTC - 4:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Indiana">
            <summary>
            Indiana (UTC - 5:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Bogota">
            <summary>
            Bogota, Lima, Quito (UTC - 5:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Saskatchewan">
            <summary>
            Saskatchewan (UTC - 6:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.MexicoCity">
            <summary>
            Mexico City, Tegucigalpa (UTC - 6:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Arizona">
            <summary>
            Arizona (UTC - 7:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Eniwetok">
            <summary>
            Eniwetok, Kwajalein (UTC - 12:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Fiji">
            <summary>
            Fiji Islands, Kamchatka, Marshall Islands (UTC + 12:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Magadan">
            <summary>
            Magadan, Solomon Islands, New Caledonia (UTC + 11:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Hobart">
            <summary>
            Hobart (UTC + 10:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Guam">
            <summary>
            Guam, Port Moresby (UTC + 10:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Darwin">
            <summary>
            Darwin (UTC + 9:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Beijing">
            <summary>
            Beijing, Chongqing, Urumqi (UTC + 8:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Almaty">
            <summary>
            Akmola, Almaty, Dhaka (UTC + 6:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Islamabad">
            <summary>
            Islamabad, Karachi, Tashkent (UTC + 5:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Kabul">
            <summary>
            Kabul (UTC + 4:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Cairo">
            <summary>
            Cairo (UTC + 2:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Harare">
            <summary>
            Harare, Pretoria (UTC + 2:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Moscow">
            <summary>
            Moscow, St. Petersburg, Volgograd (UTC + 3:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.CapeVerde">
            <summary>
            Cape Verde (UTC - 01:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Caucasus">
            <summary>
            Baku, Tbilisi, Yerevan (UTC + 04:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.CentralAmerica">
            <summary>
            Central America (UTC - 06:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.EastAfrica">
            <summary>
            East Africa, Nairobi (UTC + 03:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Ekaterinburg">
            <summary>
            Ekaterinburg (UTC + 05:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Helsinki">
            <summary>
            Helsinki, Riga, Tallinn (UTC + 02:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Greenland">
            <summary>
            Greenland (UTC - 03:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Rangoon">
            <summary>
            Yangon (Rangoon). (UTC + 06:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Nepal">
            <summary>
            Kathmandu, Nepal (UTC + 05:45).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Irkutsk">
            <summary>
            Irkutsk, Ulaan Bataar (UTC + 08:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Krasnoyarsk">
            <summary>
            Krasnoyarsk (UTC + 07:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Santiago">
            <summary>
            Santiago (UTC - 04:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.SriLanka">
            <summary>
            Sri Jayawardenepura, Sri Lanka (UTC + 05:30).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Tonga">
            <summary>
            Nuku'alofa, Tonga (UTC + 13:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Vladivostok">
            <summary>
            Vladivostok (UTC + 10:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.WestCentralAfrica">
            <summary>
            West Central Africa (UTC + 01:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Yakutsk">
            <summary>
            Yakutsk (UTC + 09:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Dhaka">
            <summary>
            Astana, Dhaka (UTC + 06:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Seoul">
            <summary>
            Seoul, Korea Standard time (UTC + 09:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Perth">
            <summary>
            Perth, Western Australia (UTC + 08:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Arab">
            <summary>
            Arab, Kuwait, Riyadh (UTC + 03:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Taipei">
            <summary>
            Taipei (UTC + 08:00).
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardTimeZone.Sydney">
            <summary>
            Canberra, Melbourne, Sydney (UTC + 10:00).
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SerializableTimeZone">
            <summary>
            Identifies time zone information and the transition between standard time and daylight saving time.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SerializableTimeZone.#ctor">
            <summary>
            Initializes a new instance of the SerializableTimeZone class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SerializableTimeZone.#ctor(Independentsoft.Exchange.StandardTimeZone)">
            <summary>
            Initializes a new instance of the SerializableTimeZone class.
            </summary>
            <param name="standardTimeZone">The standard time zone</param>
        </member>
        <member name="M:Independentsoft.Exchange.SerializableTimeZone.#ctor(System.Int32,Independentsoft.Exchange.SerializableTimeZoneTime,Independentsoft.Exchange.SerializableTimeZoneTime)">
            <summary>
            Initializes a new instance of the SerializableTimeZone class.
            </summary>
            <param name="offset">The minute offset from Coordinated Universal Time (UTC)</param>
            <param name="standardTime">The standard time zone</param>
            <param name="daylightTime">The day light time</param>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZone.Offset">
            <summary>
            The Bias property gets or sets a value that represents the general offset from Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZone.StandardTime">
            <summary>
            The DaylightTime property gets or sets a value that represents an offset from the time relative to Coordinated Universal Time (UTC) that is represented by the Bias property.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SerializableTimeZone.DaylightTime">
            <summary>
            The StandardTime property gets or sets a value that represents an offset from the time relative to Coordinated Universal Time (UTC) that is represented by the Bias property.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SearchResultType">
            <summary>
            Defines how search results should be returned
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchResultType.StatisticsOnly">
            <summary>
            Return the statistics Only
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchResultType.PreviewOnly">
            <summary>
            Return a preview of the results
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SearchItemKind">
            <summary>
            Specifies the type of item to search in a <see cref="T:Independentsoft.Exchange.MailboxStatisticsByKeywords"/> operation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Email">
            <summary>
            Search Email messages for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Meetings">
            <summary>
            Search meetings for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Tasks">
            <summary>
            Search tasks for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Notes">
            <summary>
            Search notes for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Docs">
            <summary>
            Search documents for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Journals">
            <summary>
            Search journals for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Contacts">
            <summary>
            Search contacts for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.IM">
            <summary>
            Search instant messages for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.VoiceMail">
            <summary>
            Search voice mails for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Faxes">
            <summary>
            Search faxes for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.Posts">
            <summary>
            Search posts for keywords
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SearchItemKind.RssFeeds">
            <summary>
            Search RSS feeds for keywords
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PropertyId">
            <summary>
            Identifies an extended property.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ExtendedPropertyPath">
            <summary>
            Identifies extended MAPI properties on folders and items.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedPropertyPath.IsEqual(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Compares the specified <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> with the current object
            </summary>
            <param name="propertyPath">The <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> to compare against</param>
            <returns>True if both <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> are equal; false otherwise</returns>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyId.#ctor">
            <summary>
            Initializes a new instance of the PropertyId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyId.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the PropertyId class.
            </summary>
            <param name="id">The identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyId.#ctor(System.Int32,Independentsoft.Exchange.StandardPropertySet)">
            <summary>
            Initializes a new instance of the PropertyId class.
            </summary>
            <param name="id">The identifier</param>
            <param name="set">The property set</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyId.#ctor(System.Int32,Independentsoft.Exchange.StandardPropertySet,Independentsoft.Exchange.MapiPropertyType)">
            <summary>
            Initializes a new instance of the PropertyId class.
            </summary>
            <param name="id">The identifier</param>
            <param name="set">The property set</param>
            <param name="type">The property type</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyId.IsEqual(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Determines if the this <see cref="T:Independentsoft.Exchange.PropertyId"/> and the specified <see cref="T:Independentsoft.Exchange.PropertyId"/> are equal
            </summary>
            <param name="propertyPath">The extended property path</param>
            <returns>true if both <see cref="T:Independentsoft.Exchange.PropertyId"/> are equal; false otherwise</returns>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyId.ToString">
            <summary>
            Converts the value of the current PropertyId object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current PropertyId object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyId.Id">
            <summary>
            Gets or sets the identifier for the property
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyId.Set">
            <summary>
            Gets or sets the property set
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyId.Type">
            <summary>
            Gets or sets the property type
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaPhoneNumberAttributedValue">
            <summary>
            Class PersonaPhoneNumberAttributedValue.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaPhoneNumberAttributedValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.PersonaPhoneNumberAttributedValue"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPhoneNumberAttributedValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPhoneNumberAttributedValue.Attributions">
            <summary>
            Gets the attributions.
            </summary>
            <value>The attributions.</value>
        </member>
        <member name="T:Independentsoft.Exchange.OAuthToken">
            <summary>
            Definition of OAuthToken class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.OAuthToken.#ctor(System.String)">
            <summary>
            Initializes an OAuthToken instance.
            </summary>
            <param name="accessToken">access token.</param>
        </member>
        <member name="M:Independentsoft.Exchange.OAuthToken.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes an OAuthToken instance.
            </summary>
            <param name="clientId">clientId.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.Type">
            <summary>
            Reports current OAuthToken type.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.ExpiresIn">
            <summary>
            Reports current OAuthToken life time in seconds.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.Scope">
            <summary>
            Reports current OAuthToken's scope of the access token.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.ExpiresOn">
            <summary>
            Reports the date and time of current OAuthToken expires on.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.NotBefore">
            <summary>
            Reports the NotBefore property in date and time of current OAuthToken.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.Resource">
            <summary>
            Reports the current OAuthToken resource.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.AccessToken">
            <summary>
            Reports the current OAuthToken access token.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.RefreshToken">
            <summary>
            Reports the current OAuthToken refresh token.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.ClientId">
            <summary>
            Reports the current OAuthToken client ID.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.Username">
            <summary>
            Reports the current OAuthToken user name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OAuthToken.Password">
            <summary>
            Reports the current OAuthToken password.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingRequestType">
            <summary>
            Describes the type of the meeting request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestType.FullUpdate">
            <summary>
            Identifies the meeting request as a full update to an existing request. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestType.InformationalUpdate">
            <summary>
            Identifies the meeting request as only containing updated informational content.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestType.NewMeetingRequest">
            <summary>
            Identifies the meeting request as a new meeting request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestType.Outdated">
            <summary>
            Identifies the meeting request as outdated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestType.SilentUpdate">
            <summary>
            Identifies the meeting request as a silent update to an existing meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestType.PrincipalWantsCopy">
            <summary>
            Indicates that the meeting request belongs to a principal who has forwarded meeting messages to a delegate and has his copies marked as informational.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailTipsConfiguration">
            <summary>
            Contains service configuration information for the mail tips service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTipsConfiguration.IsMailTipsEnabled">
            <summary>
            Indicates whether the mail tips service is available.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTipsConfiguration.MaxRecipients">
            <summary>
            Indicates the maximum number of recipients that can be passed to the GetMailTips Operation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTipsConfiguration.MaxMessageSize">
            <summary>
            Represents the maximum message size a recipient can accept. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTipsConfiguration.LargeAudienceThreshold">
            <summary>
            Represents the large audience threshold for a client.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTipsConfiguration.ShowExternalRecipientCount">
            <summary>
            Indicates whether consumers of the GetMailTips Operation have to show mail tips that indicate the number of external recipients to which a message is addressed. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTipsConfiguration.InternalDomains">
            <summary>
            Identifies the list of internal SMTP domains of the organization.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.LastVerbExecuted">
            <summary>
            Indicates the last action, such as reply or forward, that was taken on the message so that the client can display the appropriate icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LastVerbExecuted.ReplyToSender">
            <summary>
            REPLYTOSENDER.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LastVerbExecuted.ReplyToAll">
            <summary>
            REPLYTOALL.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LastVerbExecuted.Forward">
            <summary>
            FORWARD.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LastVerbExecuted.None">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.JournalPropertyPath">
             <summary>
             Represents a journal property path
             </summary>
             <example>
             The following example gets all journal items
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             service.RequestServerVersion = RequestServerVersion.Exchange2010SP2;
            
             IsEqualTo restriction = new IsEqualTo(JournalPropertyPath.ItemClass, ItemClass.Journal);
             FindItemResponse response = service.FindItem(StandardFolder.Journal, JournalPropertyPath.AllPropertyPaths, restriction);
            
             for (int i = 0; i &lt; response.Items.Count; i++)
             {
                 Journal journal = (Journal)response.Items[i];
            
                 CrestronConsole.PrintLine("Subject = " + journal.Subject);
                 CrestronConsole.PrintLine("Type = " + journal.Type);
                 CrestronConsole.PrintLine("TypeDescription = " + journal.TypeDescription);
                 CrestronConsole.PrintLine("StartTime = " + journal.StartTime);
                 CrestronConsole.PrintLine("EndTime = " + journal.EndTime);
                 CrestronConsole.PrintLine("Body Preview = " + journal.BodyPlainText);
                 CrestronConsole.PrintLine("----------------------------------------------------------------");
             }
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.StartTime">
            <summary>
            The start time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.EndTime">
            <summary>
            The end time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.Type">
            <summary>
            The entry type of the journal
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.TypeDescription">
            <summary>
            The type description
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.Duration">
            <summary>
            The Duration
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.Companies">
            <summary>
            The companies
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.Contacts">
            <summary>
            The contacts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.IsPrivate">
            <summary>
            Is private or not
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.CommonStartTime">
            <summary>
            The common start time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.JournalPropertyPath.CommonEndTime">
            <summary>
            The common end time
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.JournalPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ItemQueryTraversal">
            <summary>
            Defines whether the search finds items in folders or in the dumpster folder. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemQueryTraversal.Shallow">
            <summary>
            Returns only the items in the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemQueryTraversal.SoftDeleted">
            <summary>
            Returns only the items that are in the dumpster folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemQueryTraversal.Associated">
            <summary>
            Returns only the configuration items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IdFormat">
            <summary>
            Specifies the source format of the Id to be converted or the format of the Id after conversion. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IdFormat.EwsLegacyId">
            <summary>
            Describes identifiers that are produced by Exchange Web Services in the initial release version of Exchange 2007.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IdFormat.EwsId">
            <summary>
            Describes identifiers that are produced by Exchange Web Services starting with Exchange 2007 SP1.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IdFormat.EntryId">
            <summary>
            Describes MAPI identifiers, as in the PR_ENTRYID property.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IdFormat.HexEntryId">
            <summary>
            Describes a hexadecimal-encoded representation of the PR_ENTRYID property. This is the format of availability calendar event identifiers. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IdFormat.StoreId">
            <summary>
            Describes Exchange store identifiers.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IdFormat.OwaId">
            <summary>
            Describes Exchange store identifiers.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetServerTimeZonesResponse">
            <summary>
            Defines a response to a GetServerTimeZones Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetServerTimeZonesResponse.TimeZoneDefinitions">
            <summary>
            Represents an array of time zone definitions.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ForwardItem">
            <summary>
            Contains an Exchange store item to forward to recipients.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ForwardItem.#ctor">
            <summary>
            Initializes a new instance of the ForwardItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ForwardItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the ForwardItem class.
            </summary>
            <param name="referenceItemId">The item identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.ForwardItem.ToString">
            <summary>
            Converts the value of the current ForwardItem object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current ForwardItem object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.FolderClass">
             <summary>
             Represents the folder class for a folder.
             </summary>
             <example>
             The following example gets all folders from the Contacts folder class
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
            
             IsEqualTo restriction = new IsEqualTo(FolderPropertyPath.FolderClass, FolderClass.ContactFolder);
             FindFolderResponse findFolderResponse = service.FindFolder(StandardFolder.MailboxRoot, restriction, FolderQueryTraversal.Deep);
            
             foreach (Folder folder in findFolderResponse.Folders)
             {
                 CrestronConsole.PrintLine(folder.DisplayName);
                 CrestronConsole.PrintLine(folder.FolderId.ToString());
                 CrestronConsole.PrintLine("----------------------------------------------------------");
             }
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.FolderClass.Folder">
            <summary>
            Represent a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderClass.CalendarFolder">
            <summary>
            Contains calendar objects, such as appointments
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderClass.ContactFolder">
            <summary>
            Contains contact objects
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderClass.JournalFolder">
            <summary>
            Contains journal objects
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderClass.MailFolder">
            <summary>
            Contains mail objects
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderClass.NoteFolder">
            <summary>
            Contains note objects
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderClass.TaskFolder">
            <summary>
            Contains task objects
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FailedMailbox">
            <summary>
            Class FailedMailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FailedMailbox.#ctor">
            <summary>
            Initializes a new instance of the FailedMailbox class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FailedMailbox.ToString">
            <summary>
            Converts the value of the current FailedMailbox object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.FailedMailbox.Mailbox">
            <summary>
            Gets the mailbox.
            </summary>
            <value>The mailbox.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FailedMailbox.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FailedMailbox.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FailedMailbox.IsArchive">
            <summary>
            Gets a value indicating whether this instance is archive.
            </summary>
            <value><c>true</c> if this instance is archive; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Independentsoft.Exchange.EncryptedSharedFolderData">
            <summary>
            Contains the encrypted data that a client can use to authorize the sharing of its calendar or contact data with other clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EncryptedSharedFolderData.Token">
            <summary>
            Contains encrypted data that represents the identification token for the shared data.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EncryptedSharedFolderData.Data">
            <summary>
            Contains encrypted data that represents the shared data.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ElcFolderType">
            <summary>
            The type of policy tag.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Calendar">
            <summary>
            Calendar
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Contacts">
            <summary>
            Contacts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.DeletedItems">
            <summary>
            Deleted Items
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Drafts">
            <summary>
            Drafts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Inbox">
            <summary>
            Inbox
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.JunkEmail">
            <summary>
            Junk Email
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Journal">
            <summary>
            Journal
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Notes">
            <summary>
            Notes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Outbox">
            <summary>
            Outbox
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.SentItems">
            <summary>
            Sent items
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Tasks">
            <summary>
            Tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.ManagedCustomFolder">
            <summary>
            Managed Custom Folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.RssSubscriptions">
            <summary>
            Rss Subscriptions
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.SyncIssues">
            <summary>
            Sync Issues
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.ConversationHistory">
            <summary>
            Conversation History
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.Personal">
            <summary>
            Personal
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.RecoverableItems">
            <summary>
            Recoverable Items
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ElcFolderType.NonIpmRoot">
            <summary>
            NonIpmRoot
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AlternateId">
            <summary>
            Describes an identifier to convert in a request and the results of a converted identifier in the response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SourceId">
            <summary>
            Represents an id change request
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AlternateId.#ctor">
            <summary>
            Initializes a new instance of the AlternateId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AlternateId.#ctor(Independentsoft.Exchange.IdFormat,System.String,System.String)">
            <summary>
            Initializes a new instance of the AlternateId class with the specified format, id and mailbox.
            </summary>
            <param name="format">The <see cref="T:Independentsoft.Exchange.IdFormat"/> format</param>
            <param name="id">The id</param>
            <param name="mailbox">The mailbox that contains the identifiers to translate</param>
        </member>
        <member name="P:Independentsoft.Exchange.AlternateId.Format">
            <summary>
            Describes the source format in a ConvertId Operation request and describes the destination format in a ConvertId Operation response. The destination format is described by the DestinationFormat attribute of the ConvertId element in the request. This attribute is of type IdFormatType.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AlternateId.Id">
            <summary>
            Describes the source identifier in a ConvertId Operation request and describes the destination identifier in a ConvertId Operation response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AlternateId.ItemId">
            <summary>
            The unique identifier of the item
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AlternateId.FolderId">
            <summary>
            The identifier of the folder
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AlternateId.Mailbox">
            <summary>
            Describes the mailbox primary Simple Mail Transfer Protocol (SMTP) address that contains the identifiers to translate.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AcceptItem">
            <summary>
            Represents an Accept reply to a meeting request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AcceptItem.#ctor">
            <summary>
            Initializes a new instance of the AcceptItem class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AcceptItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the AcceptItem class with ItemId of the referenced item.  
            </summary>
            <param name="referenceItemId">Identifies the item to which the response object refers.</param>
        </member>
        <member name="T:Independentsoft.Email.Mime.StandardHeader">
            <summary>
            Contains the standard message headers defined in RFC 2822.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ResentDate">
            <summary>
            Resent-Date header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ResentFrom">
            <summary>
            Resent-From header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ResentSender">
            <summary>
            Resent-Sender header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ResentTo">
            <summary>
            Resent-To header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ResentCc">
            <summary>
            Resent-Cc header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ResentBcc">
            <summary>
            Resent-Bcc header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ResentMessageID">
            <summary>
            Resent-Msg-ID header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.From">
            <summary>
            From header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Sender">
            <summary>
            Sender header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ReplyTo">
            <summary>
            Reply-To header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.To">
            <summary>
            To header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Cc">
            <summary>
            Cc header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Bcc">
            <summary>
            Bcc header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.MessageID">
            <summary>
            Message-ID header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.InReplyTo">
            <summary>
            In-Reply-To header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.References">
            <summary>
            References header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Subject">
            <summary>
            Subject header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Comments">
            <summary>
            Comments header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Keywords">
            <summary>
            Keywords header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Date">
            <summary>
            Date header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ReturnPath">
            <summary>
            Return-Path header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.Received">
            <summary>
            Received header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.MimeVersion">
            <summary>
            MIME-Version header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ContentType">
            <summary>
            Content-Type header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ContentID">
            <summary>
            Content-ID header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ContentTransferEncoding">
            <summary>
            Content-Transfer-Encoding header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ContentDescription">
            <summary>
            Content-Description header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ContentDisposition">
            <summary>
            Content-Disposition header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ContentLocation">
            <summary>
            Content-Location header field.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.StandardHeader.ContentLength">
            <summary>
            Content-Length header field.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.Header">
            <summary>
            Class Header.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Header.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Header"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Header.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Header"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Header.#ctor(Independentsoft.Email.Mime.StandardHeader,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Header"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Header.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.Header.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Header.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Independentsoft.Msg.RecipientType">
            <summary>
            Represents the recipient type for a message recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecipientType.To">
            <summary>
            The recipient is a primary (To) recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecipientType.Cc">
            <summary>
            The recipient is a carbon copy (Cc) recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecipientType.Bcc">
            <summary>
            The recipient is a blind carbon copy (Bcc) recipient.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecipientType.P1">
            <summary>
            The recipient did not successfully receive the message on the previous attempt. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecipientType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.Priority">
            <summary>
            Represents the relative priority of a message.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Priority.Low">
            <summary>
            The message is not urgent.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Priority.Normal">
            <summary>
            The message has normal priority.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Priority.High">
            <summary>
            The message is urgent.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.Priority.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.Message">
            <summary>
            Represents Outlook message file.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.Message.#ctor">
            <summary>
            Initializes a new instance of the Message class.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.Message.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Message class based on the supplied file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Msg.Message.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the Message class based on the supplied stream.
            </summary>
            <param name="stream">A stream.</param>
        </member>
        <member name="M:Independentsoft.Msg.Message.#ctor(Independentsoft.Email.Mime.Message)">
            <summary>
            Initializes a new instance of the Message class from the specified MIME message.
            </summary>
            <param name="mimeMessage">The MIME message.</param>
        </member>
        <member name="M:Independentsoft.Msg.Message.Open(System.String)">
            <summary>
            Loads message from the specified file.
            </summary>
            <param name="filePath">File path.</param>
        </member>
        <member name="M:Independentsoft.Msg.Message.Open(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Loads message from the specified stream.
            </summary>
            <param name="stream">An input stream.</param>
        </member>
        <member name="M:Independentsoft.Msg.Message.GetStream">
            <summary>
            Gets stream to read from this message.
            </summary>
            <returns>A stream.</returns>
        </member>
        <member name="M:Independentsoft.Msg.Message.GetBytes">
            <summary>
            Gets bytes to read from this message.
            </summary>
            <returns>Attachment as a byte array.</returns>
        </member>
        <member name="M:Independentsoft.Msg.Message.Save(System.String)">
            <summary>
            Saves this message to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Msg.Message.Save(System.String,System.Boolean)">
            <summary>
            Saves this message to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="overwrite">True to overwrite existing file, otherwise false.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Msg.Message.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves this message to the specified stream.
            </summary>
            <param name="stream">A stream.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Msg.Message.ConvertToMimeMessage">
            <summary>
            Converts to MIME message.
            </summary>
            <returns>Independentsoft.Email.Mime.Message.</returns>
        </member>
        <member name="P:Independentsoft.Msg.Message.Encoding">
            <summary>
            Gets or sets message encoding. Default is UTF8 encoding.
            </summary>
            <value>The encoding.</value>
            <example>
            In order to save message as Unicode use:
              <code>
            message.Encoding = System.Text.Encoding.Unicode;
              </code>
              </example>
        </member>
        <member name="P:Independentsoft.Msg.Message.MessageClass">
            <summary>
            Contains a text string that identifies the sender-defined message class, such as IPM.Note.
            </summary>
            <value>The message class.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Subject">
            <summary>
            Contains the full subject of a message.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SubjectPrefix">
            <summary>
            Contains a subject prefix that typically indicates some action on a message, such as "FW: " for forwarding.
            </summary>
            <value>The subject prefix.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ConversationTopic">
            <summary>
            Contains the topic of the first message in a conversation thread.
            </summary>
            <value>The conversation topic.</value>
            <remarks>A conversation thread represents a series of messages and replies. These properties are set for the first message in a thread, usually to the <see cref="P:Independentsoft.Msg.Message.NormalizedSubject"/> property. Subsequent messages in the thread should use the same topic without modification.</remarks>
        </member>
        <member name="P:Independentsoft.Msg.Message.DisplayBcc">
            <summary>
            Contains an ASCII list of the display names of any blind carbon copy (BCC) message recipients, separated by semicolons (;).
            </summary>
            <value>The display BCC.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DisplayCc">
            <summary>
            Contains an ASCII list of the display names of any carbon copy (CC) message recipients, separated by semicolons (;).
            </summary>
            <value>The display cc.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DisplayTo">
            <summary>
            Contains a list of the display names of the primary (To) message recipients, separated by semicolons (;).
            </summary>
            <value>The display to.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OriginalDisplayTo">
            <summary>
            Contains a list of the display names of the primary (To) message recipients, separated by semicolons (;).
            </summary>
            <value>The original display to.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReplyTo">
            <summary>
            Contains reply to email address.
            </summary>
            <value>The reply to.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.NormalizedSubject">
            <summary>
            Contains the message subject with any prefix removed.
            </summary>
            <value>The normalized subject.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Body">
            <summary>
            Contains the message text.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BodyRtf">
            <summary>
            Contains the Rich Text Format (RTF) version of the message text.
            </summary>
            <value>The body RTF.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.RtfCompressed">
            <summary>
            Contains the Rich Text Format (RTF) version of the message text, usually in compressed form.
            </summary>
            <value>The RTF compressed.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SearchKey">
            <summary>
            Contains a binary-comparable key that identifies correlated objects for a search.
            </summary>
            <value>The search key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ChangeKey">
            <summary>
            Contains a change key of a message.
            </summary>
            <value>The change key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.EntryId">
            <summary>
            Contains a MAPI entry identifier used to open and edit properties of a particular MAPI object.
            </summary>
            <value>The entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReadReceiptEntryId">
            <summary>
            Gets or sets the read receipt entry identifier.
            </summary>
            <value>The read receipt entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReadReceiptSearchKey">
            <summary>
            Gets or sets the read receipt search key.
            </summary>
            <value>The read receipt search key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CreationTime">
            <summary>
            Contains the creation date and time of the message.
            </summary>
            <value>The creation time.</value>
            <remarks>A message store sets this property for each message that it creates.</remarks>
        </member>
        <member name="P:Independentsoft.Msg.Message.LastModificationTime">
            <summary>
            Contains the date and time when the message was last modified.
            </summary>
            <value>The last modification time.</value>
            <remarks>This property is initially set to the same value as the <see cref="P:Independentsoft.Msg.Message.CreationTime"/> property.</remarks>
        </member>
        <member name="P:Independentsoft.Msg.Message.MessageDeliveryTime">
            <summary>
            Contains the date and time when a message was delivered.
            </summary>
            <value>The message delivery time.</value>
            <remarks>This property describes the time the message was stored at the server, rather than the download time when the transport provider copied the message from the server to the local store.</remarks>
        </member>
        <member name="P:Independentsoft.Msg.Message.ClientSubmitTime">
            <summary>
            Contains the date and time the message sender submitted a message.
            </summary>
            <value>The client submit time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DeferredDeliveryTime">
            <summary>
            Contains the date and time when a message sender wants a message delivered.
            </summary>
            <value>The deferred delivery time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ProviderSubmitTime">
            <summary>
            Contains the date and time the mail provider submitted a message.
            </summary>
            <value>The provider submit time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReportTime">
            <summary>
            Contains the report date and time.
            </summary>
            <value>The report time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.LastVerbExecutionTime">
            <summary>
            Contains the time when the last verb was executed.
            </summary>
            <value>The last verb execution time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReportText">
            <summary>
            Contains report text.
            </summary>
            <value>The report text.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CreatorName">
            <summary>
            Contains name of the person who created message.
            </summary>
            <value>The name of the creator.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.LastModifierName">
            <summary>
            Contains name of the person who modified message.
            </summary>
            <value>The last name of the modifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.InternetMessageId">
            <summary>
            Contains unique ID for the message.
            </summary>
            <value>The internet message identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.InReplyTo">
            <summary>
            Contains the identifier of the message to which this message is a reply.
            </summary>
            <value>The in reply to.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.InternetReferences">
            <summary>
            Contains Internet reference ID for the message.
            </summary>
            <value>The internet references.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.MessageCodePage">
            <summary>
            Contains the code page that is used for the message.
            </summary>
            <value>The message code page.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IconIndex">
            <summary>
            Contains a number that indicates which icon to use when you display a group of e-mail objects.
            </summary>
            <value>The index of the icon.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Size">
            <summary>
            Contains the size of the body, subject, sender, and attachments.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.InternetCodePage">
            <summary>
            Indicates the code page used for the <see cref="P:Independentsoft.Msg.Message.Body"/> or the <see cref="P:Independentsoft.Msg.Message.BodyHtml"/> properties.
            </summary>
            <value>The internet code page.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ConversationIndex">
            <summary>
            Contains a binary value that indicates the relative position of this message within a conversation thread.
            </summary>
            <value>The index of the conversation.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsHidden">
            <summary>
            Contains true if message is invisible.
            </summary>
            <value><c>true</c> if this instance is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsReadOnly">
            <summary>
            Contains true if message is read only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsSystem">
            <summary>
            Contains true if message is system message.
            </summary>
            <value><c>true</c> if this instance is system; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DisableFullFidelity">
            <summary>
            Gets or sets a value indicating whether [disable full fidelity].
            </summary>
            <value><c>true</c> if [disable full fidelity]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HasAttachment">
            <summary>
            Contains true if a message contains at least one attachment.
            </summary>
            <value><c>true</c> if this instance has attachment; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.RtfInSync">
            <summary>
            Contains true if the <see cref="P:Independentsoft.Msg.Message.RtfCompressed"/> property has the same text content as the <see cref="P:Independentsoft.Msg.Message.Body"/> property for this message.
            </summary>
            <value><c>true</c> if [RTF in synchronize]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReadReceiptRequested">
            <summary>
            Gets or sets a value indicating whether [read receipt requested].
            </summary>
            <value><c>true</c> if [read receipt requested]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DeliveryReportRequested">
            <summary>
            Gets or sets a value indicating whether [delivery report requested].
            </summary>
            <value><c>true</c> if [delivery report requested]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BodyHtml">
            <summary>
            Contains the Hypertext Markup Language (HTML) version of the message text.
            </summary>
            <value>The body HTML.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BodyHtmlText">
            <summary>
            Contains the Hypertext Markup Language (HTML) version of the message text.
            </summary>
            <value>The body HTML text.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Sensitivity">
            <summary>
            Contains a value that indicates the message sender's opinion of the sensitivity of a message.
            </summary>
            <value>The sensitivity.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.LastVerbExecuted">
            <summary>
            Contains the last verb executed.
            </summary>
            <value>The last verb executed.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Importance">
            <summary>
            Contains a value that indicates the message sender's opinion of the importance of a message.
            </summary>
            <value>The importance.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Priority">
            <summary>
            Contains the relative priority of a message.
            </summary>
            <value>The priority.</value>
            <remarks>This property and the <see cref="P:Independentsoft.Msg.Message.Importance"/> property should not be confused. Importance indicates a value to users, while priority indicates the order or speed at which the message should be sent by the messaging system software. Higher priority usually indicates a higher cost. Higher importance usually is associated with a different display by the user interface.</remarks>
        </member>
        <member name="P:Independentsoft.Msg.Message.FlagIcon">
            <summary>
            Specifies the flag icon of the message object.
            </summary>
            <value>The flag icon.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.FlagStatus">
            <summary>
            Specifies the flag state of the message object.
            </summary>
            <value>The flag status.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ObjectType">
            <summary>
            Contains the type of an object.
            </summary>
            <value>The type of the object.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedRepresentingAddressType">
            <summary>
            Contains the address type for the messaging user who is represented by the user actually receiving the message.
            </summary>
            <value>The type of the received representing address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedRepresentingEmailAddress">
            <summary>
            Contains the e-mail address for the messaging user who is represented by the receiving user.
            </summary>
            <value>The received representing email address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedRepresentingEntryId">
            <summary>
            Contains the entry identifier for the messaging user who is represented by the receiving user.
            </summary>
            <value>The received representing entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedRepresentingName">
            <summary>
            Contains the display name for the messaging user who is represented by the receiving user.
            </summary>
            <value>The name of the received representing.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedRepresentingSearchKey">
            <summary>
            Contains the search key for the messaging user represented by the receiving user.
            </summary>
            <value>The received representing search key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedByAddressType">
            <summary>
            Contains the e-mail address type, such as SMTP, for the messaging user who actually receives the message.
            </summary>
            <value>The type of the received by address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedByEmailAddress">
            <summary>
            Contains the e-mail address for the messaging user who receives the message.
            </summary>
            <value>The received by email address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedByEntryId">
            <summary>
            Contains the entry identifier of the messaging user who actually receives the message.
            </summary>
            <value>The received by entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedByName">
            <summary>
            Contains the display name of the messaging user who receives the message.
            </summary>
            <value>The name of the received by.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReceivedBySearchKey">
            <summary>
            Contains the search key of the messaging user who receives the message.
            </summary>
            <value>The received by search key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SenderAddressType">
            <summary>
            Contains the message sender's e-mail address type.
            </summary>
            <value>The type of the sender address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SenderEmailAddress">
            <summary>
            Contains the message sender's e-mail address.
            </summary>
            <value>The sender email address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SenderEntryId">
            <summary>
            Contains the message sender's entry identifier.
            </summary>
            <value>The sender entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SenderName">
            <summary>
            Contains the message sender's display name.
            </summary>
            <value>The name of the sender.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SenderSearchKey">
            <summary>
            Contains the message sender's search key.
            </summary>
            <value>The sender search key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SentRepresentingAddressType">
            <summary>
            Contains the address type for the messaging user who is represented by the sender.
            </summary>
            <value>The type of the sent representing address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SentRepresentingEmailAddress">
            <summary>
            Contains the e-mail address for the messaging user who is represented by the sender.
            </summary>
            <value>The sent representing email address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SentRepresentingEntryId">
            <summary>
            Contains the entry identifier for the messaging user represented by the sender.
            </summary>
            <value>The sent representing entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SentRepresentingName">
            <summary>
            Contains the display name for the messaging user represented by the sender.
            </summary>
            <value>The name of the sent representing.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SentRepresentingSearchKey">
            <summary>
            Contains the search key for the messaging user represented by the sender.
            </summary>
            <value>The sent representing search key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TransportMessageHeaders">
            <summary>
            Contains transport-specific message envelope information.
            </summary>
            <value>The transport message headers.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.MessageFlags">
            <summary>
            Contains a bitmask of flags that indicate the origin and current state of a message.
            </summary>
            <value>The message flags.</value>
            <remarks>This property is a nontransmittable message property exposed at both the sending and receiving ends of a transmission, with different values depending upon the client application or store provider involved. This property is initialized by the client or message store provider when a message is created and saved for the first time and then updated periodically by the message store provider, a transport provider, and the MAPI spooler as the message is processed and its state changes. This property exists on a message both before and after submission, and on all copies of the received message. Although it is not a recipient property, it is exposed differently to each recipient according to whether it has been read or modified by that recipient.</remarks>
        </member>
        <member name="P:Independentsoft.Msg.Message.StoreSupportMasks">
            <summary>
            Contains values that client applications should query to determine the characteristics of a message store.
            </summary>
            <value>The store support masks.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OutlookVersion">
            <summary>
            Contains version number of Microsoft Office Outlook client.
            </summary>
            <value>The outlook version.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OutlookInternalVersion">
            <summary>
            Contains internal version number of Microsoft Office Outlook client.
            </summary>
            <value>The outlook internal version.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CommonStartTime">
            <summary>
            Contains the start date and time of a message.
            </summary>
            <value>The common start time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CommonEndTime">
            <summary>
            Contains the end date and time of a message.
            </summary>
            <value>The common end time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.FlagDueBy">
            <summary>
            Contains the date and time specifying the date by which an e-mail message is due.
            </summary>
            <value>The flag due by.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Companies">
            <summary>
            Contains the names of the companies associated with the contact item.
            </summary>
            <value>The companies.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ContactNames">
            <summary>
            Contains the names of the contacts associated with the item.
            </summary>
            <value>The contact names.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Keywords">
            <summary>
            Contains the categories associated with a message.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Categories">
            <summary>
            Contains the categories associated with a message.
            </summary>
            <value>The categories.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BillingInformation">
            <summary>
            Contains the billing information associated with a message.
            </summary>
            <value>The billing information.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Mileage">
            <summary>
            Contains free-form string value and can be used to store mileage information associated with the message.
            </summary>
            <value>The mileage.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.InternetAccountName">
            <summary>
            Contains account name or email address.
            </summary>
            <value>The name of the internet account.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReminderSoundFile">
            <summary>
            Contains the path and file name of the sound file to play when the reminder occurs for the appointment, mail message, or task.
            </summary>
            <value>The reminder sound file.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsPrivate">
            <summary>
            Contains true if message is marked as private.
            </summary>
            <value><c>true</c> if this instance is private; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReminderOverrideDefault">
            <summary>
            Contains true if the reminder overrides the default reminder behavior for the appointment, mail item, or task.
            </summary>
            <value><c>true</c> if [reminder override default]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReminderPlaySound">
            <summary>
            Contains true if the reminder should play a sound when it occurs for this appointment or task.
            </summary>
            <value><c>true</c> if [reminder play sound]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.AppointmentStartTime">
            <summary>
            Contains appointment's the start date and time.
            </summary>
            <value>The appointment start time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.AppointmentEndTime">
            <summary>
            Contains appointment's the end date and time.
            </summary>
            <value>The appointment end time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Location">
            <summary>
            Contains appointment's location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.AppointmentMessageClass">
            <summary>
            Contains appointment's message class.
            </summary>
            <value>The appointment message class.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TimeZone">
            <summary>
            Contains appointment's time zone.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.RecurrencePatternDescription">
            <summary>
            Contains recurring pattern description.
            </summary>
            <value>The recurrence pattern description.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.RecurrencePattern">
            <summary>
            Contains appointment or task recurring pattern.
            </summary>
            <value>The recurrence pattern.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Guid">
            <summary>
            Contains message's global unique id.
            </summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Label">
            <summary>
            Contains appointment's label color.
            </summary>
            <value>The label.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Duration">
            <summary>
            Contains appointment's duration in minutes.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusyStatus">
            <summary>
            Contains appointment's busy status.
            </summary>
            <value>The busy status.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.MeetingStatus">
            <summary>
            Contains the status of the meeting.
            </summary>
            <value>The meeting status.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ResponseStatus">
            <summary>
            Contains the response to a meeting request.
            </summary>
            <value>The response status.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.RecurrenceType">
            <summary>
            Contains the recurrence pattern type.
            </summary>
            <value>The type of the recurrence.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Owner">
            <summary>
            Contains task's owner name.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Delegator">
            <summary>
            Contains task's delegator name.
            </summary>
            <value>The delegator.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.PercentComplete">
            <summary>
            Contains the percentage of the task completed at the current date and time.
            </summary>
            <value>The percent complete.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ActualWork">
            <summary>
            Contains the actual effort (in minutes) spent on the task.
            </summary>
            <value>The actual work.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TotalWork">
            <summary>
            Contains the total work for the task.
            </summary>
            <value>The total work.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsTeamTask">
            <summary>
            Contains true if the task is a team task.
            </summary>
            <value><c>true</c> if this instance is team task; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsComplete">
            <summary>
            Contains true if the task is complete.
            </summary>
            <value><c>true</c> if this instance is complete; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsRecurring">
            <summary>
            Contains true if the task or appointment is recurring.
            </summary>
            <value><c>true</c> if this instance is recurring; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsAllDayEvent">
            <summary>
            Contains true if the appointment is all day event.
            </summary>
            <value><c>true</c> if this instance is all day event; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsReminderSet">
            <summary>
            Contains true if a reminder has been set for this appointment, e-mail item, or task.
            </summary>
            <value><c>true</c> if this instance is reminder set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReminderTime">
            <summary>
            Contains the date and time at which the reminder should occur for the specified item.
            </summary>
            <value>The reminder time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ReminderMinutesBeforeStart">
            <summary>
            Contains the number of minutes the reminder should occur prior to the start of the appointment.
            </summary>
            <value>The reminder minutes before start.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TaskStartDate">
            <summary>
            Contains task's the start date and time.
            </summary>
            <value>The task start date.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TaskDueDate">
            <summary>
            Contains task's the due date and time.
            </summary>
            <value>The task due date.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DateCompleted">
            <summary>
            Contains the completion date of the task.
            </summary>
            <value>The date completed.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TaskStatus">
            <summary>
            Contains the status of the task.
            </summary>
            <value>The task status.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TaskOwnership">
            <summary>
            Contains the ownership state of the task.
            </summary>
            <value>The task ownership.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TaskDelegationState">
            <summary>
            Contains the delegation state of a task.
            </summary>
            <value>The state of the task delegation.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.NoteHeight">
            <summary>
            Contains height of the note item.
            </summary>
            <value>The height of the note.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.NoteWidth">
            <summary>
            Contains width of the note item.
            </summary>
            <value>The width of the note.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.NoteTop">
            <summary>
            Contains top position of the note item.
            </summary>
            <value>The note top.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.NoteLeft">
            <summary>
            Contains left position of the note item.
            </summary>
            <value>The note left.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.NoteColor">
            <summary>
            Contains background color of the note item.
            </summary>
            <value>The color of the note.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.JournalStartTime">
            <summary>
            Contains journal's the start date and time.
            </summary>
            <value>The journal start time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.JournalEndTime">
            <summary>
            Contains journal's the end date and time.
            </summary>
            <value>The journal end time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.JournalType">
            <summary>
            Contains the type of the journal item.
            </summary>
            <value>The type of the journal.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.JournalTypeDescription">
            <summary>
            Contains the type description of the journal item.
            </summary>
            <value>The journal type description.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.JournalDuration">
            <summary>
            Contains journal's the duration in minutes.
            </summary>
            <value>The duration of the journal.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Birthday">
            <summary>
            Contains the birthday date for the contact.
            </summary>
            <value>The birthday.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ChildrenNames">
            <summary>
            Contains the names of the children of the contact.
            </summary>
            <value>The children names.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.AssistantName">
            <summary>
            Contains the name of assistant of the contact.
            </summary>
            <value>The name of the assistant.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.AssistantPhone">
            <summary>
            Contains assistant's phone number of the contact.
            </summary>
            <value>The assistant phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessPhone">
            <summary>
            Contains the first business telephone number for the contact.
            </summary>
            <value>The business phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessFax">
            <summary>
            Contains the business fax number for the contact.
            </summary>
            <value>The business fax.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessHomePage">
            <summary>
            Contains the url of the business Web page for the contact.
            </summary>
            <value>The business home page.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CallbackPhone">
            <summary>
            Contains the callback telephone number for the contact.
            </summary>
            <value>The callback phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CarPhone">
            <summary>
            Contains the car telephone number for the contact.
            </summary>
            <value>The car phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CellularPhone">
            <summary>
            Contains the mobile telephone number for the contact.
            </summary>
            <value>The cellular phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CompanyMainPhone">
            <summary>
            Contains the company main telephone number for the contact.
            </summary>
            <value>The company main phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CompanyName">
            <summary>
            Contains the company name for the contact.
            </summary>
            <value>The name of the company.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ComputerNetworkName">
            <summary>
            Contains the name of the computer network for the contact.
            </summary>
            <value>The name of the computer network.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessAddressCountry">
            <summary>
            Contains the country/region code portion of the business address for the contact.
            </summary>
            <value>The business address country.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.CustomerId">
            <summary>
            Contains the customer ID for the contact.
            </summary>
            <value>The customer identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DepartmentName">
            <summary>
            Contains the department name for the contact.
            </summary>
            <value>The name of the department.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DisplayName">
            <summary>
            Contains display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.DisplayNamePrefix">
            <summary>
            Contains display name prefix.
            </summary>
            <value>The display name prefix.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.FtpSite">
            <summary>
            Contains the FTP site entry for the contact.
            </summary>
            <value>The FTP site.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Generation">
            <summary>
            Contains the generation for the contact.
            </summary>
            <value>The generation.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.GivenName">
            <summary>
            Contains the given name for the contact.
            </summary>
            <value>The name of the given.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.GovernmentId">
            <summary>
            Contains the government ID number for the contact.
            </summary>
            <value>The government identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Hobbies">
            <summary>
            Contains the hobby names for the contact.
            </summary>
            <value>The hobbies.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomePhone2">
            <summary>
            Contains the second home telephone number for the contact.
            </summary>
            <value>The home phone2.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeAddressCity">
            <summary>
            Contains the city portion of the home address for the contact.
            </summary>
            <value>The home address city.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeAddressCountry">
            <summary>
            Contains the country/region portion of the home address for the contact.
            </summary>
            <value>The home address country.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeAddressPostalCode">
            <summary>
            Contains the postal code portion of the home address for the contact.
            </summary>
            <value>The home address postal code.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeAddressPostOfficeBox">
            <summary>
            Contains the post office box number portion of the home address for the contact.
            </summary>
            <value>The home address post office box.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeAddressState">
            <summary>
            Contains the state portion of the home address for the contact.
            </summary>
            <value>The state of the home address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeAddressStreet">
            <summary>
            Contains the street portion of the home address for the contact.
            </summary>
            <value>The home address street.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeFax">
            <summary>
            Contains the home fax number for the contact.
            </summary>
            <value>The home fax.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomePhone">
            <summary>
            Contains the first home telephone number for the contact.
            </summary>
            <value>The home phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Initials">
            <summary>
            Contains the initials for the contact.
            </summary>
            <value>The initials.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Isdn">
            <summary>
            Contains the ISDN number for the contact.
            </summary>
            <value>The isdn.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessAddressCity">
            <summary>
            Contains the city name portion of the business address for the contact.
            </summary>
            <value>The business address city.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ManagerName">
            <summary>
            Contains the manager name for the contact.
            </summary>
            <value>The name of the manager.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.MiddleName">
            <summary>
            Contains the middle name for the contact.
            </summary>
            <value>The name of the middle.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Nickname">
            <summary>
            Contains the nickname for the contact.
            </summary>
            <value>The nickname.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OfficeLocation">
            <summary>
            Contains the specific office location for the contact.
            </summary>
            <value>The office location.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessPhone2">
            <summary>
            Contains the second business telephone number for the contact.
            </summary>
            <value>The business phone2.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OtherAddressCity">
            <summary>
            Contains the city portion of the other address for the contact.
            </summary>
            <value>The other address city.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OtherAddressCountry">
            <summary>
            Contains the country/region portion of the other address for the contact.
            </summary>
            <value>The other address country.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OtherAddressPostalCode">
            <summary>
            Contains the postal code portion of the other address for the contact.
            </summary>
            <value>The other address postal code.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OtherAddressState">
            <summary>
            Contains the state portion of the other address for the contact.
            </summary>
            <value>The state of the other address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OtherAddressStreet">
            <summary>
            Contains the street portion of the other address for the contact.
            </summary>
            <value>The other address street.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OtherPhone">
            <summary>
            Contains the other telephone number for the contact.
            </summary>
            <value>The other phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Pager">
            <summary>
            Contains the pager number for the contact.
            </summary>
            <value>The pager.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.PersonalHomePage">
            <summary>
            Contains the url of the personal Web page for the contact.
            </summary>
            <value>The personal home page.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.PostalAddress">
            <summary>
            Contains the postal address for the contact.
            </summary>
            <value>The postal address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessAddressPostalCode">
            <summary>
            Contains the postal code (zip code) portion of the business address for the contact.
            </summary>
            <value>The business address postal code.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessAddressPostOfficeBox">
            <summary>
            Contains the post office box number portion of the business address for the contact.
            </summary>
            <value>The business address post office box.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessAddressState">
            <summary>
            Contains the state code portion of the business address for the contact.
            </summary>
            <value>The state of the business address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessAddressStreet">
            <summary>
            Contains the street address portion of the business address for the contact.
            </summary>
            <value>The business address street.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.PrimaryFax">
            <summary>
            Contains the primary fax number for the contact.
            </summary>
            <value>The primary fax.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.PrimaryPhone">
            <summary>
            Contains the primary telephone number for the contact.
            </summary>
            <value>The primary phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Profession">
            <summary>
            Contains the profession for the contact.
            </summary>
            <value>The profession.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.RadioPhone">
            <summary>
            Contains the radio telephone number for the contact.
            </summary>
            <value>The radio phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SpouseName">
            <summary>
            Contains the spouse name for the contact.
            </summary>
            <value>The name of the spouse.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Surname">
            <summary>
            Contains the last name for the contact.
            </summary>
            <value>The surname.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Telex">
            <summary>
            Contains the telex number for the contact.
            </summary>
            <value>The telex.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Title">
            <summary>
            Contains the title for the contact.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.TtyTddPhone">
            <summary>
            Contains the TTY/TDD telephone number for the contact.
            </summary>
            <value>The tty TDD phone.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.WeddingAnniversary">
            <summary>
            Contains the wedding anniversary date for the contact.
            </summary>
            <value>The wedding anniversary.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Gender">
            <summary>
            Contains the gender of the contact.
            </summary>
            <value>The gender.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.SelectedMailingAddress">
            <summary>
            Contains the type of the mailing address for the contact.
            </summary>
            <value>The selected mailing address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ContactHasPicture">
            <summary>
            Contains true if the contact has picture.
            </summary>
            <value><c>true</c> if [contact has picture]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.FileAs">
            <summary>
            Contains the default keyword string assigned to the contact when it is filed.
            </summary>
            <value>The file as.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.InstantMessengerAddress">
            <summary>
            Contains the instant messenger address for the contact.
            </summary>
            <value>The instant messenger address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.InternetFreeBusyAddress">
            <summary>
            Contains the url location of the user's free-busy information in vCard Free-Busy standard format.
            </summary>
            <value>The internet free busy address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.BusinessAddress">
            <summary>
            Contains the whole, unparsed business address for the contact.
            </summary>
            <value>The business address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.HomeAddress">
            <summary>
            Contains the whole, unparsed home address for the contact.
            </summary>
            <value>The home address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.OtherAddress">
            <summary>
            Contains the whole, unparsed other address for the contact.
            </summary>
            <value>The other address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email1Address">
            <summary>
            Contains the e-mail address of the first e-mail entry for the contact.
            </summary>
            <value>The email1 address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email2Address">
            <summary>
            Contains the e-mail address of the second e-mail entry for the contact.
            </summary>
            <value>The email2 address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email3Address">
            <summary>
            Contains the e-mail address of the third e-mail entry for the contact.
            </summary>
            <value>The email3 address.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email1DisplayName">
            <summary>
            Contains the display name of the first e-mail address for the contact.
            </summary>
            <value>The display name of the email1.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email2DisplayName">
            <summary>
            Contains the display name of the second e-mail address for the contact.
            </summary>
            <value>The display name of the email2.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email3DisplayName">
            <summary>
            Contains the display name of the third e-mail address for the contact.
            </summary>
            <value>The display name of the email3.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email1DisplayAs">
            <summary>
            Contains the display as name of the first e-mail address for the contact.
            </summary>
            <value>The email1 display as.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email2DisplayAs">
            <summary>
            Contains the display as name of the second e-mail address for the contact.
            </summary>
            <value>The email2 display as.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email3DisplayAs">
            <summary>
            Contains the display as name of the third e-mail address for the contact.
            </summary>
            <value>The email3 display as.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email1Type">
            <summary>
            Contains the type of the first e-mail address for the contact.
            </summary>
            <value>The type of the email1.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email2Type">
            <summary>
            Contains the type of the second e-mail address for the contact.
            </summary>
            <value>The type of the email2.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email3Type">
            <summary>
            Contains the type of the third e-mail address for the contact.
            </summary>
            <value>The type of the email3.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email1EntryId">
            <summary>
            Contains the entry ID of the first e-mail address for the contact.
            </summary>
            <value>The email1 entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email2EntryId">
            <summary>
            Contains the entry ID of the second e-mail address for the contact.
            </summary>
            <value>The email2 entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Email3EntryId">
            <summary>
            Contains the entry ID of the third e-mail address for the contact.
            </summary>
            <value>The email3 entry identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Recipients">
            <summary>
            Contains collection of recipients.
            </summary>
            <value>The recipients.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.Attachments">
            <summary>
            Contains collection of attachments.
            </summary>
            <value>The attachments.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.ExtendedProperties">
            <summary>
            Contains collection of extended (custom) properties.
            </summary>
            <value>The extended properties.</value>
        </member>
        <member name="P:Independentsoft.Msg.Message.NamedProperties">
            <summary>
            Contains collection of named properties definition. 
            </summary>
        </member>
        <member name="P:Independentsoft.Msg.Message.IsEmbedded">
            <summary>
            Contains true if Message is embedded into another message object.
            </summary>
            <value><c>true</c> if this instance is embedded; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Independentsoft.Msg.AttachmentMethod">
            <summary>
            Represents the way the contents of an attachment can be accessed.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.NoAttachment">
            <summary>
            The attachment has just been created.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.AttachByValue">
            <summary>
            The <see cref="P:Independentsoft.Msg.Attachment.DataObject"/> property contains the attachment data.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.AttachByReference">
            <summary>
            The <see cref="P:Independentsoft.Msg.Attachment.PathName"/> or the <see cref="P:Independentsoft.Msg.Attachment.LongPathName"/> property contains a fully-qualified path identifying the attachment to recipients with access to a common file server.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.AttachByReferenceResolve">
            <summary>
            The <see cref="P:Independentsoft.Msg.Attachment.PathName"/> or the <see cref="P:Independentsoft.Msg.Attachment.LongPathName"/> property contains a fully-qualified path identifying the attachment.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.AttachByReferenceOnly">
            <summary>
            The <see cref="P:Independentsoft.Msg.Attachment.PathName"/> or the <see cref="P:Independentsoft.Msg.Attachment.LongPathName"/> property contains a fully-qualified path identifying the attachment.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.EmbeddedMessage">
            <summary>
            The <see cref="P:Independentsoft.Msg.Attachment.DataObject"/> property contains an embedded <see cref="T:Independentsoft.Msg.Message"/> object.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.Ole">
            <summary>
            The attachment is an embedded OLE object
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentMethod.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService">
            <summary>
            Class UnifiedMessagingService.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService"/> class.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.#ctor(System.String,System.Net.ICredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService"/> class.
            </summary>
            <param name="url">The URL.</param>
            <param name="credentials">The credentials.</param>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Service class with the specified credentials
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
            <param name="username">The username for the Exchange server</param>
            <param name="password">The password for the Exchange server</param>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Service class with the specified credentials
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
            <param name="username">The username for the Exchange server</param>
            <param name="password">The password for the Exchange server</param>
            <param name="domain">The domain</param>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.GetUnifiedMessagingProperties">
            <summary>
            Gets the unified messaging properties.
            </summary>
            <returns>UnifiedMessagingProperties.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.PlayOnPhone(System.String,System.String)">
            <summary>
            Plays the on phone.
            </summary>
            <param name="entryId">The entry identifier.</param>
            <param name="dialString">The dial string.</param>
            <returns>System.String.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.PlayOnPhoneGreeting(Independentsoft.Exchange.UnifiedMessaging.GreetingType,System.String)">
            <summary>
            Plays the on phone greeting.
            </summary>
            <param name="greetingType">Type of the greeting.</param>
            <param name="dialString">The dial string.</param>
            <returns>System.String.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.SetPlayOnPhoneDialString(System.String)">
            <summary>
            Sets the play on phone dial string.
            </summary>
            <param name="dialString">The dial string.</param>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.SetTelephoneAccessFolderEmail(System.String)">
            <summary>
            Sets the telephone access folder email.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.Disconnect(System.String)">
            <summary>
            Disconnects the specified call identifier.
            </summary>
            <param name="callId">The call identifier.</param>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.GetCallInfo(System.String)">
            <summary>
            Gets the call information.
            </summary>
            <param name="callId">The call identifier.</param>
            <returns>CallInfo.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.SetOutOfOffice(System.Boolean)">
            <summary>
            Sets the out of office.
            </summary>
            <param name="enable">if set to <c>true</c> [enable].</param>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.SetMissedCallNotification(System.Boolean)">
            <summary>
            Sets the missed call notification.
            </summary>
            <param name="enable">if set to <c>true</c> [enable].</param>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.IsUnifiedMessagingEnabled">
            <summary>
            Determines whether [is unified messaging enabled].
            </summary>
            <returns><c>true</c> if [is unified messaging enabled]; otherwise, <c>false</c>.</returns>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.ResetPin">
            <summary>
            Resets the pin.
            </summary>
            <exception cref="T:Independentsoft.Exchange.ServiceRequestException">An error occurred on the Exchange server processing the request</exception>
            <exception cref="T:Crestron.SimplSharp.Net.Http.HttpException">An error occurred sending the request to the Exchange server</exception>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.AllowAutoRedirect">
            <summary>
            Gets or sets a value that indicates whether the request should follow redirection responses.
            </summary>
            <value><c>true</c> if [allow automatic redirect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.AllowWriteStreamBuffering">
            <summary>
            Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.
            </summary>
            <value><c>true</c> if [allow write stream buffering]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.SendChunked">
            <summary>
            Gets or sets a value indicating whether to send data in segments to the Internet resource.
            </summary>
            <value><c>true</c> if [send chunked]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.PreAuthenticate">
            <summary>
            Gets or sets a value indicating whether to send a authenticate header with the request.
            </summary>
            <value><c>true</c> if [pre authenticate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.KeepAlive">
            <summary>
            Gets or sets a value indicating whether to make a persistent connection.
            </summary>
            <value><c>true</c> if [keep alive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.Timeout">
            <summary>
            Gets or sets the time-out value for a request.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.ClientCertificate">
            <summary>
            Gets or sets the security client certificate.
            </summary>
            <value>The client certificate.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.UnsafeAuthenticatedConnectionSharing">
            <summary>
            Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.
            </summary>
            <value><c>true</c> if [unsafe authenticated connection sharing]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.Credentials">
            <summary>
            Gets or sets user's credentials.
            </summary>
            <value>The credentials.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.Proxy">
            <summary>
            Gets or sets proxy server.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.Url">
            <summary>
            Gets or sets URL of Exchange Web Services.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.RequestEncoding">
            <summary>
            Gets or sets encoding used for a request.
            </summary>
            <value>The request encoding.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.ExchangeImpersonation">
            <summary>
            Gets or sets the ID of the user that Exchange Web Services (EWS) should impersonate.
            </summary>
            <value>The exchange impersonation.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.RequestServerVersion">
            <summary>
            Contains the versioning information that identifies the schema version to target for a request.
            </summary>
            <value>The request server version.</value>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingService.MailboxCulture">
            <summary>
            Gets or sets the mailbox culture that is used when opening a mailbox
            </summary>
            <value>The mailbox culture.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ServiceConfigurationType">
            <summary>
            Specifies the service configurations that are returned in the response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ServiceConfigurationType.MailTips">
            <summary>
            Represents the mail tips service configuration.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ServiceConfigurationType.UnifiedMessagingConfiguration">
            <summary>
            Represents the unified messaging service configuration.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ServiceConfigurationType.ProtectionRules">
            <summary>
            Represents the protection rules service configuration.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ReplyAllItem">
            <summary>
            Represents a reply all item response object that is used to reply to the sender and all recipients of an item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyAllItem.#ctor">
            <summary>
            Initializes a new instance of the ReplyAllItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyAllItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the ReplyAllItem class.
            </summary>
            <param name="referenceItemId">The ItemId</param>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyAllItem.ToString">
            <summary>
            Converts the value of the current ReplyAllItem object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current ReplyAllItem object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.RelativeMonthlyRecurrencePattern">
            <summary>
            Describes a relative monthly recurrence pattern.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RelativeMonthlyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the RelativeMonthlyRecurrencePattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RelativeMonthlyRecurrencePattern.#ctor(System.Int32,System.Collections.Generic.IList{Independentsoft.Exchange.DayOfWeek},Independentsoft.Exchange.DayOfWeekIndex)">
            <summary>
            Initializes a new instance of the RelativeMonthlyRecurrencePattern class.
            </summary>
            <param name="interval">The interval between two consecutive monthly recurring pattern items. The range for this value is 1 to 99</param>
            <param name="days">Specifies which days of the week are in the relative monthly recurrence pattern</param>
            <param name="dayIndex">Specifies which week is used in a relative monthly recurrence pattern</param>
        </member>
        <member name="M:Independentsoft.Exchange.RelativeMonthlyRecurrencePattern.ToString">
            <summary>
            Converts the value of the current RelativeMonthlyRecurrencePattern object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current RelativeMonthlyRecurrencePattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.RelativeMonthlyRecurrencePattern.Interval">
            <summary>
            Defines the interval between two consecutive monthly recurring pattern items. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RelativeMonthlyRecurrencePattern.Days">
            <summary>
            Describes which days of the week are in the relative monthly recurrence pattern.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RelativeMonthlyRecurrencePattern.DayIndex">
            <summary>
            Describes which week is used in a relative monthly recurrence pattern.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ReadFlagChange">
            <summary>
            Returned in SyncFolderItems Operation responses when an item has been read.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReadFlagChange.#ctor">
            <summary>
            Initializes a new instance of the ReadFlagChange class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ReadFlagChange.ItemId">
            <summary>
            Identifies the item for which the read-flag has been changed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ReadFlagChange.IsRead">
            <summary>
            Indicates whether the read-flag has been set to true.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ProtectionRuleAction">
            <summary>
            Identifies what action must be executed if the condition part of the rule matches.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRuleAction.Name">
            <summary>
            Identifies the name of the action.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRuleAction.Arguments">
            <summary>
            Specifies arguments to the action.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PreviewItemShape">
            <summary>
            Identifies a set of properties to return in SearchMailboxes Operation response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItemShape.#ctor">
            <summary>
            Initializes a new instance of the PreviewItemShape class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItemShape.#ctor(Independentsoft.Exchange.ShapeType)">
            <summary>
            Initializes a new instance of the PreviewItemShape class.
            </summary>
            <param name="type">The shape of the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItemShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the PreviewItemShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItemShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the PreviewItemShape class.
            </summary>
            <param name="type">The shape of the response</param>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.PreviewItemShape.ToString">
            <summary>
            Converts the value of the current PreviewItemShape object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current PreviewItemShape object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItemShape.Type">
            <summary>
            Identifies the basic configuration of properties to return in an item or folder response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PreviewItemShape.PropertyPaths">
            <summary>
            Identifies additional properties to return in a response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaAttribution">
            <summary>
            Class PersonaAttribution.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaAttribution.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.PersonaAttribution"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaAttribution.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaAttribution.SourceId">
            <summary>
            Gets the source identifier.
            </summary>
            <value>The source identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaAttribution.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaAttribution.IsWritable">
            <summary>
            Gets a value indicating whether this instance is writable.
            </summary>
            <value><c>true</c> if this instance is writable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaAttribution.IsQuickContact">
            <summary>
            Gets a value indicating whether this instance is quick contact.
            </summary>
            <value><c>true</c> if this instance is quick contact; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaAttribution.IsHidden">
            <summary>
            Gets a value indicating whether this instance is hidden.
            </summary>
            <value><c>true</c> if this instance is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaAttribution.FolderId">
            <summary>
            Gets the folder identifier.
            </summary>
            <value>The folder identifier.</value>
        </member>
        <member name="T:Independentsoft.Exchange.PermissionAction">
            <summary>
            Defines which items in a folder a user has permission to edit or delete.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionAction.Owned">
            <summary>
            Indicates that the user has permission to perform the action on the items in the folder that the user owns.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionAction.All">
            <summary>
            Indicates that the user has permission to perform the action on all items in the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PermissionAction.None">
            <summary>
            Indicates that the user does not have permission to perform the action on any items in the folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Notification">
            <summary>
            Contains information about the subscription and the events that have occurred since the last notification.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Notification.#ctor">
            <summary>
            Initializes a new instance of the Notification class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Notification.SubscriptionId">
            <summary>
            Represents the identifier for a subscription.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Notification.PreviousWatermark">
            <summary>
            Represents the watermark of the latest event that was successfully communicated to the client for the subscription.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Notification.HasMoreEvents">
            <summary>
            Indicates whether there are more events in the queue to be delivered to the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Notification.Events">
            <summary>
            Represents a collection of events in which an item or folder is copied, created, deleted, modified, new or Represents a notification that no new activity has occurred in the mailbox.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.HighlightTerm">
            <summary>
            Class HighlightTerm.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.HighlightTerm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.HighlightTerm"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.HighlightTerm.ToString">
            <summary>
            Converts the value of the current HighlightTerm object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.HighlightTerm.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Independentsoft.Exchange.HighlightTerm.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Independentsoft.Exchange.FreeBusyResponse">
            <summary>
            Contains the free/busy information for a single mailbox user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyResponse.FreeBusyView">
            <summary>
            Contains availability information for a specific user.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FreeBusyChangedEvent">
            <summary>
            Class FreeBusyChangedEvent.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyChangedEvent.#ctor">
            <summary>
            Initializes a new instance of the FreeBusyChangedEvent class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyChangedEvent.TimeStamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyChangedEvent.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyChangedEvent.ParentFolderId">
            <summary>
            Gets the parent folder identifier.
            </summary>
            <value>The parent folder identifier.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ExportItemsResponse">
            <summary>
            Contains the status and results of a request to export a single mailbox item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExportItemsResponse.ItemId">
            <summary>
            Contains the item identifier of an exported item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExportItemsResponse.Data">
            <summary>
            Contains the contents of an exported item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.EventType">
            <summary>
            Used to create a subscription and identifies an event type to be reported in a notification.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.EventType.Copied">
            <summary>
            Represents an event where an item or folder is copied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.EventType.Created">
            <summary>
            Represents an event where an item or folder is created.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.EventType.Deleted">
            <summary>
            Represents an event where an item or folder is deleted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.EventType.Modified">
            <summary>
            Represents an event where an item or folder is modified.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.EventType.Moved">
            <summary>
            Represents an event where an item or folder is moved from one parent folder to another parent folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.EventType.NewMail">
            <summary>
            Represents an event triggered by a new mail item in a mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.EventType.FreeBusyChanged">
            <summary>
            Represents an event in which an item's free/busy time has changed.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Conversation">
            <summary>
            Represents a single conversation.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Conversation.#ctor">
            <summary>
            Initializes a new instance of the Conversation class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.Id">
            <summary>
            Represents the identifier of a conversation.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.Topic">
            <summary>
            Represents the conversation topic.
            </summary>
            <value>The topic.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.UniqueRecipients">
            <summary>
            Contains the recipient list of a conversation aggregated across a mailbox.
            </summary>
            <value>The unique recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalUniqueRecipients">
            <summary>
            Contains the recipient list of a conversation aggregated across a mailbox.
            </summary>
            <value>The global unique recipients.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.UniqueUnreadSenders">
            <summary>
            Contains a list of all the people who have sent messages that are currently unread in this conversation in the current folder.
            </summary>
            <value>The unique unread senders.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalUniqueUnreadSenders">
            <summary>
            Contains a list of all the people who have sent messages that are currently unread in this conversation across all folders in the mailbox.
            </summary>
            <value>The global unique unread senders.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.UniqueSenders">
            <summary>
            Contains a list of all the senders of conversation items in the current folder.
            </summary>
            <value>The unique senders.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalUniqueSenders">
            <summary>
            Contains a list of all the senders of conversation items in the mailbox.
            </summary>
            <value>The global unique senders.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.LastDeliveryTime">
            <summary>
            Contains the delivery time of the message that was last received in this conversation in the current folder.
            </summary>
            <value>The last delivery time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalLastDeliveryTime">
            <summary>
            Contains the delivery time of the message that was last received in this conversation across all folders in the mailbox.
            </summary>
            <value>The global last delivery time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.Categories">
            <summary>
            Contains a collection of strings that identify the categories that are applied to all conversation items in the current folder.
            </summary>
            <value>The categories.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalCategories">
            <summary>
            Contains the category list for all conversation items in a mailbox.
            </summary>
            <value>The global categories.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.FlagStatus">
            <summary>
            Contains the aggregated flag status for conversation items in the current folder.
            </summary>
            <value>The flag status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalFlagStatus">
            <summary>
            Contains the aggregated flag status for all conversation items in a mailbox.
            </summary>
            <value>The global flag status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.HasAttachments">
            <summary>
            Contains a value that indicates whether at least one conversation item in the current folder has an attachment.
            </summary>
            <value><c>true</c> if this instance has attachments; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalHasAttachments">
            <summary>
            Contains a value that indicates whether at least one conversation item in a mailbox has an attachment.
            </summary>
            <value><c>true</c> if [global has attachments]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.MessageCount">
            <summary>
            Contains the total number of conversation items in the current folder.
            </summary>
            <value>The message count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalMessageCount">
            <summary>
            Contains the total number of conversation items in the mailbox.
            </summary>
            <value>The global message count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.UnreadCount">
            <summary>
            Contains the count of unread conversation items within a folder.
            </summary>
            <value>The unread count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalUnreadCount">
            <summary>
            Contains a count of all the unread conversation items in the mailbox.
            </summary>
            <value>The global unread count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.Size">
            <summary>
            Contains the conversation size calculated from the size of all conversation items in the current folder.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalSize">
            <summary>
            Contains the size of the conversation calculated from the size of all conversation items in the mailbox.
            </summary>
            <value>The size of the global.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.ItemClasses">
            <summary>
            Contains a list of item classes that represents all the item classes of the conversation items in the current folder.
            </summary>
            <value>The item classes.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalItemClasses">
            <summary>
            Contains a list of item classes that represents all the item classes of the conversation items in a mailbox.
            </summary>
            <value>The global item classes.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.Importance">
            <summary>
            Contains the aggregated importance for all conversation items in the current folder.
            </summary>
            <value>The importance.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalImportance">
            <summary>
            Contains the aggregated importance for all conversation items in a mailbox.
            </summary>
            <value>The global importance.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.ItemIds">
            <summary>
            Contains the collection of item identifiers for all conversation items in the current folder.
            </summary>
            <value>The item ids.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalItemIds">
            <summary>
            Contains the collection of item identifiers for all conversation items in a mailbox.
            </summary>
            <value>The global item ids.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.LastModifiedTime">
            <summary>
            Indicates when an item was last modified.
            </summary>
            <value>The last modified time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.InstanceKey">
            <summary>
            Gets the instance key.
            </summary>
            <value>The instance key.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.Preview">
            <summary>
            Gets the preview.
            </summary>
            <value>The preview.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.NextPredictedAction">
            <summary>
            Gets the next predicted action.
            </summary>
            <value>The next predicted action.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GroupingAction">
            <summary>
            Gets the grouping action.
            </summary>
            <value>The grouping action.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.IconIndex">
            <summary>
            Gets the index of the icon.
            </summary>
            <value>The index of the icon.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.GlobalIconIndex">
            <summary>
            Gets the index of the global icon.
            </summary>
            <value>The index of the global icon.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Conversation.DraftItemIds">
            <summary>
            Gets the draft item ids.
            </summary>
            <value>The draft item ids.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ContentSettings">
            <summary>
            Represents the settings that control when items expire and the types of items that expire.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ContentSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ContentSettings"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContentSettings.Id">
            <summary>
            Contains value that provides a unique identity for the content setting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContentSettings.Period">
            <summary>
            Contains the number of days after which an item SHOULD expire under this policy. This value is configured by a server administrator. The value MUST be between 0 and 24,855.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContentSettings.MessageClass">
            <summary>
            Contains any string that represents a message class. The value "*" represents any message class. The string length MUST be between 1 and 1,023 characters.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContentSettings.RetentionAction">
            <summary>
            Contains the retention action.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.GetFederationInformationResponse">
            <summary>
            Represents the domain collection that is returned in a GetDomainSettings Operation (SOAP), the domains that the organization has federated in a GetFederationInformation Operation (SOAP), or the domains with an organization relationship as returned by GetOrganizationRelationshipSettings Operation (SOAP).
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.GetFederationInformationResponse.#ctor">
            <summary>
            Initializes a new instance of the GetFederationInformationResponse class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetFederationInformationResponse.ErrorCode">
            <summary>
            Represents an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetFederationInformationResponse.ErrorMessage">
            <summary>
            Represents a message that is associated with an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetFederationInformationResponse.ApplicationUri">
            <summary>
            Defines the location of an application.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetFederationInformationResponse.Domains">
            <summary>
            Represents the domain collection the configurations for which are returned in a GetDomainSettings Operation (SOAP), or the domains that the organization has federated in a GetFederationInformation Operation (SOAP). 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.DomainResponse">
            <summary>
            Contains the requested settings for the specified domain.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.DomainResponse.#ctor">
            <summary>
            Initializes a new instance of the DomainResponse class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainResponse.ErrorCode">
            <summary>
            Specifies the error code that is associated with the specific request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainResponse.ErrorMessage">
            <summary>
            Specifies the error message that is associated with the specific request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainResponse.RedirectTarget">
            <summary>
            Identifies the target of the redirection. The target can be either a URL or an e-mail address.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainResponse.DomainSettingErrors">
            <summary>
            Contains error information for settings that could not be returned.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainResponse.DomainSettings">
            <summary>
            Represents the domain settings that were submitted in an Autodiscover request or returned by an Autodiscover response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AttachmentId">
            <summary>
            Identifies an item or file attachment.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentId.#ctor">
            <summary>
            Initializes a new instance of the AttachmentId class
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AttachmentId class.        
            </summary>
            <param name="id">The unique identifier of the attachment</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AttachmentId class.
            </summary>
            <param name="id">The unique identifier of the attachment</param>
            <param name="rootItemId">The unique identifier of the root store item to which the attachment is attached</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentId.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the AttachmentId class.
            </summary>
            <param name="id">The unique identifier of the attachment</param>
            <param name="rootItemId">The unique identifier of the root store item to which the attachment is attached</param>
            <param name="rootItemChangeKey">The change key of the root store item to which the attachment is attached</param>
        </member>
        <member name="M:Independentsoft.Exchange.AttachmentId.ToString">
            <summary>
            Converts the value of the current AttachmentId object to its equivalent string representation.
            </summary>
            <returns>The string representation of the current AttachmentId object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentId.Id">
            <summary>
            Identifies the unique identifier of the attachment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentId.RootItemId">
            <summary>
            Identifies the unique identifier of the root store item to which the attachment is attached.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AttachmentId.RootItemChangeKey">
            <summary>
            Identifies the change key of the root store item to which the attachment is attached.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AffectedTaskOccurrences">
            <summary>
            Represents task occurrences.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AffectedTaskOccurrences.AllOccurrences">
            <summary>
            All task occurrences.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.AffectedTaskOccurrences.SpecifiedOccurrenceOnly">
            <summary>
            Specified task instance.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.Util">
            <summary>
            Summary description for Util.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.ContentDispositionType">
            <summary>
            Summary description for ContentDispositionType.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentDispositionType.Attachment">
            <summary>
            Specifies that the attachment is to be displayed as a file attached to the e-mail message.
            </summary>
        </member>
        <member name="F:Independentsoft.Email.Mime.ContentDispositionType.Inline">
            <summary>
            The attachment is to be displayed as part of the e-mail message body.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.BodyPart">
            <summary>
            Class BodyPart.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.BodyPart"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.#ctor(Independentsoft.Email.Mime.Attachment)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.BodyPart"/> class.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.Save(System.String)">
            <summary>
            Saves the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.Save(System.String,System.Boolean)">
            <summary>
            Saves the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.GetBytes">
            <summary>
            Gets the bytes.
            </summary>
            <returns>System.Byte[][].</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.GetStream">
            <summary>
            Gets the stream.
            </summary>
            <returns>Stream.</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPart.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.BodyParts">
            <summary>
            Gets the body parts.
            </summary>
            <value>The body parts.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.EmbeddedMessage">
            <summary>
            Gets or sets the embedded message.
            </summary>
            <value>The embedded message.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.HeaderEncoding">
            <summary>
            Gets or sets the header encoding.
            </summary>
            <value>The header encoding.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.HeaderCharSet">
            <summary>
            Gets or sets the header character set.
            </summary>
            <value>The header character set.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.ContentTransferEncoding">
            <summary>
            Gets or sets the content transfer encoding.
            </summary>
            <value>The content transfer encoding.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.ContentDisposition">
            <summary>
            Gets or sets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.ContentDescription">
            <summary>
            Gets or sets the content description.
            </summary>
            <value>The content description.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.ContentID">
            <summary>
            Gets or sets the content identifier.
            </summary>
            <value>The content identifier.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.BodyPart.ContentLocation">
            <summary>
            Gets or sets the content location.
            </summary>
            <value>The content location.</value>
        </member>
        <member name="T:Independentsoft.Msg.ExtendedPropertyId">
            <summary>
            Class ExtendedPropertyId.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedPropertyId"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyId.#ctor(System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedPropertyId"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="guid">The unique identifier.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyId.#ctor(System.Int32,System.Byte[],Independentsoft.Msg.PropertyType)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.ExtendedPropertyId"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="guid">The unique identifier.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Independentsoft.Msg.ExtendedPropertyId.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Msg.ExtendedPropertyId.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="T:Independentsoft.Msg.AttachmentFlags">
            <summary>
            Represents attachment's flags.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentFlags.InvisibleInHtml">
            <summary>
            Indicates that this attachment is not available to HTML rendering applications and should be ignored in MIME processing.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentFlags.InvisibleInRtf">
            <summary>
            Indicates that this attachment is not available to applications rendering in Rich Text Format (RTF) and should be ignored by MAPI.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.AttachmentFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonUtil">
            <summary>
            Definition of JsonUtil.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonUtil.EncodeJson(System.String)">
            <summary>
            Method to encode a string input.
            </summary>
            <param name="input">input string.</param>
            <returns>string encoded.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.UnknownAttendeeConflict">
            <summary>
            Represents an unresolvable attendee or an attendee that is not a user, distribution list, or contact.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UnknownAttendeeConflict.#ctor">
            <summary>
            Initializes a new instance of the UnknownAttendeeConflict class.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TimeZoneDefinition">
            <summary>
            Specifies the periods and transitions that define a time zone.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TimeZoneDefinition.ToXml(System.String)">
            <summary>
            Converts the value of the current TimeZoneDefinition object to its equivalent string representation. 
            </summary>
            <returns>The XML representation of the current TimeZoneDefinition object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZoneDefinition.Id">
            <summary>
            Represents the unique identifier of the time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZoneDefinition.Name">
            <summary>
            Represents the descriptive name of the time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZoneDefinition.Periods">
            <summary>
            Represents a collection of Period elements that define the time offset at different stages of the time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZoneDefinition.TransitionsGroups">
            <summary>
            Represents a collection of TransitionsGroup elements that specify time zone transitions.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeZoneDefinition.Transitions">
            <summary>
            Represents a collection of time zone transitions.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SubscriptionStatus">
            <summary>
            Describes the status of a push subscription.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SubscriptionStatus.OK">
            <summary>
            Client Access server will continue to send notifications.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SubscriptionStatus.Unsubscribe">
            <summary>
            Client Access server will stop sending notifications and end the subscription.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SortDirection">
            <summary>
            Specifies the direction in which to sort a list of items.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SortDirection.Ascending">
            <summary>
            Sort from smallest to largest. For example, from A to Z. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SortDirection.Descending">
            <summary>
            Sort from largest to smallest. For example, from Z to A. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RuleFieldUri">
            <summary>
            Specifies the URI to the rule field that caused the validation error. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.RuleId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.Priority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.IsNotSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.Actions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionCategories">
            <summary>
            Contains the categories that must be applied to an incoming message in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionContainsBodyStrings">
            <summary>
            Indicates the strings that must appear in the body of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionContainsHeaderStrings">
            <summary>
            Indicates the strings that must appear in the headers of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionContainsRecipientStrings">
            <summary>
            Indicates the strings that must appear in either the ToRecipients or CcRecipients properties of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionContainsSenderStrings">
            <summary>
            Indicates the strings that must appear in the From property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionContainsSubjectOrBodyStrings">
            <summary>
            Indicates the strings that must appear in either the body or the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionContainsSubjectStrings">
            <summary>
            Indicates the strings that must appear in the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionFlaggedForAction">
            <summary>
            Specifies the flag for action value that must appear on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionFromAddresses">
            <summary>
            Indicates the e-mail addresses from which incoming messages must be sent in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionFromConnectedAccounts">
            <summary>
            Represents the e-mail account names from which incoming messages have to have been aggregated in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionHasAttachments">
            <summary>
            Indicates whether incoming messages have to have attachments in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionImportance">
            <summary>
            Specifies the importance that is stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsApprovalRequest">
            <summary>
            Indicates whether incoming messages must be approval requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsAutomaticForward">
            <summary>
            Indicates whether incoming messages must be automatic forwards in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsAutomaticReply">
            <summary>
            Indicates whether incoming messages must be automatic replies in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsEncrypted">
            <summary>
            Indicates whether incoming messages must be S/MIME encrypted in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsMeetingRequest">
            <summary>
            Indicates whether incoming messages must be meeting requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsMeetingResponse">
            <summary>
            Indicates whether incoming messages must be meeting responses in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsNDR">
            <summary>
            Indicates whether incoming messages must be non-delivery reports (NDRs) in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsPermissionControlled">
            <summary>
            Indicates whether incoming messages must be permission controlled (RMS protected) in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsReadReceipt">
            <summary>
            Indicates whether incoming messages must be read receipts in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsSigned">
            <summary>
            Indicates whether incoming messages must be S/MIME signed in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionIsVoiceMail">
            <summary>
            Indicates whether incoming messages must be voice mail messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionItemClasses">
            <summary>
            Represents the item classes that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionMessageClassifications">
            <summary>
            Represents the message classifications that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionNotSentToMe">
            <summary>
            Indicates whether the owner of the mailbox must not be in the ToRecipients property of the incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionSentCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the CcRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionSentOnlyToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be the only one in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionSentToAddresses">
            <summary>
            Indicates the e-mail addresses that incoming messages have to have been sent to in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionSentToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionSentToOrCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in either a ToRecipients or CcRecipients property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionSensitivity">
            <summary>
            Indicates the sensitivity that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionWithinDateRange">
            <summary>
            Specifies the date range within which incoming messages have to have been received in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ConditionWithinSizeRange">
            <summary>
            Specifies the minimum and maximum sizes that incoming messages must be in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionCategories">
            <summary>
            Contains the categories that must be applied to an incoming message in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionContainsBodyStrings">
            <summary>
            Indicates the strings that must appear in the body of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionContainsHeaderStrings">
            <summary>
            Indicates the strings that must appear in the headers of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionContainsRecipientStrings">
            <summary>
            Indicates the strings that must appear in either the ToRecipients or CcRecipients properties of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionContainsSenderStrings">
            <summary>
            Indicates the strings that must appear in the From property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionContainsSubjectOrBodyStrings">
            <summary>
            Indicates the strings that must appear in either the body or the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionContainsSubjectStrings">
            <summary>
            Indicates the strings that must appear in the subject of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionFlaggedForAction">
            <summary>
            Specifies the flag for action value that must appear on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionFromAddresses">
            <summary>
            Indicates the e-mail addresses from which incoming messages must be sent in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionFromConnectedAccounts">
            <summary>
            Represents the e-mail account names from which incoming messages have to have been aggregated in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionHasAttachments">
            <summary>
            Indicates whether incoming messages have to have attachments in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionImportance">
            <summary>
            Specifies the importance that is stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsApprovalRequest">
            <summary>
            Indicates whether incoming messages must be approval requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsAutomaticForward">
            <summary>
            Indicates whether incoming messages must be automatic forwards in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsAutomaticReply">
            <summary>
            Indicates whether incoming messages must be automatic replies in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsEncrypted">
            <summary>
            Indicates whether incoming messages must be S/MIME encrypted in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsMeetingRequest">
            <summary>
            Indicates whether incoming messages must be meeting requests in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsMeetingResponse">
            <summary>
            Indicates whether incoming messages must be meeting responses in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsNDR">
            <summary>
            Indicates whether incoming messages must be non-delivery reports (NDRs) in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsPermissionControlled">
            <summary>
            Indicates whether incoming messages must be permission controlled (RMS protected) in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsReadReceipt">
            <summary>
            Indicates whether incoming messages must be read receipts in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsSigned">
            <summary>
            Indicates whether incoming messages must be S/MIME signed in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionIsVoiceMail">
            <summary>
            Indicates whether incoming messages must be voice mail messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionItemClasses">
            <summary>
            Represents the item classes that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionMessageClassifications">
            <summary>
            Represents the message classifications that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionNotSentToMe">
            <summary>
            Indicates whether the owner of the mailbox must not be in the ToRecipients property of the incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionSentCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the CcRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionSentOnlyToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be the only one in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionSentToAddresses">
            <summary>
            Indicates the e-mail addresses that incoming messages have to have been sent to in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionSentToMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in the ToRecipients property of incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionSentToOrCcMe">
            <summary>
            Indicates whether the owner of the mailbox has to be in either a ToRecipients or CcRecipients property of incoming messages in order for the condition or exception to apply.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionSensitivity">
            <summary>
            Indicates the sensitivity that must be stamped on incoming messages in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionWithinDateRange">
            <summary>
            Specifies the date range within which incoming messages have to have been received in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ExceptionWithinSizeRange">
            <summary>
            Specifies the minimum and maximum sizes that incoming messages must be in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionAssignCategories">
            <summary>
            Gets the categories that are stamped on e-mail messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionCopyToFolder">
            <summary>
            Gets or sets the ID of the folder that e-mail items will be copied to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionDelete">
            <summary>
            Gets or sets a value that indicates whether messages should be moved to the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionForwardAsAttachmentToRecipients">
            <summary>
            Gets the e-mail addresses to which messages should be forwarded as attachments.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionForwardToRecipients">
            <summary>
            Gets the e-mail addresses to which messages should be forwarded.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionMarkImportance">
            <summary>
            Gets or sets the importance that should be stamped on messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionMarkAsRead">
            <summary>
            Gets or sets a value that indicates whether messages should be marked as read.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionMoveToFolder">
            <summary>
            Gets or sets the ID of the folder that e-mail items will be moved to.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionPermanentDelete">
            <summary>
            Gets or sets a value that indicates whether messages should be permanently deleted and not saved to the Deleted Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionRedirectToRecipients">
            <summary>
            Gets the e-mail addresses to which messages should be redirected.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionSendSMSAlertToRecipients">
            <summary>
            Gets the mobile phone numbers to which a Short Message Service (SMS) alert should be sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionServerReplyWithMessage">
            <summary>
            Gets or sets the ID of the template message that should be sent as a reply to incoming messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.ActionStopProcessingRules">
            <summary>
            Gets or sets a value that indicates whether subsequent rules should be evaluated. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.IsInError">
             <summary>
            
             </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.Conditions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleFieldUri.Exceptions">
             <summary>
            
             </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RecurringDateTransition">
            <summary>
            Represents a time zone transition that occurs on a specific date each year.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringDateTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.RecurringDateTransition"/> class
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RecurringDateTransition.ToString">
            <summary>
            Converts the value of the current RecurringDateTransition object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current RecurringDateTransition object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.RecurringDateTransition.TimeOffset">
            <summary>
            Represents the duration offset from Coordinated Universal Time (UTC) for the time zone transition.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecurringDateTransition.Month">
            <summary>
            Represents the month in which the time zone transition occurs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecurringDateTransition.Day">
            <summary>
            Represents the day of the month on which the time zone transition occurs.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.OnlineMeetingSettings">
            <summary>
            Class OnlineMeetingSettings.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.OnlineMeetingSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.OnlineMeetingSettings"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OnlineMeetingSettings.LobbyBypass">
            <summary>
            Gets or sets the lobby bypass.
            </summary>
            <value>The lobby bypass.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OnlineMeetingSettings.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OnlineMeetingSettings.Presenters">
            <summary>
            Gets or sets the presenters.
            </summary>
            <value>The presenters.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Note">
            <summary>
            Represents a note in a Notes folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Note.#ctor">
            <summary>
            Initializes a new instance of the Note class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Note.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Note class
            </summary>
            <param name="subject">The subject</param>
        </member>
        <member name="M:Independentsoft.Exchange.Note.#ctor(Independentsoft.Exchange.MimeContent)">
            <summary>
            Initializes a new instance of the Note class.
            </summary>
            <param name="mimeContent">The MIME content</param>
        </member>
        <member name="M:Independentsoft.Exchange.Note.ToString">
            <summary>
            Converts the value of the current Note object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current Note object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Note.Width">
            <summary>
            Contains the width of the note window.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Note.Height">
            <summary>
            Contains the height of the note window.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Note.Left">
            <summary>
            Contains the position of the left vertical edge of note window from the edge of the screen.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Note.Top">
            <summary>
            Contains the position of the top horizontal edge of an note window from the edge of the screen.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Note.Color">
            <summary>
            Contains the color of the note. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Note.Contacts">
            <summary>
            Contains a list of contacts are associated with a note.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Note.IconColor">
            <summary>
            Contains the color of the icon. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MonthlyRegeneratingPattern">
            <summary>
            Describes the frequency, in months, of which task is regenerated.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MonthlyRegeneratingPattern.#ctor">
            <summary>
            Initializes a new instance of the MonthlyRegeneratingPattern class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MonthlyRegeneratingPattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the MonthlyRegeneratingPattern class. 
            </summary>
            <param name="interval">The monthly interval between two consecutive recurring items</param>
        </member>
        <member name="M:Independentsoft.Exchange.MonthlyRegeneratingPattern.ToString">
            <summary>
            Converts the value of the current MonthlyRegeneratingPattern object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current MonthlyRegeneratingPattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.MonthlyRegeneratingPattern.Interval">
            <summary>
            Defines the interval, in months, between two consecutive recurring items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Month">
            <summary>
            Represents the transition month of the year to and from standard time and daylight saving time.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.January">
            <summary>
            January.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.February">
            <summary>
            February.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.March">
            <summary>
            March.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.April">
            <summary>
            April.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.May">
            <summary>
            May.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.June">
            <summary>
            June.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.July">
            <summary>
            July.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.August">
            <summary>
            August.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.September">
            <summary>
            September.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.October">
            <summary>
            October.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.November">
            <summary>
            November.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.December">
            <summary>
            December.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Month.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingSuggestion">
            <summary>
            Represents a proposed meeting.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MeetingSuggestion.#ctor">
            <summary>
            Initializes a new instance of the MeetingSuggestion class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MeetingSuggestion.ToString">
            <summary>
            Converts the value of the current MeetingSuggestion object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingSuggestion.Position">
            <summary>
            Represents the position of the entity.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingSuggestion.Location">
            <summary>
            Represents the location of a meeting or appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingSuggestion.Meeting">
            <summary>
            Represents the description of the meeting as the result of entity extraction.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingSuggestion.Subject">
            <summary>
            Represents the subject of a meeting or appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingSuggestion.StartTime">
            <summary>
            Represents the start time of a meeting or appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingSuggestion.EndTime">
            <summary>
            Represents the end time of a meeting or appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingSuggestion.Attendees">
            <summary>
            Represents the recipients of an invitation to a meeting.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MarkAsJunkResponse">
            <summary>
            Contains the status and results of a request to mark an item as junk.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MarkAsJunkResponse.MovedItemId">
            <summary>
            Contains the item identifier of a moved item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxStatisticsSearchResult">
            <summary>
            Class MailboxStatisticsSearchResult.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxStatisticsSearchResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxStatisticsSearchResult"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsSearchResult.UserMailbox">
            <summary>
            Gets the user mailbox.
            </summary>
            <value>The user mailbox.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxStatisticsSearchResult.KeywordStatisticsSearchResult">
            <summary>
            Gets the keyword statistics search result.
            </summary>
            <value>The keyword statistics search result.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ItemInfoResponse">
            <summary>
            Represents the response message for methods that create, update, or delete items. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ItemInfoResponse.Items">
            <summary>
            Contains a collection of items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ItemChange">
            <summary>
            Contains an item identifier and the updates to apply to the item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property)">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertyToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertyToDelete">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertyToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertyToDelete">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.Property)">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertyToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertyToAppend">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to append</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.Property,Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.Property)">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertyToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertyToDelete">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to delete</param>
            <param name="propertyToAppend">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to append</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property})">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertiesToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertiesToDelete">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertiesToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertiesToDelete">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},System.Collections.Generic.IList{Independentsoft.Exchange.Property})">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertiesToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertiesToAppend">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to append</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.#ctor(Independentsoft.Exchange.ItemId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath},System.Collections.Generic.IList{Independentsoft.Exchange.Property})">
            <summary>
            Initializes a new instance of the ItemChange class.
            </summary>
            <param name="itemId">The identifier of the item</param>
            <param name="propertiesToSet">A list of <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertiesToDelete">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to delete</param>
            <param name="propertiesToAppend">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/> to append</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemChange.ToString">
            <summary>
            Converts the value of the current ItemChange object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current ItemChange object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ItemChange.ItemId">
            <summary>
            Contains the unique identifier and change key of an item in the Exchange store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ItemChange.PropertiesToSet">
            <summary>
            Represents an update to a single property of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ItemChange.PropertiesToDelete">
            <summary>
            Represents an operation to delete a given property from an item during an UpdateItem call.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ItemChange.PropertiesToAppend">
            <summary>
            Identifies data to append to a single property of an item during an UpdateItem Operation.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ItemAttachment">
            <summary>
            Represents an Exchange item that is attached to another Exchange item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachment.#ctor">
            <summary>
            Initializes a new instance of the ItemAttachment class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ItemAttachment class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachment.#ctor(Independentsoft.Exchange.Item)">
            <summary>
            Initializes a new instance of the ItemAttachment class.
            </summary>
            <param name="item">The item.</param>
            <exception cref="T:System.ArgumentNullException">item</exception>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachment.#ctor(System.String,Independentsoft.Exchange.Item)">
            <summary>
            Initializes a new instance of the ItemAttachment class.
            </summary>
            <param name="name">The name.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachment.ToXml">
            <summary>
            Converts this <see cref="T:Independentsoft.Exchange.ItemAttachment"/> into xml
            </summary>
            <returns>Returns the XML representation of the current ItemAttachment object</returns>
        </member>
        <member name="M:Independentsoft.Exchange.ItemAttachment.ToString">
            <summary>
            Converts the value of the current ItemAttachment object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ItemAttachment.Item">
            <summary>
            Contains the item that is associated with the attachment.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetDiscoverySearchConfigurationResponse">
             <summary>
             Contains the response from a GetDiscoverySearchConfiguration request
             </summary>
             <example>
             The following example performs a GetDiscoverySearchConfiguration and reads from the response
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             service.RequestServerVersion = RequestServerVersion.Exchange2013;
            
             GetDiscoverySearchConfigurationResponse response = service.GetDiscoverySearchConfiguration("MyDiscoverySearchTest");
            
             foreach (DiscoverySearchConfiguration configuration in response.DiscoverySearchConfigurations)
             {
                 foreach (SearchableMailbox mailbox in configuration.SearchableMailboxes)
                 {
                     CrestronConsole.PrintLine("DisplayName:" + mailbox.DisplayName);
                     CrestronConsole.PrintLine("PrimarySmtpAddress:" + mailbox.PrimarySmtpAddress);
                     CrestronConsole.PrintLine("ReferenceId:" + mailbox.ReferenceId);
                     CrestronConsole.PrintLine("--------------------------------------------");
                 }
             }
             </code>
             </example>
        </member>
        <member name="P:Independentsoft.Exchange.GetDiscoverySearchConfigurationResponse.DiscoverySearchConfigurations">
            <summary>
            Contains a list of <see cref="T:Independentsoft.Exchange.DiscoverySearchConfiguration"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FlagStatus">
            <summary>
            Contains the aggregated flag status for conversation items in the current folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagStatus.None">
            <summary>
            Indicates the not-flagged status.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagStatus.Complete">
            <summary>
            Indicates the complete flag status.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FlagStatus.Marked">
            <summary>
            Indicates the flagged status.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FindConversationResponse">
            <summary>
            Defines a response to a FindConversation Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindConversationResponse.Conversations">
            <summary>
            Contains an array of conversations.
            </summary>
            <value>The conversations.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FindConversationResponse.HighlightTerms">
            <summary>
            Gets the highlight terms.
            </summary>
            <value>The highlight terms.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FindConversationResponse.TotalConversationsInView">
            <summary>
            Gets the total conversations in view.
            </summary>
            <value>The total conversations in view.</value>
        </member>
        <member name="P:Independentsoft.Exchange.FindConversationResponse.IndexedOffset">
            <summary>
            Gets the indexed offset.
            </summary>
            <value>The indexed offset.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ExtendedPropertyAttributedValue">
            <summary>
            Specifies extended properties for a persona
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedPropertyAttributedValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ExtendedPropertyAttributedValue"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExtendedPropertyAttributedValue.Value">
            <summary>
            The <see cref="T:Independentsoft.Exchange.ExtendedProperty"/> value
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ExtendedPropertyAttributedValue.Attributions">
            <summary>
            Returns the Attributions
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CreateAttachmentResponse">
            <summary>
            Contains the status and result of a single CreateAttachment request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CreateAttachmentResponse.Attachment">
            <summary>
            Contains the items or files that are attached to an item in the Exchange store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ClientAccessTokenRequest">
            <summary>
            Defines a client access token request for a Outlook mail app
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ClientAccessTokenRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ClientAccessTokenRequest"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ClientAccessTokenRequest.#ctor(System.String,Independentsoft.Exchange.ClientAccessTokenType)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ClientAccessTokenRequest"/> class with the specified 
            id and ClientAccessTokenType
            </summary>
            <param name="id">The identifier</param>
            <param name="type">The type</param>
        </member>
        <member name="P:Independentsoft.Exchange.ClientAccessTokenRequest.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ClientAccessTokenRequest.Type">
            <summary>
            The token type
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.User">
            <summary>
            Provides user-specific information.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.User.#ctor">
            <summary>
            Initializes a new instance of the User class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.User.DisplayName">
            <summary>
            Represents the user's display name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.User.LegacyDN">
            <summary>
            Identifies a user's mailbox by legacy distinguished name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.User.DeploymentId">
            <summary>
            Uniquely identifies the Exchange forest.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.MobileSyncProvider">
            <summary>
            Provides information that is used to determine whether another Autodiscover request is required to return the user configuration information.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncProvider.Culture">
            <summary>
            Represents the culture for a given item in a mailbox.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncProvider.User">
            <summary>
            Provides user-specific information.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncProvider.Server">
            <summary>
            Specifies the name of the mail server.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.GetUserSettingsResponse">
            <summary>
            Contains the configuration settings for each requested user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.GetUserSettingsResponse.#ctor">
            <summary>
            Initializes a new instance of the GetUserSettingsResponse class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetUserSettingsResponse.ErrorCode">
            <summary>
            Represents an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetUserSettingsResponse.ErrorMessage">
            <summary>
            Represents a message that is associated with an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetUserSettingsResponse.UserResponses">
            <summary>
            Contains a collection of user responses.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AddressEntity">
            <summary>
            Represents a single address entity.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AddressEntity.#ctor">
            <summary>
            Initializes a new instance of the AddressEntity class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AddressEntity.ToString">
            <summary>
            Converts the value of the current AddressEntity object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.AddressEntity.Position">
            <summary>
            Represents the position of the entity.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AddressEntity.Address">
            <summary>
            Represents an address.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AbsoluteYearlyRecurrencePattern">
            <summary>
            Represents a yearly recurrence pattern.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteYearlyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the AbsoluteYearlyRecurrencePattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteYearlyRecurrencePattern.#ctor(Independentsoft.Exchange.Month,System.Int32)">
            <summary>
            Initializes a new instance of the AbsoluteYearlyRecurrencePattern class with specified values.
            </summary>
            <param name="month">Month.</param>
            <param name="dayOfMonth">Day of month. An integer value with values 1 through 31 being valid.</param>
        </member>
        <member name="M:Independentsoft.Exchange.AbsoluteYearlyRecurrencePattern.ToString">
            <summary>
            Converts the value of the current AbsoluteYearlyRecurrencePattern object to its equivalent string representation.
            </summary>
            <returns>Returns the xml representation of the current AbsoluteYearlyRecurrencePattern</returns>
        </member>
        <member name="P:Independentsoft.Exchange.AbsoluteYearlyRecurrencePattern.DayOfMonth">
            <summary>
            Describes the day in a month on which a recurring item occurs. The range of values for this property is 1 to 31. If for a particular month this value is larger than the number of days in the month, the last day of the month is assumed for this property.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AbsoluteYearlyRecurrencePattern.Month">
            <summary>
            Describes the month in which a yearly recurring item occurs.
            </summary>
        </member>
        <member name="T:Independentsoft.IO.StructuredStorage.InvalidFileFormatException">
            <summary>
            The exception that is thrown when an input file or a data stream that is supposed to conform to a certain file format specification is malformed.
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.InvalidFileFormatException.#ctor">
            <summary>
            Creates a new instance of the InvalidFileFormatException class. 
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.InvalidFileFormatException.#ctor(System.String)">
            <summary>
            Creates a new instance of the InvalidFileFormatException class with the specified error message.  
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.InvalidFileFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of the InvalidFileFormatException class with the specified error message and inner exception. 
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Independentsoft.Exchange.UserConfigurationDictionaryKey">
            <summary>
            Specifies the dictionary key for a dictionary property.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryKey.#ctor">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryKey class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryKey.#ctor(Independentsoft.Exchange.UserConfigurationDictionaryObjectType,System.String)">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryKey class.
            </summary>
            <param name="type">The dictionary object type</param>
            <param name="value">The dictionary object value</param>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryKey.#ctor(Independentsoft.Exchange.UserConfigurationDictionaryObjectType,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryKey class.
            </summary>
            <param name="type">The dictionary object type</param>
            <param name="values">The dictionary object values</param>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationDictionaryKey.Type">
            <summary>
            Specifies a dictionary object type.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationDictionaryKey.Values">
            <summary>
            Specifies the dictionary object value as a string.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UserConfiguration">
            <summary>
            Defines a single user configuration object.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfiguration.#ctor">
            <summary>
            Initializes a new instance of the UserConfiguration class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfiguration.#ctor(Independentsoft.Exchange.UserConfigurationName)">
            <summary>
            Initializes a new instance of the UserConfiguration class.
            </summary>
            <param name="name">The name of a user configuration object</param>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfiguration.Name">
            <summary>
            Represents the name of a user configuration object. This element must be used when you create a user configuration object.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfiguration.ItemId">
            <summary>
            Defines the user configuration object item identifier.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfiguration.Entries">
            <summary>
            Defines a set of dictionary property entries for a user configuration object.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfiguration.XmlData">
            <summary>
            Contains XML data property content for a user configuration object.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfiguration.BinaryData">
            <summary>
            Contains binary data property content for a user configuration object.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TaskSuggestion">
            <summary>
            Represents a task suggestion that resulted from an entity extracted from an item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TaskSuggestion.#ctor">
            <summary>
            Initializes a new instance of the TaskSuggestion class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TaskSuggestion.ToString">
            <summary>
            Converts the value of the current TaskSuggestion object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.TaskSuggestion.Position">
            <summary>
            Represents the position of the entity.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TaskSuggestion.Task">
            <summary>
            Represents a suggested task.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TaskSuggestion.Assignees">
            <summary>
            Represents the people to whom a task is assigned.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StandardGroupBy">
            <summary>
            Provides standard groupings for FindItem queries.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StandardGroupBy.#ctor">
            <summary>
            Initializes a new instance of the StandardGroupBy class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StandardGroupBy.#ctor(Independentsoft.Exchange.StandardGroupByPropertyPath)">
            <summary>
            Initializes a new instance of the StandardGroupBy class. 
            </summary>
            <param name="propertyPath">The property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.StandardGroupBy.#ctor(Independentsoft.Exchange.StandardGroupByPropertyPath,Independentsoft.Exchange.SortDirection)">
            <summary>
            Initializes a new instance of the StandardGroupBy class. 
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="order">The direction to sort the response items</param>
        </member>
        <member name="M:Independentsoft.Exchange.StandardGroupBy.ToString">
            <summary>
            Converts the value of the current StandardGroupBy object to its equivalent string representation. 
            </summary>
            <returns>The XML representation of the current StandardGroupBy object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.StandardGroupBy.PropertyPath">
            <summary>
            Contains the standard property that is used for a grouped query.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.StandardGroupBy.Order">
            <summary>
            Contains the order of the groups in the grouped item array that is returned in the response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SeekToConditionPageItemView">
            <summary>
            Identifies the condition that is used to identify the end of a search, the starting index of a search, the maximum entries to return, and the search directions for a FindItem or a FindConversation operation.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SeekToConditionPageItemView.#ctor">
            <summary>
            Initializes a new instance of the SeekToConditionPageItemView class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SeekToConditionPageItemView.#ctor(Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the SeekToConditionPageItemView class.
            </summary>
            <param name="restriction">The condition used to identify the end of the search, 
            the starting index of a search, the maximum entries to return, or the search direction</param>
        </member>
        <member name="M:Independentsoft.Exchange.SeekToConditionPageItemView.#ctor(Independentsoft.Exchange.Restriction,Independentsoft.Exchange.IndexBasePoint)">
            <summary>
            Initializes a new instance of the SeekToConditionPageItemView class.
            </summary>
            <param name="restriction">The condition used to identify the end of the search, 
            the starting index of a search, the maximum entries to return, or the search direction</param>
            <param name="basePoint">The base point from where the search will start</param>
        </member>
        <member name="P:Independentsoft.Exchange.SeekToConditionPageItemView.Restriction">
            <summary>
            Specifies the condition that is used to identify the end of a search.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SeekToConditionPageItemView.BasePoint">
            <summary>
            Describes whether the page of items will start from the beginning or the end of the set of items that are found by using the search criteria. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RuleOperationResponse">
            <summary>
            Defines a response to an UpdateInboxRules request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleOperationResponse.Errors">
            <summary>
            Represents an array of rule validation errors on each rule field that has an error.
            </summary>
            <value>The errors.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ReminderItemAction">
            <summary>
            Specifies the action for a reminder
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReminderItemAction.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Independentsoft.Exchange.ReminderItemAction"/> class
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReminderItemAction.#ctor(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ReminderActionType)">
            <summary>
            Initializes a <see cref="T:Independentsoft.Exchange.ReminderItemAction"/> with the specified itemId and type
            </summary>
            <param name="itemId">The item id</param>
            <param name="type">The action to take on the reminder</param>
        </member>
        <member name="M:Independentsoft.Exchange.ReminderItemAction.#ctor(Independentsoft.Exchange.ItemId,Independentsoft.Exchange.ReminderActionType,System.DateTime)">
            <summary>
            Initializes a <see cref="T:Independentsoft.Exchange.ReminderItemAction"/> with the specified itemId, type, and new reminder time
            </summary>
            <param name="itemId">The item id</param>
            <param name="type">The action to take on the reminder</param>
            <param name="newReminderTime">Specifies the new time for the reminder</param>
        </member>
        <member name="P:Independentsoft.Exchange.ReminderItemAction.Type">
            <summary>
            Get or set the action to take on the reminder
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ReminderItemAction.ItemId">
            <summary>
            Get or set the item id
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ReminderItemAction.NewReminderTime">
            <summary>
            Get or set the new time for the reminder
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ProtectionRule">
            <summary>
            Contains a single protection rule.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRule.Name">
            <summary>
            Identifies the name of the rule.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRule.IsUserOverridable">
            <summary>
            Specifies whether the rule is mandatory.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRule.Priority">
            <summary>
            Specifies the rule priority. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRule.Action">
            <summary>
            Identifies what action must be executed if the condition part of the rule matches.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Or">
            <summary>
            Identifies a single occurrence of a recurring item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="propertyPath1">The first property path</param>
            <param name="propertyPath2">The second property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="restriction1">The first <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction2">The second <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="restriction1">The first <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction2">The second <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction3">The third <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="restriction1">The first <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction2">The second <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction3">The third <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction4">The fourth <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.Restriction})">
            <summary>
            Initializes a new instance of the Or class.
            </summary>
            <param name="restrictions">A list of <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.Or.ToString">
            <summary>
            Converts the value of the current Or object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current Or object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxData">
            <summary>
            Represents an individual mailbox user and options for the type of data to be returned about the mailbox user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.#ctor">
            <summary>
            Initializes a new instance of the MailboxData class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.#ctor(Independentsoft.Exchange.EmailAddress)">
            <summary>
            Initializes a new instance of the MailboxData class. 
            </summary>
            <param name="emailAddress">The email address</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.#ctor(Independentsoft.Exchange.EmailAddress,Independentsoft.Exchange.MeetingAttendeeType)">
            <summary>
            Initializes a new instance of the MailboxData class. 
            </summary>
            <param name="emailAddress">The email address</param>
            <param name="attendeeType">The meeting attendee type</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.#ctor(Independentsoft.Exchange.EmailAddress,Independentsoft.Exchange.MeetingAttendeeType,System.Boolean)">
            <summary>
            Initializes a new instance of the MailboxData class. 
            </summary>
            <param name="emailAddress">The email address</param>
            <param name="attendeeType">The meeting attendee type</param>
            <param name="excludeConflicts">Specifies whether to return suggested times for calendar times that conflict among the attendees</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MailboxData class. 
            </summary>
            <param name="emailAddress">The email address</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.#ctor(System.String,Independentsoft.Exchange.MeetingAttendeeType)">
            <summary>
            Initializes a new instance of the MailboxData class.
            </summary>
            <param name="emailAddress">The email address</param>
            <param name="attendeeType">The meeting attendee type</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.#ctor(System.String,Independentsoft.Exchange.MeetingAttendeeType,System.Boolean)">
            <summary>
            Initializes a new instance of the MailboxData class.
            </summary>
            <param name="emailAddress">The email address</param>
            <param name="attendeeType">The meeting attendee type</param>
            <param name="excludeConflicts">Specifies whether to return suggested times for calendar times that conflict among the attendees</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxData.ToString">
            <summary>
            Converts the value of the current MailboxData object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current MailboxData object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxData.EmailAddress">
            <summary>
            Represents the mailbox user for a GetUserAvailability query.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxData.AttendeeType">
            <summary>
            Represents the type of attendee identified in the Email element. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxData.ExcludeConflicts">
            <summary>
            Specifies whether to return suggested times for calendar times that conflict among the attendees.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.LocationSource">
            <summary>
            Defines the location service to use to select the physical address of a persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LocationSource.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LocationSource.LocationServices">
            <summary>
            A location service with a mapping feature (ex. search engine)
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LocationSource.PhonebookServices">
            <summary>
            An external phonebook service
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LocationSource.Device">
            <summary>
            A GPS device
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LocationSource.Contact">
            <summary>
            A contact from the user's contact folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LocationSource.Resource">
            <summary>
            A resource (ex. conference room)
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IsLessThan">
            <summary>
            Represents a search expression that compares a property with either a constant value or another property and returns true if the first property is less than the second.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThan.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the IsLessThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThan.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the IsLessThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThan.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the IsLessThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThan.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the IsLessThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThan.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the IsLessThan class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThan.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the IsLessThan class.
            </summary>
            <param name="propertyPath1">The first property path</param>
            <param name="propertyPath2">The second property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsLessThan.ToString">
            <summary>
            Converts the value of the current IsLessThan object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current IsLessThan object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.InvalidRecipientResponseCode">
            <summary>
            Provides information about why the recipient is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InvalidRecipientResponseCode.RecipientOrganizationNotFederated">
            <summary>
            Indicates that a sharing relationship is not available with the organization specified in the recipient's SMTP e-mail address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InvalidRecipientResponseCode.CannotObtainTokenFromSTS">
            <summary>
            Indicates that there was a problem obtaining a security token from the token server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InvalidRecipientResponseCode.SystemPolicyBlocksSharingWithThisRecipient">
            <summary>
            Indicates that the system administrator has set a system policy that blocks sharing with the specified recipient.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Importance">
            <summary>
            Describes the importance of an item or the aggregated importance of all items in a conversation in the current folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Importance.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Importance.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Importance.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Importance.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetRoomsResponse">
            <summary>
            Defines a response to a GetRooms Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetRoomsResponse.Mailboxes">
            <summary>
            Gets a collection of rooms.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FolderShape">
            <summary>
            Identifies the folder properties to include in a GetFolder, FindFolder, or SyncFolderHierarchy response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FolderShape.#ctor">
            <summary>
            Initializes a new instance of the FolderShape class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FolderShape.#ctor(Independentsoft.Exchange.ShapeType)">
            <summary>
            Initializes a new instance of the FolderShape class.
            </summary>
            <param name="type">The shape of the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderShape.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the FolderShape class.
            </summary>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderShape.#ctor(Independentsoft.Exchange.ShapeType,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the FolderShape class.
            </summary>
            <param name="type">The shape of the response</param>
            <param name="propertyPaths">A list of <see cref="T:Independentsoft.Exchange.PropertyPath"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderShape.ToString">
            <summary>
            Converts the value of the current FolderShape object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current FolderShape object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.FolderShape.Type">
            <summary>
            Identifies the basic configuration of properties to return in a response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FolderShape.PropertyPaths">
            <summary>
            Identifies additional properties to return in a response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FolderInfoResponse">
            <summary>
            Contains an array of folders that are used in folder operations.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FolderInfoResponse.Folders">
            <summary>
            Contains a collection of folders.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DeliverMeetingRequests">
            <summary>
            Defines how meeting requests are handled between the delegate and the principal. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeliverMeetingRequests.DelegatesOnly">
            <summary>
            Meeting requests are forwarded to the delegate and moved to the Deleted Items folder in the principal's mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeliverMeetingRequests.DelegatesAndMe">
            <summary>
            Meeting requests are forwarded to the delegate and remain in the Inbox folder in the principal's mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeliverMeetingRequests.DelegatesAndSendInformationToMe">
            <summary>
            Meeting requests are forwarded to the delegate and remain in the Inbox folder in the principal's mailbox, but the Accept, Tentative, and Decline buttons do not appear in the Microsoft Office Outlook reading pane.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DeliverMeetingRequests.None">
            <summary>
            Meeting requests are not forwarded to the delegate.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DelegateFolderPermissionLevel">
            <summary>
            Defines a delegate user's permission level on a specific folder. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DelegateFolderPermissionLevel.Editor">
            <summary>
            The delegate has Editor permissions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DelegateFolderPermissionLevel.Reviewer">
            <summary>
            The delegate has Reviewer permissions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DelegateFolderPermissionLevel.Author">
            <summary>
            The delegate has Author permissions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DelegateFolderPermissionLevel.Custom">
            <summary>
            The delegate has Custom permissions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DelegateFolderPermissionLevel.None">
            <summary>
            The delegate has no permission.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DelegateFolderPermissionLevel.NotDefined">
            <summary>
            The delegate has not defined.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationRequest">
            <summary>
            Class ConversationRequest.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ConversationRequest"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationRequest.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ConversationRequest"/> class.
            </summary>
            <param name="conversationId">The conversation identifier.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ConversationRequest.#ctor(Independentsoft.Exchange.ItemId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.ConversationRequest"/> class.
            </summary>
            <param name="conversationId">The conversation identifier.</param>
            <param name="syncState">State of the synchronize.</param>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationRequest.ConversationId">
            <summary>
            Gets or sets the conversation identifier.
            </summary>
            <value>The conversation identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ConversationRequest.SyncState">
            <summary>
            Gets or sets the state of the synchronize.
            </summary>
            <value>The state of the synchronize.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Contact">
            <summary>
            Represents the contact item in the Exchange store.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Contact.#ctor">
            <summary>
            Initializes a new instance of the Contact class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Contact.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Contact class.
            </summary>
            <param name="subject">The subject for the contact</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contact.#ctor(Independentsoft.Exchange.MimeContent)">
            <summary>
            Initializes a new instance of the Contact class.
            </summary>
            <param name="mimeContent">A <see cref="T:Independentsoft.Exchange.MimeContent"/> object</param>
        </member>
        <member name="M:Independentsoft.Exchange.Contact.ToString">
            <summary>
            Converts the value of the current Contact object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current Contact object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.FileAs">
            <summary>
            Represents how the contact is filed in the Contacts folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.FileAsMapping">
            <summary>
            Represents how to construct what is displayed for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.GivenName">
            <summary>
            Represents the contact's given name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Initials">
            <summary>
            Represents the initials of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.MiddleName">
            <summary>
            Represents the middle name of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Nickname">
            <summary>
            Represents the nickname of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.CompleteName">
            <summary>
            Represents the complete name of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.CompanyName">
            <summary>
            Represents the company name that is associated with the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomeAddress">
            <summary>
            Represents the home address that is associated the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessAddress">
            <summary>
            Represents the business address that is associated the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherAddress">
            <summary>
            Represents the other address that is associated the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomeAddressStreet">
            <summary>
            Represents a home street address for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomeAddressCity">
            <summary>
            Represents the home city name that is associated with the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomeAddressState">
            <summary>
            Represents the home state of residence for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomeAddressCountry">
            <summary>
            Represents the home country for a given address contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomeAddressPostalCode">
            <summary>
            Represents the home postal code for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessAddressStreet">
            <summary>
            Represents a business street address for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessAddressCity">
            <summary>
            Represents the business city name that is associated with the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessAddressState">
            <summary>
            Represents the business state of residence for the contact item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessAddressCountry">
            <summary>
            Represents the business country for a given physical address.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessAddressPostalCode">
            <summary>
            Represents the business postal code for the contact item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherAddressStreet">
            <summary>
            Represents a other street address for the contact item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherAddressCity">
            <summary>
            Represents the other city name that is associated with the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherAddressState">
            <summary>
            Represents the other state of residence for the contact item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherAddressCountry">
            <summary>
            Represents the other country for a given physical address.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherAddressPostalCode">
            <summary>
            Represents the other postal code for the contact item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.AssistantPhone">
            <summary>
            Represents the telephone number as the assistant's telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessFax">
            <summary>
            Represents the telephone number as a business fax number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessPhone">
            <summary>
            Represents the telephone number as a business telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessPhone2">
            <summary>
            Represents the telephone number as a second business telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.CallbackPhone">
            <summary>
            Represents the telephone number as a callback number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.CarPhone">
            <summary>
            Represents the telephone number as a car telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.CompanyPhone">
            <summary>
            Represents the telephone number as the company's telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomeFax">
            <summary>
            Represents the telephone number as a home fax number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomePhone">
            <summary>
            Represents the telephone number as a home telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HomePhone2">
            <summary>
            Represents the telephone number as a second home telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Isdn">
            <summary>
            Represents the telephone number as an Integrated Services Digital Network (ISDN) line.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.MobilePhone">
            <summary>
            Represents the telephone number as a mobile phone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherFax">
            <summary>
            Represents the telephone number as another fax number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OtherPhone">
            <summary>
            Represents the telephone number as another telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Pager">
            <summary>
            Represents the telephone number as a pager.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.PrimaryPhone">
            <summary>
            Represents the telephone number as the primary telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.RadioPhone">
            <summary>
            Represents the telephone number as a radio telephone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Telex">
            <summary>
            Represents the telephone number as a telex telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.TtyTddPhone">
            <summary>
            Represents the telephone number as a telex telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.AssistantName">
            <summary>
            Represents an assistant to the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Birthday">
            <summary>
            Represents the birth date of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.BusinessHomePage">
            <summary>
            Represents the Home page (Web address) for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Children">
            <summary>
            Contains the names of the contact's children.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Companies">
            <summary>
            Represents the collection of companies that are associated with the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Department">
            <summary>
            Represents the contact's department at work.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Generation">
            <summary>
            Represents a generational abbreviation that follows the full name of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.InstantMessengerAddress1">
            <summary>
            Represents a first IM addresses for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.InstantMessengerAddress2">
            <summary>
             Represents a second IM addresses for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.InstantMessengerAddress3">
            <summary>
             Represents a third IM addresses for the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.JobTitle">
            <summary>
            Represents the job title of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Manager">
            <summary>
            Represents the contact's manager.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Mileage">
            <summary>
            Represents mileage for the contact item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.OfficeLocation">
            <summary>
            Represents the office location of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.SelectedMailingAddress">
            <summary>
            Represents the display types for physical addresses.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Profession">
            <summary>
            Represents the profession of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.SpouseName">
            <summary>
            Represents the name of the contact's spouse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Surname">
            <summary>
            Represents the surname of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.WeddingAnniversary">
            <summary>
            Represents the wedding anniversary of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email1Address">
            <summary>
            Represents the first email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email2Address">
            <summary>
            Represents the second email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email3Address">
            <summary>
            Represents the third email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email1DisplayName">
            <summary>
            Represents the display name of the first email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email2DisplayName">
            <summary>
            Represents the display name of the second email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email3DisplayName">
            <summary>
            Represents the display name of the third email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email1DisplayAs">
            <summary>
            Represents the display string of the first email address of the contact
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email2DisplayAs">
            <summary>
            Represents the display string of the second email address of the contact
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email3DisplayAs">
            <summary>
            Represents the display string of the third email address of the contact
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email1Type">
            <summary>
            Represents the type of the first email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email2Type">
            <summary>
            Represents the type of the second email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Email3Type">
            <summary>
            Represents the type of the third email address of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.HasPicture">
            <summary>
            Indicates whether the contact item has a file attachment that represents the contact's picture.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Gender">
            <summary>
            Represents the gender of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Title">
            <summary>
            Represents the title of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Alias">
            <summary>
            Gets the contact's alias. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.DirectoryId">
            <summary>
            Gets the contact's directory identifier. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.ManagerMailbox">
            <summary>
            Gets the email address of contact's direct manager. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.DirectReports">
            <summary>
            Gets the contact's direct reports. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.MSExchangeCertificate">
            <summary>
            Gets a binary array encoding the contact’s Microsoft Exchange certificate.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Notes">
            <summary>
            Gets the notes property of the contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.PhoneticFullName">
            <summary>
            Gets the contact’s full name, including first and last, using the phonetic alphabet. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.PhoneticFirstName">
            <summary>
            Gets the contact’s first name using the phonetic alphabet.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.PhoneticLastName">
            <summary>
            Gets the contact’s last name using the phonetic alphabet. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.Photo">
            <summary>
            Gets the contact's photo.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Contact.UserSMIMECertificate">
            <summary>
            Gets a binary array encoding the contact’s SMIME certificate.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarPermissionSet">
            <summary>
            Contains all the permissions that are configured for a calendar folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarPermissionSet.#ctor">
            <summary>
            Initializes a new instance of the CalendarPermissionSet class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarPermissionSet.ToString">
            <summary>
            Converts the value of the current CalendarPermissionSet object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current CalendarPermissionSet object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermissionSet.Permissions">
            <summary>
            Contains an array of calendar permissions for a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarPermissionSet.Entries">
            <summary>
            Contains a list of unknown entries that cannot be resolved against the Active Directory directory service.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.ProtocolConnection">
            <summary>
            Represents the protocol connection of the server Web client.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.ProtocolConnection.#ctor">
            <summary>
            Initializes a new instance of the ProtocolConnection class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ProtocolConnection.Hostname">
            <summary>
            Represents the host name portion of the full computer name of the computer.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ProtocolConnection.Port">
            <summary>
            Represents the port number to use for the protocol.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ProtocolConnection.EncryptionMethod">
            <summary>
            Represents the cryptographic method that is used for the POP, IMAP, and SMTP protocols.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Appointment">
            <summary>
            Represents an Exchange calendar item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Appointment.#ctor">
            <summary>
            Initializes a new instance of the Appointment class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Appointment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Appointment class.
            </summary>
            <param name="subject">The subject.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Appointment.#ctor(Independentsoft.Exchange.MimeContent)">
            <summary>
            Initializes a new instance of the Appointment class.
            </summary>
            <param name="mimeContent">Content of the MIME.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Appointment.#ctor(System.Xml.XmlTextReader)">
            <summary>
            Initializes a new instance of the Appointment class.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Independentsoft.Exchange.Appointment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ReminderNextTime">
            <summary>
            Represents the date and time for the next reminder.
            </summary>
            <value>The reminder next time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.StartWallClock">
            <summary>
            Represents the start time of a meeting in the time zone of the location in which the meeting takes place.
            </summary>
            <value>The start wall clock.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.EndWallClock">
            <summary>
            Represents the end time of a meeting in the time zone of the location in which the meeting takes place.
            </summary>
            <value>The end wall clock.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Uid">
            <summary>
            Identifies the appointment.
            </summary>
            <value>The uid.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.RecurrenceId">
            <summary>
            Used to identify a specific instance of a recurring appointment.
            </summary>
            <value>The recurrence identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.DateTimeStamp">
            <summary>
            Indicates the date and time that an instance of the appointment object was created.
            </summary>
            <value>The date time stamp.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.StartTime">
            <summary>
            Represents the start of a the appointment.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.EndTime">
            <summary>
            Represents the end of a the appointment.
            </summary>
            <value>The end time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.OriginalStartTime">
            <summary>
            Represents the original start time of the appointment.
            </summary>
            <value>The original start time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.IsAllDayEvent">
            <summary>
            Indicates whether the appointment is an all-day event.
            </summary>
            <value><c>true</c> if this instance is all day event; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.LegacyFreeBusyStatus">
            <summary>
            Represents the free/busy status of the appointment.
            </summary>
            <value>The legacy free busy status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Location">
            <summary>
            Represents the location of the appointment.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.When">
            <summary>
            Provides information about when the appointment occurs.
            </summary>
            <value>The when.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.IsMeeting">
            <summary>
            Indicates whether the item is a meeting or appointment.
            </summary>
            <value><c>true</c> if this instance is meeting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.IsCancelled">
            <summary>
            Indicates whether the appointment has been canceled.
            </summary>
            <value><c>true</c> if this instance is cancelled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.IsRecurring">
            <summary>
            Indicates whether the appointment is part of a recurring item.
            </summary>
            <value><c>true</c> if this instance is recurring; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.MeetingRequestWasSent">
            <summary>
            Indicates whether a meeting request has been sent to requested attendees.
            </summary>
            <value><c>true</c> if [meeting request was sent]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.IsResponseRequested">
            <summary>
            Indicates whether a response to an item is required.
            </summary>
            <value><c>true</c> if this instance is response requested; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.InstanceType">
            <summary>
            Represents the occurrence type of the appointment.
            </summary>
            <value>The type of the instance.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.MyResponse">
            <summary>
            Contains the status of or response to the appointment.
            </summary>
            <value>My response.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Organizer">
            <summary>
            Represents the organizer of the appointment.
            </summary>
            <value>The organizer.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.RequiredAttendees">
            <summary>
            Represents attendees that are required to attend the appointment.
            </summary>
            <value>The required attendees.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.OptionalAttendees">
            <summary>
            Represents attendees that are not required to attend the appointment.
            </summary>
            <value>The optional attendees.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Resources">
            <summary>
            Represents a scheduled resource for the appointment.
            </summary>
            <value>The resources.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ConflictingMeetingCount">
            <summary>
            Represents the number of meetings that conflict with the meetings.
            </summary>
            <value>The conflicting meeting count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.AdjacentMeetingCount">
            <summary>
            Represents the total number of appointments that are adjacent to a meeting time.
            </summary>
            <value>The adjacent meeting count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ConflictingMeetings">
            <summary>
            Identifies all items that conflict with a meeting time.
            </summary>
            <value>The conflicting meetings.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.AdjacentMeetings">
            <summary>
            Describes all appointments that are adjacent to a meeting time.
            </summary>
            <value>The adjacent meetings.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Duration">
            <summary>
            Represents the duration of the appointment.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.TimeZone">
            <summary>
            Provides a text description of a time zone.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ReplyTime">
            <summary>
            Represents the date and time when an attendee replied to a meeting request.
            </summary>
            <value>The reply time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.SequenceNumber">
            <summary>
            Specifies the sequence number of a version of the appointment.
            </summary>
            <value>The sequence number.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.State">
            <summary>
            Specifies the status of the appointment.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Recurrence">
            <summary>
            Contains the recurrence pattern for appointment and meeting requests.
            </summary>
            <value>The recurrence.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.FirstOccurrence">
            <summary>
            Represents the first occurrence of a recurring appointment.
            </summary>
            <value>The first occurrence.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.LastOccurrence">
            <summary>
            Represents the last occurrence of a recurring appointment.
            </summary>
            <value>The last occurrence.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ModifiedOccurrences">
            <summary>
            Contains an array of recurring appointment occurrences that have been modified so that they differ from the recurrence master item.
            </summary>
            <value>The modified occurrences.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.DeletedOccurrences">
            <summary>
            Contains an array of deleted occurrences of a recurring appointment.
            </summary>
            <value>The deleted occurrences.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.MeetingTimeZone">
            <summary>
            Represents the time zone of the location where the meeting is hosted.
            </summary>
            <value>The meeting time zone.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.StartTimeZone">
            <summary>
            Represents the start time zone of the appointment.
            </summary>
            <value>The start time zone.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.EndTimeZone">
            <summary>
            Represents the end time zone of the appointment.
            </summary>
            <value>The end time zone.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ConferenceType">
            <summary>
            Describes the type of conferencing that is performed with the appointment.
            </summary>
            <value>The type of the conference.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.AllowNewTimeProposal">
            <summary>
            Indicates whether a new meeting time can be proposed for a meeting by an attendee.
            </summary>
            <value><c>true</c> if [allow new time proposal]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.IsOnlineMeeting">
            <summary>
            Indicates whether the meeting is online.
            </summary>
            <value><c>true</c> if this instance is online meeting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.MeetingWorkspaceUrl">
            <summary>
            Contains the URL for the meeting workspace that is linked to by the appointment.
            </summary>
            <value>The meeting workspace URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.NetShowUrl">
            <summary>
            Specifies the URL for a Microsoft NetShow online meeting.
            </summary>
            <value>The net show URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.EnhancedLocation">
            <summary>
            Specifies location information such as the name, address, and optional notes about a location.
            </summary>
            <value>The enhanced location.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.JoinOnlineMeetingUrl">
            <summary>
            Specifies the URL to join an online meeting.
            </summary>
            <value>The join online meeting URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.OnlineMeetingSettings">
            <summary>
            Specifies the settings for online meetings.
            </summary>
            <value>The online meeting settings.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.BusyStatus">
            <summary>
            Represents the free/busy status of the appointment.
            </summary>
            <value>The busy status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.MeetingStatus">
            <summary>
            Gets or sets the meeting status.
            </summary>
            <value>The meeting status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ResponseStatus">
            <summary>
            Gets or sets the response status.
            </summary>
            <value>The response status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private.
            </summary>
            <value><c>true</c> if this instance is private; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.CommonStartTime">
            <summary>
            Gets or sets the common start time.
            </summary>
            <value>The common start time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.CommonEndTime">
            <summary>
            Gets or sets the common end time.
            </summary>
            <value>The common end time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ReminderOverrideDefault">
            <summary>
            Gets or sets a value indicating whether [reminder override default].
            </summary>
            <value><c>true</c> if [reminder override default]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ReminderPlaySound">
            <summary>
            Gets or sets a value indicating whether [reminder play sound].
            </summary>
            <value><c>true</c> if [reminder play sound]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.ReminderSoundFile">
            <summary>
            Gets or sets the reminder sound file.
            </summary>
            <value>The reminder sound file.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.RecurrencePattern">
            <summary>
            Gets or sets the recurrence pattern.
            </summary>
            <value>The recurrence pattern.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.RecurrenceStart">
            <summary>
            Gets or sets the recurrence start.
            </summary>
            <value>The recurrence start.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.RecurrenceEnd">
            <summary>
            Gets or sets the recurrence end.
            </summary>
            <value>The recurrence end.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Appointment.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>The priority.</value>
        </member>
        <member name="T:Independentsoft.Msg.Attachment">
            <summary>
            Represents an attachment to a message.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.#ctor">
            <summary>
            Initializes a new instance of the Attachment class.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Attachment class based on the supplied file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.#ctor(System.String,Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the Attachment class based on the supplied stream.
            </summary>
            <param name="fileName">Attachment file name.</param>
            <param name="stream">A stream.</param>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the Attachment class based on the supplied byte array.
            </summary>
            <param name="fileName">Attachment file name.</param>
            <param name="buffer">A byte array.</param>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.Save(System.String)">
            <summary>
            Saves this attachment to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.Save(System.String,System.Boolean)">
            <summary>
            Saves this attachment to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="overwrite">True to overwrite existing file, otherwise false.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves this attachment to the specified stream.
            </summary>
            <param name="stream">A stream.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.GetBytes">
            <summary>
            Gets bytes to read from this attachment.
            </summary>
            <returns>Attachment as a byte array.</returns>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.GetBuffer">
            <summary>
            Gets bytes to read from this attachment.
            </summary>
            <returns>Attachment as a byte array.</returns>
        </member>
        <member name="M:Independentsoft.Msg.Attachment.GetStream">
            <summary>
            Gets stream to read from this attachment.
            </summary>
            <returns>A stream.</returns>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.AdditionalInfo">
            <summary>
            Provides file type information for a non-Windows attachment.
            </summary>
            <value>The additional information.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.ContentBase">
            <summary>
            Contains the content base header of a MIME message attachment.
            </summary>
            <value>The content base.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.ContentId">
            <summary>
            Contains the content identification header of a MIME message attachment.
            </summary>
            <value>The content identifier.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.ContentLocation">
            <summary>
            Contains the content location header of a MIME message attachment.
            </summary>
            <value>The content location.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.ContentDisposition">
            <summary>
            Contains the content disposition header of a MIME message attachment.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Data">
            <summary>
            Contains binary attachment data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.DataObject">
            <summary>
            Contains attachment's data as embedded object.
            </summary>
            <value>The data object.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Encoding">
            <summary>
            Contains the encoding for an attachment.
            </summary>
            <value>The encoding.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.RecordKey">
            <summary>
            Contains the record key for an attachment.
            </summary>
            <value>The record key.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Extension">
            <summary>
            Contains a file name extension that indicates the document type of an attachment.
            </summary>
            <value>The extension.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.FileName">
            <summary>
            Contains an attachment's base file name and extension, excluding path.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Flags">
            <summary>
            Contains flags for an attachment.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.LongFileName">
            <summary>
            Contains an attachment's long filename and extension, excluding path.
            </summary>
            <value>The long name of the file.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.LongPathName">
            <summary>
            Contains an attachment's fully-qualified long path and filename.
            </summary>
            <value>The long name of the path.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Method">
            <summary>
            Contains a MAPI-defined constant representing the way the contents of an attachment can be accessed.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.MimeSequence">
            <summary>
            Contains the MIME sequence number of a MIME message attachment.
            </summary>
            <value>The MIME sequence.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.MimeTag">
            <summary>
            Contains formatting information about a MIME attachment.
            </summary>
            <value>The MIME tag.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.PathName">
            <summary>
            Contains an attachment's fully-qualified path and filename.
            </summary>
            <value>The name of the path.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Rendering">
            <summary>
            Contains a Microsoft Windows metafile with rendering information for an attachment.
            </summary>
            <value>The rendering.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.RenderingPosition">
            <summary>
            Contains rendering position index.
            </summary>
            <value>The rendering position.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Size">
            <summary>
            Contains attachment's size in bytes.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.Tag">
            <summary>
            Contains an object identifier specifying the application that supplied an attachment.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.TransportName">
            <summary>
            Contains the name of an attachment file modified so that it can be associated with TNEF messages.
            </summary>
            <value>The name of the transport.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.DisplayName">
            <summary>
            Contains the display name of the attachment.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.EmbeddedMessage">
            <summary>
            Contains <see cref="T:Independentsoft.Msg.Message"/> object if the attachment is an embedded Message.
            </summary>
            <value>The embedded message.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.ObjectType">
            <summary>
            Contains the type of the attachment.
            </summary>
            <value>The type of the object.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.IsHidden">
            <summary>
            Indicates whether an attachment is hidden from the end user.
            </summary>
            <value><c>true</c> if this instance is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.CreationTime">
            <summary>
            Contains the creation date and time of the attachment.
            </summary>
            <value>The creation time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.LastModificationTime">
            <summary>
            Contains the date and time when the attachment was last modified.
            </summary>
            <value>The last modification time.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.IsContactPhoto">
            <summary>
            Indicates whether this attachment is a contact photo.
            </summary>
            <value><c>true</c> if this instance is contact photo; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Msg.Attachment.DataObjectStorage">
            <summary>
            Gets or sets the data object storage.
            </summary>
            <value>The data object storage.</value>
        </member>
        <member name="T:Independentsoft.Exchange.UserPhotoSizeType">
            <summary>
            Specifies the size for user photos
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR48x48">
            <summary>
            48x48
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR64x64">
            <summary>
            64x64
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR96x96">
            <summary>
            96x96
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR120x120">
            <summary>
            120x120
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR240x240">
            <summary>
            240x240
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR360x360">
            <summary>
            360x360
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR432x432">
            <summary>
            432x432
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR504x504">
            <summary>
            504x504
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserPhotoSizeType.HR648x648">
            <summary>
            648x648
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UserConfigurationDictionaryValue">
            <summary>
            Specifies the dictionary value for a dictionary property.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryValue.#ctor">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryValue class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryValue.#ctor(Independentsoft.Exchange.UserConfigurationDictionaryObjectType,System.String)">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryValue class.
            </summary>
            <param name="type">The dictionary object type</param>
            <param name="value">The dictionary object value</param>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationDictionaryValue.#ctor(Independentsoft.Exchange.UserConfigurationDictionaryObjectType,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the UserConfigurationDictionaryValue class.
            </summary>
            <param name="type">The dictionary object type</param>
            <param name="values">The dictionary object values</param>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationDictionaryValue.Type">
            <summary>
            Specifies the dictionary object type.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationDictionaryValue.Values">
            <summary>
            Specifies the dictionary object value as a string.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UserConfigurationDictionaryObjectType">
            <summary>
            Specifies a dictionary object type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.DateTime">
            <summary>
            A DateTime type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.Boolean">
            <summary>
            A Boolean type. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.Byte">
            <summary>
            A byte type. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.String">
            <summary>
            A string type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.Integer32">
            <summary>
            A 32-bit integer type. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.UnsignedInteger32">
            <summary>
            A 32-bit unsigned integer type. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.Integer64">
            <summary>
            A 64-bit integer type. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.UnsignedInteger64">
            <summary>
            A 64-bit unsigned integer type. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.StringArray">
            <summary>
            A string array type.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UserConfigurationDictionaryObjectType.ByteArray">
            <summary>
            A byte array type.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UnifiedMessaging.GreetingType">
            <summary>
            Defines the type of greeting to use in a PlayOnPhoneGreeting Operation request.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.GreetingType.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.UnifiedMessaging.GreetingType.OutOfOffice">
            <summary>
            OutOfOffice.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UnifiedMessagingConfiguration">
            <summary>
            Contains service configuration information for the Unified Messaging service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessagingConfiguration.IsUnifiedMessagingEnabled">
            <summary>
            Indicates whether Unified Messaging is enabled for an account. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessagingConfiguration.PlayOnPhoneDialString">
            <summary>
            Identifies the Play-on-Phone dial string. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessagingConfiguration.IsPlayOnPhoneEnabled">
            <summary>
            Indicates whether the Play-on-Phone feature is enabled. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.StreamingSubscription">
            <summary>
            Represents a subscription to a pull-based event notification subscription.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor(System.Boolean,Independentsoft.Exchange.EventType)">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
            <param name="subscribeToAllFolders">if set to <c>true</c> [subscribe to all folders].</param>
            <param name="eventType">Type of the event.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor(System.Boolean,System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
            <param name="subscribeToAllFolders">if set to <c>true</c> [subscribe to all folders].</param>
            <param name="eventTypes">The event types.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.EventType)">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="eventType">Type of the event.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="eventTypes">The event types.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.EventType)">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="eventType">Type of the event.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
            <param name="standardFolder">The standard folder.</param>
            <param name="eventTypes">The event types.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingSubscription.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},System.Collections.Generic.IList{Independentsoft.Exchange.EventType})">
            <summary>
            Initializes a new instance of the StreamingSubscription class.
            </summary>
            <param name="folders">The folders.</param>
            <param name="eventTypes">The event types.</param>
        </member>
        <member name="T:Independentsoft.Exchange.SearchFolderParameters">
            <summary>
            Represents the parameters that define a search folder
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolderParameters.#ctor">
            <summary>
            Initializes a new instance of the SearchFolderParameters class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolderParameters.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId})">
            <summary>
            Initializes a new instance of the SearchFolderParameters class.
            </summary>
            <param name="folderIds">The folder identifiers</param>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolderParameters.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the SearchFolderParameters class.
            </summary>
            <param name="folderIds">The folder identifiers</param>
            <param name="restriction">The search restriction</param>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolderParameters.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.FolderId},Independentsoft.Exchange.Restriction,Independentsoft.Exchange.SearchFolderTraversal)">
            <summary>
            Initializes a new instance of the SearchFolderParameters class.
            </summary>
            <param name="folderIds">The folder identifiers</param>
            <param name="restriction">The search restriction</param>
            <param name="traversal">Specifies the depth of the search</param>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolderParameters.ToString">
            <summary>
            Converts the value of the current SearchFolderParameters object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current SearchFolderParameters object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.SearchFolderParameters.FolderIds">
            <summary>
            Contains the collection of folders that will be mined to determine the contents of the search folder
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchFolderParameters.Restriction">
            <summary>
            Gets or sets the filter for the search
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchFolderParameters.Traversal">
            <summary>
            Describes how to traverse the folder hierarchy
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RetentionSettings">
            <summary>
            Class RetentionSettings.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RetentionSettings.#ctor">
            <summary>
            Initializes a new instance of the RetentionSettings class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionSettings.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Independentsoft.Exchange.RetentionSettings"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionSettings.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionSettings.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionSettings.FullCrawlRequired">
            <summary>
            Gets or sets a value indicating whether [full crawl required].
            </summary>
            <value><c>true</c> if [full crawl required]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionSettings.RetentionPolicyTags">
            <summary>
            Gets the retention policy tags.
            </summary>
            <value>The retention policy tags.</value>
        </member>
        <member name="T:Independentsoft.Exchange.RetentionPolicyTag">
             <summary>
             Contains information about the Retention Policy.
             </summary>
             <example>
             The following example adds a retention policy tag in the Inbox folder to delete items after 3 months
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             service.RequestServerVersion = RequestServerVersion.Exchange2010SP1;
            
             RetentionPolicyTag myRetentionPolicy = new RetentionPolicyTag();
             myRetentionPolicy.Id = Guid.NewGuid().ToString();
             myRetentionPolicy.ObjectGuid = Guid.NewGuid().ToString();
             myRetentionPolicy.DisplayName = "Delete after 3 months";
             myRetentionPolicy.RetentionAction = RetentionAction.DeleteAndAllowRecovery;
             myRetentionPolicy.Period = 90; //90 days
             myRetentionPolicy.Type = ElcFolderType.Personal;
             myRetentionPolicy.IsArchive = false;
             myRetentionPolicy.IsVisible = true;
             myRetentionPolicy.OptedInto = true;
            
             myRetentionPolicy.ContentSettings = new ContentSettings();
             myRetentionPolicy.ContentSettings.Id = Guid.NewGuid().ToString();
             myRetentionPolicy.ContentSettings.MessageClass = "*";
             myRetentionPolicy.ContentSettings.Period = 90;
             myRetentionPolicy.ContentSettings.RetentionAction = RetentionAction.DeleteAndAllowRecovery;
            
             RetentionSettings settings = new RetentionSettings();
             settings.Enabled = true;
             settings.Comment = "My Retention Settings";
             settings.RetentionPolicyTags.Add(myRetentionPolicy);
            
             service.CreateRetentionSettings(settings, StandardFolder.Inbox);
             </code>
             </example>
        </member>
        <member name="M:Independentsoft.Exchange.RetentionPolicyTag.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.RetentionPolicyTag"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.DisplayName">
            <summary>
            The name of the policy tag.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.Id">
            <summary>
            Contains unique identity for the policy.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.Period">
            <summary>
            Contains the number of days after which an item SHOULD expire under this policy. This value is configured by a server administrator. The value MUST be between 0 and 24,855.
            </summary>
            <value>The period.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.Type">
            <summary>
            The type of policy tag.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.RetentionAction">
            <summary>
            Contains the retention action.
            </summary>
            <value>The retention action.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.Description">
            <summary>
            Contains brief description of the policy tag.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.IsVisible">
            <summary>
            Use this setting to determine whether the policy tag is displayed in the list of tags available to the user.
            </summary>
            <value><c>true</c> if this instance is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.IsArchive">
            <summary>
            Gets or sets a value indicating whether this instance is archive.
            </summary>
            <value><c>true</c> if this instance is archive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.IsDefaultArchive">
            <summary>
            Gets or sets a value indicating whether this instance is default archive.
            </summary>
            <value><c>true</c> if this instance is default archive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.OptedInto">
            <summary>
            Indicates whether the user voluntarily chose this tag for the mailbox or whether it was applied to the mailbox by the server administrator.
            </summary>
            <value><c>true</c> if [opted into]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.ObjectGuid">
            <summary>
            Contains unique identity for the object.
            </summary>
            <value>The object unique identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.MustDisplayDescription">
            <summary>
            Use this setting to determine whether the user can hide the retention comment.
            </summary>
            <value><c>true</c> if [must display description]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.RetentionPolicyTag.ContentSettings">
            <summary>
            Contains the settings that control when items expire and the types of items that expire.
            </summary>
            <value>The content settings.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ReminderGroup">
            <summary>
            Identifies what item group the reminder is for
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderGroup.Calendar">
            <summary>
            The reminder is for a calendar item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderGroup.Task">
            <summary>
            The reminder is for a task item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderGroup.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RelativeYearlyRecurrencePattern">
            <summary>
            Describes a relative yearly recurrence pattern.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RelativeYearlyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the RelativeYearlyRecurrencePattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RelativeYearlyRecurrencePattern.#ctor(Independentsoft.Exchange.Month,System.Collections.Generic.IList{Independentsoft.Exchange.DayOfWeek},Independentsoft.Exchange.DayOfWeekIndex)">
            <summary>
            Initializes a new instance of the RelativeYearlyRecurrencePattern class.
            </summary>
            <param name="month">The month when a yearly recurring item occurs</param>
            <param name="days">Specifies which days of the week are in the relative monthly recurrence pattern</param>
            <param name="dayIndex">Specifies which week is used in a relative monthly recurrence pattern</param>
        </member>
        <member name="M:Independentsoft.Exchange.RelativeYearlyRecurrencePattern.ToString">
            <summary>
            Converts the value of the current RelativeYearlyRecurrencePattern object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current RelativeYearlyRecurrencePattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.RelativeYearlyRecurrencePattern.Days">
            <summary>
            Describes the days of the week that are used in item recurrence patterns.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RelativeYearlyRecurrencePattern.DayIndex">
            <summary>
            Describes which week in a month is used in a relative yearly recurrence pattern.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RelativeYearlyRecurrencePattern.Month">
            <summary>
            Describes the month when a yearly recurring item occurs.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PropertyName">
            <summary>
            Identifies an extended property.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyName.#ctor">
            <summary>
            Initializes a new instance of the PropertyName class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PropertyName class
            </summary>
            <param name="name">The name</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyName.#ctor(System.String,Independentsoft.Exchange.StandardPropertySet)">
            <summary>
            Initializes a new instance of the PropertyName class
            </summary>
            <param name="name">The name</param>
            <param name="set">The property set</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyName.#ctor(System.String,Independentsoft.Exchange.StandardPropertySet,Independentsoft.Exchange.MapiPropertyType)">
            <summary>
            Initializes a new instance of the PropertyName class
            </summary>
            <param name="name">The name</param>
            <param name="set">The property set</param>
            <param name="type">The property type</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyName.IsEqual(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Initializes a new instance of the PropertyName class
            </summary>
            <param name="propertyPath">The <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> to compare</param>
            <returns>true if the specified <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> is equal to the current <see cref="T:Independentsoft.Exchange.PropertyName"/></returns>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyName.ToString">
            <summary>
            Converts the value of the current PropertyName object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current PropertyName object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyName.Name">
            <summary>
            Contains property name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyName.Set">
            <summary>
            Contains the property set. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyName.Type">
            <summary>
            Contains the property type. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Priority">
            <summary>
            Indicates the order in which a rule is to be run. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Priority.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Priority.Normal">
            <summary>
            Normal priority.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Priority.High">
            <summary>
            High priority.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Priority.None">
            <summary>
            None priority.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.OutOfOffice">
            <summary>
            Contains the Out of Office (OOF) settings.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.OutOfOffice.#ctor">
            <summary>
            Initializes a new instance of the OutOfOffice class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.OutOfOffice.#ctor(Independentsoft.Exchange.OutOfOfficeState)">
            <summary>
            Initializes a new instance of the OutOfOffice class.
            </summary>
            <param name="state">The OOF state</param>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOffice.State">
            <summary>
            Indicates the user's OOF state.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOffice.ExternalAudience">
            <summary>
            Indicates how external users are handled.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOffice.Duration">
            <summary>
            Indicates the duration for which the OOF status is enabled if the OOF state in the OofState element is set to Scheduled.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOffice.InternalReply">
            <summary>
            Contains the body of the OOF response message that is sent to internal users.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOffice.ExternalReply">
            <summary>
            Contains the body of the OOF response message that is sent to external users.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingRequest">
            <summary>
            Represents a meeting request in the Exchange store.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Type">
            <summary>
            Describes the type of the meeting request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.IntendedFreeBusyStatus">
            <summary>
            Represents the intended status for the calendar item that is associated with the meeting request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ChangeHighlights">
            <summary>
            Gets the highlighted changes to a meeting request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ReminderNextTime">
            <summary>
            Represents the date and time for the next reminder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.StartWallClock">
            <summary>
            Represents the start time of a meeting in the time zone of the location in which the meeting takes place.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.EndWallClock">
            <summary>
            Represents the end time of a meeting in the time zone of the location in which the meeting takes place.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.StartTime">
            <summary>
            Represents the start of a calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.EndTime">
            <summary>
            Represents the end of a duration.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.OriginalStartTime">
            <summary>
            Represents the original start time of a calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.IsAllDayEvent">
            <summary>
            Indicates whether a calendar item or meeting request represents an all-day event.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.LegacyFreeBusyStatus">
            <summary>
            Represents the free/busy status of the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Location">
            <summary>
            Represents the location of a meeting or appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.When">
            <summary>
            Provides a description of when a meeting occurs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.IsMeeting">
            <summary>
            Indicates whether the calendar item is either a meeting or appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.IsCancelled">
            <summary>
            Indicates whether an appointment or meeting has been cancelled.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.IsRecurring">
            <summary>
            Indicates whether a calendar item is part of a recurring item. This element is read-only.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.MeetingRequestWasSent">
            <summary>
            Indicates whether a meeting request has been sent to requested attendees.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.InstanceType">
            <summary>
            Indicates the type of the meeting
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.MyResponse">
            <summary>
            Contains the status of or response to a calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Organizer">
            <summary>
            Represents the organizer of a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.RequiredAttendees">
            <summary>
            Represents attendees that are required to attend a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.OptionalAttendees">
            <summary>
            Represents attendees that are not required to attend a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Resources">
            <summary>
            Represents a scheduled resource for a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ConflictingMeetingCount">
            <summary>
            Represents the number of meetings that conflict with the meeting request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.AdjacentMeetingCount">
            <summary>
            Represents the total number of calendar items that are adjacent to a meeting time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ConflictingMeetings">
            <summary>
            Identifies all items that conflict with a meeting time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.AdjacentMeetings">
            <summary>
            Describes all calendar items that are adjacent to a meeting time.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Duration">
            <summary>
            Represents the duration of a calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.TimeZone">
            <summary>
            Provides a text description of a time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ReplyTime">
            <summary>
            Represents the date and time when an attendee replied to a meeting request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.SequenceNumber">
            <summary>
            Specifies the sequence number of a version of an appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.State">
            <summary>
            Specifies the status of the appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Recurrence">
            <summary>
            Contains the recurrence pattern for calendar items and meeting requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.FirstOccurrence">
            <summary>
            Represents the first occurrence of a recurring calendar item. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.LastOccurrence">
            <summary>
            Represents the last occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ModifiedOccurrences">
            <summary>
            Contains an array of recurring calendar item occurrences that have been modified so that they are different than the recurrence master item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.DeletedOccurrences">
            <summary>
            Contains an array of deleted occurrences of a recurring calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.MeetingTimeZone">
            <summary>
            Represents the time zone of the location where the meeting is hosted.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.StartTimeZone">
            <summary>
            Represents the start time zone of the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.EndTimeZone">
            <summary>
            Represents the end time zone of the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ConferenceType">
            <summary>
            Describes the type of conferencing that is performed with a calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.AllowNewTimeProposal">
            <summary>
            Represents whether a new meeting time can be proposed for a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.IsOnlineMeeting">
            <summary>
            Indicates whether the meeting is online.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.MeetingWorkspaceUrl">
            <summary>
            Contains the URL for the meeting workspace that is linked to by the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.NetShowUrl">
            <summary>
            Specifies the URL for a Microsoft Netshow online meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.EnhancedLocation">
            <summary>
            Specifies location information such as the name, address, and optional notes about a location.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.JoinOnlineMeetingUrl">
            <summary>
            Specifies the URL to join an online meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.OnlineMeetingSettings">
            <summary>
            Specifies the settings for online meetings.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.BusyStatus">
            <summary>
            Represents the free/busy status of the calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.MeetingStatus">
            <summary>
            Indicate whether this appointment represents a meeting, and if so, what its status is. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ResponseStatus">
            <summary>
            Contains the overall status of the meeting for the current user for the appointment.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.IsPrivate">
            <summary>
            Indicates whether the calendar item is private.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.CommonStartTime">
            <summary>
            Contains the common start time
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.CommonEndTime">
            <summary>
            Contains the common end time
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ReminderOverrideDefault">
            <summary>
            Indicates if the reminder overrides the default reminder behavior for the item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ReminderPlaySound">
            <summary>
            Indicates if the reminder should play a sound when it occurs for this item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.ReminderSoundFile">
            <summary>
            Contains the fully qualified path name of the audio file that Outlook Mobile plays as the Appointment reminder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Label">
            <summary>
            The meeting label
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.RecurrencePattern">
            <summary>
            Defines when and how often an Appointment repeats. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.RecurrenceStart">
            <summary>
            Gets the start DateTime of the recurrence series
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.RecurrenceEnd">
            <summary>
            Gets the end DateTime of the recurrence series
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequest.Priority">
            <summary>
            Contains the appointment's priority status.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingAttendeeType">
            <summary>
            Specifies constants that define the type of a meeting attendee. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingAttendeeType.Organizer">
            <summary>
            The organizer of the meeting.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingAttendeeType.Required">
            <summary>
            A required attendee.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingAttendeeType.Optional">
            <summary>
            An optional attendee.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingAttendeeType.Room">
            <summary>
            A room.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingAttendeeType.Resource">
            <summary>
            A resource.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ManagedFolderInformation">
            <summary>
            Contains information about a managed custom folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ManagedFolderInformation.#ctor">
            <summary>
            Initializes a new instance of the ManagedFolderInformation class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.CanDelete">
            <summary>
            Indicates whether a managed folder can be deleted by a customer.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.CanRename">
            <summary>
            Indicates whether a given managed folder can be renamed or moved by the customer.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.MustDisplayComment">
            <summary>
            Indicates whether the managed folder comment must be displayed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.HasQuota">
            <summary>
            Indicates whether the managed folder has a quota.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.IsRoot">
            <summary>
            Indicates whether the managed folder is the root for all managed folders.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.Id">
            <summary>
            Contains the folder ID of the managed folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.Comment">
            <summary>
            Contains the comment that is associated with a managed folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.StorageQuota">
            <summary>
            Describes the storage quota for the managed folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.Size">
            <summary>
            Describes the total size of all the contents of a managed folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ManagedFolderInformation.HomePage">
            <summary>
            Specifies the URL that will be the default home page for the managed folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.LobbyBypass">
            <summary>
            Specifies whether phone participants can directly join an online meeting or wait in the online staging area
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LobbyBypass.Disabled">
            <summary>
            Phone participants must wait before joining the online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LobbyBypass.EnabledForGatewayParticipants">
            <summary>
            Gateway participants can join an online meeting directly
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.LobbyBypass.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Journal">
            <summary>
            Class Journal.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Journal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Journal"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Journal.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Item class.
            </summary>
            <param name="subject">The subject.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Journal.#ctor(Independentsoft.Exchange.MimeContent)">
            <summary>
            Initializes a new instance of the Item class.
            </summary>
            <param name="mimeContent">Content of the MIME.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Journal.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.EndTime">
            <summary>
            Gets or sets the end time.
            </summary>
            <value>The end time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.TypeDescription">
            <summary>
            Gets or sets the type description.
            </summary>
            <value>The type description.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.Duration">
            <summary>
            Gets or sets the duration.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.Companies">
            <summary>
            Gets the companies.
            </summary>
            <value>The companies.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.Contacts">
            <summary>
            Gets the contacts.
            </summary>
            <value>The contacts.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private.
            </summary>
            <value><c>true</c> if this instance is private; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.CommonStartTime">
            <summary>
            Gets or sets the common start time.
            </summary>
            <value>The common start time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Journal.CommonEndTime">
            <summary>
            Gets or sets the common end time.
            </summary>
            <value>The common end time.</value>
        </member>
        <member name="T:Independentsoft.Exchange.IndexBasePoint">
            <summary>
            Describes whether the page of items will start from the beginning or the end of the set of items that are found by using the search criteria. Seeking from the end always searches backward. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexBasePoint.Beginning">
            <summary>
            The paged view starts at the beginning of the found item set.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexBasePoint.End">
            <summary>
            The paged view starts at the end of the found item set.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ImGroup">
            <summary>
            Class ImGroup.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ImGroup.#ctor">
            <summary>
            Initializes a new instance of the ImGroup class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ImGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImGroup class.
            </summary>
            <param name="displayName">The display name.</param>
        </member>
        <member name="M:Independentsoft.Exchange.ImGroup.ToString">
            <summary>
            Converts the value of the current imGroup object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ImGroup.GroupId">
            <summary>
            Contains the unique identifier and change key of an item in the Exchange store.
            </summary>
            <value>The group identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ImGroup.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ImGroup.GroupType">
            <summary>
            Gets the type of the group.
            </summary>
            <value>The type of the group.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ImGroup.MemberCorrelationKey">
            <summary>
            Gets the member correlation key.
            </summary>
            <value>The member correlation key.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ImGroup.SmtpAddress">
            <summary>
            Gets the SMTP address.
            </summary>
            <value>The SMTP address.</value>
        </member>
        <member name="P:Independentsoft.Exchange.ImGroup.ExtendedProperties">
            <summary>
            Gets a list of extended properties that are defined on this item.
            </summary>
            <value>The extended properties.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetMailTipsResponse">
            <summary>
            Represents the response message for a GetMailTips Operation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetMailTipsResponse.MailTipsResponses">
            <summary>
            Represents a list of mail tips response messages.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FreeBusyView">
            <summary>
            Contains availability information for a specific user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyView.#ctor">
            <summary>
            Initializes a new instance of the FreeBusyView class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyView.Type">
            <summary>
            Represents the type of requested free/busy information returned in the response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyView.MergedFreeBusy">
            <summary>
            Contains the merged free/busy stream of data.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyView.CalendarEvents">
            <summary>
            Contains a set of unique calendar item occurrences that represent the requested user's availability.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyView.WorkingHours">
            <summary>
            Represents the time zone settings and working hours for the requested mailbox user.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FindMailboxStatisticsByKeywordsResponse">
            <summary>
            specifies the response to a FindMailboxStatisticsByKeywords request
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindMailboxStatisticsByKeywordsResponse.Result">
            <summary>
            Contains the results of the request
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DistributionListPropertyPath">
             <summary>
             Represents a distribution list property path
             </summary>
             <example>
             The following example adds a member to an existing distribution list
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             service.RequestServerVersion = RequestServerVersion.Exchange2010SP2;
             
             // ItemID of an existing distribution list
             DistributionList list = service.GetDistributionList("AAMkADQ3NDhmZWM5LTk0NmUtNDEwNC05MWQ4LTc0ZjFhZGI2NzIxMABGAAAAAAAb3qTXwKjQQa1L8CVwV4XpBwAPx0JTdCP8Q7PGre2JfW4gAAAAqrxPAAAPx0JTdCP8Q7PGre2JfW4gAABCJet2AAA=");
            
             ItemId itemId = list.ItemId;
            
             Property membersProperty = new Property(DistributionListPropertyPath.Members, new DistributionListMember(new Mailbox("john@mydomain.com")));
            
             ItemChange itemChange = new ItemChange(itemId);
             itemChange.PropertiesToAppend.Add(membersProperty);
            
             itemId = service.UpdateItem(itemChange);
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Exchange.DistributionListPropertyPath.FileAs">
            <summary>
            Represents how a distribution list is filed in the Contacts folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DistributionListPropertyPath.ContactSource">
            <summary>
            Describes whether the contact is located in the Exchange store or Active Directory Domain Services (AD DS)
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DistributionListPropertyPath.Members">
            <summary>
            Provides the list of members for a distribution list
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DistributionListPropertyPath.AllPropertyPaths">
            <summary>
            Returns all <see cref="T:Independentsoft.Exchange.DistributionListPropertyPath"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DiscoverySearchConfiguration">
            <summary>
            Class DiscoverySearchConfiguration.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DiscoverySearchConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.DiscoverySearchConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DiscoverySearchConfiguration.SearchId">
            <summary>
            Gets the search identifier.
            </summary>
            <value>The search identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.DiscoverySearchConfiguration.SearchQuery">
            <summary>
            Gets the search query.
            </summary>
            <value>The search query.</value>
        </member>
        <member name="P:Independentsoft.Exchange.DiscoverySearchConfiguration.SearchableMailboxes">
            <summary>
            Gets the searchable mailboxes.
            </summary>
            <value>The searchable mailboxes.</value>
        </member>
        <member name="P:Independentsoft.Exchange.DiscoverySearchConfiguration.InPlaceHoldIdentity">
            <summary>
            Gets the in place hold identity.
            </summary>
            <value>The in place hold identity.</value>
        </member>
        <member name="P:Independentsoft.Exchange.DiscoverySearchConfiguration.ManagedByOrganization">
            <summary>
            Gets the managed by organization.
            </summary>
            <value>The managed by organization.</value>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarFolder">
            <summary>
            Represents a folder that primarily contains calendar items.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarFolder.#ctor">
            <summary>
            Initializes a new instance of the CalendarFolder class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarFolder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CalendarFolder class.
            </summary>
            <param name="displayName">The display name of the folder</param>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarFolder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CalendarFolder class.
            </summary>
            <param name="displayName">The display name of the folder</param>
            <param name="folderClass">The folder class</param>
        </member>
        <member name="M:Independentsoft.Exchange.CalendarFolder.ToString">
            <summary>
            Converts the value of the current CalendarFolder object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current CalendarFolder object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.CalendarFolder.PermissionSet">
            <summary>
            Contains all the configured permissions for a calendar folder. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AvailabilityResponse">
            <summary>
            This class contains the properties that define user availability information or suggested meeting time information.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AvailabilityResponse.#ctor">
            <summary>
            Initializes a new instance of the AvailabilityResponse class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AvailabilityResponse.FreeBusyResponses">
            <summary>
            Contains the requested users' availability information and the response status.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AvailabilityResponse.SuggestionsResponse">
            <summary>
            Contains response status information and suggestion data for requested meeting suggestions.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AvailabilityResponse.ServerVersionInfo">
            <summary>
            Contains the Microsoft Exchange Server version number.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.UserResponse">
            <summary>
            Represents a response to a GetUserSettings request for an individual user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.UserResponse.#ctor">
            <summary>
            Initializes a new instance of the UserResponse class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserResponse.ErrorCode">
            <summary>
            Represents an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserResponse.ErrorMessage">
            <summary>
            Represents a message that is associated with an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserResponse.RedirectTarget">
            <summary>
            The target of the redirection (URL or email address).
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserResponse.UserSettingErrors">
            <summary>
            Error information for settings that could not be returned.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserResponse.UserSettings">
            <summary>
            The requested settings for the user.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.OutlookWebAccessUrl">
            <summary>
            Describes the URL and authentication schema that is used to access a particular computer that is running Microsoft Exchange Server that has the Client Access server role installed that hosts Outlook Web Access.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.OutlookWebAccessUrl.#ctor">
            <summary>
            Initializes a new instance of the OutlookWebAccessUrl class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.OutlookWebAccessUrl.Url">
            <summary>
            Contains the URL of a Web client.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.OutlookWebAccessUrl.AuthenticationMethods">
            <summary>
            Describes the authentication methods that are available for a Web client.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.ExternalAccess">
            <summary>
            Contains the collection of Outlook Web Access URLs that a client can connect to when it is outside the firewall.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.ExternalAccess.#ctor">
            <summary>
            Initializes a new instance of the ExternalAccess class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExternalAccess.OutlookWebAccessUrls">
            <summary>
            Describes the URL and authentication schema that is used to access a particular computer that is running Microsoft Exchange Server that has the Client Access server role installed that hosts Outlook Web Access.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExternalAccess.ExchangeProtocol">
            <summary>
            Contains a protocol that is used to connect to the server is Exchange RPC.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExternalAccess.ExchangeProxyProtocol">
            <summary>
            Contains a protocol that is used to connect to the server is Exchange RPC over HTTP, using an RPC proxy server.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.ExternalAccess.WebProtocol">
            <summary>
            Contains a protocol where E-mail is accessed from a Web browser by using the URL that is specified in the Server (POX) element. 
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.Message">
            <summary>
            Class Message.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Message"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Message"/> class.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Message"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Message"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.Open(System.String)">
            <summary>
            Opens the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.Open(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Opens the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.Open(System.Byte[])">
            <summary>
            Opens the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.GetAttachments">
            <summary>
            Gets the attachments.
            </summary>
            <returns>Attachment[][].</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.GetAttachments(System.Boolean)">
            <summary>
            Gets the attachments.
            </summary>
            <param name="includeEmbedded">if set to <c>true</c> [include embedded].</param>
            <returns>Attachment[][].</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.GetFileName">
            <summary>
            Gets the name of the file.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.Save(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.Save(System.String)">
            <summary>
            Saves this message to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.Save(System.String,System.Boolean)">
            <summary>
            Saves this message to the specified file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="overwrite">True to overwrite existing file, otherwise false.</param>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.FileNotFoundException">File not found in the specified path</exception>
            <exception cref="T:Crestron.SimplSharp.CrestronIO.InvalidDirectoryLocationException">Not permitted to create a 
            directory at the specified path</exception>
            <exception cref="T:System.Security.SecurityException">Not permitted to create a file at the specified directory.</exception>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.GetBytes">
            <summary>
            Gets the bytes.
            </summary>
            <returns>System.Byte[][].</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.GetStream">
            <summary>
            Gets the stream.
            </summary>
            <returns>Stream.</returns>
        </member>
        <member name="M:Independentsoft.Email.Mime.Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.BodyParts">
            <summary>
            Gets the body parts.
            </summary>
            <value>The body parts.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.EmbeddedMessage">
            <summary>
            Gets or sets the embedded message.
            </summary>
            <value>The embedded message.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.HeaderEncoding">
            <summary>
            Gets or sets the header encoding.
            </summary>
            <value>The header encoding.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.HeaderCharSet">
            <summary>
            Gets or sets the header character set.
            </summary>
            <value>The header character set.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ContentTransferEncoding">
            <summary>
            Gets or sets the content transfer encoding.
            </summary>
            <value>The content transfer encoding.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ContentDisposition">
            <summary>
            Gets or sets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ContentDescription">
            <summary>
            Gets or sets the content description.
            </summary>
            <value>The content description.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ContentID">
            <summary>
            Gets or sets the content identifier.
            </summary>
            <value>The content identifier.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ContentLocation">
            <summary>
            Gets or sets the content location.
            </summary>
            <value>The content location.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.MimeVersion">
            <summary>
            Gets or sets the MIME version.
            </summary>
            <value>The MIME version.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Comments">
            <summary>
            Gets or sets the comments.
            </summary>
            <value>The comments.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.MessageID">
            <summary>
            Gets or sets the message identifier.
            </summary>
            <value>The message identifier.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ResentMessageID">
            <summary>
            Gets or sets the resent message identifier.
            </summary>
            <value>The resent message identifier.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Date">
            <summary>
            Gets or sets the date.
            </summary>
            <value>The date.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ResentDate">
            <summary>
            Gets or sets the resent date.
            </summary>
            <value>The resent date.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.References">
            <summary>
            Gets or sets the references.
            </summary>
            <value>The references.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.To">
            <summary>
            Gets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Cc">
            <summary>
            Gets the cc.
            </summary>
            <value>The cc.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Bcc">
            <summary>
            Gets the BCC.
            </summary>
            <value>The BCC.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ReplyTo">
            <summary>
            Gets the reply to.
            </summary>
            <value>The reply to.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ResentFrom">
            <summary>
            Gets or sets the resent from.
            </summary>
            <value>The resent from.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ResentSender">
            <summary>
            Gets or sets the resent sender.
            </summary>
            <value>The resent sender.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.InReplyTo">
            <summary>
            Gets or sets the in reply to.
            </summary>
            <value>The in reply to.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Message.ReturnPath">
            <summary>
            Gets or sets the return path.
            </summary>
            <value>The return path.</value>
        </member>
        <member name="T:Independentsoft.Msg.TaskDelegationState">
            <summary>
            Represents the status types of a delegated task.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskDelegationState.NoMatch">
            <summary>
            Specifies that this is not a delegated task or that the task request has been created but not sent. This is also used for a task request message, whether in the owner's Sent Items folder or the delegate's Inbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskDelegationState.OwnNew">
            <summary>
            Specifies that this is a new task request that has been sent, but the delegate has not yet responded to the task.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskDelegationState.Owned">
            <summary>
            Specifies that a task has been accepted. This value should not be in the enumeration.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskDelegationState.Accepted">
            <summary>
            Specifies that the task has been accepted.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskDelegationState.Declined">
            <summary>
            Specifies that the task has been declined.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.TaskDelegationState.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.RecurrencePattern">
            <summary>
            Class RecurrencePattern.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.RecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.RecurrencePattern"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Msg.RecurrencePattern.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Msg.RecurrencePattern"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.CalendarType">
            <summary>
            Gets the type of the calendar.
            </summary>
            <value>The type of the calendar.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.Period">
            <summary>
            Gets the period.
            </summary>
            <value>The period.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.DayOfWeek">
            <summary>
            Gets the day of week.
            </summary>
            <value>The day of week.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.DayOfWeekIndex">
            <summary>
            Gets the index of the day of week.
            </summary>
            <value>The index of the day of week.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.DayOfMonth">
            <summary>
            Gets the day of month.
            </summary>
            <value>The day of month.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.EndType">
            <summary>
            Gets the end type.
            </summary>
            <value>The end type.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.OccurrenceCount">
            <summary>
            Gets the occurrence count.
            </summary>
            <value>The occurrence count.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.FirstDayOfWeek">
            <summary>
            Gets the first day of week.
            </summary>
            <value>The first day of week.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.DeletedInstanceCount">
            <summary>
            Gets the deleted instance count.
            </summary>
            <value>The deleted instance count.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.DeletedInstanceDates">
            <summary>
            Gets the deleted instance dates.
            </summary>
            <value>The deleted instance dates.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.ModifiedInstanceCount">
            <summary>
            Gets the modified instance count.
            </summary>
            <value>The modified instance count.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.ModifiedInstanceDates">
            <summary>
            Gets the modified instance dates.
            </summary>
            <value>The modified instance dates.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.StartDate">
            <summary>
            Gets the start date.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:Independentsoft.Msg.RecurrencePattern.EndDate">
            <summary>
            Gets the end date.
            </summary>
            <value>The end date.</value>
        </member>
        <member name="T:Independentsoft.Msg.DisplayType">
            <summary>
            Contains a value used to associate an icon with a particular row of a table.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.Agent">
            <summary>
            An automated agent, such as Quote-Of-The-Day or a weather chart display.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.DistributionList">
            <summary>
            A distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.Folder">
            <summary>
            Display default folder icon adjacent to folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.FolderLink">
            <summary>
            Display default folder link icon adjacent to folder rather than the default folder icon.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.FolderSpecial">
            <summary>
            Display icon for a folder with an application-specific distinction, such as a special type of public folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.Forum">
            <summary>
            A forum, such as a bulletin board service or a public or shared folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.GlobalAddressBook">
            <summary>
            A global address book.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.LocalAddressBook">
            <summary>
            A local address book that you share with a small workgroup.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.MailUser">
            <summary>
            A typical messaging user.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.Modifiable">
            <summary>
            Modifiable; the container should be denoted as modifiable in the user interface.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.Organization">
            <summary>
            A special alias defined for a large group, such as helpdesk, accounting, or blood-drive coordinator.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.PrivateDistributionList">
            <summary>
            A private, personally administered distribution list.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.RemoteMailUser">
            <summary>
            A recipient known to be from a foreign or remote messaging system.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.WideAreaNetworkAddressBook">
            <summary>
            A wide area network address book.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.NotSpecific">
            <summary>
            Does not match any of the other settings.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DisplayType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.IO.StructuredStorage.DirectoryEntryList">
            <summary>
            Description of DirectoryEntryList.
            </summary>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.DirectoryEntryList.Item(System.String)">
            <summary>
            Gets the <see cref="T:Independentsoft.IO.StructuredStorage.DirectoryEntry"/> with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>DirectoryEntry.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.ViewFilter">
            <summary>
            Filters search results and only returns items of the specified type
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.All">
            <summary>
            No filter
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.Flagged">
            <summary>
            Flagged items
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.HasAttachment">
            <summary>
            Items with attachments
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.ToOrCcMe">
            <summary>
            Items addressed to the mailbox owner
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.Unread">
            <summary>
            Unread items
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.TaskActive">
            <summary>
            Active tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.TaskOverdue">
            <summary>
            Overdue tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.TaskCompleted">
            <summary>
            Completed tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.Suggestions">
            <summary>
            Suggestions
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.SuggestionsRespond">
            <summary>
            Items responded to
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.SuggestionsDelete">
            <summary>
            Items to delete
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ViewFilter.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingProperties">
            <summary>
            Defines a response to a GetUMProperties Operation request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingProperties.#ctor">
            <summary>
            Initializes a new instance of the UnifiedMessagingProperties class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingProperties.OutOfOfficeEnabled">
            <summary>
            Contains a value that indicates the Unified Messaging Out of Office status for the user who is making a GetUMProperties Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingProperties.MissedCallNotificationEnabled">
            <summary>
            Indicates whether missed call notifications are enabled.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingProperties.PlayOnPhoneDialString">
            <summary>
            Contains the default dial string to use for the PlayOnPhone Operation and PlayOnPhoneGreeting Operation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingProperties.TelephoneAccessNumbers">
            <summary>
            Contains the list of telephone numbers the user can use to access Unified Messaging via a telephone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.UnifiedMessagingProperties.TelephoneAccessFolderEmail">
            <summary>
            Contains the identifier for the e-mail folder from which Unified Messaging will read messages over the telephone.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SearchableMailbox">
             <summary>
             Represents a searchable mailbox
             </summary>
             <example>
             The following example gets all searchable mailboxes
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             service.RequestServerVersion = RequestServerVersion.Exchange2013;
            
             GetDiscoverySearchConfigurationResponse response = service.GetDiscoverySearchConfiguration("MyDiscoverySearchTest");
             foreach (DiscoverySearchConfiguration configuration in response.DiscoverySearchConfigurations)
             {
                 foreach (SearchableMailbox mailbox in configuration.SearchableMailboxes)
                 {
                     CrestronConsole.PrintLine("DisplayName:" + mailbox.DisplayName);
                     CrestronConsole.PrintLine("PrimarySmtpAddress:" + mailbox.PrimarySmtpAddress);
                     CrestronConsole.PrintLine("ReferenceId:" + mailbox.ReferenceId);
                     CrestronConsole.PrintLine("--------------------------------------------");
                 }
             }
             </code>
             </example>
        </member>
        <member name="M:Independentsoft.Exchange.SearchableMailbox.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Independentsoft.Exchange.SearchableMailbox"/> class
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchableMailbox.Guid">
            <summary>
            Get the mailbox identifier
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchableMailbox.PrimarySmtpAddress">
            <summary>
            Gets the primary smtp address
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchableMailbox.IsExternalMailbox">
            <summary>
            Gets whether or not this is an external mailbox
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchableMailbox.ExternalEmailAddress">
            <summary>
            Gets the external email address of the mailbox
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchableMailbox.DisplayName">
            <summary>
            Gets the display name of the mailbox to be searched
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchableMailbox.IsMembershipGroup">
            <summary>
            Gets whether the associated SMTP address is a mailbox or distribution list
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SearchableMailbox.ReferenceId">
            <summary>
            Gets the mailbox reference identifier
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RuleOperationError">
            <summary>
            Represents a rule operation error.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RuleOperationError.#ctor">
            <summary>
            Initializes a new instance of the RuleOperationError class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleOperationError.OperationIndex">
            <summary>
            Gets the index of the operation in the request that caused the rule operation error. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RuleOperationError.ValidationErrors">
            <summary>
            Gets an array of rule validation errors on each rule field that has an error. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ResponseStatus">
            <summary>
            Contains response status information for requested meeting suggestions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseStatus.Organized">
            <summary>
            Organized.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseStatus.Tentative">
            <summary>
            Tentative.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseStatus.Accepted">
            <summary>
            Accepted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseStatus.Declined">
            <summary>
            Declined.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseStatus.NotResponded">
            <summary>
            NotResponded.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ResolveNamesResponse">
            <summary>
            Contains the status and result of a ResolveNames Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ResolveNamesResponse.IndexedPagingOffset">
            <summary>
            Represents the next index that should be used for the next request when you are using an indexed page view.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ResolveNamesResponse.NumeratorOffset">
            <summary>
            Represents the new numerator value to use for the next request when you are using fraction page views.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ResolveNamesResponse.AbsoluteDenominator">
            <summary>
            Represents the next denominator to use for the next request when you are using fraction page views.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ResolveNamesResponse.IncludesLastItemInRange">
            <summary>
            This attribute will be true if the current results contain the last item in the query, so that additional paging is not needed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ResolveNamesResponse.TotalItemsInView">
            <summary>
            Represents the total number of items in the view.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ResolveNamesResponse.Resolutions">
            <summary>
            Contains an array of resolutions for an ambiguous name.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ProtectionRulesConfiguration">
            <summary>
            Contains service configuration information for the protection rules service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRulesConfiguration.RefreshInterval">
            <summary>
            Specifies how often, in whole hours, the client should request protection rules from the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRulesConfiguration.Rules">
            <summary>
            Contains an array of protection rules
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ProtectionRulesConfiguration.InternalDomains">
            <summary>
            Identifies the list of internal SMTP domains of the organization.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Post">
            <summary>
            Represents a post item in the Exchange store. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Post.#ctor">
            <summary>
            Initializes a new instance of the Post class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Post.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Post class.
            </summary>
            <param name="subject">The subject</param>
        </member>
        <member name="M:Independentsoft.Exchange.Post.ToString">
            <summary>
            Converts the value of the current Post object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current Post object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Post.ConversationIndex">
            <summary>
            Contains a binary ID that represents the thread to which this message belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Post.ConversationTopic">
            <summary>
            Represents the conversation identifier.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Post.From">
            <summary>
            Represents the address from which the post item was sent. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Post.InternetMessageId">
            <summary>
            Represents the Internet message identifier of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Post.IsRead">
            <summary>
            Indicates whether a message has been read.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Post.PostedTime">
            <summary>
            Represents the time that a PostItem was posted. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Post.References">
            <summary>
            Represents the Usenet header that is used to associate replies with the original messages.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Post.Sender">
            <summary>
            Identifies the sender of an item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PersonaPhoneNumber">
            <summary>
            Class PersonaPhoneNumber.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PersonaPhoneNumber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.PersonaPhoneNumber"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPhoneNumber.Number">
            <summary>
            Gets the number.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PersonaPhoneNumber.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Independentsoft.Exchange.PermissionSet">
            <summary>
            Contains all the permissions that are configured for a folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PermissionSet.#ctor">
            <summary>
            Initializes a new instance of the PermissionSet class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PermissionSet.ToString">
            <summary>
            Converts the value of the current PermissionSet object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current PermissionSet object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PermissionSet.Permissions">
            <summary>
            Contains the collection of permissions for a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.PermissionSet.Entries">
            <summary>
            Contains a list of unknown entries that cannot be resolved against the Active Directory directory service. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.OutOfOfficeMailTip">
            <summary>
            Represents the response message and a duration time for sending the response message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOfficeMailTip.ReplyBody">
            <summary>
            Contains an Out of Office (OOF) message and the language used for the message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOfficeMailTip.Duration">
            <summary>
            Contains the duration that the OOF status is enabled if the OofState element is set to Scheduled.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.NonIndexableItemDetail">
            <summary>
            Class NonIndexableItemDetail.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.NonIndexableItemDetail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.NonIndexableItemDetail"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.ItemId">
            <summary>
            Gets the item identifier.
            </summary>
            <value>The item identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.ErrorDescription">
            <summary>
            Gets the error description.
            </summary>
            <value>The error description.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.IsPartiallyIndexed">
            <summary>
            Gets a value indicating whether this instance is partially indexed.
            </summary>
            <value><c>true</c> if this instance is partially indexed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.IsPermanentFailure">
            <summary>
            Gets a value indicating whether this instance is permanent failure.
            </summary>
            <value><c>true</c> if this instance is permanent failure; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.SortValue">
            <summary>
            Gets the sort value.
            </summary>
            <value>The sort value.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.AttemptCount">
            <summary>
            Gets the attempt count.
            </summary>
            <value>The attempt count.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.LastAttemptTime">
            <summary>
            Gets the last attempt time.
            </summary>
            <value>The last attempt time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemDetail.AdditionalInfo">
            <summary>
            Gets the additional information.
            </summary>
            <value>The additional information.</value>
        </member>
        <member name="T:Independentsoft.Exchange.MessageTrackingDeliveryStatus">
            <summary>
            Contains the message tracking delivery status.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingDeliveryStatus.Unsuccessful">
            <summary>
            The message was unsuccessful to a mailbox or a public folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingDeliveryStatus.Pending">
            <summary>
            The message was pending for delivery to a mailbox or a public folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingDeliveryStatus.Delivered">
            <summary>
            The message was delivered to a mailbox or a public folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingDeliveryStatus.Transferred">
            <summary>
            The message was transferred to a mailbox or a public folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingDeliveryStatus.Read">
            <summary>
            The message was read.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MapiPropertyType">
            <summary>
            Defines the MAPI type of an extended property. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.ApplicationTime">
            <summary>
            The property is of type ApplicationTime.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.ApplicationTimeArray">
            <summary>
            The property is of type ApplicationTimeArray.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Binary">
            <summary>
            The property is of type Binary.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.BinaryArray">
            <summary>
            The property is of type BinaryArray.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Boolean">
            <summary>
            The property is of type Boolean.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Clsid">
            <summary>
            The property is of type CLSID. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.ClsidArray">
            <summary>
            The property is of type CLSIDArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Currency">
            <summary>
            The property is of type Currency. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.CurrencyArray">
            <summary>
            The property is of type CurrencyArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Double">
            <summary>
            The property is of type Double. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.DoubleArray">
            <summary>
            The property is of type DoubleArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Error">
            <summary>
            The property is of type Error.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Float">
            <summary>
            The property is of type Float. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.FloatArray">
            <summary>
            The property is of type FloatArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Integer">
            <summary>
            The property is of type Integer. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.IntegerArray">
            <summary>
            The property is of type IntegerArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Long">
            <summary>
            The property is of type Long. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.LongArray">
            <summary>
            The property is of type LongArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Null">
            <summary>
            The property is of type Null. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Object">
            <summary>
            The property is of type Object. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.ObjectArray">
            <summary>
            The property is of type ObjectArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.Short">
            <summary>
            The property is of type Short.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.ShortArray">
            <summary>
            The property is of type ShortArray. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.SystemTime">
            <summary>
            The property is of type SystemTime. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.SystemTimeArray">
            <summary>
            The property is of type SystemTimeArray.  
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.String">
            <summary>
            The property is of type String. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MapiPropertyType.StringArray">
            <summary>
            The property is of type StringArray.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Mailbox">
            <summary>
            Identifies a mail-enabled Active Directory object.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Mailbox.#ctor">
            <summary>
            Initializes a new instance of the Mailbox class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Mailbox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Mailbox class.
            </summary>
            <param name="emailAddress">The email address of the mailbox</param>
        </member>
        <member name="M:Independentsoft.Exchange.Mailbox.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Mailbox class.
            </summary>
            <param name="emailAddress">The email address of the mailbox</param>
            <param name="name">The name of the mailbox user</param>
        </member>
        <member name="M:Independentsoft.Exchange.Mailbox.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Mailbox class.
            </summary>
            <param name="emailAddress">The email address of the mailbox</param>
            <param name="name">The name of the mailbox user</param>
            <param name="routingType">Specifies the routing type for the mailbox</param>
        </member>
        <member name="M:Independentsoft.Exchange.Mailbox.#ctor(System.String,System.String,System.String,Independentsoft.Exchange.MailboxType)">
            <summary>
            Initializes a new instance of the Mailbox class.
            </summary>
            <param name="emailAddress">The email address of the mailbox</param>
            <param name="name">The name of the mailbox user</param>
            <param name="routingType">Specifies the routing type for the mailbox</param>
            <param name="type">The mailbox type</param>
        </member>
        <member name="M:Independentsoft.Exchange.Mailbox.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the Mailbox class.
            </summary>
            <param name="itemId">the item identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.Mailbox.ToString">
            <summary>
            Converts the value of the current Mailbox object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current Mailbox object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Mailbox.Name">
            <summary>
            Defines the name of the mailbox user. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Mailbox.EmailAddress">
            <summary>
            Defines the Simple Mail Transfer Protocol (SMTP) address of a mailbox user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Mailbox.RoutingType">
            <summary>
            Defines the routing that is used for the mailbox.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Mailbox.Type">
            <summary>
            Defines the mailbox type of a mailbox user. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Mailbox.ItemId">
            <summary>
            Defines the item identifier of a contact or private distribution list for recipients from a user's contacts folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Mailbox.OriginalDisplayName">
            <summary>
            Defines the display name of the mailbox user. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetRulesResponse">
            <summary>
            Class GetRulesResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetRulesResponse.OutlookRuleBlobExists">
            <summary>
            Gets a value indicating whether [outlook rule BLOB exists].
            </summary>
            <value><c>true</c> if [outlook rule BLOB exists]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GetRulesResponse.Rules">
            <summary>
            Gets the rules.
            </summary>
            <value>The rules.</value>
        </member>
        <member name="T:Independentsoft.Exchange.FreeBusyViewOptions">
            <summary>
            Specifies the type of free/busy information returned in the response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(Independentsoft.Exchange.TimeDuration)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="timeWindow">The time span queried for the user availability information</param>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(Independentsoft.Exchange.TimeDuration,System.Int32)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="timeWindow">The time span queried for the user availability information</param>
            <param name="mergedFreeBusyInterval">The time difference between two successive slots in the view</param>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(Independentsoft.Exchange.TimeDuration,Independentsoft.Exchange.FreeBusyViewType)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="timeWindow">The time span queried for the user availability information</param>
            <param name="requestedView">The type of the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(Independentsoft.Exchange.TimeDuration,System.Int32,Independentsoft.Exchange.FreeBusyViewType)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="timeWindow">The time span queried for the user availability information</param>
            <param name="mergedFreeBusyInterval">The time difference between two successive slots in the view</param>
            <param name="requestedView">The type of the response</param>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="startTime">The start time to query</param>
            <param name="endTime">The end time to query</param>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="startTime">The start time to query</param>
            <param name="endTime">The end time to query</param>
            <param name="mergedFreeBusyInterval">The time difference between two successive slots in the view</param>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(System.DateTime,System.DateTime,Independentsoft.Exchange.FreeBusyViewType)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="startTime">The start time to query</param>
            <param name="endTime">The end time to query</param>
            <param name="requestedView">The time difference between two successive slots in the view</param>
        </member>
        <member name="M:Independentsoft.Exchange.FreeBusyViewOptions.#ctor(System.DateTime,System.DateTime,System.Int32,Independentsoft.Exchange.FreeBusyViewType)">
            <summary>
            Initializes a new instance of the FreeBusyViewOptions class.
            </summary>
            <param name="startTime">The start time to query</param>
            <param name="endTime">The end time to query</param>
            <param name="mergedFreeBusyInterval">The time difference between two successive slots in the view</param>
            <param name="requestedView">The type of the response</param>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyViewOptions.TimeWindow">
            <summary>
            Identifies the time span queried for the user availability information.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyViewOptions.MergedFreeBusyInterval">
            <summary>
            Represents the time difference between two successive slots in the FreeBusyMerged view.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FreeBusyViewOptions.RequestedView">
            <summary>
            Defines the type of calendar information that a client requests.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FolderQueryTraversal">
            <summary>
            Identifies the types of subtree traversals for deletion and enumeration. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderQueryTraversal.Shallow">
            <summary>
            Searches only the identified folder and returns only the folder IDs for items that have not been deleted. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderQueryTraversal.Deep">
            <summary>
            Searches in all subfolders of the identified parent folder and returns only the folder IDs for items that have not been deleted.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.FolderQueryTraversal.SoftDeleted">
            <summary>
            Performs a shallow traversal search for soft deleted items 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ExtendedProperty">
            <summary>
            Identifies extended MAPI properties on folders and items.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Property">
            <summary>
            Represents item's or folder's property.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.Byte[])">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The byte array value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.Object)">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The object value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.#ctor(Independentsoft.Exchange.PropertyPath,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the Property class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="values">The string values of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.Property.ToString">
            <summary>
            Converts the value of the current Property object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current Property object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Property.PropertyPath">
            <summary>
            Contains property path.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Property.Value">
            <summary>
            Contains property value.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Property.Values">
            <summary>
            Contains property value for multi-value properties.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyPath">The property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor(Independentsoft.Exchange.ExtendedPropertyPath,System.String)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor(Independentsoft.Exchange.ExtendedPropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor(Independentsoft.Exchange.ExtendedPropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor(Independentsoft.Exchange.ExtendedPropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor(Independentsoft.Exchange.ExtendedPropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.#ctor(Independentsoft.Exchange.ExtendedPropertyPath,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="values">The string values for the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.ExtendedProperty.ToString">
            <summary>
            Converts the value of the current ExtendedProperty object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current ExtendedProperty object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.ExtendedProperty.PropertyPath">
            <summary>
            Identifies an extended MAPI property to get, set, or create. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.EndDateRecurrenceRange">
            <summary>
            Describes the start date and the end date of an item recurrence pattern.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EndDateRecurrenceRange.#ctor">
            <summary>
            Initializes a new instance of the EndDateRecurrenceRange class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EndDateRecurrenceRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the EndDateRecurrenceRange class.
            </summary>
            <param name="startDate">The start date of a recurring item</param>
            <param name="endDate">The end date of a recurring item</param>
        </member>
        <member name="M:Independentsoft.Exchange.EndDateRecurrenceRange.ToString">
            <summary>
            Converts the value of the current EndDateRecurrenceRange object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current EndDateRecurrenceRange object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.EndDateRecurrenceRange.StartDate">
            <summary>
            Represents the start date of a recurring task or calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EndDateRecurrenceRange.EndDate">
            <summary>
            Represents the end date of a recurring task or calendar item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DistributionListMember">
            <summary>
            Represents a member of a distribution list.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DistributionListMember.#ctor">
            <summary>
            Initializes a new instance of the DistributionListMember class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DistributionListMember.#ctor(Independentsoft.Exchange.Mailbox)">
            <summary>
            Initializes a new instance of the DistributionListMember class.
            </summary>
            <param name="mailbox">The mailbox of the distribution list member</param>
        </member>
        <member name="M:Independentsoft.Exchange.DistributionListMember.#ctor(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.DistributionListMemberStatus)">
            <summary>
            Initializes a new instance of the DistributionListMember class.
            </summary>
            <param name="mailbox">The mailbox of the distribution list member</param>
            <param name="status">The status information of a distribution list member</param>
        </member>
        <member name="P:Independentsoft.Exchange.DistributionListMember.Key">
            <summary>
            Provides a unique identifier for the distribution list member. This attribute is optional.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DistributionListMember.Mailbox">
            <summary>
            Represents the e-mail address of the distribution list member.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DistributionListMember.Status">
            <summary>
            Provides information about the status of a distribution list member.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DeletedOccurrence">
            <summary>
            Represents a deleted occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DeletedOccurrence.#ctor">
            <summary>
            Initializes a new instance of the DeletedOccurrence class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DeletedOccurrence.ToString">
            <summary>
            Converts the value of the current DeletedOccurrence object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current DeletedOccurrence object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.DeletedOccurrence.StartTime">
            <summary>
            Represents the start time of a deleted occurrence of a recurring calendar item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DeletedEvent">
            <summary>
            Represents an event in which an item or folder is deleted.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DeletedEvent.#ctor">
            <summary>
            Initializes a new instance of the DeletedEvent class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DeletedEvent.TimeStamp">
            <summary>
            Represents the timestamp of a deleted item or folder mailbox event.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DeletedEvent.Id">
            <summary>
            Represents the identifier of the deleted item or folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DeletedEvent.ParentFolderId">
            <summary>
            Represents the identifier of the parent folder of the deleted item or folder before deletion.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationNodeSortOrder">
            <summary>
            Indicates the sort order for conversation nodes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationNodeSortOrder.TreeOrderAscending">
            <summary>
            Ascending tree order
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationNodeSortOrder.TreeOrderDescending">
            <summary>
            Descending tree order
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationNodeSortOrder.DateOrderAscending">
            <summary>
            Ascending date order
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationNodeSortOrder.DateOrderDescending">
            <summary>
            Descending date order
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationNodeSortOrder.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CancelItem">
            <summary>
            Represents the response object that is used to cancel a meeting.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CancelItem.#ctor">
            <summary>
            Initializes a new instance of the CancelItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CancelItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the CancelItem class.
            </summary>
            <param name="referenceItemId">The ItemId of the item</param>
        </member>
        <member name="M:Independentsoft.Exchange.CancelItem.ToString">
            <summary>
            Returns the string representation of this <see cref="T:Independentsoft.Exchange.CancelItem"/>
            </summary>
            <returns>A string representing this <see cref="T:Independentsoft.Exchange.CancelItem"/></returns>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.UserSettingList">
            <summary>
            Provides enumeration over a list of UserSettings
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSettingList.Item(Independentsoft.Exchange.Autodiscover.UserSettingName)">
            <summary>
            Gets the value associated with the name.
            </summary>
            <param name="userSettingName">The <see cref="T:Independentsoft.Exchange.Autodiscover.UserSettingName"/> to retrieve</param>
            <returns>The <see cref="T:Independentsoft.Exchange.Autodiscover.UserSetting"/> object.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.UserSettingError">
            <summary>
            Represents an error that is returned while retrieving a user setting.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.UserSettingError.#ctor">
            <summary>
            Initializes a new instance of the UserSettingError class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSettingError.ErrorCode">
            <summary>
            Represents an error code returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSettingError.ErrorMessage">
            <summary>
            Represents a message associated with an error code returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.UserSettingError.SettingName">
            <summary>
            Represents the name of a user setting.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.OutlookProvider">
            <summary>
            Contains information on the outlook provider
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.OutlookProvider.#ctor">
            <summary>
            Initializes a new instance of the OutlookProvider class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.OutlookProvider.User">
            <summary>
            Represents the identity of a single user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.OutlookProvider.Account">
            <summary>
            Specifies account settings for the user or contains error responses.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.OutlookProvider.Error">
            <summary>
            Contains an Autodiscover error response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.MobileSyncServer">
            <summary>
            Represents the alternate mailbox server.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.MobileSyncServer.#ctor">
            <summary>
            Initializes a new instance of the MobileSyncServer class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncServer.Type">
            <summary>
            Represents the alternate mailbox type.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncServer.Url">
            <summary>
            Contains the URL of a Web client.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncServer.Name">
            <summary>
            Represents the alternate mailbox server.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.GetDomainSettingsResponse">
            <summary>
            Represents the response to a GetDomainSettings Operation (SOAP), which returns the domain settings.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.GetDomainSettingsResponse.#ctor">
            <summary>
            Initializes a new instance of the GetDomainSettingsResponse class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetDomainSettingsResponse.ErrorCode">
            <summary>
            Represents an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetDomainSettingsResponse.ErrorMessage">
            <summary>
            Represents a message that is associated with an error code that is returned by the Autodiscover service.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.GetDomainSettingsResponse.DomainResponses">
            <summary>
            Contains an array of responses for each requested domain?s settings.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.DomainSettingError">
            <summary>
            Represents an error that occurred while retrieving a domain setting. This represents an error from a GetDomainSettings request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.DomainSettingError.#ctor">
            <summary>
            Initializes a new instance of the DomainSettingError class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSettingError.ErrorCode">
            <summary>
            Identifies the error code that is associated with the specific request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSettingError.ErrorMessage">
            <summary>
            Contains the error message that is associated with the specific request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.DomainSettingError.SettingName">
            <summary>
            Represents the name of the setting.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.AutodiscoverException">
            <summary>
            Contains an Autodiscover error response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverException.ToString">
            <summary>
            Converts the value of the current AutodiscoverException object to its equivalent string representation. 
            </summary>
            <returns>Returns the exception message</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverException.Time">
            <summary>
            Represents the time when the error response was returned.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverException.Id">
            <summary>
            Represents a hash of the name of the computer that is running Microsoft Exchange Server that has the Client Access server role installed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverException.Code">
            <summary>
            Contains the error code for an error Autodiscover response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverException.Message">
            <summary>
            Contains the error message for an error Autodiscover response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverException.DebugData">
            <summary>
            Contains the debug data for an error Autodiscover response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.AuthenticationMethod">
            <summary>
            Describes the authentication methods that are available for a Web client.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationMethod.Basic">
            <summary>
            Basic.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationMethod.Ntlm">
            <summary>
            Ntlm.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationMethod.Fba">
            <summary>
            Fba.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationMethod.Digest">
            <summary>
            Digest.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationMethod.WindowsIntegrated">
            <summary>
            WindowsIntegrated.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationMethod.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.Parameter">
            <summary>
            Class Parameter.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Parameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Parameter"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Parameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Parameter"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Parameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Email.Mime.Parameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Parameter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.Parameter.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Independentsoft.Email.Mime.Parameter.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Independentsoft.Msg.StoreSupportMask">
            <summary>
            Contains a value that client applications should query to determine the characteristics of a message store.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Ansi">
            <summary>
            The message store supports properties containing ANSI (8-bit) characters.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Attachments">
            <summary>
            The message store supports attachments (OLE or non-OLE) to messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Categorize">
            <summary>
            The message store supports categorized views of tables.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Create">
            <summary>
            The message store supports creation of new messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.EntryIdUnique">
            <summary>
            Entry identifiers for the objects in the message store are unique, that is, never reused during the life of the store.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Html">
            <summary>
            The message store supports HTML messages, stored in the <see cref="P:Independentsoft.Msg.Message.BodyHtml"/> property.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.ItemProc">
            <summary>
            In a wrapped PST store, indicates that when a new message arrives at the store, the store does rules and spam filter processing on the message separately.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.LocalStore">
            <summary>
            This flag is reserved and should not be used.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Modify">
            <summary>
            The message store supports modification of its existing messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.MultiValueProperties">
            <summary>
            The message store supports multivalued properties, guarantees the stability of value order in a multivalued property throughout a save operation, and supports instantiation of multivalued properties in tables.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Notify">
            <summary>
            The message store supports notifications.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Ole">
            <summary>
            The message store supports OLE attachments. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.PublicFolders">
            <summary>
            The folders in this store are public (multi-user), not private (possibly multi-instance but not multi-user).
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Pusher">
            <summary>
            The MAPI Protocol Handler will not crawl the store, and the store is responsible to push any changes through notifications to the indexer to have messages indexed.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.ReadOnly">
            <summary>
            All interfaces for the message store have a read-only access level.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Restrictions">
            <summary>
            The message store supports restrictions.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Rtf">
            <summary>
            The message store supports Rich Text Format (RTF) messages, usually compressed.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Search">
            <summary>
            The message store supports search-results folders.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Sort">
            <summary>
            The message store supports sorting views of tables.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Submit">
            <summary>
            The message store supports marking a message for submission.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.UncompressedRtf">
            <summary>
            The message store supports storage of RTF messages in uncompressed form.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StoreSupportMask.Unicode">
            <summary>
            The message store supports properties containing Unicode characters.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.DayOfWeek">
            <summary>
            Specifies the day of the week
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeek.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeek.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeek.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeek.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeek.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeek.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.DayOfWeek.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.BusyStatus">
            <summary>
            Specifies whether the attendee is busy at the time of an appointment on their calendar. The specified status appears in the free/busy view of the calendar.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.BusyStatus.Free">
            <summary>
            Free status
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.BusyStatus.Tentative">
            <summary>
            Tentative status
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.BusyStatus.Busy">
            <summary>
            Busy status
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.BusyStatus.OutOfOffice">
            <summary>
            Out of the office status
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.BusyStatus.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonParseException">
            <summary>
            Definition of JsonParseException class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonParseException.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize a JsonParseException instance.
            </summary>
            <param name="message">the exception error message.</param>
            <param name="offset">offset number.</param>
            <param name="line">line number.</param>
            <param name="column">column number.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonParseException.ToString">
            <summary>
            Reports the exception error message.
            </summary>
            <returns>the error message string.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonParseException.getOffset">
            <summary>
            Reports the exception offset number.
            </summary>
            <returns>offset number.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonParseException.getLine">
            <summary>
            Reports the exception line number.
            </summary>
            <returns>line number.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonParseException.getColumn">
            <summary>
            Reports the exception column number.
            </summary>
            <returns>column number.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.Time">
            <summary>
            Represents the transition time of day to and from standard time and daylight saving time.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Time.#ctor">
            <summary>
            Initializes a new instance of the Time class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Time.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Time class.
            </summary>
            <param name="hour">The hour</param>
        </member>
        <member name="M:Independentsoft.Exchange.Time.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Time class.
            </summary>
            <param name="hour">The hour</param>
            <param name="minute">The minute</param>
        </member>
        <member name="M:Independentsoft.Exchange.Time.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Time class.
            </summary>
            <param name="hour">The hour</param>
            <param name="minute">The minute</param>
            <param name="second">The second</param>
        </member>
        <member name="M:Independentsoft.Exchange.Time.ToString">
            <summary>
            Converts the value of the current Time object to its equivalent string representation.
            </summary>
            <returns>The string representation of the current Time object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Time.Hour">
            <summary>
            Contains a hour.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Time.Minute">
            <summary>
            Contains a minute.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Time.Second">
            <summary>
            Contains a second.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SendNotificationResponse">
            <summary>
            Represents a send notification response
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.SendNotificationResponse.Notification">
            <summary>
            Contains a notification
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RulePredicateSizeRange">
            <summary>
            Specifies the minimum and maximum sizes that incoming messages must be in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RulePredicateSizeRange.#ctor">
            <summary>
            Initializes a new instance of the RulePredicateSizeRange class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RulePredicateSizeRange.MinimumSize">
            <summary>
            Specifies the minimum size that a message must be in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RulePredicateSizeRange.MaximumSize">
            <summary>
            Specifies the minimum size that a message must be in order for the condition or exception to apply. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RemoveItem">
            <summary>
            Represents a response object that is used to remove a meeting item when a MeetingCancellation message is received.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RemoveItem.#ctor">
            <summary>
            Initializes a new instance of the RemoveItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.RemoveItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the RemoveItem class.
            </summary>
            <param name="referenceItemId">The Item id of the item</param>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.InternetMessageHeaders">
            <summary>
            Contains an array of the type InternetHeaderType that represents the collection of all Internet message headers that are contained in an item in a mailbox. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.Sender">
            <summary>
            Identifies the sender of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.ToRecipients">
            <summary>
            Contains an array of recipients of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.CcRecipients">
            <summary>
            Represents a collection of recipients that will receive a copy of the message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.BccRecipients">
            <summary>
            Represents a collection of recipients to receive a blind carbon copy (Bcc) of an e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.IsReadReceiptRequested">
            <summary>
            Contains the value that specifies whether the sender of a message requests a read receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.IsDeliveryReceiptRequested">
            <summary>
            Contains the value that specifies whether the sender of an item requests a delivery receipt.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.ConversationIndex">
            <summary>
            Specifies the index to the conversation thread of the message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.ConversationTopic">
            <summary>
            Represents the conversation identifier.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.From">
            <summary>
            Contains the author of the message. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.InternetMessageId">
            <summary>
            Represents the Internet message identifier of an item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.IsRead">
            <summary>
            Indicates whether a message has been read.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.IsResponseRequested">
            <summary>
            Indicates whether a response to an item is requested.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.References">
            <summary>
            Contains the Usenet header that is used to associate replies with the original message. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.ReplyTo">
            <summary>
            Contains a value that represents the recipients to whom the message is addressed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.ReceivedBy">
            <summary>
            Identifies the delegate in a delegate access scenario.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RemoveItem.ReceivedRepresenting">
            <summary>
            Identifies the principal in a delegate access scenario.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ReminderActionType">
            <summary>
            Specifies the action to take on a reminder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderActionType.Dismiss">
            <summary>
            Dismiss the reminder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderActionType.Snooze">
            <summary>
            Delay the reminder until time specified by <see cref="P:Independentsoft.Exchange.ReminderItemAction.NewReminderTime"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Recurrence">
            <summary>
            Contains the recurrence pattern for appointments and tasks. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Recurrence.#ctor">
            <summary>
            Initializes a new instance of the Recurrence class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Recurrence.#ctor(Independentsoft.Exchange.RecurrencePattern)">
            <summary>
            Initializes a new instance of the Recurrence class.
            </summary>
            <param name="pattern">The recurrence pattern</param>
        </member>
        <member name="M:Independentsoft.Exchange.Recurrence.#ctor(Independentsoft.Exchange.RecurrencePattern,Independentsoft.Exchange.RecurrenceRange)">
            <summary>
            Initializes a new instance of the Recurrence class.
            </summary>
            <param name="pattern">The recurrence pattern</param>
            <param name="range">The recurrence range</param>
        </member>
        <member name="M:Independentsoft.Exchange.Recurrence.Parse(System.Xml.XmlTextReader)">
            <summary>
            Initializes a new instance of the Recurrence class.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Independentsoft.Exchange.Recurrence.ToString">
            <summary>
            Converts the value of the current Recurrence object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current Recurrence object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Recurrence.Pattern">
            <summary>
            Contains the recurrence pattern. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Recurrence.Range">
            <summary>
            Contains the recurrence range. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RecipientTrackingEvent">
            <summary>
            Contains information for a single event for a recipient.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.Date">
            <summary>
            Represents the date and time at which the event occurred.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.Recipient">
            <summary>
            Represents the recipient for whom the event occurred.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.DeliveryStatus">
            <summary>
            Contains delivery status.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.EventDescription">
            <summary>
            Contains event description.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.EventData">
            <summary>
            Represents data that is associated with the processing step for the event.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.Server">
            <summary>
            Represents the physical server where the event occurred.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.InternalId">
            <summary>
            Represents an integer value for the event identification.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.BccRecipient">
            <summary>
            Represents a recipient to receive a blind carbon copy (Bcc) of an e-mail message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.HiddenRecipient">
            <summary>
            Indicates that the recipient was added by an organization policy that should be hidden from unprivileged users.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.RecipientTrackingEvent.UniquePathId">
            <summary>
            Represents a string that is different for each path in a tracking report.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Persona">
            <summary>
            Represents a Persona
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.personaId">
            <summary>
            The persona identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.personaType">
            <summary>
            The persona type
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.personaObjectStatus">
            <summary>
            The persona object status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.creationTime">
            <summary>
            The creation time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNameFirstLastSortKey">
            <summary>
            The display name first last sort key
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNameLastFirstSortKey">
            <summary>
            The display name last first sort key
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.companyNameSortKey">
            <summary>
            The company name sort key
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.homeCitySortKey">
            <summary>
            The home city sort key
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.workCitySortKey">
            <summary>
            The work city sort key
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNameFirstLastHeader">
            <summary>
            The display name first last header
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNameLastFirstHeader">
            <summary>
            The display name last first header
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayName">
            <summary>
            The display name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNameFirstLast">
            <summary>
            The display name first last
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNameLastFirst">
            <summary>
            The display name last first
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.fileAs">
            <summary>
            The file as
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.fileAsId">
            <summary>
            The file as identifier
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNamePrefix">
            <summary>
            The display name prefix
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.givenName">
            <summary>
            The given name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.middleName">
            <summary>
            The middle name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.surname">
            <summary>
            The surname
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.generation">
            <summary>
            The generation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.nickname">
            <summary>
            The nickname
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.yomiCompanyName">
            <summary>
            The yomi company name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.yomiFirstName">
            <summary>
            The yomi first name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.yomiLastName">
            <summary>
            The yomi last name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.department">
            <summary>
            The department
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.companyName">
            <summary>
            The company name
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.location">
            <summary>
            The location
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.emailAddress">
            <summary>
            The email address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.emailAddresses">
            <summary>
            The email addresses
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.phoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.imAddress">
            <summary>
            The im address
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.homeCity">
            <summary>
            The home city
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.workCity">
            <summary>
            The work city
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.relevanceScore">
            <summary>
            The relevance score
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.folderIds">
            <summary>
            The folder ids
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.attributions">
            <summary>
            The attributions
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNames">
            <summary>
            The display names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.fileAses">
            <summary>
            The file ases
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.fileAsIds">
            <summary>
            The file as ids
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.displayNamePrefixes">
            <summary>
            The display name prefixes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.givenNames">
            <summary>
            The given names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.middleNames">
            <summary>
            The middle names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.surnames">
            <summary>
            The surnames
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.generations">
            <summary>
            The generations
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.nicknames">
            <summary>
            The nicknames
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.initials">
            <summary>
            The initials
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.yomiCompanyNames">
            <summary>
            The yomi company names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.yomiFirstNames">
            <summary>
            The yomi first names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.yomiLastNames">
            <summary>
            The yomi last names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.businessPhoneNumbers">
            <summary>
            The business phone numbers
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.businessPhoneNumbers2">
            <summary>
            The business phone numbers2
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.homePhones">
            <summary>
            The home phones
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.homePhones2">
            <summary>
            The home phones2
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.mobilePhones">
            <summary>
            The mobile phones
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.mobilePhones2">
            <summary>
            The mobile phones2
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.assistantPhoneNumbers">
            <summary>
            The assistant phone numbers
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.callbackPhones">
            <summary>
            The callback phones
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.carPhones">
            <summary>
            The car phones
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.homeFaxes">
            <summary>
            The home faxes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.organizationMainPhones">
            <summary>
            The organization main phones
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.otherFaxes">
            <summary>
            The other faxes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.otherTelephones">
            <summary>
            The other telephones
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.otherPhones2">
            <summary>
            The other phones2
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.pagers">
            <summary>
            The pagers
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.radioPhones">
            <summary>
            The radio phones
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.telexNumbers">
            <summary>
            The telex numbers
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.tTYTDDPhoneNumbers">
            <summary>
            The t tytdd phone numbers
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.workFaxes">
            <summary>
            The work faxes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.emails1">
            <summary>
            The emails1
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.emails2">
            <summary>
            The emails2
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.emails3">
            <summary>
            The emails3
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.businessHomePages">
            <summary>
            The business home pages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.personalHomePages">
            <summary>
            The personal home pages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.officeLocations">
            <summary>
            The office locations
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.imAddresses">
            <summary>
            The im addresses
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.imAddresses2">
            <summary>
            The im addresses2
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.imAddresses3">
            <summary>
            The im addresses3
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.businessAddresses">
            <summary>
            The business addresses
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.homeAddresses">
            <summary>
            The home addresses
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.otherAddresses">
            <summary>
            The other addresses
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.titles">
            <summary>
            The titles
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.departments">
            <summary>
            The departments
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.companyNames">
            <summary>
            The company names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.managers">
            <summary>
            The managers
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.assistantNames">
            <summary>
            The assistant names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.professions">
            <summary>
            The professions
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.spouseNames">
            <summary>
            The spouse names
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.children">
            <summary>
            The children
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.schools">
            <summary>
            The schools
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.hobbies">
            <summary>
            The hobbies
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.weddingAnniversaries">
            <summary>
            The wedding anniversaries
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.birthdays">
            <summary>
            The birthdays
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.locations">
            <summary>
            The locations
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Persona.extendedProperties">
            <summary>
            The extended properties
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Persona.#ctor(System.Xml.XmlTextReader,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Persona"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="startNamespace">The start namespace.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Persona.Parse(System.Xml.XmlTextReader,System.String)">
            <summary>
            Parses the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="startNamespace">The start namespace.</param>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.PersonaId">
            <summary>
            Gets the persona identifier.
            </summary>
            <value>
            The persona identifier.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.PersonaType">
            <summary>
            Gets the type of the persona.
            </summary>
            <value>
            The type of the persona.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.PersonaObjectStatus">
            <summary>
            Gets the persona object status.
            </summary>
            <value>
            The persona object status.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.CreationTime">
            <summary>
            Gets the creation time.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNameFirstLastSortKey">
            <summary>
            Gets the display name first last sort key.
            </summary>
            <value>
            The display name first last sort key.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNameLastFirstSortKey">
            <summary>
            Gets the display name last first sort key.
            </summary>
            <value>
            The display name last first sort key.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.CompanyNameSortKey">
            <summary>
            Gets the company name sort key.
            </summary>
            <value>
            The company name sort key.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.HomeCitySortKey">
            <summary>
            Gets the home city sort key.
            </summary>
            <value>
            The home city sort key.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.WorkCitySortKey">
            <summary>
            Gets the work city sort key.
            </summary>
            <value>
            The work city sort key.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNameFirstLastHeader">
            <summary>
            Gets the display name first last header.
            </summary>
            <value>
            The display name first last header.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNameLastFirstHeader">
            <summary>
            Gets the display name last first header.
            </summary>
            <value>
            The display name last first header.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNameFirstLast">
            <summary>
            Gets the display name first last.
            </summary>
            <value>
            The display name first last.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNameLastFirst">
            <summary>
            Gets the display name last first.
            </summary>
            <value>
            The display name last first.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.FileAs">
            <summary>
            Gets the file as.
            </summary>
            <value>
            The file as.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.FileAsId">
            <summary>
            Gets the file as identifier.
            </summary>
            <value>
            The file as identifier.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNamePrefix">
            <summary>
            Gets the display name prefix.
            </summary>
            <value>
            The display name prefix.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.GivenName">
            <summary>
            Gets the name of the given.
            </summary>
            <value>
            The name of the given.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.MiddleName">
            <summary>
            Gets the name of the middle.
            </summary>
            <value>
            The name of the middle.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Surname">
            <summary>
            Gets the surname.
            </summary>
            <value>
            The surname.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Generation">
            <summary>
            Gets the generation.
            </summary>
            <value>
            The generation.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Nickname">
            <summary>
            Gets the nickname.
            </summary>
            <value>
            The nickname.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.YomiCompanyName">
            <summary>
            Gets the name of the yomi company.
            </summary>
            <value>
            The name of the yomi company.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.YomiFirstName">
            <summary>
            Gets the first name of the yomi.
            </summary>
            <value>
            The first name of the yomi.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.YomiLastName">
            <summary>
            Gets the last name of the yomi.
            </summary>
            <value>
            The last name of the yomi.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Department">
            <summary>
            Gets the department.
            </summary>
            <value>
            The department.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.CompanyName">
            <summary>
            Gets the name of the company.
            </summary>
            <value>
            The name of the company.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Location">
            <summary>
            Gets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.EmailAddress">
            <summary>
            Gets the email address.
            </summary>
            <value>
            The email address.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.EmailAddresses">
            <summary>
            Gets the email addresses.
            </summary>
            <value>
            The email addresses.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.PhoneNumber">
            <summary>
            Gets the phone number.
            </summary>
            <value>
            The phone number.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.ImAddress">
            <summary>
            Gets the im address.
            </summary>
            <value>
            The im address.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.HomeCity">
            <summary>
            Gets the home city.
            </summary>
            <value>
            The home city.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.WorkCity">
            <summary>
            Gets the work city.
            </summary>
            <value>
            The work city.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.RelevanceScore">
            <summary>
            Gets the relevance score.
            </summary>
            <value>
            The relevance score.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.FolderIds">
            <summary>
            Gets the folder ids.
            </summary>
            <value>
            The folder ids.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Attributions">
            <summary>
            Gets the attributions.
            </summary>
            <value>
            The attributions.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNames">
            <summary>
            Gets the display names.
            </summary>
            <value>
            The display names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.FileAses">
            <summary>
            Gets the file ases.
            </summary>
            <value>
            The file ases.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.FileAsIds">
            <summary>
            Gets the file as ids.
            </summary>
            <value>
            The file as ids.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.DisplayNamePrefixes">
            <summary>
            Gets the display name prefixes.
            </summary>
            <value>
            The display name prefixes.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.GivenNames">
            <summary>
            Gets the given names.
            </summary>
            <value>
            The given names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.MiddleNames">
            <summary>
            Gets the middle names.
            </summary>
            <value>
            The middle names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Surnames">
            <summary>
            Gets the surnames.
            </summary>
            <value>
            The surnames.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Generations">
            <summary>
            Gets the generations.
            </summary>
            <value>
            The generations.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Nicknames">
            <summary>
            Gets the nicknames.
            </summary>
            <value>
            The nicknames.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Initials">
            <summary>
            Gets the initials.
            </summary>
            <value>
            The initials.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.YomiCompanyNames">
            <summary>
            Gets the yomi company names.
            </summary>
            <value>
            The yomi company names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.YomiFirstNames">
            <summary>
            Gets the yomi first names.
            </summary>
            <value>
            The yomi first names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.YomiLastNames">
            <summary>
            Gets the yomi last names.
            </summary>
            <value>
            The yomi last names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.BusinessPhoneNumbers">
            <summary>
            Gets the business phone numbers.
            </summary>
            <value>
            The business phone numbers.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.BusinessPhoneNumbers2">
            <summary>
            Gets the business phone numbers2.
            </summary>
            <value>
            The business phone numbers2.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.HomePhones">
            <summary>
            Gets the home phones.
            </summary>
            <value>
            The home phones.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.HomePhones2">
            <summary>
            Gets the home phones2.
            </summary>
            <value>
            The home phones2.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.MobilePhones">
            <summary>
            Gets the mobile phones.
            </summary>
            <value>
            The mobile phones.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.MobilePhones2">
            <summary>
            Gets the mobile phones2.
            </summary>
            <value>
            The mobile phones2.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.AssistantPhoneNumbers">
            <summary>
            Gets the assistant phone numbers.
            </summary>
            <value>
            The assistant phone numbers.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.CallbackPhones">
            <summary>
            Gets the callback phones.
            </summary>
            <value>
            The callback phones.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.CarPhones">
            <summary>
            Gets the car phones.
            </summary>
            <value>
            The car phones.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.HomeFaxes">
            <summary>
            Gets the home faxes.
            </summary>
            <value>
            The home faxes.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.OrganizationMainPhones">
            <summary>
            Gets the organization main phones.
            </summary>
            <value>
            The organization main phones.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.OtherFaxes">
            <summary>
            Gets the other faxes.
            </summary>
            <value>
            The other faxes.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.OtherTelephones">
            <summary>
            Gets the other telephones.
            </summary>
            <value>
            The other telephones.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.OtherPhones2">
            <summary>
            Gets the other phones2.
            </summary>
            <value>
            The other phones2.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Pagers">
            <summary>
            Gets the pagers.
            </summary>
            <value>
            The pagers.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.RadioPhones">
            <summary>
            Gets the radio phones.
            </summary>
            <value>
            The radio phones.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.TelexNumbers">
            <summary>
            Gets the telex numbers.
            </summary>
            <value>
            The telex numbers.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.TTYTDDPhoneNumbers">
            <summary>
            Gets the ttytdd phone numbers.
            </summary>
            <value>
            The ttytdd phone numbers.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.WorkFaxes">
            <summary>
            Gets the work faxes.
            </summary>
            <value>
            The work faxes.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Emails1">
            <summary>
            Gets the emails1.
            </summary>
            <value>
            The emails1.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Emails2">
            <summary>
            Gets the emails2.
            </summary>
            <value>
            The emails2.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Emails3">
            <summary>
            Gets the emails3.
            </summary>
            <value>
            The emails3.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.BusinessHomePages">
            <summary>
            Gets the business home pages.
            </summary>
            <value>
            The business home pages.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.PersonalHomePages">
            <summary>
            Gets the personal home pages.
            </summary>
            <value>
            The personal home pages.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.OfficeLocations">
            <summary>
            Gets the office locations.
            </summary>
            <value>
            The office locations.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.ImAddresses">
            <summary>
            Gets the im addresses.
            </summary>
            <value>
            The im addresses.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.ImAddresses2">
            <summary>
            Gets the im addresses2.
            </summary>
            <value>
            The im addresses2.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.ImAddresses3">
            <summary>
            Gets the im addresses3.
            </summary>
            <value>
            The im addresses3.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.BusinessAddresses">
            <summary>
            Gets the business addresses.
            </summary>
            <value>
            The business addresses.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.HomeAddresses">
            <summary>
            Gets the home addresses.
            </summary>
            <value>
            The home addresses.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.OtherAddresses">
            <summary>
            Gets the other addresses.
            </summary>
            <value>
            The other addresses.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Titles">
            <summary>
            Gets the titles.
            </summary>
            <value>
            The titles.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Departments">
            <summary>
            Gets the departments.
            </summary>
            <value>
            The departments.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.CompanyNames">
            <summary>
            Gets the company names.
            </summary>
            <value>
            The company names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Managers">
            <summary>
            Gets the managers.
            </summary>
            <value>
            The managers.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.AssistantNames">
            <summary>
            Gets the assistant names.
            </summary>
            <value>
            The assistant names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Professions">
            <summary>
            Gets the professions.
            </summary>
            <value>
            The professions.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.SpouseNames">
            <summary>
            Gets the spouse names.
            </summary>
            <value>
            The spouse names.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Children">
            <summary>
            Gets the children.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Schools">
            <summary>
            Gets the schools.
            </summary>
            <value>
            The schools.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Hobbies">
            <summary>
            Gets the hobbies.
            </summary>
            <value>
            The hobbies.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.WeddingAnniversaries">
            <summary>
            Gets the wedding anniversaries.
            </summary>
            <value>
            The wedding anniversaries.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Birthdays">
            <summary>
            Gets the birthdays.
            </summary>
            <value>
            The birthdays.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.Locations">
            <summary>
            Gets the locations.
            </summary>
            <value>
            The locations.
            </value>
        </member>
        <member name="P:Independentsoft.Exchange.Persona.ExtendedProperties">
            <summary>
            Gets the extended properties.
            </summary>
            <value>
            The extended properties.
            </value>
        </member>
        <member name="T:Independentsoft.Exchange.MessageTrackingEventDescription">
            <summary>
            Defines the description of a message tracking event
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.Submitted">
            <summary>
            Submitted
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.Resolved">
            <summary>
            Resolved
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.Expanded">
            <summary>
            Expanded
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.Delivered">
            <summary>
            Delivered
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.MovedToFolderByInboxRule">
            <summary>
            Moved to folder by inbox rule
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.RulesCc">
            <summary>
            RulesCc
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.FailedGeneral">
            <summary>
            General Fail
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.FailedModeration">
            <summary>
            Failed Moderation
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.FailedTransportRules">
            <summary>
            FailedTransportRules
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.SmtpSend">
            <summary>
            SmtpSend
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.SmtpSendCrossSite">
            <summary>
            SmtpSendCrossSite
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.SmtpSendCrossForest">
            <summary>
            SmtpSendCrossForest
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.SmtpReceive">
            <summary>
            SmtpReceive
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.Forwarded">
            <summary>
            Forwarded
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.PendingModeration">
            <summary>
            PendingModeration
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.QueueRetry">
            <summary>
            QueueRetry
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.QueueRetryNoRetryTime">
            <summary>
            QueueRetryNoRetryTime
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.MessageDefer">
            <summary>
            MessageDefer
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.TransferredToForeignOrg">
            <summary>
            TransferredToForeignOrg
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.TransferredToPartnerOrg">
            <summary>
            TransferredToPartnerOrg
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.TransferredToLegacyExchangeServer">
            <summary>
            TransferredToLegacyExchangeServer
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.DelayedAfterTransferToPartnerOrg">
            <summary>
            DelayedAfterTransferToPartnerOrg
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.Read">
            <summary>
            Read
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingEventDescription.NotRead">
            <summary>
            NotRead
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailTips">
            <summary>
            Represents values for various types of mail tips.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.Recipient">
            <summary>
            Represents the mailbox of the recipient.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.PendingMailTips">
            <summary>
            Indicates that the mail tips in this element could not be evaluated before the server's processing timeout expired.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.OutOfOffice">
            <summary>
            Represents the response message and a duration time for sending the response message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.IsMailboxFull">
            <summary>
            Indicates whether the mailbox for the recipient is full. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.CustomMailTip">
            <summary>
            Represents a customized mail tip message.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.TotalMemberCount">
            <summary>
            Represents the count of all members in a group.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.ExternalMemberCount">
            <summary>
            Represents the count of external members in a group.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.MaxMessageSize">
            <summary>
            Represents the maximum message size the recipient can accept.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.DeliveryRestricted">
            <summary>
            Indicates whether delivery restrictions will prevent the sender�s message from reaching the recipient.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.IsModerated">
            <summary>
            Indicates whether the recipient�s mailbox is being moderated.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailTips.InvalidRecipient">
            <summary>
            Indicates whether the recipient is invalid.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxSearchScope">
            <summary>
            Specifies a mailbox and search scope to use in a <see cref="T:Independentsoft.Exchange.MailboxQuery"/>
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxSearchScope.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Independentsoft.Exchange.MailboxSearchScope"/> class
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxSearchScope.#ctor(System.String)">
            <summary>
            Initializes a <see cref="T:Independentsoft.Exchange.MailboxSearchScope"/> with the specified mailbox
            </summary>
            <param name="mailbox">The mailbox identifier</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxSearchScope.#ctor(System.String,Independentsoft.Exchange.MailboxSearchLocation)">
            <summary>
            Initializes a <see cref="T:Independentsoft.Exchange.MailboxSearchScope"/> with the specified mailbox and search scope
            </summary>
            <param name="mailbox">The mailbox identifier</param>
            <param name="searchScope">Specifies the scope of a search</param>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxSearchScope.Mailbox">
            <summary>
            Get or set the mailbox identifier
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxSearchScope.SearchScope">
            <summary>
            Get or set the scope of the search
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.KeywordStatisticsSearchResult">
            <summary>
            Contains the results of a single keyword search result
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.KeywordStatisticsSearchResult.#ctor">
            <summary>
            Initializes a new instance of the KeywordStatisticsSearchResult class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.KeywordStatisticsSearchResult.Keyword">
            <summary>
            Represents a single keyword statistic
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.KeywordStatisticsSearchResult.ItemHits">
            <summary>
            Specifies how many times a keyword was found
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.KeywordStatisticsSearchResult.Size">
            <summary>
            Specifies the total size of one or more mailbox items
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IsNotEqualTo">
            <summary>
            Represents a search expression that compares a property with either a constant value or another property and returns true if the values are not the same.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IsNotEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the IsNotEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsNotEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the IsNotEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsNotEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the IsNotEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsNotEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the IsNotEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsNotEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the IsNotEqualTo class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsNotEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the IsNotEqualTo class.
            </summary>
            <param name="propertyPath1">The first property path</param>
            <param name="propertyPath2">The second property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsNotEqualTo.ToString">
            <summary>
            Converts the value of the current IsNotEqualTo object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current IsNotEqualTo object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.GetNonIndexableItemDetailsResponse">
            <summary>
            Class GetNonIndexableItemDetailsResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetNonIndexableItemDetailsResponse.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Independentsoft.Exchange.GetNonIndexableItemDetailsResponse.FailedMailboxes">
            <summary>
            Gets the failed mailboxes.
            </summary>
            <value>The failed mailboxes.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Exists">
            <summary>
            Represents a search expression that returns true if the supplied property exists on an item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Exists.#ctor">
            <summary>
            Initializes a new instance of the Exists class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Exists.#ctor(Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the Exists class.
            </summary>
            <param name="propertyPath">The property path to use</param>
        </member>
        <member name="M:Independentsoft.Exchange.Exists.ToString">
            <summary>
            Converts the value of the current Exists object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current Exists object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Exists.PropertyPath">
            <summary>
            Identifies frequently referenced properties by URI, individual members of a dictionary or MAPI properties.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CalendarPermissionLevel">
            <summary>
            Represents the permission level that a user has on a Calendar folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.Owner">
            <summary>
            Indicates that the user can create, read, edit, and delete all items in the folder, and create subfolders.
            The user is both folder owner and folder contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.PublishingEditor">
            <summary>
            Indicates that the user can create, read, edit, and delete all items in the folder, and create subfolders.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.Editor">
            <summary>
            Indicates that the user can create, read, edit and delete all items in the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.PublishingAuthor">
            <summary>
            Indicates that the user can create and read all items in the folder, edit and delete only items that the user creates, and create subfolders.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.Author">
            <summary>
            Indicates that the user can create and read all items in the folder, and edit and delete only items that the user creates.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.NoneditingAuthor">
            <summary>
            Indicates that the user can create and read all items in the folder, and delete only items that the user creates.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.Reviewer">
            <summary>
            Indicates that the user can read all items in the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.Contributor">
            <summary>
            Indicates that the user can create items in the folder. The contents of the folder do not appear.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.FreeBusyTimeOnly">
            <summary>
            Indicates that the user can view only free/busy time within the calendar.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.FreeBusyTimeAndSubjectAndLocation">
            <summary>
            Indicates that the user can view free/busy time within the calendar and the subject and location of appointments.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.Custom">
            <summary>
            Indicates that the user has custom access permissions on the folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.CalendarPermissionLevel.None">
            <summary>
            Indicates that the user has no permissions on the folder. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.ErrorCode">
            <summary>
            Contains the error code for an error Autodiscover response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.NoError">
            <summary>
            There was no error. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.RedirectAddress">
            <summary>
            The caller must follow the e-mail address redirection that was returned by Autodiscover. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.RedirectUrl">
            <summary>
            The caller must follow the URL redirection that was returned by Autodiscover.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.InvalidUser">
            <summary>
            The user that was passed in the request is invalid. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.InvalidRequest">
            <summary>
            The request is invalid. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.InvalidSetting">
            <summary>
            A specified setting is invalid. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.SettingIsNotAvailable">
            <summary>
            A specified setting is not available. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.ServerBusy">
            <summary>
            The server is too busy to process the request. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.InvalidDomain">
            <summary>
            The requested domain is not valid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.NotFederated">
            <summary>
            The organization is not federated. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.ErrorCode.InternalServerError">
            <summary>
            There is an internal server error. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Attendee">
            <summary>
            Represents attendees and resources for a meeting.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.#ctor">
            <summary>
            Initializes a new instance of the Attendee class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.#ctor(Independentsoft.Exchange.Mailbox)">
            <summary>
            Initializes a new instance of the Attendee class.
            </summary>
            <param name="mailbox">The <see cref="P:Independentsoft.Exchange.Attendee.Mailbox"/> of the Attendee</param>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Attendee class.
            </summary>
            <param name="emailAddress">The fully resolved e-mail address of the attendee</param>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Attendee class.
            </summary>
            <param name="emailAddress">The fully resolved e-mail address of the attendee</param>
            <param name="name">The attendee name</param>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.#ctor(Independentsoft.Exchange.Mailbox,Independentsoft.Exchange.ResponseType)">
            <summary>
            Initializes a new instance of the Attendee class.
            </summary>
            <param name="mailbox">The <see cref="P:Independentsoft.Exchange.Attendee.Mailbox"/> of the Attendee</param>
            <param name="responseType">The <see cref="P:Independentsoft.Exchange.Attendee.ResponseType"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.#ctor(System.String,Independentsoft.Exchange.ResponseType)">
            <summary>
            Initializes a new instance of the Attendee class.
            </summary>
            <param name="emailAddress">The fully resolved e-mail address of the attendee</param>
            <param name="responseType">The <see cref="P:Independentsoft.Exchange.Attendee.ResponseType"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.#ctor(System.String,System.String,Independentsoft.Exchange.ResponseType)">
            <summary>
            Initializes a new instance of the Attendee class.
            </summary>
            <param name="emailAddress">The fully resolved e-mail address of the attendee</param>
            <param name="name">The attendee name</param>
            <param name="responseType">The <see cref="P:Independentsoft.Exchange.Attendee.ResponseType"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.Attendee.ToString">
            <summary>
            Converts the value of the current Attendee object to its equivalent string representation.
            </summary>
            <returns>The XML representation of the current Attendee</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Attendee.Mailbox">
            <summary>
            Identifies a fully resolved e-mail address.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attendee.ResponseType">
            <summary>
            Represents the type of recipient response that is received for a meeting.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Attendee.LastResponseTime">
            <summary>
            Represents the date and time of the latest response that is received.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Aggregate">
            <summary>
            Identifies whether the maximum or minimum value of a representative property is used to order the items in a group.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Aggregate.Minimum">
            <summary>
            Minimum
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Aggregate.Maximum">
            <summary>
            Maximum
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonObject">
            <summary>
            Definition of JsonObject class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.#ctor">
            <summary>
            Constructor of JsonObject class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetDoubleValue(System.String)">
            <summary>
            Reports a given JsonObject's value in double-precision floating-point number.
            </summary>
            <param name="name">the name of this JsonObject.</param>
            <returns><b>value in double-precision floating-point number</b> if this object is a JsonNumber; otherwise <b>Double.MinValue</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetFloatValue(System.String)">
            <summary>
            Reports a given JsonObject's value in single-precision floating-point number.
            </summary>
            <param name="name">the name of this JsonObject.</param>
            <returns><b>value in single-precision floating-point number</b> if this object is a JsonNumber; otherwise <b>Single.MinValue</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetLongValue(System.String)">
            <summary>
            Reports a given JsonObject's value in 64-bit signed integer.
            </summary>
            <param name="name">the name of this JsonObject.</param>
            <returns><b>value in 64-bit signed integer.</b> if this object is a JsonNumber; otherwise <b>Int64.MinValue</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetIntValue(System.String)">
            <summary>
            Reports a given JsonObject's value in 32-bit signed integer.
            </summary>
            <param name="name">the name of this JsonObject.</param>
            <returns><b>value in 32-bit signed integer.</b> if this object is a JsonNumber; otherwise <b>Int32.MinValue</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetStringValue(System.String)">
            <summary>
            Reports a given JsonObject's value in String.
            </summary>
            <param name="name">the name of this JsonObject.</param>
            <returns><b>value in String.</b> if this object is a JsonString; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetBooleanValue(System.String)">
            <summary>
            Reports a given JsonObject's value in Boolean value.
            </summary>
            <param name="name">the name of this JsonObject.</param>
            <returns><b>value in Boolean value.</b> if this object is a JsonBoolean; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetObjectValue(System.String)">
            <summary>
            Reports a JsonObject by a give object name.
            </summary>
            <param name="name">the name of a given object.</param>
            <returns><b>JsonObject.</b> if this object is a JsonObject; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetValue(System.String)">
            <summary>
            Reports a JsonValue a JsonObject member.
            </summary>
            <param name="name">the name of a JsonObject member.</param>
            <returns><b>JsonValue.</b> if the member's name is found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetStringArrayValues(System.String)">
            <summary>
            Reports a list of String of a JsonArray.
            </summary>
            <param name="name">the name of the JsonArray.</param>
            <returns>list of String.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetArrayValues(System.String)">
            <summary>
            Reports a list of JsonValue.
            </summary>
            <param name="name">the name of the JsonArray.</param>
            <returns>list of JsonValue.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.ToString">
            <summary>
            Reports the members of this JsonObject in String format.
            </summary>
            <returns>a String of the members of this JsonObject.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.GetHashCode">
            <summary>
            Reports the hash code of this JsonObject member list.
            </summary>
            <returns>the hash code.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current JsonObject.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns><b>true</b> if the specified Object is equal to the current JsonObject; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Independentsoft.Json.Parser.JsonObject.Members">
            <summary>
            Property to return the JsonObject Member.
            </summary>
        </member>
        <member name="T:Independentsoft.IO.StructuredStorage.Storage">
            <summary>
            Contains collection of <see cref="T:Independentsoft.IO.StructuredStorage.DirectoryEntry"/>.
            </summary>
            <remarks>
            Storage is analogous to a file system directory. The parent object of a storage object must be another storage object or the <see cref="T:Independentsoft.IO.StructuredStorage.RootDirectoryEntry"/>.
            </remarks>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Storage.#ctor">
            <summary>
             Initializes a new instance of the Storage class.  
            </summary>
        </member>
        <member name="M:Independentsoft.IO.StructuredStorage.Storage.#ctor(System.String)">
            <summary>
             Initializes a new instance of the Storage class.  
            </summary>
            <param name="name">Storage name.</param>
        </member>
        <member name="P:Independentsoft.IO.StructuredStorage.Storage.DirectoryEntries">
            <summary>
            Gets collection of <see cref="T:Independentsoft.IO.StructuredStorage.DirectoryEntry"/>.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UserConfigurationName">
            <summary>
            Represents the name of a user configuration object. The user configuration object name is the identifier for a user configuration object.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationName.#ctor">
            <summary>
            Initializes a new instance of the UserConfigurationName class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserConfigurationName.#ctor(System.String,Independentsoft.Exchange.FolderId)">
            <summary>
            Initializes a new instance of the UserConfigurationName class.
            </summary>
            <param name="name">The name of the user configuration object</param>
            <param name="folderId">The folder identifier of the folder that contains the user configuration object</param>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationName.Name">
            <summary>
            Represents a distinguished folder name of the folder that contains the user configuration object.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserConfigurationName.FolderId">
            <summary>
            Represents the folder identifier of the folder that contains the user configuration object. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TransitionTarget">
            <summary>
            Identifies whether the time zone transition target is a time zone period of a group of time zone transitions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TransitionTarget.Period">
            <summary>
            Specifies that the time zone transition target is a time zone period.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TransitionTarget.Group">
            <summary>
            Specifies that the time zone transition target is a group of time zone transitions.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TransitionsGroup">
            <summary>
            Represents an array of time zone transitions.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TransitionsGroup.ToString">
            <summary>
            Converts the value of the current TransitionsGroup object to its equivalent string representation. 
            </summary>
            <returns>The XML representation of the current TransitionsGroup object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.TransitionsGroup.Id">
            <summary>
            A string value that represents the unique identifier of the transitions group.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TransitionsGroup.Transitions">
            <summary>
            Represents a collection of time zone transition groups.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TimeDuration">
            <summary>
            Specifies the duration that the out of office (OOF) status is enabled if the OofState element is set to Scheduled.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TimeDuration.#ctor">
            <summary>
            Initializes a new instance of the TimeDuration class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TimeDuration.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the TimeDuration class.
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
        </member>
        <member name="P:Independentsoft.Exchange.TimeDuration.StartTime">
            <summary>
            Represents the start of the time span set with an OOF status. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.TimeDuration.EndTime">
            <summary>
            Represents the end of the time span set with an OOF status.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SuppressReadReceipt">
            <summary>
            Element is used to suppress read receipts.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SuppressReadReceipt.#ctor">
            <summary>
            Initializes a new instance of the SuppressReadReceipt class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SuppressReadReceipt.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the SuppressReadReceipt class.
            </summary>
            <param name="referenceItemId">The ItemId</param>
        </member>
        <member name="M:Independentsoft.Exchange.SuppressReadReceipt.ToString">
            <summary>
            Converts the value of the current SuppressReadReceipt object to its equivalent string representation. 
            </summary>
            <returns>The string representation of the current SuppressReadReceipt object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.SuggestionQuality">
            <summary>
            Represents the quality of the suggested meeting time.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SuggestionQuality.Excellent">
            <summary>
            100 percent of users and resources are available for the suggested meeting time.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SuggestionQuality.Good">
            <summary>
            The minimum percentage of users and resources available is equal to or greater than the GoodThreshold element value plus 50.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SuggestionQuality.Fair">
            <summary>
            The maximum percentage of users and resources available for a suggested meeting time is equal to the GoodThreshold element value plus 50. The minimum value for a Fair quality meeting time is 50 percent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SuggestionQuality.Poor">
            <summary>
            Less than 50 percent of the users and resources are available for the suggested meeting time.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SuggestionQuality.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ReplyItem">
            <summary>
            Contains a reply to the sender of an item in the Exchange store.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyItem.#ctor">
            <summary>
            Initializes a new instance of the ReplyItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the ReplyItem class.
            </summary>
            <param name="referenceItemId">The ItemId</param>
        </member>
        <member name="M:Independentsoft.Exchange.ReplyItem.ToString">
            <summary>
            Converts the value of the current ReplyItem object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current ReplyItem object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.OwaOptions">
            <summary>
            Class OwaOptions.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.OwaOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.OwaOptions"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.TimeFormat">
            <summary>
            Gets or sets the time format.
            </summary>
            <value>The time format.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.ShowWeekNumbers">
            <summary>
            Gets or sets a value indicating whether [show week numbers].
            </summary>
            <value><c>true</c> if [show week numbers]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SignatureText">
            <summary>
            Gets or sets the signature text.
            </summary>
            <value>The signature text.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SignatureHtml">
            <summary>
            Gets or sets the signature HTML.
            </summary>
            <value>The signature HTML.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.FirstWeekOfYear">
            <summary>
            Gets or sets the first week of year.
            </summary>
            <value>The first week of year.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.EnableReminders">
            <summary>
            Gets or sets a value indicating whether [enable reminders].
            </summary>
            <value><c>true</c> if [enable reminders]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.EnableReminderSound">
            <summary>
            Gets or sets a value indicating whether [enable reminder sound].
            </summary>
            <value><c>true</c> if [enable reminders]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.DateFormat">
            <summary>
            Gets or sets the date format.
            </summary>
            <value>The date format.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.HourIncrement">
            <summary>
            Gets or sets the hour increment.
            </summary>
            <value>The hour increment.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.IsOptimizedForAccessibility">
            <summary>
            Gets or sets a value indicating whether this instance is optimized for accessibility.
            </summary>
            <value><c>true</c> if this instance is optimized for accessibility; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.WeekStartDay">
            <summary>
            Gets or sets the week start day.
            </summary>
            <value>The week start day.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.FormatBarState">
            <summary>
            Gets or sets the state of the format bar.
            </summary>
            <value>The state of the format bar.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.ShowTreeInListView">
            <summary>
            Gets or sets a value indicating whether [show tree in ListView].
            </summary>
            <value><c>true</c> if [show tree in ListView]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.MarkAsReadDelayTime">
            <summary>
            Gets or sets the mark as read delay time.
            </summary>
            <value>The mark as read delay time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.NextSelection">
            <summary>
            Gets or sets the next selection.
            </summary>
            <value>The next selection.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SpellingDictionaryLanguage">
            <summary>
            Gets or sets the spelling dictionary language.
            </summary>
            <value>The spelling dictionary language.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.ConversationSortOrder">
            <summary>
            Gets or sets the conversation sort order.
            </summary>
            <value>The conversation sort order.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.CheckNameInContactsFirst">
            <summary>
            Gets or sets a value indicating whether [check name in contacts first].
            </summary>
            <value><c>true</c> if [check name in contacts first]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SpellingCheckBeforeSend">
            <summary>
            Gets or sets a value indicating whether [spelling check before send].
            </summary>
            <value><c>true</c> if [spelling check before send]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.ReadReceipt">
            <summary>
            Gets or sets the read receipt.
            </summary>
            <value>The read receipt.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.ThemeStorageId">
            <summary>
            Gets or sets the theme storage identifier.
            </summary>
            <value>The theme storage identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SpellingIgnoreUpperCase">
            <summary>
            Gets or sets a value indicating whether [spelling ignore upper case].
            </summary>
            <value><c>true</c> if [spelling ignore upper case]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.EmptyDeletedItemsOnLogoff">
            <summary>
            Gets or sets a value indicating whether [empty deleted items on logoff].
            </summary>
            <value><c>true</c> if [empty deleted items on logoff]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.PreviewMarkAsRead">
            <summary>
            Gets or sets the preview mark as read.
            </summary>
            <value>The preview mark as read.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.AutoAddSignature">
            <summary>
            Gets or sets a value indicating whether [automatic add signature].
            </summary>
            <value><c>true</c> if [automatic add signature]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.AutoAddSignatureOnReply">
            <summary>
            Gets or sets a value indicating whether [automatic add signature on forward and reply].
            </summary>
            <value><c>true</c> if [automatic add signature on forward and reply]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.AlwaysShowFrom">
            <summary>
            Gets or sets a value indicating whether [always show from].
            </summary>
            <value><c>true</c> if [always show from]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.HideDeletedItems">
            <summary>
            Gets or sets a value indicating whether [hide deleted items].
            </summary>
            <value><c>true</c> if [hide deleted items]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SendAsItemsCopiedTo">
            <summary>
            Gets or sets the send as items copied to.
            </summary>
            <value>The send as items copied to.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SpellingIgnoreMixedDigits">
            <summary>
            Gets or sets a value indicating whether [spelling ignore mixed digits].
            </summary>
            <value><c>true</c> if [spelling ignore mixed digits]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.AlwaysShowBcc">
            <summary>
            Gets or sets a value indicating whether [always show BCC].
            </summary>
            <value><c>true</c> if [always show BCC]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.SendOnBehalfOfCopiedTo">
            <summary>
            Gets or sets the send on behalf of copied to.
            </summary>
            <value>The send on behalf of copied to.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.IsQuicklinksBarVisible">
            <summary>
            Gets or sets a value indicating whether this instance is quicklinks bar visible.
            </summary>
            <value><c>true</c> if this instance is quicklinks bar visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.ComposeMarkup">
            <summary>
            Gets or sets the compose markup.
            </summary>
            <value>The compose markup.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.NewItemNotify">
            <summary>
            Gets or sets the new item notify.
            </summary>
            <value>The new item notify.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.FontName">
            <summary>
            Gets or sets the font name.
            </summary>
            <value>The font name.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.FontColor">
            <summary>
            Gets or sets the font color.
            </summary>
            <value>The font color.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
            <value>The font size.</value>
        </member>
        <member name="P:Independentsoft.Exchange.OwaOptions.FontFlags">
            <summary>
            Gets or sets the font flags.
            </summary>
            <value>The font flags.</value>
        </member>
        <member name="T:Independentsoft.Exchange.OutOfOfficeResponse">
            <summary>
            Contains the response message and the Out of Office (OOF) settings for a user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOfficeResponse.OutOfOffice">
            <summary>
            Contains the OOF settings.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.OutOfOfficeResponse.ExternalAudience">
            <summary>
            Contains a value that identifies to whom external OOF messages are sent.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingResponse">
            <summary>
            Represents a meeting response in the Exchange store.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingRequestPropertyPath">
            <summary>
            Contains property paths for a meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.IntendedFreeBusyStatus">
            <summary>
            The status for the meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.MeetingRequestType">
            <summary>
            Describes the type of this meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ChangeHighlights">
            <summary>
            Specifies what changed between two versions of a meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ReminderNextTime">
            <summary>
            Specifies the date and time for the next reminder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.StartWallClock">
            <summary>
            Represents the start time of a meeting in the time zone of the location in which the meeting takes place
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.EndWallClock">
            <summary>
            Represents the end time of a meeting in the time zone of the location in which the meeting takes place
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.StartTime">
            <summary>
            The start time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.EndTime">
            <summary>
            The end time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.OriginalStartTime">
            <summary>
            Represents the original start time of the appointment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.IsAllDayEvent">
            <summary>
            Indicates if this meeting request is an all day event
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.LegacyFreeBusyStatus">
            <summary>
            Represents the free/busy status of the calendar item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.Location">
            <summary>
            Represents the location of the meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.When">
            <summary>
            Indicates when the meeting occurs
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.IsMeeting">
            <summary>
            Indicates if this is a meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.IsCancelled">
            <summary>
            Indicates if this meeting is canceled
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.IsRecurring">
            <summary>
            Indicates if this meeting is recurring
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.MeetingRequestWasSent">
            <summary>
            Indicates whether this meeting request was sent to requested attendees
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.InstanceType">
            <summary>
            Indicates the type of a calendar item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.MyResponse">
            <summary>
            Contains the status or response to a meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.Organizer">
            <summary>
            Represents the organizer of a meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.RequiredAttendees">
            <summary>
            Represents attendees that are required to attend a meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.OptionalAttendees">
            <summary>
            Represents attendees that are not required to attend a meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.Resources">
            <summary>
            Represents a scheduled resource for a meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ConflictingMeetingCount">
            <summary>
            Represents the number of meetings that conflict with this meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.AdjacentMeetingCount">
            <summary>
            Represents the total number of calendar items that are adjacent to a meeting time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ConflictingMeetings">
            <summary>
            Identifies all calendar items that conflict with a meeting time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.AdjacentMeetings">
            <summary>
            Identifies all calendar items that are adjacent to a meeting time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.Duration">
            <summary>
            Represents the duration of the meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.TimeZone">
            <summary>
            Provides a text description of the meeting request timezone
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ReplyTime">
            <summary>
            Represents the date and time that an attendee replied to a meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.SequenceNumber">
            <summary>
            Specifies the sequence number of a version of an appointment
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.State">
            <summary>
            Specifies the status of the meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.Recurrence">
            <summary>
            Contains the recurrence pattern for the meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.FirstOccurrence">
            <summary>
            Represents the first occurrence of a recurring meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.LastOccurrence">
            <summary>
            Represents the last occurrence of a recurring meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ModifiedOccurrences">
            <summary>
            Contains an array of recurring meeting request occurrences that have been modified so that they are different than the recurrence master item
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.DeletedOccurrences">
            <summary>
            Contains an array of deleted occurrences of a recurring meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.MeetingTimeZone">
            <summary>
            Represents the time zone of the location where the meeting is hosted
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.StartTimeZone">
            <summary>
            Defines the time zone for the start time of a meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.EndTimeZone">
            <summary>
            Defines the time zone for the end time of a meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ConferenceType">
            <summary>
            Describes the type of conferencing that is performed with a meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.AllowNewTimeProposal">
            <summary>
            Indicates whether a new meeting time can be proposed for a meeting by an attendee
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.IsOnlineMeeting">
            <summary>
            Indicates whether the meeting is online
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.MeetingWorkspaceUrl">
            <summary>
            Contains the URL for the meeting workspace that is included in the calendar item. A meeting workspace is a shared Web site for planning the meeting and tracking the results
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.NetShowUrl">
            <summary>
            Specifies the URL for a Microsoft NetShow online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.EnhancedLocation">
            <summary>
            Specifies location information such as the name, address, and optional notes about a location
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.JoinOnlineMeetingUrl">
            <summary>
            Specifies the URL to join an online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.OnlineMeetingSettings">
            <summary>
            Specifies the settings for online meetings
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.IsPrivate">
            <summary>
            Indicates if this meeting request is private
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.BusyStatus">
            <summary>
            The <see cref="F:Independentsoft.Exchange.MeetingRequestPropertyPath.BusyStatus"/> of the meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.MeetingStatus">
            <summary>
            The <see cref="F:Independentsoft.Exchange.MeetingRequestPropertyPath.MeetingStatus"/> status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ResponseStatus">
            <summary>
            The <see cref="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ResponseStatus"/> status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.CommonStartTime">
            <summary>
            The common start time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.CommonEndTime">
            <summary>
            The common end time
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ReminderOverrideDefault">
            <summary>
            Specifies whether to override default for reminders
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ReminderPlaySound">
            <summary>
            Indicates whether to play the sound file when a reminders occurs
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.ReminderSoundFile">
            <summary>
            The path to a new sound file
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.Label">
            <summary>
            The label for the meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.RecurrencePattern">
            <summary>
            The recurrence pattern for the meeting request
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.RecurrenceStart">
            <summary>
            The start of the recurrence series
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.RecurrenceEnd">
            <summary>
            The end of the recurrence series
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MeetingRequestPropertyPath.Priority">
            <summary>
            The priority of the meeting
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingRequestPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxQuery">
            <summary>
            Class MailboxQuery.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxQuery"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxQuery.#ctor(System.String,Independentsoft.Exchange.MailboxSearchScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxQuery"/> class.
            </summary>
            <param name="query">The query.</param>
            <param name="mailboxSearchScope">The mailbox search scope.</param>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxQuery.#ctor(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.MailboxSearchScope})">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxQuery"/> class.
            </summary>
            <param name="query">The query.</param>
            <param name="mailboxSearchScopes">The mailbox search scopes.</param>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxQuery.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxQuery.MailboxSearchScopes">
            <summary>
            Gets the mailbox search scopes.
            </summary>
            <value>The mailbox search scopes.</value>
        </member>
        <member name="T:Independentsoft.Exchange.ItemClass">
            <summary>
            Represents the message class of an item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Journal">
            <summary>
            Journal entries
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Appointment">
            <summary>
            Appointments
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Contact">
            <summary>
            Contacts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.DistributionList">
            <summary>
            Distribution lists
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Document">
            <summary>
            Documents
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.AppointmentOccurrenceException">
            <summary>
            Appointment occurrence exception
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Message">
            <summary>
            E-mail messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Notification">
            <summary>
            Reports from the Internet Mail Connect (the Exchange Server gateway to the Internet)
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.OutOfOfficeTemplate">
            <summary>
            Out-of-office templates
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Post">
            <summary>
            Posting notes in a folder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Note">
            <summary>
            Creating notes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MessageRecall">
            <summary>
            Recalling sent messages from recipient Inboxes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MessageRecallReport">
            <summary>
            Message recall reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.RuleReplyTemplate">
            <summary>
            Editing rule reply templates
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Report">
            <summary>
            Reporting item status
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Resend">
            <summary>
            Resending a failed message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MeetingCancellation">
            <summary>
            Meeting cancellations
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MeetingRequest">
            <summary>
            Meeting requests
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.DeclineMeetingResponse">
            <summary>
            Responses to decline meeting requests
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.AcceptMeetingResponse">
            <summary>
            Responses to accept meeting requests
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TentativeMeetingResponse">
            <summary>
            Responses to tentatively accept meeting requests
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Task">
            <summary>
            Tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequestAccept">
            <summary>
            Responses to accept task requests
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequestDecline">
            <summary>
            Responses to decline task requests
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequest">
            <summary>
            Task requests
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequestUpdate">
            <summary>
            Updates to requested tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.DeliveryReport">
            <summary>
            Delivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.NonDeliveryReport">
            <summary>
            non delivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.ReadReceipt">
            <summary>
            Read receipts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.NonReadReceipt">
            <summary>
            non read receipts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.ConflictResolutionMessage">
            <summary>
            conflict resolution messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.P772Message">
            <summary>
            p772 message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.Rfc822MimeMessage">
            <summary>
            RFC822 mime message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.SecureMessage">
            <summary>
            Secure message
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.SecureServiceReply">
            <summary>
            secure service reply
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.SignedMessage">
            <summary>
            signed messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.SMimeMessage">
            <summary>
            smime messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.SMimeMultipartSignedMessage">
            <summary>
            smime multipart signed messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.StorageQuotaWarning">
            <summary>
            storage quota warning
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MessageRecallReportFailure">
            <summary>
            Message recall report failures
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MessageRecallReportSuccess">
            <summary>
            Message recall report successes
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.ReportMessage">
            <summary>
            Report messages
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MessageRecallReportFailureNonDeliveryReport">
            <summary>
            Message recall report failure nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MeetingCancellationNonDeliveryReport">
            <summary>
            Meeting cancellation nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MeetingRequestDeliveryReport">
            <summary>
            Meeting request delivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MeetingRequestNonReadReceipt">
            <summary>
            Meeting request nonread receipts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MeetingRequestReadReceipt">
            <summary>
            Meeting request read receipts
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.MeetingRequestNonDeliveryReport">
            <summary>
            Decline meeting response nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.DeclineMeetingResponseNonDeliveryReport">
            <summary>
            Decline meeting response nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.AcceptMeetingResponseNonDeliveryReport">
            <summary>
            Accept meeting response nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TentativeMeetingResponseNonDeliveryReport">
            <summary>
            Tentative meeting response nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequestAcceptNonDeliveryReport">
            <summary>
            Task request accept nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequestDeclineNonDeliveryReport">
            <summary>
            Task request decline nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequestNonDeliveryReport">
            <summary>
            Task request nondelivery reports
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ItemClass.TaskRequestUpdateNonDeliveryReport">
            <summary>
            Task request update nondelivery reports
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.InternetMessageHeader">
            <summary>
            Represents the Internet message header for a given header within the headers collection.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.InternetMessageHeader.#ctor">
            <summary>
            Initializes a new instance of the InternetMessageHeader class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.InternetMessageHeader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the InternetMessageHeader class.
            </summary>
            <param name="name">The header name</param>
            <param name="value">The value of the header</param>
        </member>
        <member name="M:Independentsoft.Exchange.InternetMessageHeader.ToString">
            <summary>
            Converts the value of the current InternetMessageHeader object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current InternetMessageHeader object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.InternetMessageHeader.Name">
            <summary>
            Identifies the header name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.InternetMessageHeader.Value">
            <summary>
            Represents the Internet message header that are contained in an item in a mailbox.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.IndexedPropertyPathUri">
            <summary>
            Identifies individual members of a dictionary. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.InternetMessageHeader">
            <summary>
            Represents the message header of an item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.InstantMessengerAddress">
            <summary>
            Represents the instant messaging address of a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.Street">
            <summary>
            Represents the street address of a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.City">
            <summary>
            Represents the city of a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.State">
            <summary>
            Represents the state of a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.Country">
            <summary>
            Represents the country of a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.PostalCode">
            <summary>
            Represents the postal code of a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.PhoneNumber">
            <summary>
            Represents the phone number of a contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.IndexedPropertyPathUri.EmailAddress">
            <summary>
            Represents the e-mail address of a contact.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.EnhancedLocation">
            <summary>
            Contains enhanced location information for a calendar item.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EnhancedLocation.#ctor">
            <summary>
            Initializes a new instance of the EnhancedLocation class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EnhancedLocation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EnhancedLocation class by using the supplied display name. 
            </summary>
            <param name="displayName">The location display name.</param>
        </member>
        <member name="M:Independentsoft.Exchange.EnhancedLocation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EnhancedLocation class by using the supplied display name and calendar item note.
            </summary>
            <param name="displayName">The location display name.</param>
            <param name="annotation">The annotation on the location.</param>
        </member>
        <member name="M:Independentsoft.Exchange.EnhancedLocation.#ctor(System.String,System.String,Independentsoft.Exchange.PersonaPostalAddress)">
            <summary>
            Initializes a new instance of the EnhancedLocation class by using the supplied display name, calendar item note, and persona postal address.
            </summary>
            <param name="displayName">The location display name.</param>
            <param name="annotation">The annotation on the location.</param>
            <param name="postalAddress">The persona postal address.</param>
        </member>
        <member name="P:Independentsoft.Exchange.EnhancedLocation.DisplayName">
            <summary>
            Gets or sets the display name associated with the calendar item. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EnhancedLocation.Annotation">
            <summary>
            Gets or sets the note associated with a calendar item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EnhancedLocation.PostalAddress">
            <summary>
            Gets or sets the postal address for the associated persona. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DeleteAttachmentResponse">
            <summary>
            Response to a DeleteAttachment request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.DeleteAttachmentResponse.ItemId">
            <summary>
            Identifies the parent item or new change key of the root item of a deleted attachment.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DeclineItem">
            <summary>
            Represents a Decline reply to a meeting request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DeclineItem.#ctor">
            <summary>
            Initializes a new instance of the DeclineItem class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.DeclineItem.#ctor(Independentsoft.Exchange.ItemId)">
            <summary>
            Initializes a new instance of the DeclineItem class.
            </summary>
            <param name="referenceItemId">The ItemId of the item</param>
        </member>
        <member name="T:Independentsoft.Exchange.CustomPropertyName">
            <summary>
            Identifies an extended MAPI property name.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyName.#ctor">
            <summary>
            Initializes a new instance of the CustomPropertyName class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CustomPropertyName class.
            </summary>
            <param name="name">The name</param>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CustomPropertyName class.
            </summary>
            <param name="name">The name</param>
            <param name="set">The property set</param>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyName.#ctor(System.String,System.String,Independentsoft.Exchange.MapiPropertyType)">
            <summary>
            Initializes a new instance of the CustomPropertyName class.
            </summary>
            <param name="name">The name</param>
            <param name="set">The property set</param>
            <param name="type">The property type</param>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyName.IsEqual(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Compares the specified <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> with the current object
            </summary>
            <param name="propertyPath">The <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> to compare against</param>
            <returns>true if both objects are equal; false otherwise</returns>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyName.ToString">
            <summary>
            Converts the value of the current CustomPropertyName object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current CustomPropertyName object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.CustomPropertyName.Name">
            <summary>
            Identifies an extended property by its name.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CustomPropertyName.Set">
            <summary>
            Identifies a MAPI extended property set or namespace by its identifying GUID.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CustomPropertyName.Type">
            <summary>
            Represents the property type of a property tag.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CustomPropertyId">
            <summary>
            Identifies an extended MAPI property ID.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyId.#ctor">
            <summary>
            Initializes a new instance of the CustomPropertyId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyId.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the CustomPropertyId class.
            </summary>
            <param name="id">The property id</param>
            <param name="set">The property set</param>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyId.#ctor(System.Int32,System.String,Independentsoft.Exchange.MapiPropertyType)">
            <summary>
            Initializes a new instance of the CustomPropertyId class.
            </summary>
            <param name="id">The property id</param>
            <param name="set">The property set</param>
            <param name="type">The property type</param>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyId.IsEqual(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Compares the specified <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> with the current object
            </summary>
            <param name="propertyPath">The <see cref="T:Independentsoft.Exchange.ExtendedPropertyPath"/> to compare against</param>
            <returns>true if both objects are equal; false otherwise</returns>
        </member>
        <member name="M:Independentsoft.Exchange.CustomPropertyId.ToString">
            <summary>
            Converts the value of the current CustomPropertyId object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current CustomPropertyId object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.CustomPropertyId.Id">
            <summary>
            Identifies an extended property by its dispatch ID.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CustomPropertyId.Set">
            <summary>
            Identifies a MAPI extended property set or namespace by its identifying GUID.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CustomPropertyId.Type">
            <summary>
            Represents the property type of a property tag.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContainmentMode">
            <summary>
            Defines the containment mode for Contains search filters. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentMode.FullString">
            <summary>
            The comparison is between the full string and the constant. The property value and the supplied constant are exactly the same.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentMode.Prefixed">
            <summary>
            The comparison is between the string prefix and the constant.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentMode.Substring">
            <summary>
            The comparison is between a substring of the string and the constant.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentMode.PrefixOnWords">
            <summary>
            The comparison is between a prefix on individual words in the string and the constant.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentMode.ExactPhrase">
            <summary>
            The comparison is between an exact phrase in the string and the constant.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContainmentComparison">
            <summary>
            Indicates whether the search ignores casing and spaces.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.Exact">
            <summary>
            Specifies that the comparison must be exact.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.IgnoreCase">
            <summary>
            Specifies that the comparison ignores casing.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.IgnoreNonSpacingCharacters">
            <summary>
            Specifies that the comparison ignores non-spacing characters.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.Loose">
            <summary>
            To be removed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.IgnoreCaseAndNonSpacingCharacters">
            <summary>
            Specifies that the comparison ignores casing and non-spacing characters.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.LooseAndIgnoreCase">
            <summary>
            To be removed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.LooseAndIgnoreNonSpace">
            <summary>
            To be removed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.LooseAndIgnoreCaseAndIgnoreNonSpace">
            <summary>
            To be removed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ContainmentComparison.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.CategoryList">
            <summary>
            Represents a category list
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.CategoryList.#ctor">
            <summary>
            Initializes a new instance of the CategoryList class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CategoryList.Default">
            <summary>
            Returns the default category
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CategoryList.LastSavedSession">
            <summary>
            Returns the last saved session
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CategoryList.LastSavedTime">
            <summary>
            Returns the last saved time
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.CategoryList.Categories">
            <summary>
            Returns the categories held by this <see cref="T:Independentsoft.Exchange.CategoryList"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.UserSettingName">
            <summary>
            Identifies the user settings to be returned in an Autodiscovery. These settings are the settings that can be requested using the GetUserSettings method. Identifies the user settings. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ActiveDirectoryServer">
            <summary>
            The name of the Active Directory server. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.AlternateMailboxes">
            <summary>
            A list of alternate mailboxes.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.CasVersion">
            <summary>
            The version of the Client Access server that is serving the request (for example, 14.XX.YYY.ZZZ). 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.CrossOrganizationSharingEnabled">
            <summary>
            Indicates that cross-organization sharing is enabled for the user.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpDeliveryReportUrlFragment">
            <summary>
            The URL fragment of the Exchange Control Panel (ECP) for delivery reports.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpEmailSubscriptionsUrlFragment">
            <summary>
            The URL fragment of the ECP for e-mail subscriptions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpTextMessagingUrlFragment">
            <summary>
            The URL fragment of the ECP for text messaging.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpVoicemailUrlFragment">
            <summary>
            The URL fragment of the ECP for voice mail customization.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EwsSupportedSchemas">
            <summary>
            A comma-separated list of schema versions that are supported by EWS. The schema version values will be the same as the values of the ExchangeVersion enumeration. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpDeliveryReportUrl">
            <summary>
            The external URL of the ECP for delivery Reports.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpEmailSubscriptionsUrl">
            <summary>
            The external URL of the ECP for e-mail subscriptions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpTextMessagingUrl">
            <summary>
            The external URL of the ECP for text messaging.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpUrl">
            <summary>
            The external URL of the ECP.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpVoicemailUrl">
            <summary>
            The external URL of the ECP for voice mail customization.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEwsUrl">
            <summary>
            The external URL of EWS. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalImap4Connections">
            <summary>
            The external connection settings list for the IMAP4 protocol.   
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalMailboxServer">
            <summary>
            The name of the RPC over HTTP server. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalMailboxServerAuthenticationMethods">
            <summary>
            The authentication methods that are supported by the RPC over HTTP server. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalMailboxServerRequiresSSL">
            <summary>
            Indicates whether the RPC over HTTP server requires SSL. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalOABUrl">
            <summary>
            The external URL of the OAB. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalPop3Connections">
            <summary>
            The external connection settings list for the POP3 protocol.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalSmtpConnections">
            <summary>
            The external connection settings list for the SMTP protocol.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalUMUrl">
            <summary>
            The external URL of the Unified Messaging services. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalWebClientUrls">
            <summary>
            The external URLs of the Exchange Web client. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpDeliveryReportUrl">
            <summary>
            The internal URL of the ECP for delivery reports.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpEmailSubscriptionsUrl">
            <summary>
            The internal URL of the ECP for e-mail subscriptions.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpTextMessagingUrl">
            <summary>
            The internal URL of the ECP for text messaging.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpUrl">
            <summary>
            The internal URL of the ECP.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpVoicemailUrl">
            <summary>
            The internal URL of the ECP for voice mail customization.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEwsUrl">
            <summary>
            The internal URL of Exchange Web Services (EWS). 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalImap4Connections">
            <summary>
            The internal connection settings list for the IMAP4 protocol.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalMailboxServer">
            <summary>
            The fully qualified domain name (FQDN) of the mailbox server. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalMailboxServerDN">
            <summary>
            The legacy distinguished name of the mailbox server. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalOABUrl">
            <summary>
            The internal URL of the offline address book (OAB). 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalPop3Connections">
            <summary>
            The internal connection settings list for the POP3 protocol.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalRpcClientServer">
            <summary>
            The FQDN of the RPC client server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalSmtpConnections">
            <summary>
            The internal connection settings list for the SMTP protocol.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalUMUrl">
            <summary>
            The internal URL of the Unified Messaging services. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalWebClientUrls">
            <summary>
            The internal URLs of the Exchange Web client. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.MailboxDN">
            <summary>
            The distinguished name of the mailbox database of the user's mailbox. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.PublicFolderServer">
            <summary>
            The name of the public folders server. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.UserDeploymentId">
            <summary>
            The deployment ID of the user. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.UserDisplayName">
            <summary>
            The display name of the user. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.UserDN">
            <summary>
            The legacy distinguished name of the user. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpRetentionPolicyTagsUrl">
            <summary>
            Internal ECP Retention Policy Tags Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpPublishingUrl">
            <summary>
            Internal ECP Publishing Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpPhotoUrl">
            <summary>
            Internal ECP Photo Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpConnectUrl">
            <summary>
            Internal ECP Connect Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpTeamMailboxUrl">
            <summary>
            Internal ECP Team Mailbox Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpTeamMailboxCreatingUrl">
            <summary>
            Internal ECP Team Mailbox Creating Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpTeamMailboxEditingUrl">
            <summary>
            Internal ECP Team Mailbox Editing Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpTeamMailboxHidingUrl">
            <summary>
            Internal ECP Team Mailbox Hiding Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEcpExtensionInstallationUrl">
            <summary>
            Internal ECP Extension Installation Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalEmwsUrl">
            <summary>
            Internal EMWS Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalPhotosUrl">
            <summary>
            Internal Photos Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpRetentionPolicyTagsUrlFragment">
            <summary>
            ECP Retention Policy Tags Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpPublishingUrlFragment">
            <summary>
            ECP Publishing Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpPhotoUrlFragment">
            <summary>
            ECP Photo Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpConnectUrlFragment">
            <summary>
            ECP Connect Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpTeamMailboxUrlFragment">
            <summary>
            ECP Team Mailbox Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpTeamMailboxCreatingUrlFragment">
            <summary>
            ECP Team Mailbox Creating Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpTeamMailboxEditingUrlFragment">
            <summary>
            ECP Team Mailbox Editing Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EcpExtensionInstallationUrlFragment">
            <summary>
            ECP Extension Installation Url Fragment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpRetentionPolicyTagsUrl">
            <summary>
            External ECP Retention Policy Tags Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpPublishingUrl">
            <summary>
            External ECP Publishing Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpPhotoUrl">
            <summary>
            External ECP Photo Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpConnectUrl">
            <summary>
            External ECP Connect Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpTeamMailboxUrl">
            <summary>
            External ECP Team Mailbox Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpTeamMailboxCreatingUrl">
            <summary>
            External ECP Team Mailbox Creating Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpTeamMailboxEditingUrl">
            <summary>
            External ECP Team Mailbox Editing Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpTeamMailboxHidingUrl">
            <summary>
            External ECP Team Mailbox Hiding Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEcpExtensionInstallationUrl">
            <summary>
            External ECP Extension Installation Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEmwsUrl">
            <summary>
            External EMWS Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalPhotosUrl">
            <summary>
            External Photos Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalServerExclusiveConnect">
            <summary>
            Internal Server Exclusive Connect.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalEwsVersion">
            <summary>
            External EWS Version.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.MobileMailboxPolicy">
            <summary>
            Mobile Mailbox Policy.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.DocumentSharingLocations">
            <summary>
            Document Sharing Locations.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.UserMSOnline">
            <summary>
            User MS Online.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalMailboxServerAuthenticationMethods">
            <summary>
            Internal Mailbox Server Authentication Methods.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.MailboxVersion">
            <summary>
            Mailbox Version.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.SPMySiteHostUrl">
            <summary>
            SP My Site Host Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.SiteMailboxCreationUrl">
            <summary>
            Site Mailbox Creation Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalRpcHttpServer">
            <summary>
            Internal RPC HTTP Server.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalRpcHttpConnectivityRequiresSsl">
            <summary>
            Internal RPC HTTP Connectivity Requires SSL.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InternalRpcHttpAuthenticationMethod">
            <summary>
            Internal RPC HTTP Authentication Method.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExternalServerExclusiveConnect">
            <summary>
            External Server Exclusive Connect.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ExchangeRpcUrl">
            <summary>
            Exchange RPC Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.ShowGalAsDefaultView">
            <summary>
            Show Gal As Default View.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.AutoDiscoverSMTPAddress">
            <summary>
            Auto Discover SMTP Address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InteropExternalEwsUrl">
            <summary>
            Interop External EWS Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.InteropExternalEwsVersion">
            <summary>
            Interop External EWS Version.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.PublicFolderInformation">
            <summary>
            Public Folder Information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.RedirectUrl">
            <summary>
            Redirect Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.EwsPartnerUrl">
            <summary>
            EWS Partner Url.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.CertPrincipalName">
            <summary>
            Certification Principal Name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.GroupingInformation">
            <summary>
            Grouping Information.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.UserSettingName.MapiHttpEnabled">
            <summary>
            MAPI HTTP Enabled.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.MobileSyncError">
            <summary>
            Contains an Autodiscover error response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.MobileSyncError.#ctor">
            <summary>
            Initializes a new instance of the MobileSyncError class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncError.Status">
            <summary>
            Contains the error code for an error Autodiscover response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncError.Message">
            <summary>
            Contains the error message for an error Autodiscover response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.MobileSyncError.DebugData">
            <summary>
            Contains the debug data for an error Autodiscover response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.Error">
            <summary>
            Contains an Autodiscover error response.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.Error.#ctor">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Error.Time">
            <summary>
            Represents the time when the error response was returned.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Error.Id">
            <summary>
            Represents a hash of the name of the computer that is running Microsoft Exchange Server that has the Client Access server role installed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Error.Code">
            <summary>
            Contains the error code for an error Autodiscover response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Error.Message">
            <summary>
            Contains the error message for an error Autodiscover response.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.Error.DebugData">
            <summary>
            Contains the debug data for an error Autodiscover response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.And">
            <summary>
             Represents a search expression that allows you to perform a Boolean AND operation between two or more search expressions.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The long value of the specified property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The double value of the specified property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The boolean value of the specified property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The DateTime value of the specified property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="propertyPath">The property path</param>
            <param name="value">The string value of the specified property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="propertyPath1">The property path</param>
            <param name="propertyPath2">The <see cref="T:Independentsoft.Exchange.PropertyPath"/> value of the specified property path</param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="restriction1">The first <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction2">The second <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="restriction1">The first <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction2">The second <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction3">The third <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction,Independentsoft.Exchange.Restriction)">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="restriction1">The first <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction2">The second <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction3">The third <see cref="T:Independentsoft.Exchange.Restriction"/></param>
            <param name="restriction4">The fourth <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.And.#ctor(System.Collections.Generic.IList{Independentsoft.Exchange.Restriction})">
            <summary>
            Initializes a new instance of the And class.
            </summary>
            <param name="restrictions">A list of <see cref="T:Independentsoft.Exchange.Restriction"/></param>
        </member>
        <member name="M:Independentsoft.Exchange.And.ToString">
            <summary>
            Converts the value of the current And object to its equivalent string representation. 
            </summary>
            <returns>Returns the XML representation of the current And object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.AlternatePublicFolderItemId">
            <summary>
            Describes a public folder item identifier to convert to another identifier format. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AlternatePublicFolderItemId.#ctor">
            <summary>
            Initializes a new instance of the AlternatePublicFolderItemId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AlternatePublicFolderItemId.#ctor(Independentsoft.Exchange.IdFormat,System.String,System.String)">
            <summary>
            Initializes a new instance of the AlternatePublicFolderItemId class with the specified format, folderId and itemId.
            </summary>
            <param name="format">The format that describes the public folder item identifier to convert</param>
            <param name="folderId">The public folder that contains the public folder item</param>
            <param name="itemId">The public folder item to convert</param>
        </member>
        <member name="P:Independentsoft.Exchange.AlternatePublicFolderItemId.Format">
            <summary>
            Identifies the format that describes the public folder item identifier to convert.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AlternatePublicFolderItemId.FolderId">
            <summary>
            Identifies the public folder that contains the public folder item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AlternatePublicFolderItemId.ItemId">
            <summary>
            Identifier the public folder item to convert.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.StandardPropertySet">
             <summary>
             Class StandardPropertySet.
             </summary>
             <example>
             This example uses <see cref="F:Independentsoft.Msg.StandardPropertySet.PublicStrings"/> to create a contact with an extended property
             <code>
             Service service = new Service("https://myserver/ews/Exchange.asmx", "username", "password");
             PropertyName myPropertyName = new PropertyName("myfield1", StandardPropertySet.PublicStrings, MapiPropertyType.String);
             ExtendedProperty myProperty = new ExtendedProperty(myPropertyName, "test");
            
             Contact contact = new Contact();
             contact.GivenName = "John";
             contact.Surname = "Smith";
             contact.FileAsMapping = FileAsMapping.LastSpaceFirst;
             contact.CompanyName = "Crestron";
             contact.BusinessPhone = "555-666-777";
             contact.Email1Address = "john@Crestron.com";
             contact.Email1DisplayName = "John Smith";
             contact.Email1DisplayAs = "John Smith";
             contact.Email1Type = "SMTP";
             contact.ExtendedProperties.Add(myProperty);
            
             ItemId itemId = service.CreateItem(contact);
             </code>
             </example>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.Mapi">
            <summary>
            MAPI
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.PublicStrings">
            <summary>
            Public strings
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.InternetHeaders">
            <summary>
            Internet headers
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.Appointment">
            <summary>
            Appointment
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.Task">
            <summary>
            Tasks
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.Common">
            <summary>
            Common
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.StandardPropertySet.Journal">
            <summary>
            Journal
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.SelectedMailingAddress">
            <summary>
            Indicating the type of the mailing address for the contact.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.SelectedMailingAddress.Business">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.SelectedMailingAddress.Home">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.SelectedMailingAddress.Other">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.SelectedMailingAddress.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.YearlyRegeneratingPattern">
            <summary>
            Describes the frequency, in years, in which a task is regenerated.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.YearlyRegeneratingPattern.#ctor">
            <summary>
            Initializes a new instance of the YearlyRegeneratingPattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.YearlyRegeneratingPattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the YearlyRegeneratingPattern class.
            </summary>
            <param name="interval">Specifies the year interval during which a new task is regenerated after the completion of the task</param>
        </member>
        <member name="M:Independentsoft.Exchange.YearlyRegeneratingPattern.ToString">
            <summary>
            Converts the value of the current YearlyRegeneratingPattern object to its equivalent string representation.
            </summary>
            <returns>The XML representation of the current YearlyRegeneratingPattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.YearlyRegeneratingPattern.Interval">
            <summary>
            Defines the interval, in years, during which a new task is regenerated after the completion of the task.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.WeeklyRegeneratingPattern">
            <summary>
            Describes the frequency, in weeks, in which a task is regenerated.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.WeeklyRegeneratingPattern.#ctor">
            <summary>
            Initializes a new instance of the WeeklyRegeneratingPattern class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.WeeklyRegeneratingPattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the WeeklyRegeneratingPattern class.
            </summary>
            <param name="interval">Specifies the week interval since the task was completed</param>
        </member>
        <member name="M:Independentsoft.Exchange.WeeklyRegeneratingPattern.ToString">
            <summary>
            Converts the value of the current WeeklyRegeneratingPattern object to its equivalent string representation. 
            </summary>
            <returns>The XML representation of the current WeeklyRegeneratingPattern object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.WeeklyRegeneratingPattern.Interval">
            <summary>
            Defines the interval, in weeks, since the task was completed, after which a new task is regenerated.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UserId">
            <summary>
            Identifies a delegate user or a user who has folder access permissions. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserId.#ctor">
            <summary>
            Initializes a new instance of the UserId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UserId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UserId class.
            </summary>
            <param name="primarySmtpAddress">The primary SMTP address</param>
        </member>
        <member name="M:Independentsoft.Exchange.UserId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the UserId class.
            </summary>
            <param name="primarySmtpAddress">The primary SMTP address</param>
            <param name="displayName">The display name</param>
        </member>
        <member name="M:Independentsoft.Exchange.UserId.#ctor(Independentsoft.Exchange.StandardUser)">
            <summary>
            Initializes a new instance of the UserId class.
            </summary>
            <param name="standardUser">The Anonymous and Default user accounts</param>
        </member>
        <member name="M:Independentsoft.Exchange.UserId.ToString">
            <summary>
            Converts the value of the current UserId object to its equivalent string representation. 
            </summary>
            <returns>The string representation of the current UserId object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.UserId.Sid">
            <summary>
            Represents the security descriptor definition language (SDDL) form of the security identifier (SID).
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserId.PrimarySmtpAddress">
            <summary>
            Represents the primary Simple Mail Transfer Protocol (SMTP) address of an account to be used for delegate access.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserId.DisplayName">
            <summary>
            Defines the display name of a folder, contact, distribution list, or delegate user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UserId.StandardUser">
            <summary>
            Identifies Anonymous and Default user accounts for delegate access. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UnifiedMessaging.CallInfo">
            <summary>
            Defines a response to a GetCallInfo Operation request.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.UnifiedMessaging.CallInfo.#ctor">
            <summary>
            Initializes a new instance of the CallInfo class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.CallInfo.State">
            <summary>
            Contains a value that indicates the status of a call for which the GetCallInfo Operation requested information.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UnifiedMessaging.CallInfo.EventCause">
            <summary>
            Contains a value that indicates the cause of an event for a call for which the GetCallInfo Operation requested information.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TaskDelegateState">
            <summary>
            Represents the status types of a delegated task. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskDelegateState.NoMatch">
            <summary>
            Specifies that this is not a delegated task or that the task request has been created but not sent. This is also used for a task request message, whether in the owner's Sent Items folder or the delegate's Inbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskDelegateState.OwnNew">
            <summary>
            Specifies that this is a new task request that has been sent, but the delegate has not yet responded to the task.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskDelegateState.Owned">
            <summary>
            Specifies that a task has been accepted. This value should not be in the enumeration.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskDelegateState.Accepted">
            <summary>
            Specifies that the task has been declined.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskDelegateState.Declined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.TaskDelegateState.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ServerVersionInfo">
            <summary>
            Represents the Microsoft Exchange Server version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServerVersionInfo.MajorVersion">
            <summary>
            Describes the major version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServerVersionInfo.MinorVersion">
            <summary>
            Describes the minor version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServerVersionInfo.MajorBuildNumber">
            <summary>
            Describes the major build number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServerVersionInfo.MinorBuildNumber">
            <summary>
            Describes the minor build number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ServerVersionInfo.Version">
            <summary>
            Describes the Exchange Web Services (EWS) schema version.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Sensitivity">
            <summary>
            Indicates the sensitivity level of an item.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Sensitivity.Normal">
            <summary>
            Normal sensitivity.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Sensitivity.Personal">
            <summary>
            Personal sensitivity.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Sensitivity.Private">
            <summary>
            Private sensitivity.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Sensitivity.Confidential">
            <summary>
            Confidential sensitivity.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Sensitivity.None">
            <summary>
            No sensitivity specified.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SendMeetingInvitations">
            <summary>
            Specifies constants that define how meeting invitations are handled. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingInvitations.SendToNone">
            <summary>
            Do not send meeting invitations.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingInvitations.SendToAll">
            <summary>
            Send meeting invitations to all attendees but do not save a copy of the meeting invitation in the organizer's Sent Items folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SendMeetingInvitations.SendToAllAndSaveCopy">
            <summary>
            Send meeting invitations to all attendees and save a copy of the meeting invitation in the organizer's Sent Items folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SelectedMailingAddress">
            <summary>
            Indicates the address to use as the mailing address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SelectedMailingAddress.Business">
            <summary>
            Business mailing address. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SelectedMailingAddress.Home">
            <summary>
            Home mailing address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SelectedMailingAddress.Other">
            <summary>
            Other mailing address.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.SelectedMailingAddress.None">
            <summary>
            No mailing address defined.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.SearchFolder">
            <summary>
            Represents a search folder that is contained in a mailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolder.#ctor">
            <summary>
            Initializes a new instance of the SearchFolder class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SearchFolder class.
            </summary>
            <param name="displayName">The display name</param>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolder.#ctor(Independentsoft.Exchange.SearchFolderParameters)">
            <summary>
            Initializes a new instance of the SearchFolder class.
            </summary>
            <param name="parameters">The <see cref="T:Independentsoft.Exchange.SearchFolderParameters"/> for the search folder</param>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolder.#ctor(System.String,Independentsoft.Exchange.SearchFolderParameters)">
            <summary>
            Initializes a new instance of the SearchFolder class.
            </summary>
            <param name="displayName">The display name</param>
            <param name="parameters">The <see cref="T:Independentsoft.Exchange.SearchFolderParameters"/> for the search folder</param>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SearchFolder class.
            </summary>
            <param name="displayName">The display name</param>
            <param name="folderClass">The folder class</param>
        </member>
        <member name="M:Independentsoft.Exchange.SearchFolder.ToString">
            <summary>
            Converts the value of the current SearchFolder object to its equivalent string representation. 
            </summary>
            <returns>Returns the string representation of the current SearchFolder object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.SearchFolder.Parameters">
            <summary>
            Returns the <see cref="T:Independentsoft.Exchange.SearchFolderParameters"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Rule">
            <summary>
            Contains a single protection rule.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Rule.#ctor">
            <summary>
            Initializes a new instance of the Rule class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.Id">
            <summary>
            Specifies a rule identifier.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.DisplayName">
            <summary>
            Contains the display name of a rule. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.Priority">
            <summary>
            Indicates the order in which a rule is to be run. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.IsEnabled">
            <summary>
            Indicates whether the rule is enabled. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.IsNotSupported">
            <summary>
            Indicates whether the rule is supported or not. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.IsInError">
            <summary>
            Indicates whether the rule is in an error condition.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.Conditions">
            <summary>
            Identifies the conditions that, when fulfilled, will trigger the rule actions for a rule. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.Exceptions">
            <summary>
            Identifies the exceptions that represent all the available rule exception conditions for the inbox rule. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Rule.Actions">
            <summary>
            Represents the actions to be taken on a message when the conditions are fulfilled. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ReminderType">
            <summary>
            Defines reminder types
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderType.All">
            <summary>
            All reminders
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderType.Current">
            <summary>
            Current reminder
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderType.Old">
            <summary>
            Old reminders
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ReminderType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.NonIndexableItemStatistic">
            <summary>
            Contains statistical information about an item in a mailbox where an attempt to index failed
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.NonIndexableItemStatistic.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Independentsoft.Exchange.NonIndexableItemStatistic"/> class
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemStatistic.Mailbox">
            <summary>
            Gets the mailbox name
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemStatistic.ItemCount">
            <summary>
            Gets or sets the number of items in the mailbox
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.NonIndexableItemStatistic.ErrorMessage">
            <summary>
            Gets the error message
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MessageTrackingReportTemplate">
            <summary>
            Represents the type of report to get.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingReportTemplate.Summary">
            <summary>
            Specifies that the report will display all the recipients of the message and the delivery status of the message to each recipient. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageTrackingReportTemplate.RecipientPath">
            <summary>
            Specifies that for a single recipient, the report will display a full history of the events that occurred. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MeetingCancellationPropertyPath">
            <summary>
            Represents a meeting cancellation property path
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MeetingCancellationPropertyPath.AllPropertyPaths">
            <summary>
            Returns all property paths
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxSearchLocation">
            <summary>
            Defines the location for mailbox searches
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxSearchLocation.PrimaryOnly">
            <summary>
            PrimaryOnly
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxSearchLocation.ArchiveOnly">
            <summary>
            ArchiveOnly
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxSearchLocation.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MailboxSearchLocation.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxHoldResult">
            <summary>
            Contains the result of a mailbox hold
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxHoldResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxHoldResult"/> class
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxHoldResult.HoldId">
            <summary>
            Gets the mailbox hold identifier
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxHoldResult.Query">
            <summary>
            Gets the search query for the hold
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxHoldResult.MailboxHoldStatuses">
            <summary>
            Contains a list of <see cref="T:Independentsoft.Exchange.MailboxHoldStatus"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.HoldStatusType">
            <summary>
            Defines the status of the mailbox hold
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldStatusType.NotOnHold">
            <summary>
            The mailbox is not on hold
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldStatusType.Pending">
            <summary>
            The hold is pending
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldStatusType.OnHold">
            <summary>
            The hold was successfully applied to the mailbox
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldStatusType.PartialHold">
            <summary>
            Hold was applied on some mailboxes, but not on all
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.HoldStatusType.Failed">
            <summary>
            Failed to apply hold on the mailbox
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetSharingFolderResponse">
            <summary>
            Defines a response to a GetSharingFolder Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetSharingFolderResponse.FolderId">
            <summary>
            Contains the identifier and change key of a folder.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetRoomListsResponse">
            <summary>
            Defines the response from a GetRoomLists Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetRoomListsResponse.Mailboxes">
            <summary>
            Defines the collection of e-mail address and display name that represents the room list. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetNonIndexableItemStatisticsResponse">
            <summary>
            Class GetNonIndexableItemStatisticsResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetNonIndexableItemStatisticsResponse.Statistics">
            <summary>
            Gets the statistics.
            </summary>
            <value>The statistics.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Gender">
            <summary>
            Defines the genders that are available for ad group targeting. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Gender.Female">
            <summary>
            Female.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Gender.Male">
            <summary>
            Male.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Gender.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FolderChange">
            <summary>
            Represents a collection of changes to be performed on a single folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Property)">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="folderId">The folder identifier</param>
            <param name="propertyToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="folderId">The folder identifier</param>
            <param name="propertyToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.FolderId,Independentsoft.Exchange.Property,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="folderId">The folder identifier</param>
            <param name="propertyToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertyToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Property)">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="standardFolder">A <see cref="T:Independentsoft.Exchange.StandardFolder"/></param>
            <param name="propertyToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="standardFolder">A <see cref="T:Independentsoft.Exchange.StandardFolder"/></param>
            <param name="propertyToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.StandardFolder,Independentsoft.Exchange.Property,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="standardFolder">A <see cref="T:Independentsoft.Exchange.StandardFolder"/></param>
            <param name="propertyToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertyToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.Property})">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="folderId">The folder identifier</param>
            <param name="propertiesToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="folderId">The folder identifier</param>
            <param name="propertiesToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.FolderId,System.Collections.Generic.IList{Independentsoft.Exchange.Property},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="folderId">The folder identifier</param>
            <param name="propertiesToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertiesToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.Property})">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="standardFolder">A <see cref="T:Independentsoft.Exchange.StandardFolder"/></param>
            <param name="propertiesToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="standardFolder">A <see cref="T:Independentsoft.Exchange.StandardFolder"/></param>
            <param name="propertiesToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.#ctor(Independentsoft.Exchange.StandardFolder,System.Collections.Generic.IList{Independentsoft.Exchange.Property},System.Collections.Generic.IList{Independentsoft.Exchange.PropertyPath})">
            <summary>
            Initializes a new instance of the FolderChange class.
            </summary>
            <param name="standardFolder">A <see cref="T:Independentsoft.Exchange.StandardFolder"/></param>
            <param name="propertiesToSet">The <see cref="T:Independentsoft.Exchange.Property"/> to set</param>
            <param name="propertiesToDelete">The <see cref="T:Independentsoft.Exchange.Property"/> to delete</param>
        </member>
        <member name="M:Independentsoft.Exchange.FolderChange.ToString">
            <summary>
            Converts the value of the current FolderChange object to its equivalent string representation.
            </summary>
            <returns>Returns the XML representation of the current FolderChange object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.FolderChange.FolderId">
            <summary>
            Contains the identifier and change key of a folder to update.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FolderChange.PropertiesToSet">
            <summary>
            Represents an update that sets the value for a property on a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FolderChange.PropertiesToDelete">
            <summary>
            Represents an operation to delete a property from a folder.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FolderChange.PropertiesToAppend">
            <summary>
            Represents an action to adds data to an existing property.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FindMessageTrackingReportResponse">
            <summary>
            Contains the status and result of a single FindMessageTrackingReport Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindMessageTrackingReportResponse.Diagnostics">
            <summary>
            Contains information that will be used to produce various statistical reports for the tracking feature in a DataCenter.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindMessageTrackingReportResponse.MessageTrackingSearchResults">
            <summary>
            Contains an array of messages that match the search requirements.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.EffectiveRights">
            <summary>
            Contains the client's rights based on the permission settings for the item or folder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.EffectiveRights.#ctor">
            <summary>
            Initializes a new instance of the EffectiveRights class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EffectiveRights.CreateAssociated">
            <summary>
            Indicates whether a client can create an associated contents table.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EffectiveRights.CreateContents">
            <summary>
            Indicates whether a client can create a contents table.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EffectiveRights.CreateHierarchy">
            <summary>
            Indicates whether a client can create a hierarchy table. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EffectiveRights.Delete">
            <summary>
            Indicates whether a client can delete a folder or item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EffectiveRights.Modify">
            <summary>
            Indicates whether a client can modify a folder or item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.EffectiveRights.Read">
            <summary>
            Indicates whether a client can read a folder or item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ContactEntity">
            <summary>
            Represents a single contact entity.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ContactEntity.#ctor">
            <summary>
            Initializes a new instance of the ContactEntity class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.ContactEntity.ToString">
            <summary>
            Converts the value of the current ContactEntity object to its equivalent string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.Position">
            <summary>
            Represents the position of the entity.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.PersonName">
            <summary>
            Represents the name of an individual.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.BusinessName">
            <summary>
            Represents the name of a business.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.DisplayName">
            <summary>
            Represents the display name of a contact.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.Urls">
            <summary>
            Represents a list of URLs.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.EmailAddresses">
            <summary>
            Represents a list of extracted email addresses.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.Addresses">
            <summary>
            Represents a list of addresses.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.AssistantPhone">
            <summary>
            Represents the telephone number as the assistant's telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.BusinessFax">
            <summary>
            Represents the telephone number as a business fax number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.BusinessPhone">
            <summary>
            Represents the telephone number as a business telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.BusinessPhone2">
            <summary>
            Represents the telephone number as a second business telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.CallbackPhone">
            <summary>
            Represents the telephone number as a callback number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.CarPhone">
            <summary>
            Represents the telephone number as a car telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.CompanyPhone">
            <summary>
            Represents the telephone number as the company's telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.HomeFax">
            <summary>
            Represents the telephone number as a home fax number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.HomePhone">
            <summary>
            Represents the telephone number as a home telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.HomePhone2">
            <summary>
            Represents the telephone number as a second home telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.Isdn">
            <summary>
            Represents the telephone number as an Integrated Services Digital Network (ISDN) line.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.MobilePhone">
            <summary>
            Represents the telephone number as a mobile phone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.OtherFax">
            <summary>
            Represents the telephone number as another fax number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.OtherPhone">
            <summary>
            Represents the telephone number as another telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.Pager">
            <summary>
            Represents the telephone number as a pager.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.PrimaryPhone">
            <summary>
            Represents the telephone number as the primary telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.RadioPhone">
            <summary>
            Represents the telephone number as a radio telephone.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.Telex">
            <summary>
            Represents the telephone number as a telex telephone number.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ContactEntity.TtyTddPhone">
            <summary>
            Represents the telephone number as a telex telephone number.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.WebProtocol">
            <summary>
            E-mail is accessed from a Web browser by using the URL that is specified in the Server (POX) element. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.WebProtocol.#ctor">
            <summary>
            Initializes a new instance of the WebProtocol class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.WebProtocol.Type">
            <summary>
            Identifies the type of the configured mail account.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.WebProtocol.InternalAccess">
            <summary>
            Contains the Outlook Web Access URLs that a client can connect to when it is inside the firewall.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.WebProtocol.ExternalAccess">
            <summary>
            Contains the Outlook Web Access URLs that a client can connect to when it is outside the firewall.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.Mailbox">
            <summary>
            Represents a mailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Mailbox.#ctor">
            <summary>
            Initializes a new instance of the Mailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.Mailbox.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Mailbox.
            </summary>
            <param name="emailAddress">Email address of mailbox owner.</param>
            <param name="name">Name of mailbox owner.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Mailbox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Mailbox.
            </summary>
            <param name="mailbox">Email address and name of mailbox owner.</param>
        </member>
        <member name="M:Independentsoft.Email.Mime.Mailbox.ToString">
            <summary>
            Returns a String that represents the current Mailbox.
            </summary>
            <returns>The string representation of the current mailbox</returns>
        </member>
        <member name="P:Independentsoft.Email.Mime.Mailbox.Name">
            <summary>
            Gets or sets display name.
            </summary>
        </member>
        <member name="P:Independentsoft.Email.Mime.Mailbox.EmailAddress">
            <summary>
            Gets or sets email address.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.RecurrenceType">
            <summary>
            Specifies the recurrence pattern type.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceType.Daily">
            <summary>
            Represents a daily recurrence pattern. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceType.Weekly">
            <summary>
            Represents a weekly recurrence pattern.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceType.Monthly">
            <summary>
            Represents a monthly recurrence pattern. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceType.MonthNth">
            <summary>
            Represents a MonthNth recurrence pattern.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceType.Yearly">
            <summary>
            Represents a yearly recurrence pattern. 
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceType.YearNth">
            <summary>
            Represents a YearNth recurrence pattern.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.RecurrenceType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Msg.NoteColor">
            <summary>
            Represents Note item background color.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.NoteColor.Blue">
            <summary>
            Blue color.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.NoteColor.Green">
            <summary>
            Green color.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.NoteColor.Pink">
            <summary>
            Pink color.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.NoteColor.Yellow">
            <summary>
            Yellow color.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.NoteColor.White">
            <summary>
            White color.
            </summary>
        </member>
        <member name="F:Independentsoft.Msg.NoteColor.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonString">
            <summary>
            Definition of JsonString class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonString.#ctor(System.String)">
            <summary>
            Initializes a JsonString instance.
            </summary>
            <param name="value">value of the JsonString instance.</param>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonString.ToString">
            <summary>
            Reports the JsonString value in double quotes.
            </summary>
            <returns>string returned.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonString.GetHashCode">
            <summary>
            Reports the JsonString hash code.
            </summary>
            <returns>hash code.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current JsonString.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns><b>true</b> if the specified Object is equal to the current JsonString; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Independentsoft.Json.Parser.JsonString.Value">
            <summary>
            Reports the JsonString value.
            </summary>
        </member>
        <member name="T:Independentsoft.Json.Parser.JsonArray">
            <summary>
            Definition of JsonArray class.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonArray.#ctor">
            <summary>
            Initializes a JsonArray instance.
            </summary>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonArray.ToString">
            <summary>
            Reports the JsonArray in a string.
            </summary>
            <returns>string returned.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonArray.GetHashCode">
            <summary>
            Reports the JsonArray hash code.
            </summary>
            <returns>hash code returned.</returns>
        </member>
        <member name="M:Independentsoft.Json.Parser.JsonArray.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current JsonArray.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns><b>true</b> if the specified Object is equal to the current JsonArray; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Independentsoft.Json.Parser.JsonArray.Values">
            <summary>
            Reports the JsonArray values.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.WorkingPeriod">
            <summary>
            Contains the work week days and hours of the mailbox user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.WorkingPeriod.#ctor">
            <summary>
            Initializes a new instance of the WorkingPeriod class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.WorkingPeriod.Days">
            <summary>
            Contains the list of working days scheduled for the mailbox user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.WorkingPeriod.StartTime">
            <summary>
            Represents the start of the working day for a mailbox user.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.WorkingPeriod.EndTime">
            <summary>
            Represents the end of the working day for a mailbox user.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.WorkingHours">
            <summary>
            Represents the time zone settings and working hours for the requested mailbox user.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.WorkingHours.#ctor">
            <summary>
            Initializes a new instance of the WorkingHours class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.WorkingHours.TimeZone">
            <summary>
            Contains elements that identify time zone information. This element also contains information about the transition between standard time and daylight saving time. This element is required if the WorkingHours element is used.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.WorkingHours.WorkingPeriods">
            <summary>
            Contains working period information for the mailbox user. This element is required if the WorkingHours element is used.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.UploadItemsResponse">
            <summary>
            Contains the status and results of a request to upload a single mailbox item.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.UploadItemsResponse.ItemId">
            <summary>
            Contains the item identifier of an uploaded item.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.TasksFolder">
            <summary>
            Represents a Tasks folder that is contained in a mailbox.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TasksFolder.#ctor">
            <summary>
            Initializes a new instance of the TasksFolder class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.TasksFolder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TasksFolder class.
            </summary>
            <param name="displayName">The display name</param>
        </member>
        <member name="M:Independentsoft.Exchange.TasksFolder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TasksFolder class.
            </summary>
            <param name="displayName">The display name</param>
            <param name="folderClass">The folder class</param>
        </member>
        <member name="M:Independentsoft.Exchange.TasksFolder.ToString">
            <summary>
            Converts the value of the current TasksFolder object to its equivalent string representation. 
            </summary>
            <returns>The string representation of the current TasksFolder object</returns>
        </member>
        <member name="T:Independentsoft.Exchange.StreamingEventsResponse">
            <summary>
            Class StreamingEventsResponse.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingEventsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StreamingEventsResponse"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingEventsResponse.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StreamingEventsResponse"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingEventsResponse.#ctor(Crestron.SimplSharp.CrestronIO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.StreamingEventsResponse"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Independentsoft.Exchange.StreamingEventsResponse.Parse(System.IO.Stream)">
            <summary>
            Parses the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Independentsoft.Exchange.StreamingEventsResponse.Notifications">
            <summary>
            Gets the notifications.
            </summary>
            <value>The notifications.</value>
        </member>
        <member name="P:Independentsoft.Exchange.StreamingEventsResponse.ErrorSubscriptionIds">
            <summary>
            Gets the error subscription ids.
            </summary>
            <value>The error subscription ids.</value>
        </member>
        <member name="P:Independentsoft.Exchange.StreamingEventsResponse.ConnectionStatus">
            <summary>
            Gets the connection status.
            </summary>
            <value>The connection status.</value>
        </member>
        <member name="T:Independentsoft.Exchange.StandardPropertySet">
            <summary>
            Specifies the well-known property set IDs for extended properties.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.Meeting">
            <summary>
            Specifies the meeting property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.Appointment">
            <summary>
            Specifies the appointment property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.Common">
            <summary>
            Specifies the common property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.PublicStrings">
            <summary>
            Specifies the public strings property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.Address">
            <summary>
            Specifies the address property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.InternetHeaders">
            <summary>
            Specifies the Internet headers property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.CalendarAssistant">
            <summary>
            Specifies the calendar assistant property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.UnifiedMessaging">
            <summary>
            Specifies the Unified Messaging property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.Task">
            <summary>
            Specifies the task property set ID by name.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.StandardPropertySet.Sharing">
            <summary>
            
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.RuleValidationErrorCode">
            <summary>
            Gets the validation error code. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.ADOperationFailure">
            <summary>
            The Active Directory operation failed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.ConnectedAccountNotFound">
            <summary>
            The specified e-mail account was not found.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.CreateWithRuleId">
            <summary>
            An attempt was made to create a rule with an ID. The IDs of new rules are generated by the server and are not provided by the client.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.EmptyValueFound">
            <summary>
            The Value field is empty. An empty Value field is not allowed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.DuplicatedPriority">
            <summary>
            There are multiple rules with the same priority. A priority can have only one rule.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.DuplicatedOperationOnTheSameRule">
            <summary>
            There are multiple operations against the same rule. Only one operation per rule is allowed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.FolderDoesNotExist">
            <summary>
            The folder does not exist in the user's mailbox.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.InvalidAddress">
            <summary>
            The e-mail address is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.InvalidDateRange">
            <summary>
            The specified date range is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.InvalidFolderId">
            <summary>
            The specified folder ID is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.InvalidSizeRange">
            <summary>
            The size range is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.InvalidValue">
            <summary>
            The specified value is invalid.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.MessageClassificationNotFound">
            <summary>
            The message classification was not found.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.MissingAction">
            <summary>
            No action was specified. At least one rule action has to be specified for validation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.MissingParameter">
            <summary>
            The required parameter is missing.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.MissingRangeValue">
            <summary>
            The range value is missing.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.NotSettable">
            <summary>
            The property cannot be modified.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.RecipientDoesNotExist">
            <summary>
            The recipient does not exist.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.RuleNotFound">
            <summary>
            The rule was not found. No rules were found that match the criteria.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.SizeLessThanZero">
            <summary>
            The specified size is less than zero.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.StringValueTooBig">
            <summary>
            The string value is too big.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.UnsupportedAddress">
            <summary>
            The address is not supported. For example, Inbox rules do not support MAPIPDL address types.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.UnexpectedError">
            <summary>
            An unexpected error occurred.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.RuleValidationErrorCode.UnsupportedRule">
            <summary>
            The rule is unsupported.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ResponseClass">
            <summary>
            Identifies the status states of a response. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseClass.Success">
            <summary>
            Indicates that the request was successfully processed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseClass.Warning">
            <summary>
            Indicates that an unusual situation was encountered during the processing of the request and the request may not have been processed successfully.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ResponseClass.Error">
            <summary>
            Indicates that the request could not be processed. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Reminder">
            <summary>
            Class Reminder.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Reminder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Reminder"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.Time">
            <summary>
            Gets the time.
            </summary>
            <value>The time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.StartTime">
            <summary>
            Gets the start time.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.EndTime">
            <summary>
            Gets the end time.
            </summary>
            <value>The end time.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.ItemId">
            <summary>
            Gets the item identifier.
            </summary>
            <value>The item identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.RecurringMasterItemId">
            <summary>
            Gets the recurring master item identifier.
            </summary>
            <value>The recurring master item identifier.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.Group">
            <summary>
            Gets the group.
            </summary>
            <value>The group.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Reminder.Uid">
            <summary>
            Gets the uid.
            </summary>
            <value>The uid.</value>
        </member>
        <member name="T:Independentsoft.Exchange.PropertyTag">
            <summary>
            Represents the property tag.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyTag.#ctor">
            <summary>
            Initializes a new instance of the PropertyTag class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyTag.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the PropertyTag class.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyTag.#ctor(System.Int32,Independentsoft.Exchange.MapiPropertyType)">
            <summary>
            Initializes a new instance of the PropertyTag class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyTag.IsEqual(Independentsoft.Exchange.ExtendedPropertyPath)">
            <summary>
            Determines whether the specified property path is equal.
            </summary>
            <param name="propertyPath">The property path.</param>
            <returns><c>true</c> if the specified property path is equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.PropertyTag.ToString">
            <summary>
            Converts the value of the current PropertyTag object to its equivalent string representation.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyTag.Tag">
            <summary>
            Contains the property tag without the type part of the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:Independentsoft.Exchange.PropertyTag.Type">
            <summary>
            Contains the property type of a property tag.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Presenters">
            <summary>
            Defines which meeting attendees can be given presenter privileges
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Presenters.Disabled">
            <summary>
            Only the meeting organizer
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Presenters.Internal">
            <summary>
            Attendees within the same organization
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Presenters.Everyone">
            <summary>
            All attendees
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Presenters.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.PredictedMessageAction">
            <summary>
            Defines the predicated next action
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PredictedMessageAction.None">
            <summary>
            The item has no predicted next action.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PredictedMessageAction.Response">
            <summary>
            The predicted next action is a response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PredictedMessageAction.FollowUp">
            <summary>
            The predicted next action is a followup.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PredictedMessageAction.MoveToFolder">
            <summary>
            The predicted next action is a move to a different folder.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PredictedMessageAction.Delete">
            <summary>
            The predicted next action is a deletion.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PredictedMessageAction.Read">
            <summary>
            The predicted next action is a read.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.PredictedMessageAction.Ignore">
            <summary>
            The predicted next action is that the item will be ignored.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.OnlineMeetingAccessLevel">
            <summary>
            Specifies which participants may bypass the online waiting area before joining an online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OnlineMeetingAccessLevel.Locked">
            <summary>
            Only the meeting organizer can directly join the online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OnlineMeetingAccessLevel.Invited">
            <summary>
            Invited participants can directly join the online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OnlineMeetingAccessLevel.Internal">
            <summary>
            Internal participants can directly join the online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OnlineMeetingAccessLevel.Everyone">
            <summary>
            All phone participants can directly join the online meeting
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.OnlineMeetingAccessLevel.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MessageDisposition">
            <summary>
            Defines how messages are handled for operations that create and update items. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageDisposition.SaveOnly">
            <summary>
            Messages are saved but not sent. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageDisposition.SendOnly">
            <summary>
            Messages are sent but no copy is saved. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.MessageDisposition.SendAndSaveCopy">
            <summary>
            Messages are sent and a copy is saved. 
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.MailboxHoldStatus">
            <summary>
            Class MailboxHoldStatus.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.MailboxHoldStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.MailboxHoldStatus"/> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxHoldStatus.Mailbox">
            <summary>
            Gets the mailbox.
            </summary>
            <value>The mailbox.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxHoldStatus.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Independentsoft.Exchange.MailboxHoldStatus.AdditionalInfo">
            <summary>
            Gets the additional information.
            </summary>
            <value>The additional information.</value>
        </member>
        <member name="T:Independentsoft.Exchange.IsEqualTo">
            <summary>
            Class IsEqualTo.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.IsEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.IsEqualTo"/> class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.IsEqualTo"/> class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.IsEqualTo"/> class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.IsEqualTo"/> class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.IsEqualTo"/> class.
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsEqualTo.#ctor(Independentsoft.Exchange.PropertyPath,Independentsoft.Exchange.PropertyPath)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.IsEqualTo"/> class.
            </summary>
            <param name="propertyPath1">The property path1.</param>
            <param name="propertyPath2">The property path2.</param>
        </member>
        <member name="M:Independentsoft.Exchange.IsEqualTo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:Independentsoft.Exchange.InstanceType">
            <summary>
            Identifies the type of an appointment. 
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InstanceType.Single">
            <summary>
            Specifies that the item is not associated with a recurring appointment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InstanceType.Occurrence">
            <summary>
            Specifies that the item is an occurrence of a recurring appointment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InstanceType.Exception">
            <summary>
            Specifies that the item is an exception to a recurring appointment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InstanceType.RecurringMaster">
            <summary>
            Specifies that the item is the master that contains the recurrence pattern for a appointment.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.InstanceType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ImGroupInfoResponse">
            <summary>
            Class ImGroupInfoResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.ImGroupInfoResponse.ImGroup">
            <summary>
            Gets the im group.
            </summary>
            <value>The im group.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetUserRetentionPolicyTagsResponse">
            <summary>
            Class GetUserRetentionPolicyTagsResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetUserRetentionPolicyTagsResponse.RetentionPolicyTags">
            <summary>
            Gets the retention policy tags.
            </summary>
            <value>The retention policy tags.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetUserConfigurationResponse">
            <summary>
            Defines a response to a single GetUserConfiguration request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetUserConfigurationResponse.UserConfiguration">
            <summary>
            Defines a single user configuration object.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.GetRemindersResponse">
            <summary>
            Class GetRemindersResponse.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetRemindersResponse.Reminders">
            <summary>
            Gets the reminders.
            </summary>
            <value>The reminders.</value>
        </member>
        <member name="T:Independentsoft.Exchange.GetAppManifestsResponse">
            <summary>
            Contains the response to a GetAppManifests request
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.GetAppManifestsResponse.Manifests">
            <summary>
            Contain a list of manifests
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FractionalPageView">
            <summary>
            Describes where a paged view starts and the maximum number of items that are returned in a FindItem or FindFolder response. 
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FractionalPageView.#ctor">
            <summary>
            Initializes a new instance of the FractionalPageView class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FractionalPageView.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the FractionalPageView class.
            </summary>
            <param name="numerator">The numerator of the fractional offset from the start of the result set. 
            This must be equal to or less than the denominator and equal to or greater than zero</param>
            <param name="denominator">The denominator of the fractional offset from the start of the total number of items in the result set. 
            This must be is greater than one</param>
        </member>
        <member name="M:Independentsoft.Exchange.FractionalPageView.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the FractionalPageView class.
            </summary>
            <param name="numerator">The numerator of the fractional offset from the start of the result set. 
            This must be equal to or less than the denominator and equal to or greater than zero</param>
            <param name="denominator">The denominator of the fractional offset from the start of the total number of items in the result set. 
            This must be is greater than one</param>
            <param name="maxEntriesReturned">The maximum number of results to return in the response</param>
        </member>
        <member name="P:Independentsoft.Exchange.FractionalPageView.Numerator">
            <summary>
            The Numerator property gets or sets the numerator of the fractional offset from the start of the total number of items in the result set.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FractionalPageView.Denominator">
            <summary>
            The Denominator property gets or sets the denominator of the fractional offset from the start of the total number of items in the result set.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FindItemResponse">
            <summary>
            Contains the status and result of a single FindItem Operation request.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.IndexedPagingOffset">
            <summary>
            Represents the next index that should be used for the next request when using an indexed paging view.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.NumeratorOffset">
            <summary>
            Represents the new numerator value to use for the next request when using fractional page views.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.AbsoluteDenominator">
            <summary>
            Represents the next denominator to use for the next request when doing fractional paging.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.IncludesLastItemInRange">
            <summary>
            Indicates whether the current results contain the last item in the query, such that further paging is not needed.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.TotalItemsInView">
            <summary>
            Represents the total number of items that pass the restriction.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.Items">
            <summary>
            Contains an array of items found by using the FindItem Operation.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.Groups">
            <summary>
            Represents a collection of items that are the result of a grouped FindItem Operation call.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.FindItemResponse.HighlightTerms">
            <summary>
            Returns all <see cref="T:Independentsoft.Exchange.HighlightTerm"/>
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.FileAttachmentInfo">
            <summary>
            Represents a file that is attached to an item in the Exchange store.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachmentInfo.#ctor">
            <summary>
            Initializes a new instance of the FileAttachmentInfo class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.FileAttachmentInfo.ToString">
            <summary>
            Converts the value of the current FileAttachmentInfo object to its equivalent string representation.
            </summary>
            <returns>Returns the string representation of the current FileAttachmentInfo object</returns>
        </member>
        <member name="P:Independentsoft.Exchange.FileAttachmentInfo.IsContactPhoto">
            <summary>
            Indicates whether the file attachment is a contact picture.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ExternalAudience">
            <summary>
            Sets or contains a value that determines to whom external Out of Office (OOF) messages are sent.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ExternalAudience.None">
            <summary>
            E-mail senders outside the mailbox user's organization who send messages to the user will not receive an external OOF message response.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ExternalAudience.Known">
            <summary>
            E-mail senders outside the mailbox user's organization who send messages to the user will only receive an external OOF message response if the sender is in the user's Exchange store contact list.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ExternalAudience.All">
            <summary>
            E-mail senders outside the mailbox user's organization who send messages to the user will receive an external OOF message response.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.DayOfWeek">
            <summary>
            Represents the day of the week on which the time zone transition occurs.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Sunday">
            <summary>
            Sunday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Monday">
            <summary>
            Monday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Tuesday">
            <summary>
            Tuesday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Wednesday">
            <summary>
            Wednesday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Thursday">
            <summary>
            Thursday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Saturday">
            <summary>
            Saturday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Day">
            <summary>
            Day.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.Weekday">
            <summary>
            Weekday.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.WeekendDay">
            <summary>
            WeekendDay.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.DayOfWeek.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationQueryTraversal">
            <summary>
            Specifies the folder constraints for a conversation items query
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationQueryTraversal.Shallow">
            <summary>
            Query the target folder only
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationQueryTraversal.Deep">
            <summary>
            Query the target folder and all it's subfolders
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.ConversationActionType">
            <summary>
            Indicates which action will be performed on a conversation.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationActionType.AlwaysCategorize">
            <summary>
            The current items and new items in the conversation will automatically be set with the categories identified in the Categories element.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationActionType.AlwaysDelete">
            <summary>
            The current items and new items in the conversation will automatically be deleted. The deletion mode is set by the DeleteType element.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationActionType.AlwaysMove">
            <summary>
            The current items and new items in the conversation will automatically be moved to the folder identified by the DestinationFolderId element.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationActionType.Delete">
            <summary>
            The current items in the conversation will be deleted. Subsequent items in the conversation will not be deleted. The deletion mode is set by the DeleteType element.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationActionType.Move">
            <summary>
            The current items in the conversation will be moved to the folder identified by the DestinationFolderId element. Subsequent items in the conversation will not be moved.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationActionType.Copy">
            <summary>
            The current items in the conversation will be copied to the folder identified by the DestinationFolderId element. Subsequent items in the conversation will not be copied.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.ConversationActionType.SetReadState">
            <summary>
            The current items in the conversation will have their read state set. The read state is set by the IsRead element.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Body">
            <summary>
            Represents the actual body content of a message.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Body.#ctor">
            <summary>
            Initializes a new instance of the Body class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Body.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Body class.
            </summary>
            <param name="text">The text of the body</param>
        </member>
        <member name="M:Independentsoft.Exchange.Body.#ctor(Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the Body class.
            </summary>
            <param name="type">Indicates the type of the body text</param>
        </member>
        <member name="M:Independentsoft.Exchange.Body.#ctor(System.String,Independentsoft.Exchange.BodyType)">
            <summary>
            Initializes a new instance of the Body class.
            </summary>
            <param name="text">The text of the body</param>
            <param name="type">Indicates the type of the body text</param>
        </member>
        <member name="M:Independentsoft.Exchange.Body.#ctor(System.String,Independentsoft.Exchange.BodyType,System.Boolean)">
            <summary>
            Initializes a new instance of the Body class.
            </summary>
            <param name="text">The text of the body</param>
            <param name="type">Indicates the type of the body text</param>
            <param name="isTruncated">Indicates whether the body is truncated</param>
        </member>
        <member name="M:Independentsoft.Exchange.Body.ToString">
            <summary>
            Converts the current <see cref="T:Independentsoft.Exchange.Body"/> into an XML string
            </summary>
            <returns>The XML representation of the current <see cref="T:Independentsoft.Exchange.Body"/></returns>
        </member>
        <member name="P:Independentsoft.Exchange.Body.Text">
            <summary>
            Converts all bodies to plain text.
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Body.Type">
            <summary>
            Describes how the item body is stored in the item. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.Body.IsTruncated">
            <summary>
            Indicates if the body is truncated
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.AutodiscoverService">
            <summary>
            Class AutodiscoverService.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Autodiscover.AutodiscoverService"/> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Autodiscover.AutodiscoverService"/> class.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.#ctor(System.String,System.Net.ICredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Exchange.Autodiscover.AutodiscoverService"/> class.
            </summary>
            <param name="url">The URL.</param>
            <param name="credentials">The credentials.</param>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Service class with the specified credentials
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
            <param name="username">The username for the Exchange server</param>
            <param name="password">The password for the Exchange server</param>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Service class with the specified credentials
            </summary>
            <param name="url">The Exchange server web services url. Example: "https://servername/ews/Exchange.asmx".</param>
            <param name="username">The username for the Exchange server</param>
            <param name="password">The password for the Exchange server</param>
            <param name="domain">The domain</param>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.AutodiscoverMobileSyncProvider(System.String)">
            <summary>
            Autodiscovers the mobile synchronize provider.
            </summary>
            <param name="emailAddress">The email address.</param>
            <returns>MobileSyncProvider.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.GetUserSettings(System.String,Independentsoft.Exchange.Autodiscover.UserSettingName)">
            <summary>
            Gets the user settings.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="settingName">Name of the setting.</param>
            <returns>GetUserSettingsResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.GetUserSettings(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.Autodiscover.UserSettingName})">
            <summary>
            Gets the user settings.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="settingNames">The setting names.</param>
            <returns>GetUserSettingsResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.GetUserSettings(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Independentsoft.Exchange.Autodiscover.UserSettingName})">
            <summary>
            Gets the user settings.
            </summary>
            <param name="emailAddresses">The email addresses.</param>
            <param name="settingNames">The setting names.</param>
            <returns>GetUserSettingsResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.GetDomainSettings(System.String,Independentsoft.Exchange.Autodiscover.DomainSettingName)">
            <summary>
            Gets the domain settings.
            </summary>
            <param name="domain">The domain.</param>
            <param name="settingName">Name of the setting.</param>
            <returns>GetDomainSettingsResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.GetDomainSettings(System.String,System.Collections.Generic.IList{Independentsoft.Exchange.Autodiscover.DomainSettingName})">
            <summary>
            Gets the domain settings.
            </summary>
            <param name="domain">The domain.</param>
            <param name="settingNames">The setting names.</param>
            <returns>GetDomainSettingsResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.GetDomainSettings(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Independentsoft.Exchange.Autodiscover.DomainSettingName})">
            <summary>
            Gets the domain settings.
            </summary>
            <param name="domains">The domains.</param>
            <param name="settingNames">The setting names.</param>
            <returns>GetDomainSettingsResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.GetFederationInformation(System.String)">
            <summary>
            Gets the federation information.
            </summary>
            <param name="domain">The domain.</param>
            <returns>GetFederationInformationResponse.</returns>
        </member>
        <member name="M:Independentsoft.Exchange.Autodiscover.AutodiscoverService.AutodiscoverOutlookProvider(System.String)">
            <summary>
            Autodiscovers the outlook provider.
            </summary>
            <param name="emailAddress">The email address.</param>
            <returns>OutlookProvider.</returns>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.AllowAutoRedirect">
            <summary>
            Gets or sets a value that indicates whether the request should follow redirection responses.
            </summary>
            <value><c>true</c> if [allow automatic redirect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.AllowWriteStreamBuffering">
            <summary>
            Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.
            </summary>
            <value><c>true</c> if [allow write stream buffering]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.SendChunked">
            <summary>
            Gets or sets a value indicating whether to send data in segments to the Internet resource.
            </summary>
            <value><c>true</c> if [send chunked]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.PreAuthenticate">
            <summary>
            Gets or sets a value indicating whether to send a authenticate header with the request.
            </summary>
            <value><c>true</c> if [pre authenticate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.KeepAlive">
            <summary>
            Gets or sets a value indicating whether to make a persistent connection.
            </summary>
            <value><c>true</c> if [keep alive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.Timeout">
            <summary>
            Gets or sets the time-out value for a request.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.ClientCertificate">
            <summary>
            Gets or sets the security client certificate.
            </summary>
            <value>The client certificate.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.Credentials">
            <summary>
            Gets or sets user's credentials.
            </summary>
            <value>The credentials.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.Proxy">
            <summary>
            Gets or sets proxy server.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.Url">
            <summary>
            Gets or sets URL of Exchange Web Services.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.RequestEncoding">
            <summary>
            Gets or sets encoding used for a request.
            </summary>
            <value>The request encoding.</value>
        </member>
        <member name="P:Independentsoft.Exchange.Autodiscover.AutodiscoverService.RequestServerVersion">
            <summary>
            Contains the versioning information that identifies the schema version to target for a request.
            </summary>
            <value>The request server version.</value>
        </member>
        <member name="T:Independentsoft.Exchange.Autodiscover.AuthenticationPackage">
            <summary>
            Specifies the authentication scheme that is used when authenticating against the computer that is running Microsoft Exchange Server that has the Mailbox server role installed.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationPackage.Basic">
            <summary>
            Basic.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationPackage.Kerberos">
            <summary>
            Kerberos.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationPackage.KerberosNtlm">
            <summary>
            KerberosNtlm.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationPackage.Ntlm">
            <summary>
            Ntlm.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationPackage.Certificate">
            <summary>
            Certificate.
            </summary>
        </member>
        <member name="F:Independentsoft.Exchange.Autodiscover.AuthenticationPackage.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Independentsoft.Exchange.AlternatePublicFolderId">
            <summary>
            Describes a public folder identifier to convert to another identifier format.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AlternatePublicFolderId.#ctor">
            <summary>
            Initializes a new instance of the AlternatePublicFolderId class.
            </summary>
        </member>
        <member name="M:Independentsoft.Exchange.AlternatePublicFolderId.#ctor(Independentsoft.Exchange.IdFormat,System.String)">
            <summary>
            Initializes a new instance of the AlternatePublicFolderId class with the specified format and formatId.
            </summary>
            <param name="format">The format that describes the public folder identifier to convert</param>
            <param name="folderId">The public folder identifier to convert</param>
        </member>
        <member name="P:Independentsoft.Exchange.AlternatePublicFolderId.Format">
            <summary>
            Identifies the format that describes the public folder identifier to convert. 
            </summary>
        </member>
        <member name="P:Independentsoft.Exchange.AlternatePublicFolderId.FolderId">
            <summary>
            Contains the public folder identifier to convert.
            </summary>
        </member>
        <member name="T:Independentsoft.Email.Mime.ParameterList">
            <summary>
            Class ParameterList.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.ParameterList.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Independentsoft.Email.Mime.ParameterList.Item(System.String)">
            <summary>
            Gets the <see cref="T:Independentsoft.Email.Mime.Parameter"/> with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>Parameter.</returns>
        </member>
        <member name="T:Independentsoft.Email.Mime.BodyPartList">
            <summary>
            Class BodyPartList.
            </summary>
        </member>
        <member name="M:Independentsoft.Email.Mime.BodyPartList.Add(Independentsoft.Email.Mime.Attachment)">
            <summary>
            Adds the specified attachment.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
    </members>
</doc>
