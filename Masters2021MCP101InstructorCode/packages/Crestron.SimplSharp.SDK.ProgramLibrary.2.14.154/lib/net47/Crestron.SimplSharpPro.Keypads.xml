<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Crestron.SimplSharpPro.Keypads</name>
    </assembly>
    <members>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpBBase">
            <summary>
            Base class for Media Presentation Button Panels.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>, <see cref="E:Crestron.SimplSharpPro.ShaftEncoder.ShaftEncoderChange"/> and <see cref="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange"/> events.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.MpBBase.FirstButtonNumber">
            <summary>
            First button number for MP-Bx0
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.MpBBase.LastButtonNumber">
            <summary>
            Last button number for MP-Bx0
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.MpBBase.NumberOfRows">
            <summary>
            Number of Rows for MP-Bx0
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.MpBBase.NumberOfFeedbacks">
            <summary>
            Number of Feedbacks for MP-Bx0
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.#ctor(Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpBBase"/> Media Presentation Button Panel device Base for Ethernet interface.
            </summary>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The Control system specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.#ctor(Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpBBase"/> Media Presentation Button Panel device Base with Cresnet interface.
            </summary>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to. </param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.InitializeDevice(Crestron.SimplSharpPro.CrestronDeviceWithEvents,System.Boolean)">
            <summary>
            Initializes the <see cref="T:Crestron.SimplSharpPro.Keypads.MpBBase"/> device.
            </summary>
            <param name="paramMpBx0Device"><see cref="T:Crestron.SimplSharpPro.Keypads.MpBBase"/> device.</param>
            <param name="isCresnetDevice">Flag to check if the device is on Cresnet.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.MpBBase"/> buttons and sigs.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.InitializeFeedbacks">
            <summary>
            Method to initialize feedbacks specific to the MP-Bx0 Media Presentation Button Panel.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.ButtonSubClass_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Sig event handler for Button State changes in the <see cref="T:Crestron.SimplSharpPro.Keypads.MpBx0Buttons"/> SubClass.
            Button States are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorSubClass_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Sig event handler for sig changes in the <see cref="T:Crestron.SimplSharpPro.Keypads.MpBx0LightSensor"/> SubClass.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.KnobSubClass_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.ShaftEncoderEventArgs)">
            <summary>
            Sig event handler for sig changes in the <see cref="T:Crestron.SimplSharpProInternal.InternalShaftEncoder"/> SubClass.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBBase.OnAmbientLightLevelStateChange(Crestron.SimplSharpPro.DeviceSupport.AmbientLightSensorEventArgs)">
            <summary>
            Method to fire the <see cref="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange"/> event.
            </summary>
            <param name="args">Event information that describes the new light sensor state.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpBBase.MpBShaftEncoder">
            <summary>
            Shaft Encoder object for <see cref="T:Crestron.SimplSharpPro.Keypads.MpBBase"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpBBase.RowIndicatorBrightness">
            <summary>
            Property to set the brightness level of the corresponding row of LED indicators, where Row 1 is
            the top row and Row 3 is the bottom row.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
            <remarks>Valid values range from 0% (no brightness) to 100% (maximum brightness).</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpBBase.RowBacklightBrightness">
            <summary>
            Property to set the backlight brightness level of the corresponding row, where Row 1 is the top 
            row and Row 3 is the bottom row. The backlight illuminates the labels over each button.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
            <remarks>Valid values range from 0% (no brightness) to 100% (maximum brightness).</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpBBase.IRInputPort">
            <summary>
            IR input port on the device.
            Valid IRIDs range from 0x00 to 0x3F.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange">
            <summary>
            Event triggered when the ambient light level as a percentage from 0% to 100% is reported as determined by the internal light sensor.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorValue">
            <summary>
            Property to report the ambient light level detected by the internal photo sensor.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.eSigType.UShort"/> and <see cref="P:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorValue"/>.</para>
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
            <remarks>Reported values range from 0% (no light) to 100% (maximum light).</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpBBase.IndicatorIntensity">
            <summary>
            Property to set the brightness level of the bargraph.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
            <remarks>Valid values range from 0% (no brightness) to 100% (maximum brightness).</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpBBase.BargraphValue">
            <summary>
            Property to set the value of the 5-segment bargraph, as follows:
            0% = No segment illuminated
            1% - 20% = Segment 1 ON
            21% - 40% = Segments 1 and 2 ON
            41% - 60% = Segments 1-3 ON
            61% - 80% = Segments 1-4 ON
            81% - 100% = Segments 1-5 ON
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpB10">
            <summary>
            An ethernet based 3-gang, 10-button wall mount control panel with customizable backlit labelling, LED feedback, 5-way nav pad, and volume control knob. Single-wire interface via Ethernet or Cresnet.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.ShaftEncoder.ShaftEncoderChange"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB10.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10"/> device for Ethernet interface.
            </summary>
            <param name="paramIpId">IP ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control system specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB10.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.Boolean)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10Cresnet"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="isOnCresnet">The flag used to specify whether the <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10"/> uses Cresnet interface.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB10.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10Cresnet"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB10.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB10.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10"/> buttons and sigs.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpB10Cresnet">
            <summary>
            A cresnet based 3-gang, 10-button wall mount control panel with customizable backlit labelling, LED feedback, and volume control knob. Single-wire interface via Ethernet or Cresnet.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.ShaftEncoder.ShaftEncoderChange"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB10Cresnet.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10Cresnet"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to. </param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB10Cresnet.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB10Cresnet"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to. </param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpB20">
             <summary>
             An ethernet based 3-gang, 15-button wall mount control panel with customizable backlit labelling, LED feedback, 5-way nav pad, and volume control knob. Single-wire interface via Ethernet or Cresnet.
             <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.ShaftEncoder.ShaftEncoderChange"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
             </summary>
             <example>
             <code>
                MpB20 mpB20Keypad;
                public ControlSystem() : base()
                {
                    CrestronConsole.AddNewConsoleCommand(CreateDevice, "createDevice", "",
                        ConsoleAccessLevelEnum.AccessAdministrator);
                    CrestronConsole.AddNewConsoleCommand(SetBargraph, "setBargraph", "",
                       ConsoleAccessLevelEnum.AccessAdministrator);
                    CrestronConsole.AddNewConsoleCommand(SetBargraphBrightness, "SetBargraphBrightness", "",
                        ConsoleAccessLevelEnum.AccessAdministrator);
                    CrestronConsole.AddNewConsoleCommand(SetFeedbackHigh, "setFeedbackHigh", "",
                        ConsoleAccessLevelEnum.AccessAdministrator);
                    CrestronConsole.AddNewConsoleCommand(SetFeedbackLow, "setFeedbackLow", "",
                        ConsoleAccessLevelEnum.AccessAdministrator);
                    Thread.MaxNumberOfUserThreads = 100;
                }
            
                // Method to create the MP-B20 device.
                void CreateDevice(String arg)
                {
                    try
                    {
                        mpB20Keypad = new MpB20(0x18, this);
            
                        mpB20Keypad.ButtonStateChange += MpB20KeypadButtonStateChange;
                        mpB20Keypad.MpBShaftEncoder.ShaftEncoderChange += MpBShaftEncoder_ShaftEncoderChange;
                        mpB20Keypad.LightSensorChange += MpBx0SigChangeEventHandler;
            
                        var registrationResponse = mpB20Keypad.Register();
                        
                        PrintData(String.Format("Registration response: {0}", registrationResponse));
                    }
                    catch (Exception e)
                    {
                        PrintData(String.Format("Exception CreateDevice {0}", e));
                    }
                }
            
                // Method to handle the Shaft Encoder State change Events of the MP-B20 device.
                void MpBShaftEncoder_ShaftEncoderChange(ShaftEncoder sender, ShaftEncoderEventArgs args)
                {
                    if (args.MovedClockwiseFeedback)
                    {
                       PrintData("Knob moved clockwise."); 
                    }
                    else if (args.MovedCounterClockwiseFeedback)
                    {
                        PrintData("Knob moved counter clockwise.");
                    }
                    PrintData(String.Format("Knob location acceleration {0} no acceleration {1}", args.OutputWithAccelerationFeedback, args.OutputNoAccelerationFeedback));
                    PrintShaftLocation();
                }
            
                // Method to print the shaft location for the MP-B20 device.
                void PrintShaftLocation()
                {
                    PrintData(String.Format("Knob location acceleration {0} no acceleration {1}",
                        SimplSharpDeviceHelper.UshortToPercent(mpB20Keypad.MpBShaftEncoder.KnobAccelerationFeedback.UShortValue), SimplSharpDeviceHelper.UshortToPercent(mpB20Keypad.MpBShaftEncoder.KnobNoAccelerationFeedback.UShortValue)));
                }
            
                // Method to handle the Button state change events for MP-B20.
                void MpB20KeypadButtonStateChange(GenericBase device, ButtonEventArgs args)
                {
                    PrintData(String.Format("MpB20 button {0} \r\n" +
                                            " at location " +
                                            " horizontal {1} vertical {2} " +
                                            "" +
                                            "now {3}.", args.Button.Number, args.Button.HorizontalLocation, args.Button.VerticalLocation, args.NewButtonState));
                    PrintData(String.Format("State of button sig {0} on object with ID {1}: {2}", args.Button.Number, device.ID, mpB20Keypad.Button[args.Button.Number]));
                   
                }
            
                // Method to set the corresponding feedback state to 'true'.
                void SetFeedbackHigh(String arg)
                {
                    mpB20Keypad.Feedbacks[ushort.Parse(arg)].State = true;
                }
            
                // Method to set the corresponding feedback state to 'false'.
                void SetFeedbackLow(String arg)
                {
                    mpB20Keypad.Feedbacks[ushort.Parse(arg)].State = false;
                }
            
                // Method to print the current bargraph value of the MP-B20 device.
                void PrintBargraphData()
                {
                    PrintData(String.Format("Bargraph now at: {0}", SimplSharpDeviceHelper.UshortToPercent(mpB20Keypad.BargraphValue.UShortValue)));
                }
            
                // Method to set the bargraph value of the MP-B20 device.
                void SetBargraph(String arg)
                {
                    ushort settingTo = ushort.Parse(arg);
                    PrintData(String.Format("Setting bargraph to {0}", settingTo));
                    mpB20Keypad.BargraphValue.UShortValue = settingTo;
                    PrintBargraphData();
                }
            
                // Method to set the bargraph brightness of the MP-B20 device.
                void SetBargraphBrightness(String arg)
                {
                    ushort settingTo = ushort.Parse(arg);
                    PrintData(String.Format("Setting bargraph brightness to {0}", settingTo));
                    mpB20Keypad.IndicatorIntensity.UShortValue = settingTo;
                }
            
                // Method to handle the Sig change event handler for Sensor value changes on the MP-B20 device.
                static void MpBx0SigChangeEventHandler(GenericBase device, AmbientLightSensorEventArgs args)
                {
                    CrestronConsole.PrintLine("Sensor Value Feedback Event occurred  value is {0}", args.SensorValue);
                }
            
                // Method to print data passes as argument.
                void PrintData(String arg)
                {
                    CrestronConsole.PrintLine(arg);
                }
             </code>
             </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB20.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> device for Ethernet interface.
            </summary>
            <param name="paramIpId">IP ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control system specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB20.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.Boolean)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20Cresnet"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="isOnCresnet">The flag used to specify whether the <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> uses Cresnet interface.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB20.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20Cresnet"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB20.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> buttons and sigs.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB20.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> feedbacks.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpB20.Up">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Up button for this <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.MpB20.Up"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpB20.Down">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Down button for this <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.MpB20.Down"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpB20.Left">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Left button for this <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.MpB20.Left"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpB20.Right">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Right button for this <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.MpB20.Right"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.MpB20.Enter">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Enter button for this <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.MpB20.Enter"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpB20Cresnet">
            <summary>
            A cresnet based 3-gang, 15-button wall mount control panel with customizable backlit labelling, LED feedback, and volume control knob. Single-wire interface via Ethernet or Cresnet.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.MpBBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.ShaftEncoder.ShaftEncoderChange"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB20Cresnet.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20Cresnet"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to. </param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpB20Cresnet.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.MpB20Cresnet"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to. </param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.EthernetMpB20">
            <summary>
            Auto generated class for MP-B20 Keypad for Ethernet Communication
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EthernetMpB20.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the controller.
            
            </summary>
            <param name="ipId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CresnetMpB20">
            <summary>
            Auto generated class for MP-B20 Keypad for Cresnet Communication
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetMpB20.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the controller.
            
            </summary>
            <param name="cId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetMpB20.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots)">
            <summary>
            Constructor used to add this device to a CresnetBranch.
            
            </summary>
            <param name="cId">ID of this device</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpBx0Buttons">
            <summary>
            Buttons SubClass for MP-Bx0.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBx0Buttons.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpBx0IrGateWay">
            <summary>
            IR Gateway SubClass for MP-Bx0.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBx0IrGateWay.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.MpBx0LightSensor">
            <summary>
            Light Sensor SubClass for MP-Bx0
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.MpBx0LightSensor.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.Horizon.HzKpex">
             <summary>
             The Wireless Horizon Keypad that has 5 individual backlight rows and has a total of 10 buttons that can host a number of different keypad combos.
             <para>This class will trigger the <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
             </summary>
             <example>
             Example program using the Wireless Horizon Keypad. 
             <code>
             <![CDATA[
             using Crestron.SimplSharp;
             using Crestron.SimplSharpPro;
             using Crestron.SimplSharpPro.DeviceSupport; 
             using Crestron.SimplSharpPro.Gateways;
             using Crestron.SimplSharpPro.Keypads;
             using Crestron.SimplSharpPro.Keypads.Horizon;
             
             namespace HzKpExTest
             {
                public class ControlSystem : CrestronControlSystem
                {
                 private HzKpex _exHorizonKeypad;
                 private CenRfgwEx _rfGateway;
            
                  //Program constructor
                 public ControlSystem() : base()
                 {
            
                      //Setup some console commands
                     CrestronConsole.AddNewConsoleCommand(CreateDevice, "CreateDevice", "Create the Horizon Ex Keypad for this program.", ConsoleAccessLevelEnum.AccessOperator);
                     CrestronConsole.AddNewConsoleCommand(CycleFeedbacks, "CycleFeedbacks", "Fucntion to cycle the state of feedbacks on the Ex Keypad.", ConsoleAccessLevelEnum.AccessOperator);
                     CrestronConsole.AddNewConsoleCommand(CycleDayTimeCmd, "CycleDayTime", "Cycle the EX Keypad between Day/Night time modes.", ConsoleAccessLevelEnum.AccessProgrammer);
                     
                 }
            
                 //function to cycle between Day and Night time modes for the LEDs of the keypad.
                 private void CycleDayTimeCmd(string cmdparameters)
                 {
                     if (_exHorizonKeypad == null)
                     {
                         CrestronConsole.ConsoleCommandResponse("Keypad is not initialized.\r\n");
                         return;
                     }
            
                     if (_exHorizonKeypad.BacklightLedSettings.InNightTimeFeedback.BoolValue)
                     {
                         _exHorizonKeypad.BacklightLedSettings.EnableDayTime();
                         CrestronConsole.ConsoleCommandResponse("Enable Daytime mode of the keypad.\r\n");
                         
                     }
                     else
                     {
                         _exHorizonKeypad.BacklightLedSettings.EnableNightTime();
                         CrestronConsole.ConsoleCommandResponse("Enable Nighttime mode of the keypad.\r\n");
                     }
                 }
            
                 //Function to cycle the current state of the button's feedbacks. 
                 private void CycleFeedbacks(string cmdparameters)
                 {
                     if (_exHorizonKeypad == null)
                     {
                         CrestronConsole.ConsoleCommandResponse("Keypad is not initialized.\r\n");
                         return;
                     }
                      PrintAndToggleFeedbacks(_exHorizonKeypad.Feedbacks);
                  }
            
                 private void PrintAndToggleFeedbacks<T>(CrestronCollection<T> feedbacks) where T: Feedback
                 {
                     //Let's start with printing all the feedbacks
                     for (uint i = 0, found = 0; found < feedbacks.Count; i++)
                     {
                         T feedback;
                         //Try get the current index
                         if (feedbacks.TryGetValue(i, out feedback))
                         {
                             //Success let's try the indexer 
                             var localFeedback = feedbacks[i];
                             //Toggle the state of the feedback
                             localFeedback.State = !localFeedback.State;
                             
                             CrestronConsole.ConsoleCommandResponse("Feedback[{0}]: {1}\r\n", i, localFeedback.State);
                              //Let's see if this is an active feedback
                             var activeFeedback = localFeedback as FeedbackWithActive;
                             if (activeFeedback != null)
                             {
                                 activeFeedback.Active.BoolValue = !activeFeedback.Active.BoolValue;
                                  CrestronConsole.ConsoleCommandResponse("Feedback[{0}]: Active State: {1}\r\n", i, activeFeedback.Active.BoolValue);
                             }
                              found++;
                         }
                          if (i > 20)
                         {//If we somehow got to an index of 20 let's break out ...
                             break;
                         }
                     }
                 }
            
                 private void CreateDevice(string cmdparameters)
                 {
                     if (_rfGateway != null)
                     {//This means we've already create the device... I hope. 
                         CrestronConsole.ConsoleCommandResponse("Device already created.");
                     }
                      _rfGateway = new CenRfgwEx(0x44, this);
                     _exHorizonKeypad = new HzKpex(0x30, _rfGateway);
                      //Register the event handlers for the keypad
                     _exHorizonKeypad.ButtonStateChange += ButtonPressHandler;
                     _exHorizonKeypad.BaseEvent += ExHorizonKeypadOnBaseEvent;
                     _exHorizonKeypad.OnlineStatusChange += ExHorizonKeypadOnOnlineStatusChange;
                      _rfGateway.Register();
                 }
            
                 private void ButtonPressHandler(GenericBase device, ButtonEventArgs args)
                 {
                     CrestronConsole.PrintLine("Button[{0}]'s state is: {1}", args.Button.Name, args.Button.State);
                 }
            
                 private void ExHorizonKeypadOnOnlineStatusChange(GenericBase currentDevice, OnlineOfflineEventArgs args)
                 {
                     //Print a message when the online state of the keypad changes.
                     if (currentDevice == _exHorizonKeypad)
                     {
                         CrestronConsole.PrintLine("The Horizon Ex Keypad is now : {0}", args.DeviceOnLine ? "Online" : "Offline");
                     }
                 }
             
                 private void ExHorizonKeypadOnBaseEvent(GenericBase device, BaseEventArgs args)
                 {
                     //Need to check for some specific error cases..
                     switch (args.EventId)
                     {
                         case (HzKpBase.LocalColorThemeFeedbackEventId):
                             CrestronConsole.PrintLine("The Keypad's Local Color Theme has changed to : {0}", _exHorizonKeypad.BacklightLedSettings.LocalColorThemeFeedback);
                             break;
                         case(HzKpBase.InDayTimeEventId):
                             if(_exHorizonKeypad.BacklightLedSettings.InDayTimeFeedback.BoolValue)
                                 CrestronConsole.PrintLine("The Keypad is now in Day time mode.");
                             break;
                         case(HzKpBase.InNightTimeEventId):
                             if (_exHorizonKeypad.BacklightLedSettings.InNightTimeFeedback.BoolValue)
                                 CrestronConsole.PrintLine("The Keypad is now in Night time mode.");
                             break;
                     }
                 }
               }
             }
             ]]>
             </code>
             </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Horizon.HzKpex.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase)">
            <summary>
            Constructor for a new Horizon EX Keypad
            </summary>
            <param name="paramRfid">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Horizon.HzKpex.DefeatLocalAuxButtonLogic">
            <summary>
            When this property is set 'false', the device will control the slave output line wire to another dimmer or switch. If set to 'true', the device will operate the button only as a remote logic (send button state information only). If the <see cref="P:Crestron.SimplSharpPro.Keypads.Horizon.HzKpex.ParameterLocalAuxButton"/> is to <see cref="F:Crestron.SimplSharpPro.Keypads.eLocalButtonLogic.None"/>, this property has no effect.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Horizon.HzKpex.ParameterLocalAuxButton">
            <summary>
            Parameter to specify which button combination/mode this keypad is set to. 
            </summary>
            <exception cref="T:System.InvalidOperationException">Invalid value specified. Please use one of the values defined in <see cref="T:Crestron.SimplSharpPro.Keypads.eLocalButtonLogic"/>.</exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Horizon.HzKpex.ParameterLocalButtonStatusFeedback">
            <summary>
            Parameter to define what LED(s) are turned on when the load is on (level above zero percent) or off. 
            </summary>
            <exception cref="T:System.InvalidOperationException">Invalid 'value' supplied to parameter. Please refer to <see cref="T:Crestron.SimplSharpPro.Keypads.Horizon.eLedFeedbackMode"/> for valid values.</exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Horizon.HzKpex.ParameterLocalButtonActiveFeedback">
            <summary>
            Parameter to define the behavior of the LED(s) when a local button is pressed to turn on or off a load. LED(s) can either flash, enable, or do nothing, disable. The timing of the blink is set by <see cref="P:Crestron.SimplSharpPro.Keypads.HzKpBase.ParameterActiveFeedbackBlinkRate"/>.
            <p>For quick ramps to the preset level or 100% which take place within a second, the LED will flash at least one transition and end up at on or off state. For a manual raise/lower operation where the button is held down, it will continue to flash while the button is held down, but stop once the ramp is completed and ended at the target level.</p>
            </summary> 
            <exception cref="T:System.InvalidOperationException">Invalid 'value' supplied to parameter. Please refer to <see cref="T:Crestron.SimplSharpPro.Keypads.Horizon.eLedActiveFeedbackMode"/> for valid values.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Horizon.RF_HZ_KPEX.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase,Crestron.SimplSharpPro.GenericBase)">
            <summary>
            Constructor used to add the device to the controller.
            </summary>
            <param name="RFID">ID of this device</param>
            <param name="paramGateway"></param>
            <param name="paramBaseDevice"></param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxBBase">
            <summary>
            Base class for CNX Keypads.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.CnxBBase.FirstButtonNumber">
            <summary>
            First button number for CNX-Bxxx
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.CnxBBase.PlayingSoundFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.CnxBBase.PlayingSoundFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.CnxBBase.TemperatureFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.CnxBBase.TemperatureFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.CnxBBase.LastButtonNumber">
            <summary>
            Last button number for CNX-Bxxx
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBBase.#ctor(Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/> object connected to Control system.
            </summary>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The Control system specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBBase.#ctor(Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/> object on IDeviceBranch.
            </summary>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBBase.InitializeDevice(Crestron.SimplSharpPro.CrestronDeviceWithEvents)">
            <summary>
            Initializes the <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/> device.
            </summary>
            <param name="paramDevice"><see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/> device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBBase.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/> buttons.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBBase.InitializeFeedbacks">
            <summary>
            Method to initialize feedbacks specific to the device derived off from <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/>.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBBase.ButtonSubClass_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Sig event handler for Button State and Sig changes in the <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/>.
            Button States are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.
            Event IDS are located in <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/>.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBBase.Sound(System.UInt16)">
            <summary>
            Method to play the specified WAV file.
            </summary>
            <param name="paramIndex">Index to select the WAV file.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.IndicatorIntensity">
            <summary>
            Property to set the brightness of the LED indicators.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
            <remarks>Valid values range from 0% (no brightness) to 100% (maximum brightness).</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.BacklightIntensity">
            <summary>
            Property to set the brightness of the backlight.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
            <remarks>Valid values range from 0% (no brightness) to 100% (maximum brightness).</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.AudioVolume">
            <summary>
            Property to set the audio volume for WAV file playback.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
            <remarks>Valid values range from 0% (mute audio) to 100% (maximum audio volume).</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.EnableTemperatureReport">
            <summary>
            Property to enable temperature reporting (via <see cref="P:Crestron.SimplSharpPro.Keypads.CnxBBase.TemperatureFeedback"/>).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.TemperatureFormat">
            <summary>
            Property to set the temperature format. When the property is true, the temperature is reported in degrees Celsius; when false, degrees Fahrenheit.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.BacklightOn">
            <summary>
            Property to turn on the backlight.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.PlayingSoundFeedback">
            <summary>
            Property to indicate that a WAV file is playing.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.CnxBBase.PlayingSoundFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CnxBBase.TemperatureFeedback">
            <summary>
            Property to report the ambient room temperature in tenths of a degree (1d = 0.1 degrees), and updates the reading every 2 seconds.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.CnxBBase.TemperatureFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxB2">
            <summary>
            Cresnet based elegant wallmount designer keypad with 2 large buttons, optional backlighting, built-in audio feedback and temperature sensing.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB2.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB2"/> device connected to control system.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB2.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB2"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB2.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB2"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB2.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB2"/> buttons.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxB4">
            <summary>
            Cresnet based elegant wallmount designer keypad with 4 large buttons, optional backlighting, built-in audio feedback and temperature sensing.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB4.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB4"/> device connected to Control system.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB4.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB4"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB4.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB4"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB4.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB4"/> buttons.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxB6">
            <summary>
            Cresnet based elegant wallmount designer keypad with 6 large buttons, optional backlighting, built-in audio feedback and temperature sensing.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB6.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB6"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB6.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB6"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB6.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB6"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB6.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB6"/> buttons.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxB8">
            <summary>
            Cresnet based elegant wallmount designer keypad with 8 large buttons, optional backlighting, built-in audio feedback and temperature sensing.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB8.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB8"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB8.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB8"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB8.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB8"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB8.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB8"/> buttons.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxB12">
             <summary>
             Cresnet based elegant wallmount designer keypad with 12 large buttons, optional backlighting, built-in audio feedback and temperature sensing.
             <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
             </summary>
             <example>
             <code>
             static CnxB12 cnxBxxx;
            
                public ControlSystemCnxBxxx()
                {
                    //Register console commands
                    CrestronConsole.AddNewConsoleCommand(CreateDeviceCmd, "CreateDevice", "This is a CNX-Bxxx Keypad CreateDevice command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(PrintBacklightIntensityCmd, "PrintBacklightIntensity", "This is a CNX-Bxxx Keypad PrintBacklightIntensity command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(PrintIndicatorIntensityCmd, "PrintIndicatorIntensity", "This is a CNX-Bxxx Keypad PrintIndicatorIntensity command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetIndicatorIntensityCmd, "SetIndicatorIntensity", "This is a CNX-Bxxx Keypad SetIndicatorIntensity command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetBacklightIntensityCmd, "SetBacklightIntensity", "This is a CNX-Bxxx Keypad SetBacklightIntensity command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetVolumeCmd, "SetVolume", "This is a CNX-Bxxx Keypad SetVolume command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SelectWavFileCmd, "SelectWavFile", "This is a CNX-Bxxx Keypad SelectWavFile command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetBacklightOnCmd, "SetBacklightOn", "This is a CNX-Bxxx Keypad SetBacklightOn command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(EnableTemperatureReportingCmd, "EnableTempRep", "This is a CNX-Bxxx Keypad EnableTempRep command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(PlayingSoundCmd, "PlayingSound", "This is a CNX-Bxxx Keypad PlayingSound command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetTemperatureFormatCmd, "SetTempFormat", "This is a CNX-Bxxx Keypad SetTempFormat command", ConsoleAccessLevelEnum.AccessOperator);
                }
            
                // Method to handle CNX-Bxxx top level sig change events.
                static void CnxBxxxKeypadEventHandler(GenericBase device, BaseEventArgs args)
                {
                    if (args.EventId == CnxBBase.PlayingSoundFeedbackEventId)
                    {
                        CrestronConsole.PrintLine("Playing Sound Feedback Event received\r\n");
                    }
                    else if (args.EventId == CnxBBase.TemperatureFeedbackEventId)
                    {
                        CrestronConsole.PrintLine("Temperature Feedback Event received\r\n");
                    }
                }
                
                // Method for handling CNX-Bxxx button events.
                static void CnxBxxxButtonChange(GenericBase currentDevice, ButtonEventArgs args)
                {
                    CrestronConsole.PrintLine("Button{0}'s state is {1}\r\n", args.Button.Number, args.Button.State);
                }
            
                // Method to create the CNX-Bxxx device
                // How to use this command: CreateDevice
                public void CreateDeviceCmd(String args)
                {
                    //Initialize the CNX-Bxxx device
                    cnxBxxx = new CnxB12(0x18, this);
            
                    cnxBxxx.BaseEvent += CnxBxxxKeypadEventHandler;
                    cnxBxxx.ButtonStateChange += CnxBxxxButtonChange;
            
                    //Register the CNX-Bxxx Keypad with the Control system
                    cnxBxxx.Register();
            
                    if (cnxBxxx.Registered)
                    {
                        CrestronConsole.ConsoleCommandResponse("{0} device successfully registered\r\n", cnxBxxx.ToString());
                    }
                }
            
                // Method to print the backlight intensity.
                // How to use the command: PrintBacklightIntensity
                public void PrintBacklightIntensityCmd(String args)
                {
                    CrestronConsole.ConsoleCommandResponse("BacklightIntensity% is {0}\r\n", SimplSharpDeviceHelper.UshortToPercent(cnxBxxx.BacklightIntensity.UShortValue));
                }
            
                // Method to set the backlight intensity.
                // How to use the command: SetBacklightIntensity (value in % from 1 - 100)
                public void SetBacklightIntensityCmd(String args)
                {
                    cnxBxxx.BacklightIntensity.UShortValue = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                    CrestronConsole.ConsoleCommandResponse("BacklightIntensity% is set to {0}\r\n", SimplSharpDeviceHelper.UshortToPercent(cnxBxxx.BacklightIntensity.UShortValue));
                }
            
                // Method to print the indicator intensity.
                // How to use the command: PrintIndicatorIntensity
                public void PrintIndicatorIntensityCmd(String args)
                {
                    CrestronConsole.ConsoleCommandResponse("IndicatorIntensity% is {0}\r\n", SimplSharpDeviceHelper.UshortToPercent(cnxBxxx.IndicatorIntensity.UShortValue));
                }
            
                // Method to set the indicator intensity.
                // How to use the command: SetIndicatorIntensity (value in % from 1 - 100)
                public void SetIndicatorIntensityCmd(String args)
                {
                    cnxBxxx.IndicatorIntensity.UShortValue = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                    CrestronConsole.ConsoleCommandResponse("IndicatorIntensity% is set to {0}\r\n", SimplSharpDeviceHelper.UshortToPercent(cnxBxxx.IndicatorIntensity.UShortValue));
                }
            
                // Method to set the audio volume.
                // How to use the command: SetVolume (value in % from 1 -100)
                public void SetVolumeCmd(String args)
                {
                    cnxBxxx.AudioVolume.UShortValue = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                    CrestronConsole.ConsoleCommandResponse("AudioVolume% is set to {0}\r\n", SimplSharpDeviceHelper.UshortToPercent(cnxBxxx.AudioVolume.UShortValue));
                }
            
                // Method to select the WAV file.
                // How to use the command: SelectWavFile (index - 1 - 101)
                public void SelectWavFileCmd(String args)
                {
                    cnxBxxx.Sound(Convert.ToUInt16(args));
                }
            
                // Method to set the backlight on.
                // How to use the command:  SetBacklightOn Y  To set backlight to on
                //                          SetBacklightOn N  To set backlight to off
                public void SetBacklightOnCmd(String args)
                {
                    if (args == "Y")
                    {
                        cnxBxxx.BacklightOn.BoolValue = true;
                    }
                    else
                    {
                        cnxBxxx.BacklightOn.BoolValue = false;
                    }
                }
            
                // Method to enable temperature reporting.
                // How to use the command:  EnableTemperatureReporting   Y  To enable Temperature reporting
                //                          EnableTemperatureReporting   N  To disable Temperature reporting
                public void EnableTemperatureReportingCmd(String args)
                {
                    if (args == "Y")
                    {
                        cnxBxxx.EnableTemperatureReport.BoolValue = true;
                    }
                    else
                    {
                        cnxBxxx.EnableTemperatureReport.BoolValue = false;
                    }
                }
            
                // Method to show if any WAV file is playing.
                // How to use the command:  PlayingSound
                public void PlayingSoundCmd(String args)
                {
                    if (cnxBxxx.PlayingSoundFeedback.BoolValue)
                    {
                        CrestronConsole.ConsoleCommandResponse("WAV file is playing\r\n");
                    }
                    else
                    {
                        CrestronConsole.ConsoleCommandResponse("No WAV file is playing\r\n");
                    }
                }
            
                // Method to enable temperature format.
                // How to use the command:  SetTemperatureFormat C  to set format to degrees Celsius
                //                          SetTemperatureFormat F  to set format to degrees Fahrenheit
                public void SetTemperatureFormatCmd(String args)
                {
                    if (args == "C")
                    {
                        cnxBxxx.TemperatureFormat.BoolValue = true;
                    }
                    else if (args == "F")
                    {
                        cnxBxxx.TemperatureFormat.BoolValue = false;
                    }
                }
             </code>
             </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB12.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB12.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB12.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxB12.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/> buttons.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxBn12">
            <summary>
            Cresnet based elegant wallmount designer keypad with 12 large buttons, optional backlighting, built-in audio feedback and temperature sensing.
            This is an optional complement to the CNX-BF12 Function Keypad, allowing for enhanced control of a Crestron Multiroom AV distribution system with direct numeric entry for the selection of channels and tracks. It also works well for pass code entry applications.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBn12.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBn12"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBn12.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBn12"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBn12.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBn12"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBn12.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBn12"/> buttons.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CnxBf12">
            <summary>
            Cresnet based elegant wallmount designer keypad with 12 large buttons, optional backlighting, built-in audio feedback and temperature sensing.
            Provides a simple solution for controlling a Crestron Multiroom AV distribution system. It is identical to the CNX-B12 12-Button Designer Keypad except that it includes a set of 30 assorted button caps pre-labeled for AV source selection and basic control functions.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.CnxB12"/>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBf12.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBf12"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBf12.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBf12"/> device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBf12.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBf12"/> feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CnxBf12.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBf12"/> buttons.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetCnxBxx.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the controller.
            
            </summary>
            <param name="cId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetCnxBxx.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots)">
            <summary>
            Constructor used when the device is added to a CresnetBranch.
            
            </summary>
            <param name="cId">ID of this device</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.Tt1xxEventIds">
            <summary>
            Event Ids that are valid for a TT-XXX Cresnet Tabletop Presentation Interface Sig objects.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.Tt1xxEventIds.LedState1FeedbackEventId">
            <summary>
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id and 
            <see cref="P:Crestron.SimplSharpPro.BaseEventArgs.Index"/> will indicate the index into the 
            <see cref="P:Crestron.SimplSharpPro.Keypads.TtxBase.LedStateFeedback"/> collection.</para>
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id, if the value of<see cref="P:Crestron.SimplSharpPro.Keypads.Tt1xx.LedState1Feedback"/> is changed.</para> 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.Tt1xxEventIds.LedState2FeedbackEventId">
            <summary>
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id and 
            <see cref="P:Crestron.SimplSharpPro.BaseEventArgs.Index"/> will indicate the index into the 
            <see cref="P:Crestron.SimplSharpPro.Keypads.TtxBase.LedStateFeedback"/> collection.</para>
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id, if the value of<see cref="P:Crestron.SimplSharpPro.Keypads.Tt1xx.LedState2Feedback"/> is changed.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.eLedStates">
            <summary>
            Enum to define valid LED Display States.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.eLedStates.SolidBlue">
            <summary>
            Solid Blue, indicates no video source is connected.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.eLedStates.BlinkingGreen">
            <summary>
            Blinking Green, indicates a video source is connected and the display device is powering up.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.eLedStates.SolidGreen">
            <summary>
            Solid Green, indicates the connected video source is selected for viewing on the display device.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.eLedStates.SlowlyPulsatingGreen">
            <summary>
            Slowly Pulsating Green, indicates a video source is connected but not currently selected for viewing
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.eLedStates.BlinksRedFiveTimes">
            <summary>
            Blinks Red Five Times, indicates one of the “Connect It” buttons has been pressed but no video source is connected
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.eLedStates.SolidRed">
            <summary>
            Solid Red, user defined - has no predefined firmware functionality associated with this state. 
            This is available starting with firmware version 1.3204.00000 and higher.
            This led state is not supported for TT2-100.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.Tt1xx">
            <summary>
            Tabletop presentation interface that offers connectivity, one-touch control, and visual feedback for status in a compact, easy to install device.
            </summary>
            <example>
            <code>
             Tt1xx myTt1xx;
             public ControlSystemTT2100()
             {
               //Register console commands
               CrestronConsole.AddNewConsoleCommand(CreateDeviceCmd, "CreateDevice", "This is an TT2-100 CreateDevice command", ConsoleAccessLevelEnum.AccessOperator);
             }
             public void CreateDeviceCmd(String args)
             {
                   myTt1xx = new Tt1xx(0x015, this);
                   myTt1xx.Register();
                   myTt1xx.BaseEvent += new BaseEventHandler(myTt1xx_BaseEvent);
                   myTt1xx.ButtonStateChange += new ButtonEventHandler(myTt1xx_ButtonStateChange);
             }
             public void myTt1xx_BaseEvent(GenericBase device, BaseEventArgs args)
             {
               if (args.EventId == Tt1xxEventIds.LedState1FeedbackEventId)
               {
                 CrestronConsole.PrintLine("Led State Feedback event occurred {0} in TT-100 device index is {1}.\r\n", myTt1xx.LedStateFeedback,args.Index);
               }
             }
             public void myTt1xx_ButtonStateChange(GenericBase device, ButtonEventArgs args)
             {
               CrestronConsole.PrintLine("Button event occurred {0}.\r\n", myTt1xx.Button);
             }
            </code>
            </example>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.TtxBase">
            <summary>
            Base class for the <see cref="T:Crestron.SimplSharpPro.Keypads.Tt1xx"/>devices.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> and <see cref="E:Crestron.SimplSharpPro.Keypads.TtxBase.ButtonStateChange"/> events </para>.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor to generate a new TT-XXX Cresnet Tabletop Presentation Interface
            </summary>
            <param name="paramCresnetID">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <param name="paramDeviceName">Name of the device</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor to generate a new TT-XXX Cresnet Tabletop Presentation Interface
            </summary>
            <param name="paramCresnetID">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to. </param>
            <param name="paramDeviceName">Name of the device</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.BaseDmTx401,System.String)">
            <summary>
            Constructor to generate a new TT-XXX Tabletop Presentation Interface. This is used when the TT-XXX is added
            to a DM-TX-401C/DM-TX-401-S/DM-TX-401-S2.
            </summary>
            <param name="dmtxDevice"> BaseDmTx401 to add the TT-xxx to</param>
            <param name="paramDeviceName">Name of the device</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type BaseDmTx401</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(System.UInt32,Crestron.SimplSharpPro.DM.VideoWindowing.HdWp4k401C,System.String)">
            <summary>
            Constructor to generate a new TT-XXX or Tabletop Presentation Interface. This is used when the TT-XXX is added
            to a HD-WP-4K-401-C.
            </summary>
            <param name="hdWp4kDevice"> HdWp4k401C to add the TT-XXX to</param>
            <param name="portNumber">Port number of the TT-XXX internal device.</param>
            <param name="paramDeviceName">Name of the device</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type "HdWp4k401C"</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> Port number is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(Crestron.SimplSharpPro.CrestronControlSystem,System.UInt32,System.String)">
            <summary>
            Constructor to generate a new TT-xxx device connected to a control system that supports ConnectIt devices.
            </summary>
            <param name="controlSystem">Control system that supports ConnectIt device ports.</param>
            <param name="connectItDeviceId">ConnectIt device ID. This will match up with the port number on the control system. <see cref="P:Crestron.SimplSharpPro.CrestronControlSystem.MaximumSupportedConnectItDeviceID"/> will indicate the maximum available device ID.</param>
            <param name="paramDeviceName">Name of the device</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(Crestron.SimplSharpPro.DM.Switch,System.UInt32,System.String)">
            <summary>
            Constructor to generate a new TT-XXX device connected to a DM switch.
            <exception cref="T:System.NotSupportedException">ConnectIt not supported on switch.</exception>
            </summary>
            <param name="paramSwitch">Switcher that supports ConnectIt device ports.</param>
            <param name="paramConnectItDeviceID">ConnectIt device ID. This will match up with the port number on the switch.</param>
            <param name="paramDeviceName">Name of the device</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200Base,System.String)">
            <summary>
            Constructor to generate a new TT-XXX Tabletop Presentation Interface. This is used when the TT-XXX is added
            to a <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C2"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C22G"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C2G"/>.
            </summary>
            <param name="dmtxDevice"> DmTx200Base to add the TT-XXX to</param>
            <param name="paramDeviceName">Name of the device</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C2"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C22G"/> or
            <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C2G"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C"/>.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4kX02CBase,System.String)">
            <summary>
            Constructor to generate a new TT-XXX Tabletop Presentation Interface. This is used when the TT-XXX is added
            to a <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4k202C"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4k302C"/>.
            </summary>
            <param name="dmtxDevice">DmTx4kX02CBase to add the TT-XXX to</param>
            <param name="paramDeviceName">Name of the device</param>
            <exception cref="T:System.ArgumentNullException">DM device to add to is NULL</exception>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.TtxBase._buttons">
            <summary>
            Collection that contains button objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.OnButtonStateChange(Crestron.SimplSharpPro.DeviceSupport.ButtonEventArgs)">
            <summary>
            Event handler for button events.
            </summary>
            <param name="args">Button event argument.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.SetLedState(System.UInt32,Crestron.SimplSharpPro.Keypads.eLedStates)">
            <summary>
            Method to set the color of the LED for the corresponding display state.
            </summary>
            <param name="ledNumber">Number of the Led. Maximum led number is 2. If invalid window number is passed then <see cref="F:Crestron.SimplSharpPro.Keypads.eLedStates.SolidBlue"/> will be returned.</param>
            /// <param name="ledstate"></param>
            <returns> Led state <see cref="T:Crestron.SimplSharpPro.Keypads.eLedStates"/> for valid values.</returns>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.TtxBase.ButtonStateChange">
            <summary>
            Event fired when a button state change was received from the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.TtxBase.Button">
            <summary>
            Collection of buttons supported by the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.TtxBase.LedStateFeedback">
            <summary>
            Property to report the current state of the display as assigned to the LED State.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.Tt1xxEventIds.LedState1FeedbackEventId"/> or <see cref="F:Crestron.SimplSharpPro.Keypads.Tt1xxEventIds.LedState2FeedbackEventId"/> and <see cref="P:Crestron.SimplSharpPro.BaseEventArgs.Index"/> gives the index into the <see cref="P:Crestron.SimplSharpPro.Keypads.TtxBase.LedStateFeedback"/> collection.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.TtxBase.CresnetTtXXX">
            <summary>
            Actual Device class for <see cref="T:Crestron.SimplSharpPro.Keypads.Tt1xx"/>. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.CresnetTtXXX.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots)">
            <summary>
            Constructor used to add the device to a CresnetBranch.
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.CresnetTtXXX.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the controller.
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.TtxBase.CresnetTtXXX.#ctor(Crestron.SimplSharpProInternal.CrestronDevice,System.UInt32)">
            <summary>
            Constructor for the TT-XXX when it is added to the DM-Endpoint
            The slot Id gets passed in
            </summary>
            <param name="owner">Owner </param>
            <param name="slotId"> Slot Id</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new TT-1XX Cresnet Tabletop Presentation Interface
            </summary>
            <param name="paramCresnetID">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new TT-1XX Cresnet Tabletop Presentation Interface
            </summary>
            <param name="paramCresnetID">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to. </param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.BaseDmTx401)">
            <summary>
            Constructor to generate a new TT-1XX Tabletop Presentation Interface. This is used when the TT-1xx is added
            to a DM-TX-401C/DM-TX-401-S/DM-TX-401-S2
            </summary>
            <param name="dmtxDevice"> BaseDmTx401 to add the TT-1xx to</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type BaseDmTx401</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(System.UInt32,Crestron.SimplSharpPro.DM.VideoWindowing.HdWp4k401C)">
            <summary>
            Constructor to generate a new TT-1XX Tabletop Presentation Interface. This is used when the TT-1xx is added
            to a HD-WP-4K-401-C.
            </summary>
            <param name="hdWp4kDevice"> HdWp4k401C to add the TT-1xx to</param>
            <param name="portNumber">Port number of the TT1xx internal device.</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type "HdWp4k401C"</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> Port number is not valid.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(Crestron.SimplSharpPro.CrestronControlSystem,System.UInt32)">
            <summary>
            Constructor to generate a new TT-1XX device connected to a control system that supports ConnectIt devices.
            </summary>
            <param name="controlSystem">Control system that supports ConnectIt device ports.</param>
            <param name="connectItDeviceId">ConnectIt device ID. This will match up with the port number on the control system. <see cref="P:Crestron.SimplSharpPro.CrestronControlSystem.MaximumSupportedConnectItDeviceID"/> will indicate the maximum available device ID.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(Crestron.SimplSharpPro.DM.Switch,System.UInt32)">
            <summary>
            Constructor to generate a new TT-1XX device connected to a DM switch.
            <exception cref="T:System.NotSupportedException">ConnectIt not supported on switch.</exception>
            </summary>
            <param name="paramSwitch">Switcher that supports ConnectIt device ports.</param>
            <param name="paramConnectItDeviceID">ConnectIt device ID. This will match up with the port number on the switch.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200Base)">
            <summary>
            Constructor to generate a new TT-1XX Tabletop Presentation Interface. This is used when the TT-1xx is added
            to a <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C2G"/>.
            </summary>
            <param name="dmtxDevice"> DmTx200Base to add the TT-1xx to</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C2G"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C"/></exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4kX02CBase)">
            <summary>
            Constructor to generate a new TT-1XX Tabletop Presentation Interface. This is used when the TT-1xx is added
            to a <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4k202C"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4k302C"/>.
            </summary>
            <param name="dmtxDevice">DmTx4kX02CBase to add the TT-1xx to</param>
            <exception cref="T:System.ArgumentNullException">DM device to add to is NULL</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt1xx.InitalizeDeviceSpecific">
            <summary>
            Initialize the TT-1XX buttons, sigs and event handler.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Tt1xx.Button1">
            <summary>
            Get the Button object corresponding to the Button1 button 
            for this device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Tt1xx.Button2">
            <summary>
            Get the Button object corresponding to the Button2 button 
            for this device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Tt1xx.LedState1">
            <summary>
            Property to set the color of the LED1 for the corresponding display state.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Tt1xx.LedState2">
            <summary>
            Property to set the color of the LED2 for the corresponding display state.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Tt1xx.LedState1Feedback">
            <summary>
            Property to report the current state of the display as assigned to the LedState1.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.Tt1xx.LedState2Feedback">
            <summary>
            Property to report the current state of the display as assigned to the LedState2.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt">
            <summary>
            Battery-operated table-top, two-button keypad that communicates using the infiNET EX wireless protocol.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.BatteryLowEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.BatteryLow"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase)">
            <summary>
            Constructor for <see cref="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt"/> devices.
            </summary>
            <param name="paramRfId">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase,System.String)">
            <summary>
            Constructor for <see cref="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt"/> and "HttB10Ex" devices.
            </summary>
            <param name="paramRfId">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.InitializeDevice(Crestron.SimplSharpPro.CrestronDeviceWithEvents)">
            <summary>
            Initializes the <see cref="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt"/> or "HttB10Ex" device.
            </summary>
            <param name="paramHttB2ExBattDevice"><see cref="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt"/> or "HttB10Ex" device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt"/> buttons and sigs.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.InitializeFeedbacks">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt"/> feedback sigs.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.SimplDeviceImplementation_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Sig event handler for sig changes in the base.SIMPLDeviceImplementation class.
            EventIds for this event are located in the <see cref="T:Crestron.SimplSharpPro.Keypads.HTTB2exBatt"/> or "HttB10Ex" classes.
            Button States are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.BatteryLow">
            <summary>
            Returns a <see cref="T:Crestron.SimplSharpPro.BoolOutputSig"/> that has a bool value of true when the battery level is low and a bool value of false when the battery level is not low.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.HTTB2exBatt.BatteryLowEventId"/>.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.RfHttB10Ex">
            <summary>
            Auto generated class for "HttB10Ex" device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RfHttB10Ex.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase,Crestron.SimplSharpPro.GenericBase,System.String)">
            <summary>
            Constructor used when the device is added to a external device. (External Gateway, Salve Cresnet, etc.)
            
            </summary>
            <param name="rfId">ID of this device</param>
            <param name="parentDevice">Parent device to add this device to.</param>
            <param name="paramBaseDevice">Base device the device from.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RfHttB10Ex.AdvancedButtonEvents.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"HoldTime"                	Default Value:0.50s                    	Type: Time
            	"DblTapSpeed"             	Default Value:0.50s                    	Type: Time
            	"WaitForDblTap"           	Default Value:0d                       	Type: Decimal
            </summary>
            <param name="paramId">ID of this device.</param>
            <param name="paramParentDevice">Device to add this device to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RfHttB10Ex.BrightnessAndBargraphFunctions.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RfHttB10Ex.BrightnessAndBargraphSettings.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"MinAutoIndicatorIntensity"	Default Value:1%                       	Type: Percent
            	"MaxAutoIndicatorIntensity"	Default Value:15%                      	Type: Percent
            	"AutoBacklightPreset"     	Default Value:0d                       	Type: Decimal
            	"CustomBacklightThreshold"	Default Value:7%                       	Type: Percent
            	"CustomDayBacklight"      	Default Value:3%                       	Type: Percent
            	"CustomNightBacklight"    	Default Value:90%                      	Type: Percent
            	"BargraphTimeout"       	Default Value:3s                      	Type: Decimal
            	"BacklightTimeout"      	Default Value:120s                      Type: Decimal
            	"IndicatorTimeout"       	Default Value:120s                    	Type: Decimal
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RfHttB10Ex.Logging.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.ClwiKplex">
            <summary>
            European Cameo In Wall Wireless lighting keypad.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.ClwiKeypad.LearnableButtonEvent"/>.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplex.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase)">
            <summary>
            Constructor for ClwiKplex device
            </summary>
            <param name="paramRFID">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplex.SendParameters">
            <summary>
            This will send the parameters fields (if any) to the device.  It allows the parameters to be modified and resent without unregistering and re-registering 
            a device.  It requires firmware support on the device.
            Not Currently implemented. This will throw a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">thrown if the device does not support sending receiving parameters on the fly.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_CLWI_KPLEX.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase,Crestron.SimplSharpPro.GenericBase)">
            <summary>
            Constructor used wen adding device to an external gateway
            </summary>
            <param name="RFID">ID of this device</param>
            <param name="parentDevice">Parent device to add this device to.</param>
            <param name="paramBaseDevice">Device that this device will be in.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_CLWI_KPLEX.CLWI_KPLEX_Remote_Button_Settings.#ctor(Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"RemoteHoldTime"          	Default Value:.3s                      	Type: Time
            	"RemoteDblTapTime"        	Default Value:.5s                      	Type: Time
            	"RemoteWaitForDblTap"     	Default Value:0d                       	Type: Decimal
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_CLWI_KPLEX.CLWI_KPLEX_Remote_Buttons.#ctor(Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_CLWI_KPLEX.CLWI_KPLEX_UI_Settings.#ctor(Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"[~UNUSED2~]"             	Default Value:0d                       	Type: Decimal
            	"LedOnLevel"              	Default Value:100%                     	Type: Percent
            	"NightLightLevel"         	Default Value:1%                       	Type: Percent
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.ClwiKplexBatt">
            <summary>
            European Cameo On Wall Battery Operated  Wireless lighting keypad.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.ClwiKplexBatt.BatteryLowEventId">
            <summary>
            Event ID for the base event when the state of the BatteryLow property has changed.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplexBatt.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase)">
            <summary>
            Constructor for ClwiKplexBatt device
            </summary>
            <param name="paramRFID">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplexBatt.InitializeDevice(Crestron.SimplSharpPro.CrestronDeviceWithEvents)">
            <summary>
            Initializes the device.
            </summary>
            <param name="_KeypadDevice">Actual device.</param>        
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplexBatt.InitializeButtons">
            <summary>
            Initialize the buttons on the device. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplexBatt.SIMPLDeviceImplementation_OnSignalChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method that handles remote button slot events for a keypad that has 6 buttons.
            </summary>
            <param name="currentDevice">Device that triggered the event.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ClwiKplexBatt.BatteryLow">
            <summary>
            Returns a BoolOutputSig that has a boolean value of true when the battery level is low and a boolean value of false when the battery level is not low.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_CLWI_KPLEX_BATT.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase,Crestron.SimplSharpPro.GenericBase)">
            <summary>
            Constructor used wen adding device to an external gateway
            </summary>
            <param name="RFID">ID of this device</param>
            <param name="parentDevice">Parent device to add this device to.</param>
            <param name="paramBaseDevice">Device that this device will be in.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdBase">
            <summary>
            Base class for C2N-CBD family Cameo Professional Keypad devices.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.InetCbdex">
            <summary>
            Base class for InetCbdex keypad devices.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetCbdex._AdvancedButtonEventsSlot">
            <summary>
            Advanced Button Events slot device.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetCbdex._BrightnessAndBargraphFunctionsSlot">
            <summary>
            Brightness and Bargraph Functions slot device.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetCbdex._BargraphSettingsSlot">
            <summary>
            Brightness and Bargraph Settings slot device. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetCbdex.m_uiIntensityIndicatorSigValue">
            <summary>
            Sig number for the Intensity Indicator sig value
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.SendParameters">
            <summary>
            This will send the parameters fields (if any) to the device.  It allows the parameters to be modified and resent without unregistering and re-registering 
            a device.  It requires firmware support on the device.
            Not Currently implemented. This will throw a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">thrown if the device does not support sending receiving parameters on the fly.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.DisableBargraph">
            <summary>
            Disables the bargraph functionality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.EnableBargraph">
            <summary>
            Enables the bargraph functionality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.CancelActiveBargraph">
            <summary>
            Cancels active bargraph.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.#ctor(System.String,System.Object)">
            <summary>
            Constructor to generate a new InetCbdex keypad.
            </summary>
            <param name="paramDeviceName">Name of the derived device.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.InitializeDevice(Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.CrestronDeviceWithEvents)">
            <summary>
            InitializeDevice.
            </summary>
            <param name="paramSIMPLDeviceInformation">SIMPL Windows implementation of the device.</param>
            <param name="paramAdvancedButtonEventsSlot">Advanced Button Events Device.</param>
            <param name="paramBrightnessAndBargraphFunctionsSlot">Brightness and Bargraph Functions device.</param>
            <param name="paramBargraphSettingsSlot">Brightness and Bargraph Settings device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.InitializeButtons">
            <summary>
            Method to initialize the buttons. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdex.InitializeFeedbacks">
            <summary>
            Method to initialize the feedbacks.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdex.BargraphValue">
            <summary>
            Property to get or set the current bargraph value of the device.
            On the <see cref="T:Crestron.SimplSharpPro.Keypads.C2niCb"/> this property is the same as the <see cref="P:Crestron.SimplSharpPro.Keypads.C2niCb.LeftBargraphValue"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdex.IndicatorIntensity">
            <summary>
            Property to get or set the current intensity of the bargraph on the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdex.Feedbacks">
            <summary>
            Property to get the collection of feedbacks on the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdex.ParameterBargraphTimeout">
            <summary>
            Sets and gets the BargraphTimeout parameter.
            Valid values are between 0 to 10 seconds
            Use the  SimplSharpDeviceHelper.SecondsToUShort to convert
            the time to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdex.ParameterHoldTime">
            <summary>
            Returns and sets the time in seconds that a button must be held before it is recognized as a "Hold" instead of a "Tap".
            Use the  SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            </summary>     
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdex.ParameterDblTapSpeed">
            <summary>
            Returns and sets the time between the end of the first tap and the start of the second tap for a "DblTap" to be recognized.
            Use the  SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            </summary>     
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdex.ParameterWaitForDoubleTap">
            <summary>
            Returns and sets the setting that determines whether a "Tap" should be sent immediately
            on the release of the button, or if the unit should wait until a "DblTap" event occurs.
            </summary>     
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor to generate a new Base device for C2N-CBD-P family Cameo Professional Keypads on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor to generate a new Base device for C2N-CBD-P family Cameo Professional Keypads Connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP">
            <summary>
            Auto generated class for C2N-CBD-P Cresnet Cameo Professional Keypad
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPVersiport4">
            <summary>
            Versiport Extender object for C2N-CBD-P Cameo Professional Keypad
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPDigitalInput4">
            <summary>
            Digital Input Extender object for C2NI-CB Cameo Professional Keypad
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots,Crestron.SimplSharpPro.Keypads.C2nCbdBase)">
            <summary>
            Constructor used to add the device to the CresnetBranch.
            </summary>
            <param name="paramCresnetId">ID of this device.</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,Crestron.SimplSharpPro.Keypads.C2nCbdBase)">
            <summary>
            Constructor used to add the device to the controller.
            </summary>
            <param name="paramCresnetId">ID of this device.</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPBrightnessAndBargraphFunctions">
            <summary>
            C2N-CBD-P BrightnessAndBargraphFunctions class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPBrightnessAndBargraphFunctions.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPAdvancedButtonEvents">
            <summary>
            C2N-CBD-P AdvancedButtonEvents class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPAdvancedButtonEvents.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"HoldTime"                	Default Value:0.50s                    	Type: Time
            	"DblTapSpeed"             	Default Value:0.50s                    	Type: Time
            	"WaitForDblTap"           	Default Value:0d                       	Type: Decimal
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPVersiport">
            <summary>
            C2N-CBD-P Versiport class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPVersiport.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice,System.Object)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPBrightnessAndBargraphSettings">
            <summary>
            C2N-CBD-P BrightnessAndBargraphSettings class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2nCbdPBrightnessAndBargraphSettings.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice,System.String)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"MinAutoIndicatorIntensity"	Default Value:1%                       	Type: Percent
            	"MaxAutoIndicatorIntensity"	Default Value:100%                     	Type: Percent
            	"AutoBacklightPreset"     	Default Value:1d                       	Type: Decimal
            	"CustomDayNightThreshold" 	Default Value:2%                       	Type: Percent
            	"CustomDayBacklight"      	Default Value:0%                       	Type: Percent
            	"CustomNightBacklight"    	Default Value:25%                      	Type: Percent
            	"BargraphTimeout"         	Default Value:3s                       	Type: Time
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
            <param name="deviceName"> Actual device name</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2niCbDigitalInputs">
            <summary>
            C2NI-CB DigitalInputs class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdBase.CresnetC2nCbdP.C2niCbDigitalInputs.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice,System.Object)">
            <summary>
            Device constructor.
            </summary>
            <param name="paramId">ID of this device.</param>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdPBase">
            <summary>
            Base class for C2N-CBD-P family Cameo Professional Keypad devices with no Versiports.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/> and <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> events.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.m_uiBacklightIntensitySigNumber">
            <summary>
            Backlight intensity sig number 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor to generate a new Base device for C2N-CBD-P family Cameo Professional Keypads on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor to generate a new Base device for C2N-CBD-P family Cameo Professional Keypads Connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.AmbientLightLevel_OnSignalChange(Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Event handler for <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/> events.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPBase"/> device that event was triggered from.</param>
            <param name="args">Event information that describes the new light sensor state.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.OnAmbientLightLevelStateChange(Crestron.SimplSharpPro.DeviceSupport.AmbientLightSensorEventArgs)">
            <summary>
            Method to fire the <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/> event.
            </summary>
            <param name="args">Event information that describes the new light sensor state.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.OnThresholdStateChange(Crestron.SimplSharpPro.DeviceSupport.ThresholdEventArgs)">
            <summary>
            Method to fire the <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> event.
            </summary>
            <param name="args">Event information that describes where the ambient light level is at in relation to the threshold.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.Threshold_OnSignalChange(Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Event handler for <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> events.
            <para>Threshold statuses are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eThresholdStatus"/>.</para>
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPBase"/> device that event was triggered from.</param>
            <param name="args">Event information signifying that threshold has been exceeded or reached or gone below.</param>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange">
            <summary>
            Event triggered when the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorValue"/> is reported as a percentage from 0% to 100%, as determined by the internal light sensor. <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ReportLightLevel"/> must be true.
            </summary>       
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorValue">
            <summary>
            Updated with the ambient light level. <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ReportLightLevel"/> must be set to true.
            </summary>   
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ManualBacklight">
            <summary>
            Enables manual adjustment of the backlight via the BacklightIntensity input for as long as the input is true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ManualIndicatorIntensity">
            <summary>
            Enables manual adjustment of the LED brightness via the IndicatorIntensity input for as long as the input is true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ReportLightLevel">
            <summary>
            Enables the LightSensorValue property and the LightSensorChange event output to report the current light level for as long as the input is true. When the input is false the light level isn't reported.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.BrightnessSettings">
            <summary>
            Returns a BrightnessSettings instance that can be used to get and set brightness settings.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.BacklightIntensity">
            <summary>
            Property that returns a reference to the BacklightIntensity UShortInputSig.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.EnableExtThreshold">
            <summary>
            When EnableExtThreshold is true, this puts the keypad into slave mode.
            </summary>       
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.AboveThreshold">
            <summary>
            This input is driven by the AboveThreshold_FB output on the master keypad.
            This input is only active when EnableExtThreshold is set to true, 
            which signifies that the current button is operating in slave mode.
            When the input goes true, this sets the backlight to the specified Day level (either custom or preset). 
            When the input goes false, it goes to the specified Night level (custom or preset).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.AboveThresholdFeedback">
            <summary>
            Updated to indicate the level of the ambient light in relation to the threshold.  This field is only updated when EnableExtThreshold is set to false.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange">
            <summary>
            Event triggered when the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPBase"/> reports ambient light is at or below or above the threshold, this event is only raised when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.EnableExtThreshold"/> is set to false.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdPBaseWithVersiport">
            <summary>
            Base class for C2N-CBD-P family Cameo Professional Keypad devices with Versiports.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>,
            <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> and 
            <see cref="E:Crestron.SimplSharpPro.Versiport.VersiportChange"/> events.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBaseWithVersiport.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor to generate a new Base device for C2N-CBD-P family Cameo Professional Keypads on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPBaseWithVersiport.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor to generate a new Base device for C2N-CBD-P family Cameo Professional Keypads Connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBaseWithVersiport.VersiPorts">
            <summary>
            Collection of versiports on the control system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPBaseWithVersiport.NumberOfVersiPorts">
            <summary>
            Number of versiports this device supports.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdE">
            <summary>
            Economical Cresnet-based wall-mounted keypad that feature customizable button configurations.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdP"/>.
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdE.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2N-CBD-E Cresnet Cameo Express Keypad device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdE.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2N-CBD-E Cresnet Cameo Express Keypad device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdP">
             <summary>
             Professional Cresnet-based wall-mounted keypad that feature customizable button configurations, auto-dimmable backlit text and enhanced LED feedback.
             <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>,
             <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> and 
             <see cref="E:Crestron.SimplSharpPro.Versiport.VersiportChange"/> events.</para>
             </summary>
             <example>
             <code>
             static C2nCbdP myKeypad;
                public ControlSystemC2nCbdP()
                {
                    //Register console commands
                    CrestronConsole.AddNewConsoleCommand(CreateDeviceCmd, "CreateDevice", "This is a C2N-CBD-P CreateDevice command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(DisableBargraphCmd, "DisableBargraph", "This is a C2N-CBD-P DisableBargraph command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(EnableBargraphCmd, "EnableBargraph", "This is a C2N-CBD-P EnableBargraph command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(CancelBargraphCmd, "CancelBargraph", "This is a C2N-CBD-P CancelBargraph command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(AutoBackLightPresetcmd, "AutoBackLightPreset", "This is a C2N-CBD-P AutoBackLightPreset command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(LightSensorValueCmd, "LightSensorValue", "This is a C2N-CBD-P LightSensorValue command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(CustomDayNightThresholdCmd, "CustomDayNightThreshold", "This is a C2N-CBD-P CustomDayNightThreshold command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetCustomDayLightIntensityCmd, "SetCustomDayL", "This is a C2N-CBD-P SetBacklightIntensity command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(GetIndicatorIntensityCmd, "GetIndicatorIntensity", "This is a C2N-CBD-P GetIndicatorIntensity command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetIndicatorIntensityCmd, "SetIndicatorIntensity", "This is a C2N-CBD-P SetIndicatorIntensity command", ConsoleAccessLevelEnum.AccessOperator);
                    CrestronConsole.AddNewConsoleCommand(SetBargraphValueCmd, "SetBargraphValue", "This is a C2N-CBD-P SetBargraphValueCmd command", ConsoleAccessLevelEnum.AccessOperator);
            
                    CrestronConsole.AddNewConsoleCommand(RunAllCmdsCmd, "RunAll", "This is a C2N-CBD-P RunAll command", ConsoleAccessLevelEnum.AccessOperator);
                }
            
                // Method to create the C2N-CBD-P device and register it with the control system
                public void CreateDeviceCmd(String args)
                {
                    // Initialize the C2N-CBD-P device for Cresnet Communication
                    myKeypad = new C2nCbdP(0x03, this);
            
                    myKeypad.BaseEvent += MyKeypadCameMyKeypadEventHandler;
                    myKeypad.ButtonStateChange += MyKeypadButtonChange;
                    myKeypad.LightSensorChange += MyKeypadLightSensorChange;
                    myKeypad.ThresholdStateChange += MyKeypadThresholdStateChange;
                    myKeypad.VersiPorts[1].VersiportChange += C2nCbdPVersiportStateChange_EventHandler;
                    myKeypad.VersiPorts[2].VersiportChange += C2nCbdPVersiportStateChange_EventHandler;
            
                    // Register the C2N-CBD-P Cameo Professional Keypad with the Control system
                    myKeypad.Register();
            
                    if (myKeypad.Registered)
                    {
                        CrestronConsole.ConsoleCommandResponse("{0} device successfully registered\r\n", myKeypad.ToString());
                    }
                }
                
                // Method to set the bar graph value.
                public void SetBargraphValueCmd(String args)
                {
                    myKeypad.BargraphValue.UShortValue = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                }
            
                // Method to set the custom daylight intensity parameter value.
                public void SetCustomDayLightIntensityCmd(String args)
                {
                    myKeypad.BrightnessSettings.ParameterCustomDayBacklight = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                }
            
                // Method to set the custom nightlight intensity parameter value.
                public void SetCustomNightlightIntensityCmd(String args)
                {
                    myKeypad.BrightnessSettings.ParameterCustomNightBacklight = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                }
            
                // Method to set the autobacklight preset parameter.
                // for setting it to InetBrightnessSettings.eAutoBacklightPreset.CustomSettings: AutoBackLightPreset 1
                public void AutoBackLightPresetcmd(String args)
                {
                    myKeypad.BrightnessSettings.ParameterAutoBacklightPreset = (InetBrightnessSettings.eAutoBacklightPreset)(Convert.ToUInt16(args) -1);
                }
            
                // Method to set the custom day night threshold parameter value.
                public void CustomDayNightThresholdCmd(String args)
                {
                    myKeypad.BrightnessSettings.ParameterCustomDayNightThreshold = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                }
            
                // Method to print the indicator intensity parameter value.
                public void GetIndicatorIntensityCmd(String args)
                {
                    CrestronConsole.ConsoleCommandResponse("IndicatorIntensity% is {0}\r\n", SimplSharpDeviceHelper.UshortToPercent(myKeypad.IndicatorIntensity.UShortValue));
                }
            
                // Method to set the indicator intensity parameter value.
                public void SetIndicatorIntensityCmd(String args)
                {
                    myKeypad.IndicatorIntensity.UShortValue = SimplSharpDeviceHelper.PercentToUshort(Convert.ToUInt16(args));
                    CrestronConsole.ConsoleCommandResponse("IndicatorIntensity% is set to {0}\r\n", SimplSharpDeviceHelper.UshortToPercent(myKeypad.IndicatorIntensity.UShortValue));
                }
            
                // Method to print the light sensor value.
                public void LightSensorValueCmd(String args)
                {
                    CrestronConsole.Print("Light Sensor Value: {0}\r\n", myKeypad.LightSensorValue);
                }
            
                // Method to disable the bar graph.
                public void DisableBargraphCmd(String args)
                {
                    myKeypad.DisableBargraph();
                }
            
                // Method to enable the bar graph.
                public void EnableBargraphCmd(String args)
                {
                    myKeypad.EnableBargraph();
                }
            
                // Method to cancel the bar graph.
                public void CancelBargraphCmd(String args)
                {
                    myKeypad.CancelActiveBargraph();
                }
            
            
                // Method to handle sig change events for C2N-CBD-P Cameo Professional Keypad.
                static private void MyKeypadCameMyKeypadEventHandler(GenericBase device, BaseEventArgs args)
                {
                    if (args.EventId &gt; 0)
                    {
                        CrestronConsole.PrintLine("Base Event {0} received\r\n", args.EventId);
                    }
                }
            
                // Sig callback for handling C2N-CBD-P button events.
                static void MyKeypadButtonChange(GenericBase currentDevice, ButtonEventArgs args)
                {
                    <![CDATA[for (uint i = 1; i <= 8; i++)]]>
                    {
                        if (args.Button.Number == myKeypad.Button[i].Number)
                        {
                            //This means Bool "sig" changed on the C2nCbdP
                            //Just print some information for now.
                            CrestronConsole.PrintLine("Button{0}'s state is {1}\r\n", i, args.Button.State);
                        }
                    }
                }
            
                // Sig callback for handling C2N-CBD-P Light Sensor change events.
                static void MyKeypadLightSensorChange(GenericBase device, AmbientLightSensorEventArgs args)
                {
                    CrestronConsole.Print("AmbientLightSensor event received, value is : {0}\r\n", args.SensorValue);
            
                    if (myKeypad.ManualIndicatorIntensity.BoolValue == false)
                    {
                        if (myKeypad.LightSensorValue == 0)
                        {
                            myKeypad.IndicatorIntensity.UShortValue = myKeypad.BrightnessSettings.ParameterMinAutoIndicatorIntensity;
                        }
                        else if (myKeypad.LightSensorValue &gt;= 65535u)
                        {
                            myKeypad.IndicatorIntensity.UShortValue = myKeypad.BrightnessSettings.ParameterMaxAutoIndicatorIntensity;
                        }
                        else
                        {
                            myKeypad.IndicatorIntensity.UShortValue = Convert.ToUInt16(65535u - myKeypad.LightSensorValue);
                        }
                        CrestronConsole.Print("IndicatorIntensity set to {0}\r\n", myKeypad.IndicatorIntensity.UShortValue);
                    }
                }
            
                // Sig callback for handling C2N-CBD-P Threshold State change events.
                static void MyKeypadThresholdStateChange(object obj, ThresholdEventArgs args)
                {
                    switch (args.ThresholdStatus)
                    {
                        case eThresholdStatus.AboveThreshold:
                            CrestronConsole.Print("Threshold event {0} received\r\n", args.ThresholdStatus);
                            if (myKeypad.ManualBacklight.BoolValue == false)
                            {
                                if (myKeypad.BrightnessSettings.ParameterAutoBacklightPreset ==
                                    InetBrightnessSettings.eAutoBacklightPreset.CustomSettings)
                                {
                                    myKeypad.BacklightIntensity.UShortValue = myKeypad.BrightnessSettings.ParameterCustomDayBacklight;
                                    CrestronConsole.Print("BacklightIntensity set to {0}\r\n", myKeypad.BacklightIntensity.UShortValue);
                                }
                                else
                                {
                                    switch (myKeypad.BrightnessSettings.ParameterAutoBacklightPreset)
                                    {
                                        case InetBrightnessSettings.eAutoBacklightPreset.White:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Almond:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Gray:
                                        case InetBrightnessSettings.eAutoBacklightPreset.DarkAlmond:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Dusk:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Ivory:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Latte:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Brown:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Black:
                                            myKeypad.BacklightIntensity.UShortValue = SimplSharpDeviceHelper.PercentToUshort(0);
                                            CrestronConsole.Print("BacklightIntensity set to {0}\r\n", myKeypad.BacklightIntensity.UShortValue);
                                            break;
                                    }
                              }
                            }
                            break;
            
                        case eThresholdStatus.AtOrBelowThreshold:
                            CrestronConsole.Print("Threshold event {0} received\r\n", args.ThresholdStatus);
                            if (myKeypad.ManualBacklight.BoolValue == false)
                            {
                                if (myKeypad.BrightnessSettings.ParameterAutoBacklightPreset ==
                                    InetBrightnessSettings.eAutoBacklightPreset.CustomSettings)
                                {
                                    myKeypad.BacklightIntensity.UShortValue =
                                        myKeypad.BrightnessSettings.ParameterCustomNightBacklight;
                                }
                                else
                                {
                                    switch (myKeypad.BrightnessSettings.ParameterAutoBacklightPreset)
                                    {
                                        case InetBrightnessSettings.eAutoBacklightPreset.White:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Almond:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Gray:
                                        case InetBrightnessSettings.eAutoBacklightPreset.DarkAlmond:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Dusk:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Ivory:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Latte:
                                            myKeypad.BacklightIntensity.UShortValue = SimplSharpDeviceHelper.PercentToUshort(25);
                                            break;
                                        case InetBrightnessSettings.eAutoBacklightPreset.Brown:
                                        case InetBrightnessSettings.eAutoBacklightPreset.Black:
                                            myKeypad.BacklightIntensity.UShortValue = SimplSharpDeviceHelper.PercentToUshort(15);
                                            break;
                                    }
                                }
                                CrestronConsole.Print("BacklightIntensity set to {0}\r\n", myKeypad.BacklightIntensity.UShortValue);
                            }
                            break;
            
                        default:
                            CrestronConsole.Print("Invalid Threshold event {0} received\r\n", args.ThresholdStatus);
                            break;
                    }
                }
            
                // Sig callback for handling C2N-CBD-P Versiport State change events.
                static void C2nCbdPVersiportStateChange_EventHandler(Versiport vport, VersiportEventArgs args)
               {
                    switch (args.Event)
                    {
                        case eVersiportEvent.AnalogInChange:
                            CrestronConsole.Print("AnalogInChange event for Versiport{0} received\r\n", vport.ID);
                            break;
            
                        case eVersiportEvent.DigitalInChange:
                            CrestronConsole.Print("DigitalInChange event for Versiport{0} received\r\n", vport.ID);
                            break;
                    }
                }
             </code>
             </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdP.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2N-CBD-P Cameo Professional Keypad device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdP.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2N-CBD-P Cameo Professional Keypad device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff">
            <summary>
            Professional Cresnet-based wall-mounted keypad with auto-dimmable backlit text and enhanced LED feedback with On/Off buttons.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>,
            <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> and 
            <see cref="E:Crestron.SimplSharpPro.Versiport.VersiportChange"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdP"/>.
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2N-CBD-P-KP-ON-OFF Cameo Professional Keypad device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2N-CBD-P-KP-ON-OFF Cameo Professional Keypad device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.InitializeButtons">
            <summary>
            Method to initialize the buttons.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.InitializeFeedbacks">
            <summary>
            Method to initialize the feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.SIMPLDeviceImplementation_CueChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> Internal device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.AdvancedButtonEventsSlot_OnSignalChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> advanced button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> Advanced Button Events Subclass device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.On">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the On button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.On"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.Off">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Off button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.Off"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.FeedbackOn">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the On button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.FeedbackOff">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the Off feedback for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.BlinkPatternOn">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.FeedbackWithBlinkPattern"/> object corresponding to the On feedback with blink pattern for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff.BlinkPatternOff">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.FeedbackWithBlinkPattern"/> object corresponding to the Off feedback with blink pattern for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpOnOff"/> device.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene">
            <summary>
            Professional Cresnet-based wall-mounted keypad with auto-dimmable backlit text and enhanced LED feedback with 4 Scene buttons.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>,
            <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> and 
            <see cref="E:Crestron.SimplSharpPro.Versiport.VersiportChange"/> events.</para>
            </summary>
            <example>
            Refer example code for <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdP"/>.
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2N-CBD-P-KP-SCENE Cameo Professional Keypad device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2N-CBD-P-KP-SCENE Cameo Professional Keypad device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.InitializeButtons">
            <summary>
            Method to initialize the buttons.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.InitializeFeedbacks">
            <summary>
            Method to initialize the feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.SIMPLDeviceImplementation_CueChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> Internal device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.AdvancedButtonEventsSlot_OnSignalChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> advanced button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> Advanced Button Events Subclass device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene1">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the On button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene1"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene2">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Off button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene2"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene3">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Off button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene3"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene4">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Scene4 button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Scene4"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Off">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Off button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Off"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Raise">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Off button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Raise"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Lower">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> object corresponding to the Off button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            <para>The <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event will trigger with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.Lower"/> and <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.FeedbackScene1">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the Scene1 button for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.FeedbackScene2">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the Scene2 feedback for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.FeedbackScene3">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the Scene3 feedback for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.FeedbackScene4">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the Scene4 feedback for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.FeedbackOff">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the Off feedback for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene.FeedbackRaise">
            <summary>
            Get the <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Feedback"/> object corresponding to the Raise feedback for this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdPKpScene"/> device.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nCbfP">
            <summary>
            Professional Cresnet-based wall-mounted keypad that feature customizable button configurations, auto-dimmable backlit text and enhanced LED feedback.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>,
            <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> and 
            <see cref="E:Crestron.SimplSharpPro.Versiport.VersiportChange"/> events.</para>
            </summary>
            <example>
            Refer example for <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdP"/>.
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbfP.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2N-CBF-P Cameo Professional Keypad device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nCbfP.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2N-CBF-P Cameo Professional Keypad device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2niCb">
            <summary>
            A highly configurable Cameo International Keypad that present a fresh, innovative concept in keypad design, offering extensive control capability in a single-gang European or UK style wall box.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.LightSensorChange"/> and <see cref="E:Crestron.SimplSharpPro.Keypads.C2nCbdPBase.ThresholdStateChange"/> events.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.C2nCbdP"/>.
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2niCb.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2NI-CB Cameo International Keypad device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2niCb.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2NI-CB Cameo International Keypad device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2niCb.InitializeSpecificDevice">
            <summary>
            Method to initialize specifics of this device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2niCb.InitializeButtons">
            <summary>
            Method to initialize the buttons.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2niCb.InitializeFeedbacks">
            <summary>
            Method to initialize the feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2niCb.SIMPLDeviceImplementation_CueChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2niCb"/> button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2niCb"/> Internal device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2niCb.AdvancedButtonEventsSlot_OnSignalChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2niCb"/> advanced button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2niCb"/> Advanced Button Events Subclass device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2niCb.LeftBargraphValue">
            <summary>
            Property to get or set the left bargraph value of the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2niCb.RightBargraphValue">
            <summary>
            Property to get or set the right bargraph value of the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2niCb.DigitalInputPorts">
            <summary>
            Collection of Digital inputs on the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2niCb.NumberOfDigitalInputPorts">
            <summary>
            Number of digital inputs this device supports.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase">
            <summary>
            Base class for C2N-UNI8IO-X Universal Keypad Interfaces.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor to generate a new C2N-UNI8IO Family Cameo International Keypad Interface device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor to generate a new C2N-UNI8IO Family Cameo International Keypad Interface device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="paramName">Name of the device.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.CommonInit">
            <summary>
            Method to initialize this <see cref="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase"/> device.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.NumberOfButtons">
            <summary>
            The number of <see cref="T:Crestron.SimplSharpPro.DeviceSupport.Button"/> objects on the device.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.NumberOfFeedbacks">
            <summary>
            Number of Feedbacks for <see cref="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase"/>.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.InitializeButtons">
            <summary>
            Method to initialize the buttons.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.InitializeFeedbacks">
            <summary>
            Method to initialize the feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.SIMPLDeviceImplementation_SigChange(Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase"/> button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase"/> Internal device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.AdvancedButtonEventsSlot_OnSignalChange(Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method to handle the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase"/> advanced button state change events.
            Button states are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/> enum.
            </summary>
            <param name="currentDevice">Current <see cref="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase"/> Advanced Button Events Subclass device.</param>
            <param name="args">Sig Event Arguments.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.Feedbacks">
            <summary>
            Property to get the collection of feedbacks on the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.FeedbackIntensity">
            <summary>
            Property to set the LED feedback level when the corresponding feedback sig value is 'true'.
            </summary>
            <remarks>Valid values range from 25% to 100%.
            Out of range values will hold the feedback level to the minimum/maximum value.
            If a value of 0% is sent, or if the property value is undefined, the feedback intensity will default to 100%.</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.GlowIntensity">
            <summary>
            Property to set the glow intensity, which illuminates the keypad when the corresponding LED feedback is turned off, and glow mode is enabled.
            </summary>
            <remarks>Valid values range from 1% to 20%.
            Out of range values will hold the feedback level to the minimum/maximum value.
            If a value of 0% is sent, or if the property value is undefined, the glow intensity will default to 10%.</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.ParameterHoldTime">
            <summary>
            Returns and sets the time in seconds that a button must be held before it is recognized as a "Hold" instead of a "Tap".
            Use the SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            </summary>     
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.ParameterDblTapSpeed">
            <summary>
            Returns and sets the time between the end of the first tap and the start of the second tap for a "DblTap" to be recognized.
            Use the SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            </summary>     
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.ParameterWaitForDoubleTap">
            <summary>
            Returns and sets the setting that determines whether a "Tap" should be sent immediately
            on the release of the button, or if the unit should wait until a "DblTap" event occurs.
            </summary>     
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.CresnetC2nUni8IoD">
            <summary>
            Auto generated class for C2N-UNI8IO-D Cresnet based Universal Keypad Interface
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.CresnetC2nUni8IoD.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.Object)">
            <summary>
            Constructor used to add the device to the controller.
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.CresnetC2nUni8IoD.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots,System.Object)">
            <summary>
            Constructor used when the device is added to a external device. (External Gateway, Salve Cresnet, etc.)
            
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="cresnetBranch">Parent device to add this device to.</param>
            <param name="paramParent"></param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoBase.CresnetC2nUni8IoD.C2nUni8IoDAdvancedButtonEvents.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"HoldTime"                	Default Value:0.5s                     	Type: Time
            	"DblTap Speed"            	Default Value:0.5s                     	Type: Time
            	"Wait For DblTap"         	Default Value:0                        	Type: Decimal
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nUni8Io">
            <summary>
            An universal keypad interface, designed for mounting in a back box behind third party switches and has 8
            digital inputs that are contact closure driven and 8 separate LED outputs rated 5V DC/ 5mA.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event.</para>
            </summary>
            <example>
            Refer the example code for <see cref="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoD"/>.
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8Io.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2N-UNI8IO Cameo International Keypad Interface device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8Io.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2N-UNI8IO Cameo International Keypad Interface device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nUni8IoD">
             <summary>
             An universal keypad interface, designed for mounting in a back box behind third party switches and has 8
             digital inputs that are contact closure driven and 8 separate LED outputs rated 5V DC/ 5mA.
             <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event.</para>
             </summary>
             <example>
             <code>
             static C2nUni8IoD myKeypad;
             // Constructor for the Control system class and to add the console commands.
            public ControlSystemC2nUni8IoD()
            {
                //Register console commands
                CrestronConsole.AddNewConsoleCommand(CreateDeviceCmd, "CreateDevice", "This is a C2N-UNI8IO-D Keypad interface CreateDevice command", ConsoleAccessLevelEnum.AccessOperator);
                CrestronConsole.AddNewConsoleCommand(SetFeedbackStateCmd, "SetFeedbackState", "This is a C2N-UNI8IO-D Keypad interface SetFeedbackState command", ConsoleAccessLevelEnum.AccessOperator);
                CrestronConsole.AddNewConsoleCommand(SetBlinkPatternCmd, "SetBlinkPattern", "This is a C2N-UNI8IO-D Keypad interface SetBlinkPattern command", ConsoleAccessLevelEnum.AccessOperator);
                CrestronConsole.AddNewConsoleCommand(SetGlowModeStateCmd, "SetGlowModeState", "This is a C2N-UNI8IO-D Keypad interface SetGlowModeState command", ConsoleAccessLevelEnum.AccessOperator);
            }
            
             // Sig callback for handling C2N-UNI8IO-D button events.
             public void CreateDeviceCmd(String args)
            {
                //Initialize the C2N-UNI8IO-D device for Cresnet Communication
                myKeypad = new C2nUni8IoD(0x17, this);
            
                myKeypad.ButtonStateChange += MyKeypadButtonChange;
            
               //Register the C2N-UNI8IO-D Cameo Professional Keypad with the Control system
                myKeypad.Register();
            
                if (myKeypad.Registered)
                {
                    CrestronConsole.ConsoleCommandResponse("{0} device registered successfully\r\n", myKeypad.ToString());
                }
            }
            
             // Method to set the LED feedback state
             // Example to set feedback 1 state to true : SetFeedbackState 1 Y
             // Example to set feedback 1 state to false : SetFeedbackState 1 N
             public void SetFeedbackStateCmd(string cmdparameters)
            {
                var index = Convert.ToUInt16(cmdparameters.Substring(0, 1));
                bool state;
            
                if (cmdparameters.Substring(2, 1) == "Y")
                {
                    state = true;
                }
                else
                {
                    state = false;
                }
                myKeypad.Feedbacks[index].State = state;
                CrestronConsole.PrintLine("Feedback{0}'s state is {1}\r\n", index, myKeypad.Feedbacks[index].State);
            
            }
            
             // Method to set the blink pattern
             // Example to set feedback 1 blink pattern to eButtonBlinkPattern.AlwaysOn : SetBlinkPattern 1 01
             // Example to set feedback 1 blink pattern to eButtonBlinkPattern.AlwaysOn : SetBlinkPattern 1 11
             public void SetBlinkPatternCmd(string cmdparameters)
             {
                var index = Convert.ToUInt16(cmdparameters.Substring(0, 1));
                var pattern = Convert.ToUInt16(cmdparameters.Substring(2, 2));
            
                myKeypad.Feedbacks[index].BlinkPattern = (eButtonBlinkPattern)(pattern-1);
                CrestronConsole.PrintLine("Feedback{0}'s Blink Pattern is {1}\r\n", index, myKeypad.Feedbacks[index].BlinkPattern);
            }
            
             // Method to set the glow mode
             // Example to set feedback 1 glow mode to true : SetGlowModeState 1 Y
             // Example to set feedback 1 glow mode to false : SetGlowModeState 1 N
             public void SetGlowModeStateCmd(string cmdparameters)
             {
                var index = Convert.ToUInt16(cmdparameters.Substring(0, 1));
                bool state;
            
                if (cmdparameters.Substring(2, 1) == "Y")
                {
                    state = true;
                }
                else
                {
                    state = false;
                }
                myKeypad.Feedbacks[index].GlowModeEnableState.BoolValue = state;
                CrestronConsole.PrintLine("Feedback{0}'s Glow Mode State is {1}\r\n", index, myKeypad.Feedbacks[index].GlowModeEnableState.BoolValue);
            }
            
             // Sig callback for handling C2N-UNI8IO-D button events.
                static void MyKeypadButtonChange(GenericBase currentDevice, ButtonEventArgs args)
                {
                    <![CDATA[for (uint i = 1; i <= 8; i++)]]>
                    {
                        if (args.Button.Number == myKeypad.Button[i].Number)
                        {
                            //This means Bool "sig" changed on the C2nUni8IoD 
                            //Just print some information for now.
                            CrestronConsole.PrintLine("Button{0}'s state is {1}\r\n", i, args.Button.State);
                        }
                    }
                }
             </code>
             </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoD.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new C2N-UNI8IO-D Cameo International Keypad Interface device on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nUni8IoD.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new C2N-UNI8IO-D Cameo International Keypad Interface device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase">
            <summary>
            ZUMLINK-KP Keypad Base class.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para> 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.KeypadDisabledFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.KeypadDisabledFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.DoubleTapTimeFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.DoubleTapTimeFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.WaitForDoubleTapFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.WaitForDoubleTapFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.HoldTimeFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.HoldTimeFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase._internalDevice">
            <summary>
            Internal Device
            </summary>        
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase._buttonEventsSlot">
            <summary>
            Button Events slot device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.String)">
            <summary>
            Constructor used to add the device to the controller.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device</param>
            <param name="paramControlSystem">Control System to add to. Currently only supports 'this'.</param>
            <param name="paramName">Name of the device</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String)">
            <summary>
            Constructor used to add the device to a CresnetBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device</param>
            <param name="paramCresnetBranch">CresnetBranch this device is a part of.</param>
            <param name="paramName">Name of the device</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.#ctor(System.UInt32,Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase,System.String)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase"/>. This is used when the <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase"/> is added
            to a ZUMNET-BRIDGE or ZUMNET-BRIDGE-ROOM.
            </summary>
            <param name="paramSlotId">Slot ID of this device</param>
            <param name="zumNetBridge"> <see cref="T:Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase"/> to add the <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase"/> to</param>
            <param name="paramDeviceName">Name of the device</param>
            <exception cref="T:System.ArgumentNullException"> <see cref="T:Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase"/> device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> Device is not of type <see cref="T:Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase"/></exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.InitializeDevice">
            <summary>
            Initialize the Device
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.InitializeButtons">
            <summary>
            Method to initialize buttons.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.GetDeviceInfo">
            <summary>
            This method is to get the device information into <see cref="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.DeviceInfoDataFeedback"/>.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.ZumWiredCommonEventHandler(Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            ZUM Wired Common sig change event handler.  
            </summary>
            <param name="currentDevice">Device that triggered the event.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.ButtonEvents_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Button sig change handler
            Button States are located in <see cref="T:Crestron.SimplSharpPro.DeviceSupport.eButtonState"/>.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.AdvancedButtonEvents_OnSignalChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Advanced Button sig change handler. This event handler will handle Button Tap, Button Double Tap (when <see cref="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.WaitForDoubleTap"/> is true), 
            Button Held and Button Held Release events.     
            </summary>
            <param name="currentDevice">Device that received the event.</param>
            <param name="args">Arguments to describe what sig triggered the event.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.KeypadEnable">
            <summary>
            This method will enable regular and advanced button events being received from the device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.KeypadDisable">
            <summary>
            This method will disable regular and advanced button events being received from the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.ReadyForConfigurationUpdateFeedback">
            <summary>
            When this property is true then the Zum Wired Device is ready to update configuration parameters.
            When this property is false then the Zum Wired Device will ignore the configuraion parameters.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.ZumWiredSupport.ZumWiredCommonEventIds.ReadyForConfigUpdateFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.DeviceInfoDataFeedback">
            <summary>
            This property reports a string that indicates the device type and what are its capabilities 
            (i.e. Load Controller, Occ Sensor, Photo, Keypad, etc...), and also appends the associated device variant details (i.e. LV dimmer, Phase dimmer, switch, number of buttons) 
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.ZumWiredSupport.ZumWiredCommonEventIds.DeviceInfoDataFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.KeypadDisabledFeedback">
            <summary>
             This property is to indicate if regular and advanced button events are disabled on the keypad.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.KeypadDisabledFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.HoldTime">
            <summary>
            This property is to set the time in 10ms ticks that a button must be held before it is recognized as a "Hold" instead of a "Tap".
            Minimum allowed is .1 sec, maximum is 1.0 sec
            Example: 100 means 1 second
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.DoubleTapTime">
            <summary>
            This property is to set the time in 10ms ticks between the end of the first tap and the start of the second tap for a "DoubleTap" to be recognized.
            Minimum allowed is .1 sec, maximum is 1.0 sec
            Example: 100 means 1 second
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.WaitForDoubleTap">
            <summary>
            This property is to configure whether a "Tap" should be sent immediately
            on the release of the button, or if the unit should wait until a "DoubleTap" event occurs.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.DoubleTapTimeFeedback">
            <summary>
            This property returns the current DoubleTap time in 10ms ticks.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.DoubleTapTimeFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.WaitForDoubleTapFeedback">
            <summary>
            This property returns the setting that determines whether a "Tap" should be sent immediately
            on the release of the button, or if the unit should wait until a "DoubleTap" event occurs.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.WaitForDoubleTapFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.HoldTimeFeedback">
            <summary>
            This property is to get the value current Hold time in 10ms ticks.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.HoldTimeFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp">
            <summary>
            Actual device class for ZUMLINK-KP keypad.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor for the <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp"/> actual device class.
            </summary>
            <param name="paramCresnetId">CresnetId of the device.</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots)">
            <summary>
            Constructor for the <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp"/> actual device class.
            </summary>
            <param name="paramCresnetId">CresnetId of the device.</param>
            <param name="owner">Cresnet Bridge slot to add to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp.#ctor(Crestron.SimplSharpProInternal.CrestronDevice,System.UInt32)">
            <summary>
            Constructor for the <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp"/> when it is added to the <see cref="T:Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase"/>
            The slot Id gets passed in
            </summary>
            <param name="owner">Owner </param>
            <param name="paramSlotId"> Slot ID</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypadBase.CresnetZumLinkKp.ZumLinkKpButtonEvents.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypad">
            <summary>
            ZUMLINK-KP Rocker Keypad with Bluetooth. 
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
            </summary>
            <example>
            <code>
               static ZumLinkKpKeypad _zumLinkKpRw;
               static bool _objcreated;
               public ControlSystemZumLinkKpKeypad()
               {
                   //Register console commands
                    CrestronConsole.AddNewConsoleCommand(CreateDeviceCmd, "CreateDevice", "This is a ZUMLINK-KP CreateDevice command", ConsoleAccessLevelEnum.AccessOperator);
               }
               
               public void CreateDeviceCmd(String args)
               {
                  if (_objcreated == false)
                   {
                       //Initialize the ZUMLINK-KP device for Cresnet Communication.
                       _zumLinkKpRw = new ZumLinkKpKeypad(0x17, this);
                       CrestronConsole.ConsoleCommandResponse("ZUMLINK-KP device successfully created with CresnetID : {0}", _zumLinkKpRw.ID);           
            
                       // Subscribe to the events.
                       _zumLinkKpRw.BaseEvent += TestBaseEventHandler;
                       _zumLinkKpRw.ButtonStateChange += KeypadButtonChange;
                       
                      //Register the ZUMLINK-KP Cresnet keypad with the Control system.
                       _zumLinkKpRw.Register();
                       _objcreated = true;
                   }
                   else
                   {
                       CrestronConsole.ConsoleCommandResponse("ZUMLINK-KP device already created with CresnetID : {0}", _zumLinkKpRw.ID);
                   }
               }
               
                public void TestBaseEventHandler(GenericBase device, BaseEventArgs args)
               {
                   if (args.EventId == ZumLinkKpKeypad.DeviceInfoDataFeedbackEventId)
                   {
                       CrestronConsole.PrintLine("DeviceInfoData event occurred on ZUMLINK KP");
                   }
                   else if (args.EventId == ZumLinkKpKeypad.KeypadDisabledFeedbackEventId)
                   {
                       CrestronConsole.PrintLine("KeypadDisabled event occurred on ZUMLINK KP");
                   }
                   else if (args.EventId == ZumLinkKpKeypad.ReadyForConfigUpdateFeedbackEventId)
                   {
                       CrestronConsole.PrintLine("ReadyForConfigUpdate event occurred on ZUMLINK KP");
                   }
               }
               
               // Sig callback for handling ZUMLINK-KP button events.
               static void KeypadButtonChange(GenericBase currentDevice, ButtonEventArgs args)
               {
                   <![CDATA[for (uint i = 1; i <= 8; i++)]]>
                   {
                       if (args.Button.Number == _zumLinkKpRw.Button[i].Number)
                       {
                           //This means Bool "sig" changed on the zumlink - kp
                           //Just print some information for now.
                           CrestronConsole.PrintLine("Button{0}'s state is {1}\r\n", i, args.Button.State);
                      }
                   }
               }
            </code>
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the controller.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device</param>
            <param name="paramControlSystem">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor used to add the device to a CresnetBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device</param>
            <param name="paramCresnetBranch">CresnetBranch this device is a part of.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypad"/>. This is used when the <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypad"/> is added
            to a ZUMNET-BRIDGE or ZUMNET-BRIDGE-ROOM.
            </summary>
            <param name="paramSlotId">Slot ID of this device</param>
            <param name="zumNetBridge"> ZumNetBridgeBase to add the <see cref="T:Crestron.SimplSharpPro.Keypads.ZumWired.ZumLinkKpKeypad"/> to</param>
            <exception cref="T:System.ArgumentNullException"> <see cref="T:Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase"/> device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> Device is not of type <see cref="T:Crestron.SimplSharpPro.Lighting.ZumWired.ZumNetBridgeBase"/></exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad">
            <summary>
            Generic keypad interface to allow 3rd parties to integrate native Cresnet communications into their
            devices. Exposes 16 GPIO pins, 8 inputs and 8 outputs, that allow for basic keypad functionality.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> event.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad._AdvancedButtonEventsSlot">
            <summary>
            Advanced Button Events slot device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad"/> device connected to Control system.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad"/> device on IDeviceBranch
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.InitializeDevice(Crestron.SimplSharpPro.CrestronDeviceWithEvents,Crestron.SimplSharpPro.CrestronDeviceWithEvents)">
            <summary>
            Initializes the <see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/> device.
            </summary>
            <param name="paramDevice"><see cref="T:Crestron.SimplSharpPro.Keypads.CnxBBase"/> device.</param>
            <param name="adavancedButtonSlotDevice"></param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.InitializeButtons">
            <summary>
            Method to initialize the buttons. 
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.SendParameters">
            <summary>
            This will send the parameters fields (if any) to the device.  It allows the parameters to be modified and resent without unregistering and re-registering 
            a device.  It requires firmware support on the device.
            Not Currently implemented. This will throw a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">thrown if the device does not support sending receiving parameters on the fly.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.InitializeFeedbacks">
            <summary>
            Method to initialize the feedbacks.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.ParameterHoldTime">
            <summary>
            Returns and sets the time in seconds that a button must be held before it is recognized as a "Hold" instead of a "Tap".
            Use the  SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            Valid values are 20 (0.2s) to 100 (1.0s)
            </summary>     
            <exception cref="T:System.ArgumentOutOfRangeException">  Specified value is out of range </exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.ParameterDblTapSpeed">
            <summary>
            Returns and sets the time between the end of the first tap and the start of the second tap for a "DblTap" to be recognized.
            Use the  SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            Valid values are 20 (0.2s) to 100 (1.0s)
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">  Specified value is out of range </exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nGenericKeypad.ParameterWaitForDoubleTap">
            <summary>
            Returns and sets the setting that determines whether a "Tap" should be sent immediately
            on the release of the button, or if the unit should wait until a "DblTap" event occurs.
            </summary>     
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.Cresnet_C2N_GENERICKEYPAD.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the controller.
            
            </summary>
            <param name="CID">ID of this device</param>
            <param name="Owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.Cresnet_C2N_GENERICKEYPAD.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots)">
            <summary>
            Constructor used when the device is added to a CresnetBranch.
            
            </summary>
            <param name="cId">ID of this device</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.Cresnet_C2N_GENERICKEYPAD.C2N_GENERICKEYPAD_Advanced_Button_Events.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"HoldTime"                	Default Value:0.50s                    	Type: Time
            	"DblTapSpeed"             	Default Value:0.50s                    	Type: Time
            	"WaitForDblTap"           	Default Value:0d                       	Type: Decimal
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramID">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.HzKpcn">
            <summary>
            The Horizon Cresnet Keypad that has 5 individual backlight rows and has a total of 10 buttons that can host a number of different keypad combos.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> and <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> events.</para>
            </summary>
            <example>
            <code>
            using System;
            using Crestron.SimplSharp;                          	// For Basic SIMPL# Classes
            using Crestron.SimplSharpPro;                       	// For Basic SIMPL#Pro classes
            using Crestron.SimplSharpPro.CrestronThread;        	// For Threading
            using Crestron.SimplSharpPro.DeviceSupport;         	// For Generic Device Support
            using Crestron.SimplSharpPro.Keypads;
            
            namespace HzKpcnSSPProgram
            {
                public class ControlSystemHzKpcn : CrestronControlSystem
                {
                    static HzKpcn _hzKpcn;
            
                    // Constructor of the Control System Class. Make sure the constructor always exists.
                    // If it doesn't exit, the code will not run on your 3-Series processor.
                    public ControlSystemHzKpcn()
                    {
                        CrestronConsole.AddNewConsoleCommand(CreateDeviceCmd, "CreateDevice", "HZ-KPCN CreateDevice Command", ConsoleAccessLevelEnum.AccessProgrammer);
                        CrestronConsole.AddNewConsoleCommand(EnableDayTimeCmd, "EnableDayTime", "HZ-KPCN EnableDayTime Command", ConsoleAccessLevelEnum.AccessProgrammer);
                        CrestronConsole.AddNewConsoleCommand(EnableNightTimeCmd, "EnableNightTime", "HZ-KPCN EnableNightTime Command", ConsoleAccessLevelEnum.AccessProgrammer);
                        CrestronConsole.AddNewConsoleCommand(EnableManualDayNightTimeCmd, "EnableManDayNightTime", "HZ-KPCN EnableManualDayNightTime Command", ConsoleAccessLevelEnum.AccessProgrammer);
                        CrestronConsole.AddNewConsoleCommand(SetActiveFeedbackCmd, "SetActiveFeedback", "HZ-KPCN SetActiveFeedback Command", ConsoleAccessLevelEnum.AccessProgrammer);
                    }
            
                    //Method to enable/disable the active feedback
                    public void SetActiveFeedbackCmd(string args)
                    {
                        var str = args.Split(' ');
                        _hzKpcn.Feedbacks[Convert.ToUInt16(str[0])].Active.BoolValue = Convert.ToBoolean(str[1]);
                    }
                    
                    //Method to handle the button state change events
                    public void HzKpcnButtonStateChange(GenericBase device, ButtonEventArgs args)
                    {
                        CrestronConsole.PrintLine("Button{0} name is {1} state is {2} horiz loc {3} vert loc {4}", args.Button.Number, args.Button.Name, args.Button.State, args.Button.HorizontalLocation, args.Button.VerticalLocation);
                    }
            
                    //Method to create the device object for HZ-KPCN
                    public void CreateDeviceCmd(string args)
                    {
                        try
                        {
                            _hzKpcn = new HzKpcn(0x25, this);
                            Thread.MaxNumberOfUserThreads = 20;
            
                            _hzKpcn.ButtonStateChange += HzKpcnButtonStateChange;
                            _hzKpcn.BaseEvent += HzKpcnBacklightLedSettingsChange;
                            _hzKpcn.VersiPorts[1].VersiportChange += HzKpcnVersiportStateChange_EventHandler;
                            _hzKpcn.VersiPorts[2].VersiportChange += HzKpcnVersiportStateChange_EventHandler;
                            _hzKpcn.VersiPorts[1].SetVersiportConfiguration(eVersiportConfiguration.DigitalInput);
                            _hzKpcn.VersiPorts[1].DisablePullUpResistor = false;
                            _hzKpcn.VersiPorts[2].SetVersiportConfiguration(eVersiportConfiguration.DigitalInput);
                            _hzKpcn.VersiPorts[2].DisablePullUpResistor = true;
            
                            //Register HZ-KPCN
                            if (_hzKpcn.Register() != eDeviceRegistrationUnRegistrationResponse.Success)
                                ErrorLog.Error("Error Registering the HZ-KPCN at {0}: {1}", _hzKpcn.ID, _hzKpcn.RegistrationFailureReason);
                        }
            
                        catch (Exception e)
                        {
                            ErrorLog.Error("Error in the constructor: {0}", e.Message);
                        }
                    }
            
                    //Method to handle the Backlight LED Setting slot sig change events
                    static void HzKpcnBacklightLedSettingsChange(GenericBase device, BaseEventArgs args)
                    {
                        if (args.EventId == HzKpcn.InDayTimeEventId)
                        {
                            CrestronConsole.PrintLine("In Day Time Feedback Event received, state is {0}", ((HzKpcn)device).BacklightLedSettings.InDayTimeFeedback.BoolValue);
                        }
                    }
            
                    // Sig callback for handling HZ-KPCN Versiport State change events.
                    static void HzKpcnVersiportStateChange_EventHandler(Versiport vport, VersiportEventArgs args)
                    {
                        switch (args.Event)
                        {
                            case eVersiportEvent.AnalogInChange:
                                CrestronConsole.Print("AnalogInChange event for Versiport{0} received, State is {1}\r\n", vport.ID, vport.DigitalIn);
                                break;
            
                            case eVersiportEvent.DigitalInChange:
                                CrestronConsole.Print("DigitalInChange event for Versiport{0} received, Value is {1}\r\n", vport.ID, vport.AnalogIn);
                                break;
                        }
                    }
                    
                    //Method to enable the DayTime Mode
                    public void EnableDayTimeCmd(string args)
                    {
                        _hzKpcn.BacklightLedSettings.EnableDayTime();
                    }
            
                    //Method to enable the NightTime Mode
                    public void EnableNightTimeCmd(string args)
                    {
                        _hzKpcn.BacklightLedSettings.EnableNightTime();
                    }
                    
                    //Method to enable the Manual Day Night Time Mode
                    public void EnableManualDayNightTimeCmd(string args)
                    {
                        _hzKpcn.BacklightLedSettings.EnableManualDayNightTime.BoolValue = Convert.ToBoolean(args);
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HzKpcn._versiportsSlot">
            <summary>
            Versiports slot device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HzKpcn.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.HzKpcn"/> object connected to Control system.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control system specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HzKpcn.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.HzKpcn"/> object on IDeviceBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HzKpcn.InitializeDevice(Crestron.SimplSharpPro.HorizonSupport.IHzKp)">
            <summary>
            Initialize Device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HzKpcn.VersiPorts">
            <summary>
            Collection of versiports on the control system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HzKpcn.NumberOfVersiPorts">
            <summary>
            Number of versiports this device supports.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetHzKpcn.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,Crestron.SimplSharpPro.GenericBase)">
            <summary>
            Constructor used to add the device to the controller.
            
            </summary>
            <param name="cId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetHzKpcn.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots,Crestron.SimplSharpPro.GenericBase)">
            <summary>
            Constructor used when the device is added to a CresnetBranch.
            
            </summary>
            <param name="cId">ID of this device</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetHzKpcn.CresnetHzKpcnVersiport.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice,System.Object)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.HttB10Ex">
            <summary>
            Battery-operated table-top, ten-button keypad for lighting, climate, and audio control that communicates using the infiNET EX wireless protocol
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.OnBatteryPowerFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.OnBatteryPowerFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.AmbientLightLevelFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.AmbientLightLevelFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.StatusMessagesFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.StatusMessagesFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase)">
            <summary>
            Constructor for <see cref="T:Crestron.SimplSharpPro.Keypads.HttB10Ex"/> devices.
            </summary>
            <param name="paramRfId">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.InitializeButtons">
            <summary>
            Method to initialize <see cref="T:Crestron.SimplSharpPro.Keypads.HttB10Ex"/> buttons and sigs.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.InitializeFeedbacks">
            <summary>
            Method to initialize the feedbacks.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.InitializeDevice">
            <summary>
            Initializes the <see cref="T:Crestron.SimplSharpPro.Keypads.HttB10Ex"/> device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.DisableBargraph">
            <summary>
            Disables the bargraph functionality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.EnableBargraph">
            <summary>
            Enables the bargraph functionality.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.SimplDeviceImplementationForHttB10Ex_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Sig event handler for sig changes in the base.SIMPLDeviceImplementation class.
            EventIds for this event are located in the <see cref="T:Crestron.SimplSharpPro.Keypads.HttB10Ex"/> class.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.AdvancedButtonEventsSlot_OnSignalChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Method that handles advanced button event slot events.
            </summary>
            <param name="currentDevice">Device that triggered the event.</param>
            <param name="args">Event arguments.</param> 
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.HttB10Ex.Logging_OnSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Sig event handler for sig changes in the Logging SubClass.
            EventIds for this event are located in the <see cref="T:Crestron.SimplSharpPro.Keypads.HttB10Ex"/> class.
            </summary>
            <param name="currentDevice">Device that the event occurred on.</param>
            <param name="args">Arguments to describe what changed on the base device.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.Feedbacks">
            <summary>
            Property to get the collection of feedbacks on the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ManualBacklight">
            <summary>
            Property to enable manual adjustment of the backlight via the <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.BacklightIntensity"/> on Brightness and Bargraph Functions SubClass.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ManualIndicatorIntensity">
            <summary>
            Property to enable manual adjustment of the LED brightness via the <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.IndicatorIntensity"/> on Brightness and Bargraph Functions SubClass.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ReportLightLevel">
            <summary>
            Property to enable the <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.AmbientLightLevelFeedback"/> to report the current light level when the value is "true". When the value is "false", this suppresses <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.AmbientLightLevelFeedback"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.OnBatteryPowerFeedback">
            <summary>
            Property to indicate when the device is running on battery power (wallpack is not connected).
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.OnBatteryPowerFeedbackEventId"/>.</para>
            </summary>
            <remarks>true=on battery, false=wallpack connected.</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.AmbientLightLevelFeedback">
            <summary>
            Property to report the ambient light level as a percentage from 0% to 100%, as determined by the internal light sensor. The value will be refreshed every 5 seconds if changed. 
            This is only enabled when <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ReportLightLevel"/> is "true".
            Light level reporting on battery mode is only enabled during wake/active periods.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.AmbientLightLevelFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.LeftBargraph">
            <summary>
            Property to get the left bar graph analog value that will be displayed on the corresponding LED indicators in bargraph format.
            <para>The Left bargraph is formed by the LEDs on the left side of the unit; the Right bargraph, by the LEDs on the right side.</para>
            <para><see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout"/> parameter shall specify the amount of time a bargraph is displayed.  A value of 0 shall indicate no timeout such that indicators shall always function in bargraph mode.</para>
            <para>The LEDs will display the ramping value as it changes, and then remain in bargraph mode for the additional period given by the <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout"/> parameter.</para>
            <para>If no change occurs to the analog value before the <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout"/> expires, the LEDs revert to standard behavior.</para>
            <para>The 5-segment bargraph displays the analog values as follows:</para>
            <list type="bullet">
            <item>
            <description>Segment 1 (top) LED is ON when analog value = 100%.</description>
            </item>
            <item>
            <description>Segment 2 LED is ON when analog value &gt; 75%.</description>
            </item>
            <item>
            <description>Segment 3 LED is ON when analog value &gt; 50%.</description>
            </item>
            <item>
            <description>Segment 4 LED is ON when analog value &gt; 25%.</description>
            </item>
            <item>
            <description>Segment 5 (bottom) LED is ON when analog value &gt; 0%.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.RightBargraph">
            <summary>
            Property to get the right bar graph value that will be displayed on the corresponding LED indicators in bargraph format.
            <para>The Right bargraph is formed by the LEDs on the left side of the unit; the Right bargraph, by the LEDs on the right side. </para>
            <para>The LEDs will display the ramping value as it changes, and then remain in bargraph mode for the additional period given by the <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout"/> parameter.</para>
            <para>If no change occurs to the analog value before the <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout"/> expires, the LEDs revert to standard behavior.</para>
            <para>The 5-segment bargraph displays the analog values as follows:</para>
            <list type="bullet">
            <item>
            <description>Segment 1 (top) LED is ON when analog value = 100%.</description>
            </item>
            <item>
            <description>Segment 2 LED is ON when analog value &gt; 75%.</description>
            </item>
            <item>
            <description>Segment 3 LED is ON when analog value &gt; 50%.</description>
            </item>
            <item>
            <description>Segment 4 LED is ON when analog value &gt; 25%.</description>
            </item>
            <item>
            <description>Segment 5 (bottom) LED is ON when analog value &gt; 0%.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.IndicatorIntensity">
            <summary>
            Property to set the LED brightness level when the LED feedback is active (above 0%).
            This is only active when <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ManualIndicatorIntensity"/> is "true".
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.BacklightIntensity">
            <summary>
            Property to set the backlight brightness level.
            This is only active when <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ManualBacklight"/> is "true".
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.EnableLogging">
            <summary>
            Property to enable logging of device status messages.
            When "true", device status message logging is enabled, when "false" there is no effect.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.StatusMessagesFeedback">
            <summary>
            Property to return the log messages.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.StatusMessagesFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterMinimumAutoIndicatorIntensity">
            <summary>
            Parameter to access the minimum brightness level of the LED feedback indicators as percentage from 1% to 100%, when controlled by the ambient light sensor (<see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ManualIndicatorIntensity"/> is "false").
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterMaximumAutoIndicatorIntensity">
            <summary>
            Parameter to access the maximum brightness level of the LED feedback indicators as percentage from 1% to 100%, when controlled by the ambient light sensor (<see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ManualIndicatorIntensity"/> is "false").
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterAutoBacklightPreset">
            <summary>
            Parameter to access the auto backlight preset number. Refer <see cref="T:Crestron.SimplSharpPro.Keypads.HttB10Ex.eBacklightPresets"/> for the Backlight Preset numbers.
            <remarks>The valid values are 0 to 2.</remarks>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterCustomBacklightThreshold">
            <summary>
            Parameter to access the threshold value as percentage from 0% to 100% that is compared to the ambient light level (reported by <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.AmbientLightLevelFeedback"/> when <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ReportLightLevel"/> is "true" to determine the brightness level of the backlight.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterCustomDayBacklight">
            <summary>
            Parameter to access the day backlight level as percentage from 0% to 100%, when the ambient light level is above <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterCustomBacklightThreshold"/>, the day level is applied and when it is below the threshold, the night level is applied.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterCustomNightBacklight">
            <summary>
            Parameter to access the night backlight level as percentage from 0% to 100%, when the ambient light level is above <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterCustomBacklightThreshold"/>, the day level is applied and when it is below the threshold, the night level is applied.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout">
            <summary>
            Parameter to access the bargraph timeout value on the LED indicators in bargraph format.
            <para>The LED indicators will enter bargraph mode as soon as a new value is seen on <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout"/>.</para>
            <para>The LEDs will adjust as the analog value is ramping and then remain in bargraph mode for the additional <see cref="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBargraphTimeout"/> period.</para>
            <para>Valid values range from 0s to 10s and default is 3s.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterBacklightTimeout">
            <summary>
            Parameter to access the back light timeout when operating on the power pack Dimmed Manner Mode.
            <para>Valid values range from 10s through 300s(5 minutes) and default is 120s(2 minutes).</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterIndicatorTimeout">
            <summary>
            Parameter to access the indicator timeout when operating on the power pack Dimmed Manner Mode.
            <para>Valid values range from 10s through 300s(5 minutes) and default is 120s(2 minutes).</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterHoldTime">
            <summary>
            Returns and sets the time in seconds that a button must be held before it is recognized as a "Hold" instead of a "Tap".
            Use the  SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            Valid values are 20 (0.2s) to 100 (1.0s) and default is 50(0.5s).
            </summary>     
            <exception cref="T:System.ArgumentOutOfRangeException">  Specified value is out of range </exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterDblTapSpeed">
            <summary>
            Returns and sets the time between the end of the first tap and the start of the second tap for a "DblTap" to be recognized.
            Use the  SimplSharpDeviceHelper.SecondsToUShort to convert
            the seconds to a ushort value or the SimplSharpDeviceHelper.UShortToSeconds to convert
            the ushort value to seconds.
            Valid values are 20 (0.2s) to 100 (1.0s) and default is 50(0.5s).
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Specified value is out of range </exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.HttB10Ex.ParameterWaitForDoubleTap">
            <summary>
            Returns and sets the setting that determines whether a "Tap" should be sent immediately
            on the release of the button, or if the unit should wait until a "DblTap" event occurs.
            <para>When set to 'true', the user will incur a slight delay before seeing the Tap, but when a DblTap occurs, there will be no Tap event.</para>
            <para>When set to 'false'(default), the user will see the quickest response from the Tap event, but will also see a Tap event prior to each DblTap event. </para>
            </summary>     
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.HttB10Ex.eBacklightPresets">
            <summary>
            Enumeration to define the Preset numbers for <see cref="T:Crestron.SimplSharpPro.Keypads.HttB10Ex"/>.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.eBacklightPresets.CustomSettings">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.eBacklightPresets.White">
            <summary>
            White.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.HttB10Ex.eBacklightPresets.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad">
            <summary>
            Eutech Prolight Keypad is a Cresnet-based, six key wired keypad that captures and returns light,
            temperature, humidity and atmospheric pressure readings. In addition, 
            it's equipped with six standard six-color LEDs and one Proximity/Perimeter LED.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/>, <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.LightSensorChange"/>
            and <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/> events.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.ProximityDetectedEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.ProximityDetectedFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.CleaningModeOnEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.CleaningModeOnFeedback"/> has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.RequestLightLevel">
            <summary>
            Method to request the light reading from the environmental sensor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.RequestTemperature">
            <summary>
            Method to request the air temperature from the environmental sensor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.RequestHumidity">
            <summary>
            Method to request the relative humidty from the environmental sensor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.RequestAtmosphericPressure">
            <summary>
            Method to request the atmospheric pressure from the environmental sensor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.RequestAirQuality">
            <summary>
            Method to request the air quality from the environmental sensor.
            Note: RESERVED FOR FUTURE USE.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.RequestSensorStatus">
            <summary>
            Method to request the working status of the environmental sensor.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.SetLedColor(System.UInt32,Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor)">
            <summary>
            Method to set color for LED's.
            Maximum index supported is known from <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.NumberOfLeds"/>.
            All values beyond <see cref="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Aqua"/> will be treated as <see cref="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Aqua"/>.
            </summary>
            <param name="index">Index of the LED.</param>
            <param name="color">Color to be set to LED.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.GetLedColor(System.UInt32)">
            <summary>
            Method to get LED's color.
            <para>Maximum index supported is known from <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.NumberOfLeds"/>.</para>
            </summary>
            <param name="index">Index of the LED.</param>
            <returns>Led color of the given index.</returns>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.OnAmbientLightLevelStateChange(Crestron.SimplSharpPro.DeviceSupport.AmbientLightSensorEventArgs)">
            <summary>
            Method to fire the <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.LightSensorChange"/> event.
            </summary>
            <param name="args">Event information that describes the new light sensor state.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.OnTemperatureChange(Crestron.SimplSharpPro.DeviceSupport.GenericSigEventArgs)">
            <summary>
            Method to fire <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.TemperatureChange"/>
            </summary>
            <param name="paramArgs">Event arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.OnHumidityChange(Crestron.SimplSharpPro.DeviceSupport.GenericSigEventArgs)">
            <summary>
            Method to fire <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.HumidityChange"/> event
            </summary>
            <param name="paramArgs">Event arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.OnPressureChange(Crestron.SimplSharpPro.DeviceSupport.GenericSigEventArgs)">
            <summary>
            Method to fire <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.PressureChange"/>
            </summary>
            <param name="paramArgs">Event arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.OnAirQualityChange(Crestron.SimplSharpPro.DeviceSupport.GenericSigEventArgs)">
            <summary>
            Method to fire <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.AirQualityChange"/>
            </summary>
            <param name="paramArgs">Event arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.OnSensorStatusChange(Crestron.SimplSharpPro.DeviceSupport.GenericSigEventArgs)">
            <summary>
            Method to fire <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.SensorStatusChange"/>
            </summary>
            <param name="paramArgs">Event arguments.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the control system.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device</param>
            <param name="paramControlSystem">Control System to add to. Currently only supports 'this'.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor used to add the device to a CresnetBranch.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device</param>
            <param name="paramCresnetBranch">CresnetBranch this device is a part of.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.ProximityLedOn">
            <summary>
            Property to turn on/off the Proximity/Perimeter LED.
            True: Proximity/Perimeter LED is On, False: Proximity/Perimeter LED is Off.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.NumberOfLeds">
            <summary>
            Property to report the count of LED's on this device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.ProximityLedColor">
            <summary>
            Property to get and set color for Proximity LED.
            LED colors are defined in <see cref="T:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor"/>.
            All values beyond <see cref="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Aqua"/> should be treated as <see cref="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Aqua"/>.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.ProximityDetectedFeedback">
            <summary>
            Property to report if an object or the operator (for example, the operator's hand) is near, in proximity of, the keypad.
            Proximity is turned on when an object or the operator is approximately 3 to 7 cm away from the glass of the Eutech Prolight Keypad.
            Proximity stays activated for all the time the object is near Eutech Prolight Keypad and for an additional 10-15 seconds when the object is pulled away.
            True = Object or operator (user) near keypad,  False = Object or operator (user) not near keypad.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.ProximityDetectedEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.CleaningModeOnFeedback">
            <summary>
            Property to report if Cleaning mode is currently turned on. 
            Cleaning mode is turned on by touching the Eutech Prolight Keypad with the open hand placed horizontally in the space
            between the 3 lower keys and the interior edge for about 8 seconds.
            The cleaning mode status is useful for Crestron macros to avoid reading key presses,
            for example when the operator wants to clean the glass of the Eutech Prolight Keypad, without activating the keys.
            True = Cleaning Mode On, False = Cleaning Mode off.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.CleaningModeOnEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.TemperatureFeedback">
            <summary>
            Property to report the temperature reading from the environmental sensor.
            Temperature values are given in 0.01 Celsius degrees.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.ITemperatureFeedback.TemperatureChange"/> event with <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.TemperatureFeedback"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.HumidityFeedback">
            <summary>
            Property to report the relative humidity reading from the environmental sensor.
            Humidity values are given in percentage (%).
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.HumidityChange"/> event with <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.HumidityFeedback"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.PressureFeedback">
            <summary>
            Property to report the atmospheric pressure reading from the environmental sensor.
            Atmospheric pressure values are given in hecto Pascals(hPa).
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.PressureChange"/> event with <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.PressureFeedback"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.AirQualityFeedback">
            <summary>
            Property to report the air quality reading from the environmental sensor.
            Note: RESERVED FOR FUTURE USE.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.AirQualityChange"/> event with <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.AirQualityFeedback"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.SensorStatusFeedback">
            <summary>
            Property to report the environmental sensor's working status.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.SensorStatusChange"/> event with <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.SensorStatusFeedback"/>.</para>
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.LightSensorChange">
            <summary>
            Event triggered when the <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.LightSensorValue"/> is reported as a percentage from 0% to 100%, as determined by the internal light sensor.
            </summary>       
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.LightSensorValue">
            <summary>
            Property to report the light reading, from the environmental sensor.
            Light is a value between 0 and 128 correlated with the light intensity, the higher the number; the higher the light intensity.
            Readings below 32 are correlated with night, readings near 127 are given in full day illumination.
            </summary>   
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.TemperatureChange">
            <summary>
            Event triggered when <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.TemperatureFeedback"/> has changed.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.HumidityChange">
            <summary>
            Event triggered when <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.HumidityFeedback"/> has changed.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.PressureChange">
            <summary>
            Event triggered when <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.PressureFeedback"/> has changed.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.AirQualityChange">
            <summary>
            Event triggered when <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.AirQualityFeedback"/> has changed.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.SensorStatusChange">
            <summary>
            Event triggered when <see cref="P:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.SensorStatusFeedback"/> has changed.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor">
            <summary>
            Led color values.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.White">
            <summary>
            White color.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Red">
            <summary>
            Red color.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Green">
            <summary>
            Green color.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Blue">
            <summary>
            Blue color.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Orange">
            <summary>
            Orange color.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Purple">
            <summary>
            Purple color.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad.eLedColor.Aqua">
            <summary>
            Aqua color.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CresnetEutechProlightKeypad">
            <summary>
            Actual device class for <see cref="T:Crestron.SimplSharpPro.Keypads.EutechProlightKeypad"/>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetEutechProlightKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots)">
            <summary>
            Constructor used to add the device to the CresnetBranch.
            </summary>
            <param name="paramCresnetId">ID of this device.</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetEutechProlightKeypad.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the control system.
            </summary>
            <param name="paramCresnetId">ID of this device.</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.ClwiKplcn">
             <summary>
             Companion keypad for CLWI dimmers and switches, sharing the exact same aesthetics. The CLWI-KPLCN uses Cresnet for power and communication and is suited for installation in any space.
             <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.DeviceSupport.KeypadBase.ButtonStateChange"/>, <see cref="E:Crestron.SimplSharpPro.DeviceSupport.ClwiKeypad.LearnableButtonEvent"/>, and <see cref="E:Crestron.SimplSharpPro.Versiport.VersiportChange"/>.</para>
             </summary>
             <example> Sample program showing a CLWI-KPLCN added to a controller's cresnet port and an external ethernet cresnet bridge. 
            public class ControlSystem : CrestronControlSystem
            {
                private readonly ClwiKplcn cresnetKeypadInternal;
                private DinCenCn2 cresnetBridge;
                private ClwiKplcn cresnetKeypadBridge;
            
                //Control system constructor
                public ControlSystem()
                {
                    //Adding a ClwiKplcn to the control system
                    cresnetKeypadInternal = new ClwiKplcn(0x5, this);
                    cresnetKeypadInternal.CLWIUISettings.ParameterLEDOnLevel = SimplSharpDeviceHelper.PercentToUshort(50);
                    cresnetKeypadInternal.CLWIUISettings.ParameterNightLightLevel = SimplSharpDeviceHelper.PercentToUshort(15);
                    cresnetKeypadInternal.InNightlightMode.BoolValue = true;
                    cresnetKeypadInternal.ButtonStateChange += CresnetKeypadOnButtonStateChange;
            
                    foreach (var port in cresnetKeypadInternal.VersiPorts)
                    {
                        port.SetVersiportConfiguration(eVersiportConfiguration.DigitalInput);
                        port.VersiportChange += PortOnVersiportChange;
                    }
                    cresnetKeypadInternal.Register();
            
                    //Initialize the cresnet bridge
                    cresnetBridge = new DinCenCn2(0x55, this);
            
                    //Adding a ClwiKplcn to the cresnet bridge
                    cresnetKeypadBridge = new ClwiKplcn(0x5, cresnetBridge.Branches[1]);
                    cresnetKeypadInternal.CLWIUISettings.ParameterLEDOnLevel = SimplSharpDeviceHelper.PercentToUshort(100);
                    cresnetKeypadBridge.ButtonStateChange += CresnetKeypadOnButtonStateChange;
                    foreach (var port in cresnetKeypadBridge.VersiPorts)
                    {
                        port.SetVersiportConfiguration(eVersiportConfiguration.AnalogInput);
                        port.VersiportChange += PortOnVersiportChange;
                    }
                    cresnetBridge.Register();
                }
            
                //Event that will receive versiport information from the ClwiKplcn
                private void PortOnVersiportChange(Versiport port, VersiportEventArgs args)
                {
                    CrestronConsole.PrintLine("Port: {0} Change {1} Received.", port, args.Event);
                }
            
                //Button change handler for the ClwiKplcn
                private void CresnetKeypadOnButtonStateChange(GenericBase device, ButtonEventArgs args)
                {
                    CrestronConsole.PrintLine("Button: {0} of {1} Received: {2}.", args.Button, device, args.NewButtonState);
                    var clwiKplcnKeypad = device as ClwiKplcn;
                    
                    if (clwiKplcnKeypad == null)
                        return;
            
                    switch (args.NewButtonState)
                    {
                        case eButtonState.NA:
                            break;
                        case eButtonState.Pressed:
                        case eButtonState.Held:
                            clwiKplcnKeypad.Feedbacks[args.Button.Number].State = true;
                            break;
                        case eButtonState.HeldReleased:
                        case eButtonState.Released:
                            clwiKplcnKeypad.Feedbacks[args.Button.Number].State = false;
                            break;
                        case eButtonState.Tapped:
                        case eButtonState.DoubleTapped:
                            clwiKplcnKeypad.Feedbacks[args.Button.Number].State = true;
                            Thread.Sleep(5);
                            clwiKplcnKeypad.Feedbacks[args.Button.Number].State = false;
                            break;
                    }
                }
            }
             </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplcn.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new CLWI-KPLCN Cresnet Keypad device connected to Control System.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplcn.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new CLWI-KPLCN Cresnet Keypad device connected to a 6.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.ClwiKplcn.SendParameters">
            <summary>
            This will send the parameters fields (if any) to the device.  It allows the parameters to be modified and resent without unregistering and re-registering 
            a device.  It requires firmware support on the device.
            Not Currently implemented. This will throw a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">thrown if the device does not support sending receiving parameters on the fly.</exception>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ClwiKplcn.VersiPorts">
            <summary>
            Collection of versiports on the control system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.ClwiKplcn.NumberOfVersiPorts">
            <summary>
            Number of versiports this device supports.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Cresnet_CLWI_KPLCN.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,Crestron.SimplSharpPro.Keypads.ClwiKplcn)">
            <summary>
            Constructor used to add the device to the controller.
            
            </summary>
            <param name="CID">ID of this device</param>
            <param name="Owner">Control System to add to. Currently only supports 'this'.</param>
            <param name="parent">Device that owns the versiports.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Cresnet_CLWI_KPLCN.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots,Crestron.SimplSharpPro.Keypads.ClwiKplcn)">
            <summary>
            Constructor used to add the device to the IInternalBridgeSlots.
            </summary>
            <param name="paramCresnetId">ID of this device.</param>
            <param name="cresnetBranch">IInternalBridgeSlots this device is a part of.</param>
            <param name="parent">Device that owns the versiports.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Cresnet_CLWI_KPLCN.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.Keypads.ClwiKplcn)">
            <summary>
            Constructor used when the device is added to a external device. (External Gateway, Salve Cresnet, etc.)
            
            </summary>
            <param name="CID">ID of this device</param>
            <param name="parentDevice">Parent device to add this device to.</param>
            <param name="parent">Device that owns the versiports.</param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Cresnet_CLWI_KPLCN.CLWI_KPLCN_Versiport_Input.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.Keypads.ClwiKplcn)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramID">ID of this device.</param>
            <param name="parent">Device that owns the versiports.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Cresnet_CLWI_KPLCN.CLWI_KPLCN_Remote_Buttons.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramID">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Cresnet_CLWI_KPLCN.CLWI_KPLCN_UI_Settings.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"LedOnLevel"              	Default Value:100%                     	Type: Percent
            	"NightLightLevel"         	Default Value:1%                       	Type: Percent
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramID">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Cresnet_CLWI_KPLCN.CLWI_KPLCN_Remote_Button_Settings.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"RemoteHoldTime"          	Default Value:.3s                      	Type: Time
            	"RemoteDblTapTime"        	Default Value:.5s                      	Type: Time
            	"RemoteWaitForDblTap"     	Default Value:0d                       	Type: Decimal
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramID">ID of this device.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings">
            <summary>
            Contains brightness settings parameters
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.#ctor(Crestron.SimplSharpPro.CrestronDeviceWithEvents)">
            <summary>
            Constructor used to initialize BrightnessSettings
            </summary>
            <param name="paramBrightnessSettingsDeviceSlot">Reference to Brightness and Bargraph Settings slot device.</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.ParameterMinAutoIndicatorIntensity">
            <summary>
            The minimum brightness of the LED feedback indicators, when controlled by the ambient light sensor.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.ParameterMaxAutoIndicatorIntensity">
            <summary>
            The maximum brightness of the LED feedback indicators, when controlled by the ambient light sensor.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or the <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.ParameterCustomDayBacklight">
            <summary>
            The day backlight brightness level to apply when the ambient light level is above or below the CustomDayNightThreshold.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.ParameterCustomNightBacklight">
            <summary>
            The night backlight brightness level to apply when the ambient light level is above or below the CustomDayNightThreshold.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.ParameterCustomDayNightThreshold">
            <summary>
            The threshold value that is compared to the ambient light level to determine the brightness level of the backlight.
            Use <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.PercentToUshort(System.Single)"/> to convert
            the percentage to a ushort value or <see cref="M:Crestron.SimplSharpPro.DeviceSupport.SimplSharpDeviceHelper.UshortToPercent(System.UInt16)"/> to convert
            the ushort value to percentage.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.ParameterAutoBacklightPreset">
            <summary>
            The auto backlight preset.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset">
            <summary>
            Preset values used to set the AutoBacklightPreset.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.CustomSettings">
            <summary>
            No preset, use the "custom day/night" parameters. 
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.White">
            <summary>
            Threshold 1.9%; Day Backlight 0%; Night Backlight 25%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.Almond">
            <summary>
            Threshold 1.9%; Day Backlight 0%; Night Backlight 25%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.Black">
            <summary>
            Threshold 1.9%; Day Backlight 100%; Night Backlight 15%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.Gray">
            <summary>
            Threshold 1.9%; Day Backlight 0%; Night Backlight 25%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.Brown">
            <summary>
            Threshold 1.9%; Day Backlight 100%; Night Backlight 15%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.DarkAlmond">
            <summary>
            Threshold 1.9%; Day Backlight 0%; Night Backlight 25%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.Dusk">
            <summary>
            Threshold 1.9%; Day Backlight 0%; Night Backlight 25%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.Ivory">
            <summary>
            Threshold 1.9%; Day Backlight 0%; Night Backlight 25%.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.InetBrightnessSettings.eAutoBacklightPreset.Latte">
            <summary>
            Threshold 1.9%; Day Backlight 0%; Night Backlight 25%.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.InetCbdexE">
            <summary>
            Economical wall-mounted keypads that feature customizable button configurations.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdexE.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase)">
            <summary>
            Constructor to generate a new InetCbdexE keypad device.
            </summary>
            <param name="paramRFID">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.InetCbdexP">
            <summary>
            Professional wall-mounted keypads that feature customizable button configurations, auto-dimmable backlit text and enhanced LED feedback.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdexP.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase)">
            <summary>
            Constructor to generate a new InetCbdexP keypad device.
            </summary>
            <param name="paramRFID">RFID of this device on the gateway.</param>
            <param name="paramGateway">Gateway to attach this device to.</param>
            <exception cref="T:System.ArgumentNullException">The gateway specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdexP.OnAmbientLightLevelStateChange(Crestron.SimplSharpPro.DeviceSupport.AmbientLightSensorEventArgs)">
            <summary>
            Event handler for AmbientLightLevel events
            </summary>
            <param name="args">Event information that describes the new light sensor state.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.InetCbdexP.OnThresholdStateChange(Crestron.SimplSharpPro.DeviceSupport.ThresholdEventArgs)">
            <summary>
            Event handler for when ambient light level exceeds or is at or below the threshold events
            </summary>
            <param name="args">Event information that describes where the ambient light level is at in relation to the threshold.</param>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.InetCbdexP.LightSensorChange">
            <summary>
            Reports the ambient light level as a percentage from 0% to 100%, as determined by the internal light sensor.  ReportLightLevel must be true.
            </summary>       
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.LightSensorValue">
            <summary>
            Updated with the ambient light level.  ReportLightLevel must be set to true.
            </summary>   
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.ManualBacklight">
            <summary>
            Enables manual adjustment of the backlight via the BacklightIntensity input for as long as the input is true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.ManualIndicatorIntensity">
            <summary>
            Enables manual adjustment of the LED brightness via the IndicatorIntensity input for as long as the input is true.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.ReportLightLevel">
            <summary>
            Enables the LightSensorValue property and the LightSensorChange event output to report the current light level for as long as the input is true. When the input is false the light level isn't reported.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.BrightnessSettings">
            <summary>
            Returns a BrightnessSettings instance that can be used to get and set brightness settings.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.BacklightIntensity">
            <summary>
            Property that returns a reference to the BacklightIntensity UShortInputSig.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.EnableExtThreshold">
            <summary>
            When EnableExtThreshold is true, this puts the keypad into slave mode.
            </summary>       
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.AboveThreshold">
            <summary>
            This input is driven by the AboveThreshold_FB output on the master keypad.
            This input is only active when EnableExtThreshold is set to true, 
            which signifies that the current button is operating in slave mode.
            When the input goes true, this sets the backlight to the specified Day level (either custom or preset). 
            When the input goes false, it goes to the specified Night level (custom or preset).
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.InetCbdexP.AboveThresholdFeedback">
            <summary>
            Updated to indicate the level of the ambient light in relation to the threshold.  This field is only updated when EnableExtThreshold is set to false.
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.InetCbdexP.ThresholdStateChange">
            <summary>
            Reports when ambient light is at or below or above the threshold.  This event is only raised when EnableExtThreshold is set to false.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.RF_INET_CBDEX_E">
            <summary>
            Actual devices
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_INET_CBDEX_E.#ctor(System.UInt32,Crestron.SimplSharpPro.GatewayBase,Crestron.SimplSharpPro.GenericBase)">
            <summary>
            Constructor used when the device is added to a external device. 
            </summary>
            <param name="RFID">ID of this device</param>
            <param name="parentDevice">Parent device to add this device to.</param>
            <param name="paramBaseDevice"></param>
            <exception cref="T:System.InvalidOperationException">Unable to add the child device. Possibly invalid ID or device type being added is not supported.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_INET_CBDEX_E.INET_CBDEX_E_Brightness_and_Bargraph_Functions.#ctor(Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.RF_INET_CBDEX_E.INET_CBDEX_Advanced_Button_Events.#ctor(Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            Integer Parameters:
            	"HoldTime"                	Default Value:0.30s                    	Type: Time
            	"DblTapSpeed"             	Default Value:0.50s                    	Type: Time
            	"WaitForDblTap"           	Default Value:0d                       	Type: Decimal
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CresnetConnected.CresnetConnected">
            <summary>
             Actual device class based on Xpanel 1.0 for the CresnetConnected device.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.CresnetConnected.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots)">
            <summary>
            Constructor used to add the device to a CresnetBranch.      
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="branch">CresnetBranch this device is a part of.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.CresnetConnected.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor used to add the device to the controller.       
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nConnectedChip">
            <summary>
            Crestron Cresnet connected device to allow 3rd parties to integrate with native Cresnet communication.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nConnectedChip._InternalXpanel">
            <summary>
            Internal communication;
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nConnectedChip.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a Cresnet connected device that is attached to a control system.
            </summary>
            <param name="paramCnetId">Cresnet ID of the device.</param>
            <param name="paramControlSystem">Control system this cresnet device is a part of.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.CresnetConnected.C2nConnectedChip.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a Cresnet connected device that is attached to an IDeviceBranch.
            </summary>
            <param name="paramBranchID">Cresnet ID of the device.</param>
            <param name="paramCresnetBranch">CresnetBranch this device is a part of.</param>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.Tt21xx">
            <summary>
            Tabletop presentation interface that offers connectivity, one-touch control, and visual feedback for status in a compact, easy to install device.
            </summary>
            <example>
            Refer example code for <see cref="T:Crestron.SimplSharpPro.Keypads.Tt1xx"/>.
            </example>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt21xx.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new TT2-1XX Cresnet Tabletop Presentation Interface
            </summary>
            <param name="paramCresnetID">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <exception cref="T:System.ArgumentNullException">The IDeviceBranch specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt21xx.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new TT2-1XX Cresnet Tabletop Presentation Interface.
            </summary>
            <param name="paramCresnetID">Cresnet ID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to. </param>
            <exception cref="T:System.ArgumentNullException">The Control System specified is not initialized.</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt21xx.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.BaseDmTx401)">
            <summary>
            Constructor to generate a new TT2-1XX Tabletop Presentation Interface. This is used when the TT2-1xx is added
            to a DM-TX-401C/DM-TX-401-S/DM-TX-401-S2.
            </summary>
            <param name="dmtxDevice"> BaseDmTx401 to add the TT-1xx to</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type BaseDmTx401</exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt21xx.#ctor(Crestron.SimplSharpPro.CrestronControlSystem,System.UInt32)">
            <summary>
            Constructor to generate a new TT2-1XX device connected to a control system that supports ConnectIt devices.
            </summary>
            <param name="controlSystem">Control system that supports ConnectIt device ports.</param>
            <param name="connectItDeviceId">ConnectIt device ID. This will match up with the port number on the control system. <see cref="P:Crestron.SimplSharpPro.CrestronControlSystem.MaximumSupportedConnectItDeviceID"/> will indicate the maximum available device ID.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt21xx.#ctor(Crestron.SimplSharpPro.DM.Switch,System.UInt32)">
            <summary>
            Constructor to generate a new TT2-1XX device connected to a DM switch.
            <exception cref="T:System.NotSupportedException">ConnectIt not supported on switch.</exception>
            </summary>
            <param name="paramSwitch">Switcher that supports ConnectIt device ports.</param>
            <param name="paramConnectItDeviceID">ConnectIt device ID. This will match up with the port number on the switch.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt21xx.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200Base)">
            <summary>
            Constructor to generate a new TT2-1XX Tabletop Presentation Interface. This is used when the TT2-1xx is added
            to a <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C2G"/>.
            </summary>
            <param name="dmtxDevice"> DmTx200Base to add the TT2-1xx to</param>
            <exception cref="T:System.ArgumentNullException"> DM device to add to is NULL</exception>
            <exception cref="T:System.ArgumentException"> DM device is not of type <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx200C2G"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx201C"/></exception>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.Tt21xx.#ctor(Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4kX02CBase)">
            <summary>
            Constructor to generate a new TT2-1XX Tabletop Presentation Interface. This is used when the TT2-1xx is added
            to a <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4k202C"/> or <see cref="T:Crestron.SimplSharpPro.DM.Endpoints.Transmitters.DmTx4k302C"/>.
            </summary>
            <param name="dmtxDevice">DmTx4kX02CBase to add the TT-1xx to</param>
            <exception cref="T:System.ArgumentNullException">DM device to add to is NULL</exception>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdb3">
             <summary>
             Multi-Purpose LCD Keypad providing a 2.0” LCD screen, with 16bit color and a capacitive touch area surrounding the screen that 
             can be configured in the factory as one of several unique products.
             <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> and <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> events.</para>
             </summary>
             <example>
             <code>
             static C2nLcdB3 _keypad;
            
                public ControlSystemC2nLcdB3()
                {
                    CrestronConsole.AddNewConsoleCommand(CreateDeviceCmd, "CreateDevice", "This is a C2N-LCD-B3 International Keypad CreateDevice command", ConsoleAccessLevelEnum.AccessOperator);
                }
                
                public void CreateDeviceCmd(String args)
                {
                    //Initialize the C2N-LCD-B3 device for Cresnet Communication
                    _keypad = new C2nLcdb3(0x03, this);
            
                    _keypad.BaseEvent += KeypadEventHandler;
                    _keypad.ButtonStateChange += KeypadButtonChange;
                    _keypad.LightingSystem.SystemChange += LightingSystem_SystemChange;
                    _keypad.ShadingSystem.SystemChange += ShadingSystem_SystemChange;
                    
                    // Now setup the keypad
                    _keypad.ShadingSystem.NumberOfScenes.UShortValue = 2;
                    _keypad.ShadingSystem.Scenes[1].Name.StringValue = "Morning";
                    _keypad.ShadingSystem.Scenes[2].Name.StringValue = "Night";
                    _keypad.ShadingSystem.NumberOfLightsOrShades.UShortValue = 4;
                    
                     CrestronConsole.PrintLine(" Number of shading loads is {0} ", _keypad.ShadingSystem.Loads.Count);
                     foreach (C2nLcdBXXBaseClass.Load shadingLoad in _keypad.ShadingSystem.Loads)
                     {
                         CrestronConsole.PrintLine(" Lighting load number is {0} ", shadingLoad.Number);
                         shadingLoad.Name.StringValue = "SL" + shadingLoad.Number;
                         shadingLoad.Level.UShortValue = 25;
                     }
                    
                     _keypad.LightingSystem.NumberOfScenes.UShortValue = 3;
                     _keypad.LightingSystem.Scenes[1].Name.StringValue = "Party1";
                     _keypad.LightingSystem.Scenes[2].Name.StringValue = "Party2";
                     _keypad.LightingSystem.Scenes[3].Name.StringValue = "Party3";
                     _keypad.LightingSystem.NumberOfLightsOrShades.UShortValue = 3;
            
                     CrestronConsole.PrintLine(" Number of lighting loads is {0} ", _keypad.LightingSystem.Loads.Count);
                     foreach (C2nLcdBXXBaseClass.Load lightingLoad in _keypad.LightingSystem.Loads)
                     {
                         CrestronConsole.PrintLine(" Lighting load number is {0} ", lightingLoad.Number);
                         lightingLoad.Name.StringValue = "LL" + lightingLoad.Number;
                         lightingLoad.Level.UShortValue = 125;
                     }
                     
                     foreach (C2nLcdBXXBaseClass.Load shadingLoad in _keypad.ShadingSystem.Loads)
                     {
                         CrestronConsole.PrintLine(" Shading load number is {0} ", shadingLoad.Number);
                         shadingLoad.Name.StringValue = "SL" + shadingLoad.Number;
                         shadingLoad.Level.UShortValue = 25;
                     }
            
                    //Register the C2N-LCD-B3 Keypad with the Control system
                    _keypad.Register();
                }
            
                // Method to handle slot sig change events for C2N-LCD-B3 Keypad.
                static void KeypadEventHandler(GenericBase device, BaseEventArgs args)
                {
                    if (args.EventId == C2nLcdBXXBaseClass.ScreenSaverActiveFeedbackEventId)
                    {
                        CrestronConsole.PrintLine("{0} Screen Saver Active Feedback event occurred\r\n", device.ToString());
                    }
                    else if (args.EventId == C2nLcdBXXBaseClass.PageChangeInvalidFeedbackEventId)
                    {
                        CrestronConsole.PrintLine("{0} Page Change Invalid Feedback event occurred\r\n", device.ToString());
                    }
                }
            
                // Sig callback for handling C2N-LCD-B3 button events.
                void KeypadButtonChange(GenericBase currentDevice, ButtonEventArgs args)
                {
                    <![CDATA[for (uint i = 1; i <= _keypad.Button.Count; i++)]]>
                    {
                        if (args.Button.Number == _keypad.Button[i].Number)
                        {
                            CrestronConsole.PrintLine("Button{0}'s state is {1}\r\n", i, args.Button.State);
                        }
                    }
                }
            
                // Shading system change handler
                void ShadingSystem_SystemChange(object sender, GenericEventArgs args)
                {
                    C2nLcdBXXBaseClass.LoadSystem shadingLoad = sender as C2nLcdBXXBaseClass.LoadSystem;
                    CrestronConsole.PrintLine(" System change fired for {2} with args eventId {0}:{1} ", args.EventId, args.Index, shadingLoad.ToString());
            
                    switch (args.EventId)
                    {
                        case C2nLcdBXXBaseClass.RaiseFeedbackEventId:
                            CrestronConsole.PrintLine(" Raise feedback fired for shade load {0} and value is {1} and string is {2} ", args.Index, shadingLoad.Loads[args.Index].RaiseFeedback.UShortValue, shadingLoad.Loads[args.Index].ToString());
                            break;
                        case C2nLcdBXXBaseClass.LowerFeedbackEventId:
                            CrestronConsole.PrintLine(" Lower feedback fired for shade load {0} and value is {1}  and string is {2} ", args.Index, shadingLoad.Loads[args.Index].LowerFeedback.UShortValue, shadingLoad.Loads[args.Index].ToString());
                           break;
                        case C2nLcdBXXBaseClass.LowerRoomFeedbackEventId:
                            break;
                        case C2nLcdBXXBaseClass.RecallSceneFeedbackEventId:
                            CrestronConsole.PrintLine(" Recall scene feedback fired for shade scene {0} and value is {1} and string is {2} ", args.Index, shadingLoad.Scenes[args.Index].RecallFeedback.BoolValue, shadingLoad.Scenes[args.Index].ToString());
                            break;
                    }
                }
            
                // Lighting system change handler
                void LightingSystem_SystemChange(object sender, GenericEventArgs args)
                {
                    C2nLcdBXXBaseClass.LoadSystem lightingLoad = sender as C2nLcdBXXBaseClass.LoadSystem;
                    CrestronConsole.PrintLine(" System change fired for {2} with args eventId {0}:{1} ", args.EventId, args.Index, lightingLoad.ToString());
            
                    switch (args.EventId)
                    {
                        case C2nLcdBXXBaseClass.RaiseFeedbackEventId:
                            CrestronConsole.PrintLine(" Raise feedback fired for light load {0} and value is {1} and string {2} ", args.Index, lightingLoad.Loads[args.Index].RaiseFeedback.UShortValue, lightingLoad.Loads[args.Index]);
                            break;
                        case C2nLcdBXXBaseClass.LowerFeedbackEventId:
                            CrestronConsole.PrintLine(" Lower feedback fired for light load {0} and value is {1} and string is {2} ", args.Index, lightingLoad.Loads[args.Index].LowerFeedback.UShortValue, lightingLoad.Loads[args.Index]);
                            break;
                        case C2nLcdBXXBaseClass.LowerRoomFeedbackEventId:
                            break;
                        case C2nLcdBXXBaseClass.RecallSceneFeedbackEventId:
                            CrestronConsole.PrintLine(" Recall scene feedback fired for lighting scene {0} and value is {1} and string is {2} ", args.Index, lightingLoad.Scenes[args.Index].RecallFeedback.BoolValue, lightingLoad.Loads[args.Index]);
                            break;
                        case C2nLcdBXXBaseClass.AmbientLightLevelFeedbackEventId:
                            CrestronConsole.PrintLine(" Ambient feedback is {0} ", lightingLoad.AmbientLightLevelFeedback.ToString());
                            break;
                    }
                }
             </code>
             </example>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass">
            <summary>
            Base class for the C2nLcdBx family of devices.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> and <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> events.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenSaverActiveFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenSaverActiveFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.PageChangeInvalidFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.PageChangeInvalidFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CurrentPageFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CurrentPageFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ChangeModeFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ChangeModeFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ChangeFanModeFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ChangeFanModeFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.HeatSetpointUpFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.HeatSetpointUpFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.HeatSetpointDownFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.HeatSetpointDownFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CoolSetpointUpFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.CoolSetpointUpFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CoolSetpointDownFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.CoolSetpointDownFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.InternalTemperatureFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.InternalTemperatureFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ExternalTemperatureFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ExternalTemperatureFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.RaiseFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.RaiseFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger for this event id.</para>
            <para> The <see cref="P:Crestron.SimplSharpPro.DeviceSupport.GenericEventArgs.Index"/> will define the index into the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Loads"/> collection.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LowerFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.LowerFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger for this event id.</para>
            <para> The <see cref="P:Crestron.SimplSharpPro.DeviceSupport.GenericEventArgs.Index"/> will define the index into the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Loads"/> collection.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.RaiseRoomFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.RaiseRoomFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LowerRoomFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.LowerRoomFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.RecallSceneFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.RecallFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger for this event id.</para>
            <para> The <see cref="P:Crestron.SimplSharpPro.DeviceSupport.GenericEventArgs.Index"/> will define the index into the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Scenes"/> collection.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.AmbientLightLevelFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.AmbientLightLevelFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopInfoButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopInfoButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopLeftInfoButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftInfoButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomLeftInfoButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftInfoButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopRightInfoButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightInfoButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomRightInfoButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightInfoButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomLeftSelectionButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftSelectionButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopLeftSelectionButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftSelectionButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopRightSelectionButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightSelectionButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomRightSelectionButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightSelectionButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopLeftListButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftListButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.EngravedDayBacklightFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedDayBacklightFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.EngravedNightBacklightFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedNightBacklightFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenDayBacklightFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenDayBacklightFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenNightBacklightFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenNightBacklightFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.DayNightThresholdFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenTimeoutFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenTimeoutFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.VersionInformationFeedbackEventId">
            <summary>
            The value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.VersionInformationFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomLeftListButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftListButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomSelectionButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomSelectionButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ListUpButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListUpButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ListDownButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListDownButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ListSelectButtonFeedbackEventId">
            <summary>
            The state of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListSelectButtonFeedback"/> property has changed.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger for this event id.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch,System.String,System.UInt32)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
            <param name="nameOfDevice"> Device Name</param>
            <param name="numberOfButtons"> Number of buttons</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.String,System.UInt32)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/> device.
            </summary>
            <param name="paramCresnetId">CresnetID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
            <param name="nameOfDevice"> Device Name</param>
            <param name="numberOfButtons"> Number of buttons</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ActivateScreenSaver">
            <summary>
            Method to set the screen to go to “sleep”. This is basically forces a timeout. The unit will still wake up under normal circumstances.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TriggerPageChange">
            <summary>
            Method to cause the device to go to the page represented by the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.DesiredPage"/> property value. The <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.DesiredPage"/> property value is 
            only set when this method is invoked.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass._Buttons">
            <summary>
            Collection of button objects.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.OnButtonStateChange(Crestron.SimplSharpPro.DeviceSupport.ButtonEventArgs)">
            <summary>
            Method to fire the button state change event.
            </summary>
            <param name="args">A ButtonEventArgs that shows what buttons and corresponding states have changed on the device</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.C2nLcdB3ButtonsSigChange(Crestron.SimplSharpProInternal.CrestronDevice,Crestron.SimplSharpPro.SigEventArgs)">
            <summary>
            Sig change method that executes when a button event occurs.
            </summary>
            <param name="currentDevice">Current Device.</param>
            <param name="args">Sig Args</param>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenSaverActiveFeedback">
            <summary>
            Property to indicate the screen saver active status.
            This property value will be 'true' while the device’s screen is asleep and 'false' when the screen backlight is lit.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenSaverActiveFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.PageChangeInvalidFeedback">
            <summary>
            Property to indicate that page number selected is invalid.
            This property value becomes 'true' momentarily and again becomes 'false', when <see cref="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TriggerPageChange"/> value is pulsed and an invalid page number input to <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.DesiredPage"/>.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.PageChangeInvalidFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.SuspendScreenUpdate">
            <summary>
            Property to suspend the screen update.
            While 'true', this property will suppress any updates to the device’s screen. 
            This is used at times when there are multiple pieces of information that you want to appear
            on the screen simultaneously, rather than see them filter in one at a time.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.DesiredPage">
            <summary>
            Property to select the page we want the device to display.
            This property value is a numerical representation of the page we want the device to display when we pulse the property <see cref="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TriggerPageChange"/> value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CurrentPageFeedback">
            <summary>
            Property to report the number of the page currently displayed by the device.
            This property value is a numerical representation of the page currently displayed on the device
            screen.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CurrentPageFeedbackEventId"/>.</para>
            </summary>
            <remarks>The sleep state of the device has no effect upon this property value. Changing pages while asleep will cause this property value to change as well.</remarks>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ClimateControl">
            <summary>
            The Climate object.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.MediaControl">
            <summary>
            The Media object.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BacklightControl">
            <summary>
            The Backlight object.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.SystemSetup">
            <summary>
            The Setup object.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event with <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LightingSystem">
            <summary>
            The Lighting System object.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LightingSystem"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ShadingSystem">
            <summary>
            The Shading System object.
            <para>This property will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event with <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ShadingSystem"/>.</para>
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ButtonStateChange">
            <summary>
            Event fired when a button state change was received from the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Button">
            <summary>
            Get the collection of the Button objects for this device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Left">
            <summary>
            Get the Button object corresponding to the Left button 
            for this device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Middle">
            <summary>
            Get the Button object corresponding to the Middle button 
            for this device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Right">
            <summary>
            Get the Button object corresponding to the Right button 
            for this device.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate">
            <summary>
            Climate class.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.TemperatureInDegreesCelsius">
            <summary>
            Property to indicate that the temperature is reported in Degrees Celcius.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.FanIsOn">
            <summary>
            Property to indicate that the fan is on when displaying an appropriate page of the project.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.IsHeating">
            <summary>
            Property to indicate that active heating is occurring when displaying an appropriate page of the project.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.IsCooling">
            <summary>
            Property to indicate that active cooling is occurring when displaying an appropriate page of the project.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ChangeModeFeedback">
            <summary>
            Property to indicate the press/release state of the soft button designated to select a change in the thermostat mode.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ChangeModeFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ChangeFanModeFeedback">
            <summary>
            Property to indicate the press/release state of the soft button designated to select a change in the fan mode.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ChangeFanModeFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.HeatSetpointUpFeedback">
            <summary>
            Property to follow the press/release state of the soft buttons designated to indicate a desire to raise the thermostat heat setpoint.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.HeatSetpointUpFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.HeatSetpointDownFeedback">
            <summary>
            Property to follow the press/release state of the soft buttons designated to indicate a desire to lower the thermostat heat setpoint.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.HeatSetpointDownFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.CoolSetpointUpFeedback">
            <summary>
            Property to follow the press/release state of the soft buttons designated to indicate a desire to raise the thermostat cool setpoint.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CoolSetpointUpFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.CoolSetpointDownFeedback">
            <summary>
            Property to follow the press/release state of the soft buttons designated to indicate a desire to lower the thermostat cool setpoint.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CoolSetpointDownFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ReportInternalTemperature">
            <summary>
            Property to report readings taken from the temperature sensor internal to the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ReportExternalTemperature">
            <summary>
            Property to report readings taken from the temperature sensor external to the device.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.Temperature">
            <summary>
            The current temperature to display on the screen. Reported in tenths of a degree.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.Mode">
            <summary>
            Property to set the current mode of thermostat operation to report on the screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.FanMode">
            <summary>
            Property to set the current mode of fan operation to report on the screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.HeatSetpoint">
            <summary>
            Property to set the current heat setpoint temperature to display on the screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.CoolSetpoint">
            <summary>
            Property to set the current cool setpoint temperature to display on the screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ExternalTemperatureSensorMode">
            <summary>
            Property to send instruction to the device regarding which type of external temperature sensor is attached, if any.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.InternalTemperatureFeedback">
            <summary>
            Property to report the readings taken from the temperature sensor internal to the device in tenths of a degree.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.InternalTemperatureFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.ExternalTemperatureFeedback">
            <summary>
            Property to report the readings taken from the temperature sensor external to the device in tenths of a degree.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ExternalTemperatureFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.Parent">
            <summary>
            Parent for Climate class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.Crestron#SimplSharpPro#IParentInformation#Parent">
            <summary>
            The parent that a given object was added to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.UserSpecifiedObject">
            <summary>
            Can be assigned anything that user wants.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eThermostatMode">
            <summary>
            Enum to define the Thermostat operational modes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eThermostatMode.Off">
            <summary>
            Thermostat set to Off mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eThermostatMode.Heat">
            <summary>
            Thermostat set to Heat mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eThermostatMode.Cool">
            <summary>
            Thermostat set to Cool mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eThermostatMode.Auto">
            <summary>
            Thermostat set to Automatic mode.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eFanMode">
            <summary>
            Enum to define the Fan modes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eFanMode.On">
            <summary>
            Fan is in On mode.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eFanMode.Auto">
            <summary>
            Fan is in Automatic mode.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eExternalTemperatureSensorMode">
            <summary>
            Enum to define the external temperature sensor modes.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eExternalTemperatureSensorMode.None">
            <summary>
            Sensor is not active
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eExternalTemperatureSensorMode.Digital">
            <summary>
            Sensor is in digital mode
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Climate.eExternalTemperatureSensorMode.Analog">
            <summary>
            Sensor is in analog mode
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load">
            <summary>
            Light or Shade load class.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.ToString">
            <summary>
            Returns a string corresponding to the name of the object.
            </summary>
            <returns>A string corresponding to the name of the object.</returns>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.Number">
            <summary>
            Load Number
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.RaiseFeedback">
            <summary>
            Property to indicate light level is raised by one unit for the corresponding Light in the system.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.RaiseFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.LowerFeedback">
            <summary>
            Property to indicate light level is lowered by one unit for the corresponding Light in the system.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LowerFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.Level">
            <summary>
            Property to set the light/shade level for the corresponding light/shade.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.Name">
            <summary>
            Property to set name used to represent system light/shade when using the lighting/shading interface screens.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.Parent">
            <summary>
            Parent for Load class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.Crestron#SimplSharpPro#IParentInformation#Parent">
            <summary>
            The parent that a given object was added to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Load.UserSpecifiedObject">
            <summary>
            Can be assigned anything that user wants.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene">
            <summary>
            Scene class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.Number">
            <summary>
            Scene Number
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.Active">
            <summary>
            Property to activate the corresponding lighting/shading scene.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.RecallFeedback">
            <summary>
            Property to indicate that the corresponding lighting/shading scene is recalled.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.RecallSceneFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.Name">
            <summary>
            Property to set the name for the corresponding lighting/shading scene.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.Parent">
            <summary>
            Parent for Scene class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.Crestron#SimplSharpPro#IParentInformation#Parent">
            <summary>
            The parent that a given object was added to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Scene.UserSpecifiedObject">
            <summary>
            Can be assigned anything that user wants.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem">
            <summary>
            Lighting Or Shading load System class.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.OnGenericEventHandler(Crestron.SimplSharpPro.DeviceSupport.GenericEventArgs)">
            <summary>
            Method to fire the <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event.
            </summary>
            <param name="paramArgs">Information from the Crestron <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem"/> on what changed.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.ToString">
            <summary>
            Returns a string corresponding to the name of the object.
            </summary>
            <returns>A string corresponding to the name of the object.</returns>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Type">
            <summary>
            Type of the System Control Object
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.RaiseRoomFeedback">
            <summary>
            Property to indicate that the lights/shades in the system are raised.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.RaiseRoomFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.LowerRoomFeedback">
            <summary>
            Property to indicate that the lights/shades in the system are lowered.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LowerRoomFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.ReportAmbientLightLevel">
            <summary>
            Property to enable the reporting of ambient light level.
            This property is supported by Lighting System only.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.NumberOfLightsOrShades">
            <summary>
            Property to set the number of lights/shades in the system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.NumberOfScenes">
            <summary>
            Property to set the number of scenes in the system.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.AmbientLightLevelFeedback">
            <summary>
            Property to report the readings from the ambient light sensor, reported 0% through 100%.
            This property is supported by Lighting System only.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.AmbientLightLevelFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.RoomName">
            <summary>
            Property to set the name used to represent room when using the lighting/shading interface screens.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SceneNameNone">
            <summary>
            Property to set the string used to represent no lighting/shading scene has been selected when using the lighting/shading interface screens.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Loads">
            <summary>
            Collection of system light/shade objects.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with the event IDs defined in <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Scenes">
            <summary>
            Collection of system lighting/shading scene objects.
            <para>The <see cref="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange"/> event will trigger with the event IDs defined in <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/>.</para>
            </summary>
        </member>
        <member name="E:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.SystemChange">
            <summary>
            Event fired when one of the feedbacks have changed on <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem"/>.
            EventIds for this event are located in the <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass"/> class.
            There will be an <see cref="P:Crestron.SimplSharpPro.DeviceSupport.GenericEventArgs.Index"/> property which will tell us the index into the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Scenes"/> or
            the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Loads"/> collection. The collection to access depends upon the event defined in the  <see cref="F:Crestron.SimplSharpPro.DeviceSupport.GenericEventArgs.EventId"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Parent">
            <summary>
            Parent for LoadSystem class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.Crestron#SimplSharpPro#IParentInformation#Parent">
            <summary>
            The parent that a given object was added to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.UserSpecifiedObject">
            <summary>
            Can be assigned anything that user wants.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.eLoadSystemType">
            <summary>
            Enum to define the load system object type.
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.eLoadSystemType.LightLoad">
            <summary>
            Lighting load type
            </summary>
        </member>
        <member name="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.LoadSystem.eLoadSystemType.ShadeLoad">
            <summary>
            Shading load type
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media">
            <summary>
            Media class.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event.</para>
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.GotoInfoPage">
            <summary>
            Method to tell the device to switch to the Media Info Page
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.GotoSelectionPage">
            <summary>
            Method to tell the device to switch to the Media Selection Page
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.GotoListPage">
            <summary>
            Method to tell the device to switch to the Media List Page
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopInfoButtonFeedback">
            <summary>
            Property to reflect the press/release state of the top soft button while the device is displaying the Media Info screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopInfoButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftInfoButtonFeedback">
            <summary>
            Property to reflect the press/release state of the top left soft button while the device is displaying the Media Info screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopLeftInfoButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftInfoButtonFeedback">
            <summary>
            Property to reflect the press/release state of the bottom left soft button while the device is displaying the Media Info screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomLeftInfoButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightInfoButtonFeedback">
            <summary>
            Property to reflect the press/release state of the top right soft button while the device is displaying the Media Info screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopRightInfoButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightInfoButtonFeedback">
            <summary>
            Property to reflect the press/release state of the bottom right soft button while the device is displaying the Media Info screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomRightInfoButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftSelectionButtonFeedback">
            <summary>
            Property to reflect the press/release state of the top left soft button while the device is displaying the Media Selection screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopLeftSelectionButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftSelectionButtonFeedback">
            <summary>
            Property to reflect the press/release state of the bottom left soft button while the device is displaying the Media Selection screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomLeftSelectionButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightSelectionButtonFeedback">
            <summary>
            Property to reflect the press/release state of the top right soft button while the device is displaying the Media Selection screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopRightSelectionButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightSelectionButtonFeedback">
            <summary>
            Property to reflect the press/release state of the bottom right soft button while the device is displaying the Media Selection screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomRightSelectionButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomSelectionButtonFeedback">
            <summary>
            Property to reflect the press/release state of the bottom soft button while the device is displaying the Media Selection screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomSelectionButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftListButtonFeedback">
            <summary>
            Property to reflect the press/release state of the top left soft button while the device is displaying the Media List screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.TopLeftListButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftListButtonFeedback">
            <summary>
            Property to reflect the press/release state of the bottom left soft button while the device is displaying the Media List screen.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.BottomLeftListButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListUpButtonFeedback">
            <summary>
            Property to reflect the press/release state of the soft button designated to indicate a desire to move the highlight up in the 
            currently displayed media list.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ListUpButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListDownButtonFeedback">
            <summary>
            Property to reflect the press/release state of the soft button designated to indicate a desire to move the highlight down in the 
            currently displayed media list.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ListDownButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListSelectButtonFeedback">
            <summary>
            Property to reflect the press/release state of the soft button designated to indicate a selection of the highlighted item in the media list.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ListSelectButtonFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.DisableVolumeDisplay">
            <summary>
            Property to indicate to the device to not display the bar graph representing the volume.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.DisableProgressDisplay">
            <summary>
            Property to indicate to the device to not display the bar graphs representing Percent Elapsed and the Time Remaining.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ShowHours">
            <summary>
            Property to set the time format for <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TimeRemaining"/> property.
            When this property is 'true', the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TimeRemaining"/> will be represented in a HH:MM:SS format. When the property is 'false', the format will be MM:SS.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.Volume">
            <summary>
            Property to set the volume to be represented on the appropriate screens.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TimeRemaining">
            <summary>
            Property to set the time remaining for the current media selection to play in seconds.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.PercentElapsed">
            <summary>
            Property to set the percentage elapsed to be displayed for the current media selection playing.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftInfoIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the top left soft button on the Media Info Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftInfoIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the bottom left soft button on the Media Info Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightInfoIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the top right soft button on the Media Info Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightInfoIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the bottom right soft button on the Media Info Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftSelectionIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the top left soft button on the Media Selection Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftSelectionIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the bottom left soft button on the Media Selection Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightSelectionIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the top right soft button on the Media Selection Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightSelectionIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the bottom right soft button on the Media Selection Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomSelectionIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the bottom soft button on the Media Selection Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftListIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the top left soft button on the Media List Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftListIcon">
            <summary>
            Property to select which icon will be displayed adjacent to the bottom left soft button on the Media List Screen
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListItemToHighlight">
            <summary>
            Property to indicate which of the seven list items on the Media List page to be highlighted.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.MediaInfoLine">
            <summary>
            Collection of text to be displayed in the three text fields in the center of the Media Info screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftSelectionText">
            <summary>
            Property to set the text to be displayed adjacent to the top left soft button on the Media info screen when the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopLeftSelectionIcon"/> is set
            to <see cref="F:Crestron.SimplSharpPro.DeviceSupport.LcdBxxSupport.eMediaDynamicIcon.None"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftSelectionText">
            <summary>
            Property to set the text to be displayed adjacent to the top left soft button on the Media info screen when the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomLeftSelectionIcon"/> is set
            to <see cref="F:Crestron.SimplSharpPro.DeviceSupport.LcdBxxSupport.eMediaDynamicIcon.None"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightSelectionText">
            <summary>
            Property to set the text to be displayed adjacent to the top left soft button on the Media info screen when the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.TopRightSelectionIcon"/> is set
            to <see cref="F:Crestron.SimplSharpPro.DeviceSupport.LcdBxxSupport.eMediaDynamicIcon.None"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightSelectionText">
            <summary>
            Property to set the text to be displayed adjacent to the top left soft button on the Media info screen when the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomRightSelectionIcon"/> is set
            to <see cref="F:Crestron.SimplSharpPro.DeviceSupport.LcdBxxSupport.eMediaDynamicIcon.None"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomSelectionText">
            <summary>
            Property to set the text to be displayed adjacent to the top left soft button on the Media info screen when the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.BottomSelectionIcon"/> is set
            to <see cref="F:Crestron.SimplSharpPro.DeviceSupport.LcdBxxSupport.eMediaDynamicIcon.None"/>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListTitle">
            <summary>
            Property to report the title to be shown at the top of the Media List.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListItem">
            <summary>
            Collection of List Items. Represents the seven lines of text in the Media List.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.ListSelectText">
            <summary>
            Property to set the text to be shown by the soft button at the bottom of the Media List
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.Parent">
            <summary>
            Parent for Media class.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.Crestron#SimplSharpPro#IParentInformation#Parent">
            <summary>
            The parent that a given object was added to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Media.UserSpecifiedObject">
            <summary>
            Can be assigned anything that user wants.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight">
            <summary>
            Backlight class.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseEngravedManualBacklight">
            <summary>
            Property to set to use <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedBacklight"/> property value for engraved buttons.
            When this property value is 'true' the backlight level of the engraved buttons will be driven by the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedBacklight"/> value. When 'false', the same backlight will be driven internally.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptEngravedDayBacklight">
            <summary>
            Property to set to store <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredEngravedDayBacklight"/> property value to <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedDayBacklightFeedback"/> property value.
            When this property value changes from 'false' to 'true', the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredEngravedDayBacklight"/> value will be stored in the non volatile memory of the device as the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedDayBacklightFeedback"/> property value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptEngravedNightBacklight">
            <summary>
            Property to set to store <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredEngravedNightBacklight"/> property value to <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedNightBacklightFeedback"/> property value.
            When this property value changes from 'false' to 'true', the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredEngravedNightBacklight"/> value will be stored in the non volatile memory of the device as the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedNightBacklightFeedback"/> property value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseScreenManualBacklight">
            <summary>
            Property to set to use <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenBacklight"/> property value as the backlight level of the screen and soft buttons.
            When this property state is 'true', the backlight level of the screen and soft buttons will be driven by the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenBacklight"/> value. When the property value is 'false', the same backlights will be driven internally.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptScreenDayBacklight">
            <summary>
            Property to set to store <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenDayBacklight"/> property value to <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenDayBacklightFeedback"/> property value.
            When this property value changes from 'false' to 'true', the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenDayBacklight"/> value will be stored in the non volatile memory of the device as the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenDayBacklightFeedback"/> property value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptScreenNightBacklight">
            <summary>
            Property to set to store <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenNightBacklight"/> property value to <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenNightBacklightFeedback"/> property value.
            When this property value changes from 'false' to 'true', the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenNightBacklight"/> value will be stored in the non volatile memory of the device as the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenNightBacklightFeedback"/> property value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptDayNightThreshold">
            <summary>
            Property to store <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredDayNightThreshold"/> property value to <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/> property value.
            When this property value changes from 'false' to 'true', the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredDayNightThreshold"/> value will be stored in the non volatile memory of the device as the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/> property value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptScreenTimeout">
            <summary>
            Property to set to store <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenTimeout"/> property value to <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenTimeoutFeedback"/> property value.
            When this property value changes from 'false' to 'true', the property <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenTimeout"/> value will be stored in the non volatile memory of the device as the <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenTimeoutFeedback"/> property value.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedBacklight">
            <summary>
            Property to drive the backlight of the engraved buttons when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseEngravedManualBacklight"/> property state is 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredEngravedDayBacklight">
            <summary>
            Property whose value will be stored as <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedDayBacklightFeedback"/> property value when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptEngravedDayBacklight"/> becomes 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedDayBacklightFeedback">
            <summary>
            Property whose value drives the backlight of the engraved buttons when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseEngravedManualBacklight"/> state is 'false' and the light level is above the value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/>.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.EngravedDayBacklightFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredEngravedNightBacklight">
            <summary>
            Property whose value is stored into <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedNightBacklightFeedback"/> when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptEngravedNightBacklight"/> property state becomes 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.EngravedNightBacklightFeedback">
            <summary>
            Property whose value drives the backlight of the engraved buttons when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseEngravedManualBacklight"/> state is 'false' and the light level is below the value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/>.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.EngravedNightBacklightFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenBacklight">
            <summary>
            Property whose value drives the backlight of the screen and soft buttons when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseScreenManualBacklight"/> property state is 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenDayBacklight">
            <summary>
            Property whose value is stored into <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenDayBacklightFeedback"/> property value when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptScreenDayBacklight"/> property state becomes 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenDayBacklightFeedback">
            <summary>
            Property whose value drives the backlight of the screen and soft buttons when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseScreenManualBacklight"/> property state is 'true' and the light level is above the value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/>.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenDayBacklightFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenNightBacklight">
            <summary>
            Property whose value is stored into <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenNightBacklightFeedback"/> property value when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptScreenNightBacklight"/> property state becomes 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenNightBacklightFeedback">
            <summary>
            Property value that drives the backlight of the screen and soft buttons when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UseScreenManualBacklight"/> is 'false' and the light level is below the value of <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/> property.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenNightBacklightFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredDayNightThreshold">
            <summary>
            Property whose value is stored into <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback"/> property value when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptDayNightThreshold"/> becomes 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DayNightThresholdFeedback">
            <summary>
            Property value that is used to decide between the use of day or night lighting values.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.DayNightThresholdFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.DesiredScreenTimeout">
            <summary>
            Property whose value stored into <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenTimeoutFeedback"/> when <see cref="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.AcceptScreenTimeout"/> property state becomes 'true'.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.ScreenTimeoutFeedback">
            <summary>
            Property to report the number of seconds of inactivity before the screen goes to sleep.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.ScreenTimeoutFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.Parent">
            <summary>
            Parent for Backlight class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.Crestron#SimplSharpPro#IParentInformation#Parent">
            <summary>
            The parent that a given object was added to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Backlight.UserSpecifiedObject">
            <summary>
            Can be assigned anything that user wants.
            </summary>
        </member>
        <member name="T:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup">
            <summary>
            Setup class.
            <para>This class will trigger <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.DisableClimateControls">
            <summary>
            Property to disable the navigation to Climate Info Screen from another Info Screen.
            When this property value is 'true', the device will not navigate to the Climate Info Screen from another Info Screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.DisableLightingControls">
            <summary>
            Property to disable the navigation to Lighting Info Screen from another Info Screen.
            When this property value is 'true', the device will not navigate to the Lighting Info Screen from another Info Screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.DisableShadingControls">
            <summary>
            Property to disable the navigation to Shading Info Screen from another Info Screen.
            When this property value is 'true', the device will not navigate to the Shading Info Screen from another Info Screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.DisableMediaControls">
            <summary>
            Property to disable the navigation to Media Info Screen from another Info Screen.
            When this property value is 'true', the device will not navigate to the Media Info Screen from another Info Screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.RestoreDefaults">
            <summary>
            Property to restore the default values for Backlight object.
            When this property value becomes 'true', all the values stored in the Backlight object will be reset to their default values.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.Language">
            <summary>
            Property to set the ASCII code used to represent the desired language for all the static text displayed on the device’s screen.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.VersionInformationFeedback">
            <summary>
            Property to set the ASCII String containing the version information for the device.
            <para>The <see cref="E:Crestron.SimplSharpPro.GenericBase.BaseEvent"/> event will trigger with <see cref="F:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.VersionInformationFeedbackEventId"/>.</para>
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.Parent">
            <summary>
            Parent for Setup class
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.Crestron#SimplSharpPro#IParentInformation#Parent">
            <summary>
            The parent that a given object was added to.
            </summary>
        </member>
        <member name="P:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.Setup.UserSpecifiedObject">
            <summary>
            Can be assigned anything that user wants.
            </summary>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IInternalBridgeSlots,System.Object)">
            <summary>
            Constructor used to add the device to a CresnetBranch.
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="cresnetBranch">CresnetBranch this device is a part of.</param>            
            <param name="paramParent">The parent that a given object was added to.</param>			
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem,System.Object)">
            <summary>
            Constructor used to add the device to the controller.
            
            </summary>
            <param name="paramCresnetId">ID of this device</param>
            <param name="owner">Control System to add to. Currently only supports 'this'.</param>
            <param name="paramParent">The parent that a given object was added to.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.C2nLcdB3Lighting.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.C2nLcdB3Shading.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.C2nLcdB3Pushbuttons.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.C2nLcdB3Backlight.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.C2nLcdB3Setup.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.C2nLcdB3Climate.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdBXXBaseClass.CresnetC2nLcdB3.C2nLcdB3Media.#ctor(System.UInt32,Crestron.SimplSharpProInternal.CrestronDevice)">
            <summary>
            Device Constructor.
            
            </summary>
            <param name="paramParentDevice">Device to add this device to.</param>
            <param name="paramId">ID of this device.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdb3.#ctor(System.UInt32,Crestron.SimplSharpPro.DeviceSupport.IDeviceBranch)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdb3"/> device.
            </summary>
            <param name="paramCresnetId">Cresnet ID of this device.</param>
            <param name="paramCresnetBranch">IDeviceBranch this device is a part of.</param>
        </member>
        <member name="M:Crestron.SimplSharpPro.Keypads.C2nLcdb3.#ctor(System.UInt32,Crestron.SimplSharpPro.CrestronControlSystem)">
            <summary>
            Constructor to generate a new <see cref="T:Crestron.SimplSharpPro.Keypads.C2nLcdb3"/> device.
            </summary>
            <param name="paramCresnetId">CresnetID of this device.</param>
            <param name="paramControlSystem">Control system this device is attached to.</param>
        </member>
    </members>
</doc>
